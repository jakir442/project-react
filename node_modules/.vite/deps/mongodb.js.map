{
  "version": 3,
  "sources": ["browser-external:os", "browser-external:crypto", "../../../../node_modules/mongodb/src/error.ts", "../../../../node_modules/mongodb/src/promise_provider.ts", "../../../../node_modules/mongodb/src/write_concern.ts", "../../../../node_modules/mongodb/src/sdam/common.ts", "../../../../node_modules/mongodb/src/read_concern.ts", "../../../../node_modules/mongodb/node_modules/bson/node_modules/base64-js/index.js", "../../../../node_modules/mongodb/node_modules/bson/node_modules/ieee754/index.js", "../../../../node_modules/mongodb/node_modules/bson/node_modules/buffer/index.js", "../../../../node_modules/mongodb/node_modules/bson/node_modules/tslib/tslib.es6.js", "../../../../node_modules/mongodb/node_modules/bson/src/error.ts", "../../../../node_modules/mongodb/node_modules/bson/src/utils/global.ts", "../../../../node_modules/mongodb/node_modules/bson/src/parser/utils.ts", "../../../../node_modules/mongodb/node_modules/bson/src/ensure_buffer.ts", "../../../../node_modules/mongodb/node_modules/bson/src/uuid_utils.ts", "../../../../node_modules/mongodb/node_modules/bson/src/constants.ts", "../../../../node_modules/mongodb/node_modules/bson/src/binary.ts", "../../../../node_modules/mongodb/node_modules/bson/src/code.ts", "../../../../node_modules/mongodb/node_modules/bson/src/db_ref.ts", "../../../../node_modules/mongodb/node_modules/bson/src/long.ts", "../../../../node_modules/mongodb/node_modules/bson/src/decimal128.ts", "../../../../node_modules/mongodb/node_modules/bson/src/double.ts", "../../../../node_modules/mongodb/node_modules/bson/src/int_32.ts", "../../../../node_modules/mongodb/node_modules/bson/src/max_key.ts", "../../../../node_modules/mongodb/node_modules/bson/src/min_key.ts", "../../../../node_modules/mongodb/node_modules/bson/src/objectid.ts", "../../../../node_modules/mongodb/node_modules/bson/src/regexp.ts", "../../../../node_modules/mongodb/node_modules/bson/src/symbol.ts", "../../../../node_modules/mongodb/node_modules/bson/src/timestamp.ts", "../../../../node_modules/mongodb/node_modules/bson/src/extended_json.ts", "../../../../node_modules/mongodb/node_modules/bson/src/map.ts", "../../../../node_modules/mongodb/node_modules/bson/src/parser/calculate_size.ts", "../../../../node_modules/mongodb/node_modules/bson/src/validate_utf8.ts", "../../../../node_modules/mongodb/node_modules/bson/src/parser/deserializer.ts", "../../../../node_modules/mongodb/node_modules/bson/src/parser/serializer.ts", "../../../../node_modules/mongodb/node_modules/bson/src/bson.ts", "../../../../node_modules/mongodb/src/bson.ts", "../../../../node_modules/mongodb/src/read_preference.ts", "browser-external:url", "../../../../node_modules/mongodb/src/cmap/wire_protocol/constants.ts", "../../../../node_modules/mongodb/package.json", "../../../../node_modules/mongodb/src/utils.ts", "../../../../node_modules/mongodb/src/transactions.ts", "../../../../node_modules/mongodb/src/sdam/server_description.ts", "../../../../node_modules/mongodb/src/sdam/topology_description.ts", "../../../../node_modules/mongodb/src/cmap/wire_protocol/shared.ts", "../../../../node_modules/mongodb/src/operations/operation.ts", "../../../../node_modules/mongodb/src/operations/execute_operation.ts", "../../../../node_modules/mongodb/src/explain.ts", "../../../../node_modules/mongodb/src/operations/command.ts", "../../../../node_modules/mongodb/src/operations/run_command.ts", "browser-external:stream", "../../../../node_modules/mongodb/src/cmap/commands.ts", "browser-external:zlib", "browser-external:fs", "browser-external:path", "../../../../node_modules/memory-pager/index.js", "../../../../node_modules/sparse-bitfield/index.js", "../../../../node_modules/saslprep/lib/memory-code-points.js", "../../../../node_modules/saslprep/index.js", "../../../../node_modules/mongodb/src/deps.ts", "../../../../node_modules/mongodb/src/cmap/wire_protocol/compression.ts", "../../../../node_modules/mongodb/src/cmap/message_stream.ts", "../../../../node_modules/mongodb/src/cmap/stream_description.ts", "../../../../node_modules/mongodb/src/cmap/command_monitoring_events.ts", "browser-external:events", "../../../../node_modules/mongodb/src/mongo_types.ts", "../../../../node_modules/mongodb/src/cmap/connection.ts", "../../../../node_modules/mongodb/src/cmap/metrics.ts", "../../../../node_modules/mongodb/src/sessions.ts", "../../../../node_modules/mongodb/src/cursor/abstract_cursor.ts", "../../../../node_modules/mongodb/src/operations/aggregate.ts", "../../../../node_modules/mongodb/src/cursor/aggregation_cursor.ts", "../../../../node_modules/mongodb/src/operations/count.ts", "../../../../node_modules/mongodb/src/sort.ts", "../../../../node_modules/mongodb/src/operations/find.ts", "../../../../node_modules/mongodb/src/cursor/find_cursor.ts", "../../../../node_modules/mongodb/src/operations/common_functions.ts", "../../../../node_modules/mongodb/src/operations/indexes.ts", "../../../../node_modules/mongodb/src/constants.ts", "../../../../node_modules/mongodb/src/operations/list_collections.ts", "../../../../node_modules/mongodb/src/operations/add_user.ts", "../../../../node_modules/mongodb/src/operations/remove_user.ts", "../../../../node_modules/mongodb/src/operations/validate_collection.ts", "../../../../node_modules/mongodb/src/operations/list_databases.ts", "../../../../node_modules/mongodb/src/admin.ts", "../../../../node_modules/mongodb/src/operations/bulk_write.ts", "../../../../node_modules/mongodb/src/operations/insert.ts", "../../../../node_modules/mongodb/src/operations/update.ts", "../../../../node_modules/mongodb/src/operations/delete.ts", "../../../../node_modules/mongodb/src/bulk/common.ts", "../../../../node_modules/mongodb/src/bulk/unordered.ts", "../../../../node_modules/mongodb/src/bulk/ordered.ts", "../../../../node_modules/denque/index.js", "../../../../node_modules/mongodb/src/change_stream.ts", "../../../../node_modules/mongodb/src/operations/count_documents.ts", "../../../../node_modules/mongodb/src/operations/distinct.ts", "../../../../node_modules/mongodb/src/operations/drop.ts", "../../../../node_modules/mongodb/src/operations/estimated_document_count.ts", "../../../../node_modules/mongodb/src/operations/find_and_modify.ts", "../../../../node_modules/mongodb/src/operations/is_capped.ts", "../../../../node_modules/mongodb/src/operations/map_reduce.ts", "../../../../node_modules/mongodb/src/operations/options_operation.ts", "../../../../node_modules/mongodb/src/operations/rename.ts", "../../../../node_modules/mongodb/src/operations/stats.ts", "../../../../node_modules/mongodb/src/collection.ts", "browser-external:util", "../../../../node_modules/mongodb/src/logger.ts", "../../../../node_modules/mongodb/src/operations/collections.ts", "../../../../node_modules/mongodb/src/operations/create_collection.ts", "../../../../node_modules/mongodb/src/operations/profiling_level.ts", "../../../../node_modules/mongodb/src/operations/set_profiling_level.ts", "../../../../node_modules/mongodb/src/db.ts", "browser-external:net", "browser-external:tls", "../../../../node_modules/mongodb/src/cmap/auth/auth_provider.ts", "../../../../node_modules/mongodb/src/cmap/auth/mongocr.ts", "../../../../node_modules/mongodb/src/cmap/auth/x509.ts", "../../../../node_modules/mongodb/src/cmap/auth/plain.ts", "browser-external:dns", "../../../../node_modules/mongodb/src/cmap/auth/gssapi.ts", "../../../../node_modules/mongodb/src/cmap/auth/scram.ts", "browser-external:http", "../../../../node_modules/mongodb/src/cmap/auth/mongo_credentials.ts", "../../../../node_modules/mongodb/src/cmap/auth/mongodb_aws.ts", "../../../../node_modules/mongodb/src/cmap/auth/defaultAuthProviders.ts", "../../../../node_modules/mongodb/src/cmap/connect.ts", "../../../../node_modules/mongodb/src/cmap/errors.ts", "../../../../node_modules/mongodb/src/cmap/connection_pool_events.ts", "../../../../node_modules/mongodb/src/cmap/connection_pool.ts", "../../../../node_modules/mongodb/src/sdam/events.ts", "../../../../node_modules/mongodb/src/sdam/monitor.ts", "../../../../node_modules/mongodb/src/sdam/server.ts", "../../../../node_modules/mongodb/src/sdam/srv_polling.ts", "../../../../node_modules/mongodb/src/sdam/server_selection.ts", "../../../../node_modules/webidl-conversions/lib/index.js", "../../../../node_modules/whatwg-url/lib/utils.js", "../../../../node_modules/punycode/punycode.es6.js", "../../../../node_modules/tr46/lib/regexes.js", "../../../../node_modules/tr46/lib/mappingTable.json", "../../../../node_modules/tr46/lib/statusMapping.js", "../../../../node_modules/tr46/index.js", "../../../../node_modules/whatwg-url/lib/infra.js", "../../../../node_modules/whatwg-url/lib/encoding.js", "../../../../node_modules/whatwg-url/lib/percent-encoding.js", "../../../../node_modules/whatwg-url/lib/url-state-machine.js", "../../../../node_modules/whatwg-url/lib/urlencoded.js", "../../../../node_modules/whatwg-url/lib/Function.js", "../../../../node_modules/whatwg-url/lib/URLSearchParams-impl.js", "../../../../node_modules/whatwg-url/lib/URLSearchParams.js", "../../../../node_modules/whatwg-url/lib/URL-impl.js", "../../../../node_modules/whatwg-url/lib/URL.js", "../../../../node_modules/whatwg-url/webidl2js-wrapper.js", "../../../../node_modules/whatwg-url/index.js", "../../../../node_modules/mongodb-connection-string-url/src/redact.ts", "../../../../node_modules/mongodb-connection-string-url/src/index.ts", "../../../../node_modules/mongodb/src/encrypter.ts", "../../../../node_modules/mongodb/src/connection_string.ts", "../../../../node_modules/mongodb/src/sdam/topology.ts", "../../../../node_modules/mongodb/src/operations/connect.ts", "../../../../node_modules/mongodb/src/mongo_client.ts", "../../../../node_modules/mongodb/src/gridfs/download.ts", "../../../../node_modules/mongodb/src/gridfs/upload.ts", "../../../../node_modules/mongodb/src/gridfs/index.ts", "../../../../node_modules/mongodb/src/index.ts"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "import type { TopologyVersion } from './sdam/server_description';\nimport type { Document } from './bson';\nimport type { TopologyDescription } from './sdam/topology_description';\n\n/** @public */\nexport type AnyError = MongoError | Error;\n\n/** @internal */\nconst kErrorLabels = Symbol('errorLabels');\n\n/** @internal MongoDB Error Codes */\nexport const MONGODB_ERROR_CODES = Object.freeze({\n  HostUnreachable: 6,\n  HostNotFound: 7,\n  NetworkTimeout: 89,\n  ShutdownInProgress: 91,\n  PrimarySteppedDown: 189,\n  ExceededTimeLimit: 262,\n  SocketException: 9001,\n  NotMaster: 10107,\n  InterruptedAtShutdown: 11600,\n  InterruptedDueToReplStateChange: 11602,\n  NotMasterNoSlaveOk: 13435,\n  NotMasterOrSecondary: 13436,\n  StaleShardVersion: 63,\n  StaleEpoch: 150,\n  StaleConfig: 13388,\n  RetryChangeStream: 234,\n  FailedToSatisfyReadPreference: 133,\n  CursorNotFound: 43,\n  LegacyNotPrimary: 10058,\n  WriteConcernFailed: 64,\n  NamespaceNotFound: 26,\n  IllegalOperation: 20,\n  MaxTimeMSExpired: 50,\n  UnknownReplWriteConcern: 79,\n  UnsatisfiableWriteConcern: 100\n} as const);\n\n// From spec@https://github.com/mongodb/specifications/blob/f93d78191f3db2898a59013a7ed5650352ef6da8/source/change-streams/change-streams.rst#resumable-error\nexport const GET_MORE_RESUMABLE_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.HostUnreachable,\n  MONGODB_ERROR_CODES.HostNotFound,\n  MONGODB_ERROR_CODES.NetworkTimeout,\n  MONGODB_ERROR_CODES.ShutdownInProgress,\n  MONGODB_ERROR_CODES.PrimarySteppedDown,\n  MONGODB_ERROR_CODES.ExceededTimeLimit,\n  MONGODB_ERROR_CODES.SocketException,\n  MONGODB_ERROR_CODES.NotMaster,\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n  MONGODB_ERROR_CODES.NotMasterNoSlaveOk,\n  MONGODB_ERROR_CODES.NotMasterOrSecondary,\n  MONGODB_ERROR_CODES.StaleShardVersion,\n  MONGODB_ERROR_CODES.StaleEpoch,\n  MONGODB_ERROR_CODES.StaleConfig,\n  MONGODB_ERROR_CODES.RetryChangeStream,\n  MONGODB_ERROR_CODES.FailedToSatisfyReadPreference,\n  MONGODB_ERROR_CODES.CursorNotFound\n]);\n\n/** @public */\nexport interface ErrorDescription extends Document {\n  message?: string;\n  errmsg?: string;\n  $err?: string;\n  errorLabels?: string[];\n  errInfo?: Document;\n}\n\n/**\n * @public\n * @category Error\n *\n * @privateRemarks\n * CSFLE has a dependency on this error, it uses the constructor with a string argument\n */\nexport class MongoError extends Error {\n  /** @internal */\n  [kErrorLabels]: Set<string>;\n  /**\n   * This is a number in MongoServerError and a string in MongoDriverError\n   * @privateRemarks\n   * Define the type override on the subclasses when we can use the override keyword\n   */\n  code?: number | string;\n  topologyVersion?: TopologyVersion;\n\n  constructor(message: string | Error) {\n    if (message instanceof Error) {\n      super(message.message);\n    } else {\n      super(message);\n    }\n  }\n\n  get name(): string {\n    return 'MongoError';\n  }\n\n  /** Legacy name for server error responses */\n  get errmsg(): string {\n    return this.message;\n  }\n\n  /**\n   * Checks the error to see if it has an error label\n   *\n   * @param label - The error label to check for\n   * @returns returns true if the error has the provided error label\n   */\n  hasErrorLabel(label: string): boolean {\n    if (this[kErrorLabels] == null) {\n      return false;\n    }\n\n    return this[kErrorLabels].has(label);\n  }\n\n  addErrorLabel(label: string): void {\n    if (this[kErrorLabels] == null) {\n      this[kErrorLabels] = new Set();\n    }\n\n    this[kErrorLabels].add(label);\n  }\n\n  get errorLabels(): string[] {\n    return this[kErrorLabels] ? Array.from(this[kErrorLabels]) : [];\n  }\n}\n\n/**\n * An error coming from the mongo server\n *\n * @public\n * @category Error\n */\nexport class MongoServerError extends MongoError {\n  codeName?: string;\n  writeConcernError?: Document;\n  errInfo?: Document;\n  ok?: number;\n  [key: string]: any;\n\n  constructor(message: ErrorDescription) {\n    super(message.message || message.errmsg || message.$err || 'n/a');\n    if (message.errorLabels) {\n      this[kErrorLabels] = new Set(message.errorLabels);\n    }\n\n    for (const name in message) {\n      if (name !== 'errorLabels' && name !== 'errmsg' && name !== 'message')\n        this[name] = message[name];\n    }\n  }\n\n  get name(): string {\n    return 'MongoServerError';\n  }\n}\n\n/**\n * An error generated by the driver\n *\n * @public\n * @category Error\n */\nexport class MongoDriverError extends MongoError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoDriverError';\n  }\n}\n\n/**\n * An error generated when the driver API is used incorrectly\n *\n * @privateRemarks\n * Should **never** be directly instantiated\n *\n * @public\n * @category Error\n */\n\nexport class MongoAPIError extends MongoDriverError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoAPIError';\n  }\n}\n\n/**\n * An error generated when the driver encounters unexpected input\n * or reaches an unexpected/invalid internal state\n *\n * @privateRemarks\n * Should **never** be directly instantiated.\n *\n * @public\n * @category Error\n */\nexport class MongoRuntimeError extends MongoDriverError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoRuntimeError';\n  }\n}\n\n/**\n * An error generated when a batch command is reexecuted after one of the commands in the batch\n * has failed\n *\n * @public\n * @category Error\n */\nexport class MongoBatchReExecutionError extends MongoAPIError {\n  constructor(message = 'This batch has already been executed, create new batch to execute') {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoBatchReExecutionError';\n  }\n}\n\n/**\n * An error generated when the driver fails to decompress\n * data received from the server.\n *\n * @public\n * @category Error\n */\nexport class MongoDecompressionError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoDecompressionError';\n  }\n}\n\n/**\n * An error thrown when the user attempts to operate on a database or collection through a MongoClient\n * that has not yet successfully called the \"connect\" method\n *\n * @public\n * @category Error\n */\nexport class MongoNotConnectedError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoNotConnectedError';\n  }\n}\n\n/**\n * An error generated when the user makes a mistake in the usage of transactions.\n * (e.g. attempting to commit a transaction with a readPreference other than primary)\n *\n * @public\n * @category Error\n */\nexport class MongoTransactionError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoTransactionError';\n  }\n}\n\n/**\n * An error generated when the user attempts to operate\n * on a session that has expired or has been closed.\n *\n * @public\n * @category Error\n */\nexport class MongoExpiredSessionError extends MongoAPIError {\n  constructor(message = 'Cannot use a session that has ended') {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoExpiredSessionError';\n  }\n}\n\n/**\n * A error generated when the user attempts to authenticate\n * via Kerberos, but fails to connect to the Kerberos client.\n *\n * @public\n * @category Error\n */\nexport class MongoKerberosError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoKerberosError';\n  }\n}\n\n/**\n * An error generated when a ChangeStream operation fails to execute.\n *\n * @public\n * @category Error\n */\nexport class MongoChangeStreamError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoChangeStreamError';\n  }\n}\n\n/**\n * An error thrown when the user calls a function or method not supported on a tailable cursor\n *\n * @public\n * @category Error\n */\nexport class MongoTailableCursorError extends MongoAPIError {\n  constructor(message = 'Tailable cursor does not support this operation') {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoTailableCursorError';\n  }\n}\n\n/** An error generated when a GridFSStream operation fails to execute.\n *\n * @public\n * @category Error\n */\nexport class MongoGridFSStreamError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoGridFSStreamError';\n  }\n}\n\n/**\n * An error generated when a malformed or invalid chunk is\n * encountered when reading from a GridFSStream.\n *\n * @public\n * @category Error\n */\nexport class MongoGridFSChunkError extends MongoRuntimeError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoGridFSChunkError';\n  }\n}\n\n/**\n * An error thrown when the user attempts to add options to a cursor that has already been\n * initialized\n *\n * @public\n * @category Error\n */\nexport class MongoCursorInUseError extends MongoAPIError {\n  constructor(message = 'Cursor is already initialized') {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoCursorInUseError';\n  }\n}\n\n/**\n * An error generated when an attempt is made to operate\n * on a closed/closing server.\n *\n * @public\n * @category Error\n */\nexport class MongoServerClosedError extends MongoAPIError {\n  constructor(message = 'Server is closed') {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoServerClosedError';\n  }\n}\n\n/**\n * An error thrown when an attempt is made to read from a cursor that has been exhausted\n *\n * @public\n * @category Error\n */\nexport class MongoCursorExhaustedError extends MongoAPIError {\n  constructor(message?: string) {\n    super(message || 'Cursor is exhausted');\n  }\n\n  get name(): string {\n    return 'MongoCursorExhaustedError';\n  }\n}\n\n/**\n * An error generated when an attempt is made to operate on a\n * dropped, or otherwise unavailable, database.\n *\n * @public\n * @category Error\n */\nexport class MongoTopologyClosedError extends MongoAPIError {\n  constructor(message = 'Topology is closed') {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoTopologyClosedError';\n  }\n}\n\n/** @internal */\nconst kBeforeHandshake = Symbol('beforeHandshake');\nexport function isNetworkErrorBeforeHandshake(err: MongoNetworkError): boolean {\n  return err[kBeforeHandshake] === true;\n}\n\n/** @public */\nexport interface MongoNetworkErrorOptions {\n  /** Indicates the timeout happened before a connection handshake completed */\n  beforeHandshake: boolean;\n}\n\n/**\n * An error indicating an issue with the network, including TCP errors and timeouts.\n * @public\n * @category Error\n */\nexport class MongoNetworkError extends MongoError {\n  /** @internal */\n  [kBeforeHandshake]?: boolean;\n\n  constructor(message: string | Error, options?: MongoNetworkErrorOptions) {\n    super(message);\n\n    if (options && typeof options.beforeHandshake === 'boolean') {\n      this[kBeforeHandshake] = options.beforeHandshake;\n    }\n  }\n\n  get name(): string {\n    return 'MongoNetworkError';\n  }\n}\n\n/**\n * An error indicating a network timeout occurred\n * @public\n * @category Error\n *\n * @privateRemarks\n * CSFLE has a dependency on this error with an instanceof check\n */\nexport class MongoNetworkTimeoutError extends MongoNetworkError {\n  constructor(message: string, options?: MongoNetworkErrorOptions) {\n    super(message, options);\n  }\n\n  get name(): string {\n    return 'MongoNetworkTimeoutError';\n  }\n}\n\n/**\n * An error used when attempting to parse a value (like a connection string)\n * @public\n * @category Error\n */\nexport class MongoParseError extends MongoDriverError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoParseError';\n  }\n}\n\n/**\n * An error generated when the user supplies malformed or unexpected arguments\n * or when a required argument or field is not provided.\n *\n *\n * @public\n * @category Error\n */\nexport class MongoInvalidArgumentError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoInvalidArgumentError';\n  }\n}\n\n/**\n * An error generated when a feature that is not enabled or allowed for the current server\n * configuration is used\n *\n *\n * @public\n * @category Error\n */\nexport class MongoCompatibilityError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoCompatibilityError';\n  }\n}\n\n/**\n * An error generated when the user fails to provide authentication credentials before attempting\n * to connect to a mongo server instance.\n *\n *\n * @public\n * @category Error\n */\nexport class MongoMissingCredentialsError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoMissingCredentialsError';\n  }\n}\n\n/**\n * An error generated when a required module or dependency is not present in the local environment\n *\n * @public\n * @category Error\n */\nexport class MongoMissingDependencyError extends MongoAPIError {\n  constructor(message: string) {\n    super(message);\n  }\n\n  get name(): string {\n    return 'MongoMissingDependencyError';\n  }\n}\n/**\n * An error signifying a general system issue\n * @public\n * @category Error\n */\nexport class MongoSystemError extends MongoError {\n  /** An optional reason context, such as an error saved during flow of monitoring and selecting servers */\n  reason?: TopologyDescription;\n\n  constructor(message: string, reason: TopologyDescription) {\n    if (reason && reason.error) {\n      super(reason.error.message || reason.error);\n    } else {\n      super(message);\n    }\n\n    if (reason) {\n      this.reason = reason;\n    }\n  }\n\n  get name(): string {\n    return 'MongoSystemError';\n  }\n}\n\n/**\n * An error signifying a client-side server selection error\n * @public\n * @category Error\n */\nexport class MongoServerSelectionError extends MongoSystemError {\n  constructor(message: string, reason: TopologyDescription) {\n    super(message, reason);\n  }\n\n  get name(): string {\n    return 'MongoServerSelectionError';\n  }\n}\n\nfunction makeWriteConcernResultObject(input: any) {\n  const output = Object.assign({}, input);\n\n  if (output.ok === 0) {\n    output.ok = 1;\n    delete output.errmsg;\n    delete output.code;\n    delete output.codeName;\n  }\n\n  return output;\n}\n\n/**\n * An error thrown when the server reports a writeConcernError\n * @public\n * @category Error\n */\nexport class MongoWriteConcernError extends MongoServerError {\n  /** The result document (provided if ok: 1) */\n  result?: Document;\n  errInfo?: Document;\n\n  constructor(message: ErrorDescription, result?: Document) {\n    if (result && Array.isArray(result.errorLabels)) {\n      message.errorLabels = result.errorLabels;\n    }\n\n    super(message);\n    this.errInfo = message.errInfo;\n\n    if (result != null) {\n      this.result = makeWriteConcernResultObject(result);\n    }\n  }\n\n  get name(): string {\n    return 'MongoWriteConcernError';\n  }\n}\n\n// see: https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.rst#terms\nconst RETRYABLE_ERROR_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.HostUnreachable,\n  MONGODB_ERROR_CODES.HostNotFound,\n  MONGODB_ERROR_CODES.NetworkTimeout,\n  MONGODB_ERROR_CODES.ShutdownInProgress,\n  MONGODB_ERROR_CODES.PrimarySteppedDown,\n  MONGODB_ERROR_CODES.SocketException,\n  MONGODB_ERROR_CODES.NotMaster,\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n  MONGODB_ERROR_CODES.NotMasterNoSlaveOk,\n  MONGODB_ERROR_CODES.NotMasterOrSecondary\n]);\n\nconst RETRYABLE_WRITE_ERROR_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n  MONGODB_ERROR_CODES.NotMaster,\n  MONGODB_ERROR_CODES.NotMasterNoSlaveOk,\n  MONGODB_ERROR_CODES.NotMasterOrSecondary,\n  MONGODB_ERROR_CODES.PrimarySteppedDown,\n  MONGODB_ERROR_CODES.ShutdownInProgress,\n  MONGODB_ERROR_CODES.HostNotFound,\n  MONGODB_ERROR_CODES.HostUnreachable,\n  MONGODB_ERROR_CODES.NetworkTimeout,\n  MONGODB_ERROR_CODES.SocketException,\n  MONGODB_ERROR_CODES.ExceededTimeLimit\n]);\n\nexport function isRetryableWriteError(error: MongoError): boolean {\n  if (error instanceof MongoWriteConcernError) {\n    return RETRYABLE_WRITE_ERROR_CODES.has(error.result?.code ?? error.code ?? 0);\n  }\n  return typeof error.code === 'number' && RETRYABLE_WRITE_ERROR_CODES.has(error.code);\n}\n\n/** Determines whether an error is something the driver should attempt to retry */\nexport function isRetryableError(error: MongoError): boolean {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    (typeof error.code === 'number' && RETRYABLE_ERROR_CODES.has(error.code!)) ||\n    error instanceof MongoNetworkError ||\n    !!error.message.match(/not master/) ||\n    !!error.message.match(/node is recovering/)\n  );\n}\n\nconst SDAM_RECOVERING_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.ShutdownInProgress,\n  MONGODB_ERROR_CODES.PrimarySteppedDown,\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.InterruptedDueToReplStateChange,\n  MONGODB_ERROR_CODES.NotMasterOrSecondary\n]);\n\nconst SDAM_NOTMASTER_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.NotMaster,\n  MONGODB_ERROR_CODES.NotMasterNoSlaveOk,\n  MONGODB_ERROR_CODES.LegacyNotPrimary\n]);\n\nconst SDAM_NODE_SHUTTING_DOWN_ERROR_CODES = new Set<number>([\n  MONGODB_ERROR_CODES.InterruptedAtShutdown,\n  MONGODB_ERROR_CODES.ShutdownInProgress\n]);\n\nfunction isRecoveringError(err: MongoError) {\n  if (typeof err.code === 'number') {\n    // If any error code exists, we ignore the error.message\n    return SDAM_RECOVERING_CODES.has(err.code);\n  }\n\n  return /not master or secondary/.test(err.message) || /node is recovering/.test(err.message);\n}\n\nfunction isNotMasterError(err: MongoError) {\n  if (typeof err.code === 'number') {\n    // If any error code exists, we ignore the error.message\n    return SDAM_NOTMASTER_CODES.has(err.code);\n  }\n\n  if (isRecoveringError(err)) {\n    return false;\n  }\n\n  return /not master/.test(err.message);\n}\n\nexport function isNodeShuttingDownError(err: MongoError): boolean {\n  return !!(typeof err.code === 'number' && SDAM_NODE_SHUTTING_DOWN_ERROR_CODES.has(err.code));\n}\n\n/**\n * Determines whether SDAM can recover from a given error. If it cannot\n * then the pool will be cleared, and server state will completely reset\n * locally.\n *\n * @see https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-master-and-node-is-recovering\n */\nexport function isSDAMUnrecoverableError(error: MongoError): boolean {\n  // NOTE: null check is here for a strictly pre-CMAP world, a timeout or\n  //       close event are considered unrecoverable\n  if (error instanceof MongoParseError || error == null) {\n    return true;\n  }\n\n  return isRecoveringError(error) || isNotMasterError(error);\n}\n\nexport function isNetworkTimeoutError(err: MongoError): err is MongoNetworkError {\n  return !!(err instanceof MongoNetworkError && err.message.match(/timed out/));\n}\n\n// From spec@https://github.com/mongodb/specifications/blob/7a2e93d85935ee4b1046a8d2ad3514c657dc74fa/source/change-streams/change-streams.rst#resumable-error:\n//\n// An error is considered resumable if it meets any of the following criteria:\n// - any error encountered which is not a server error (e.g. a timeout error or network error)\n// - any server error response from a getMore command excluding those containing the error label\n//   NonRetryableChangeStreamError and those containing the following error codes:\n//   - Interrupted: 11601\n//   - CappedPositionLost: 136\n//   - CursorKilled: 237\n//\n// An error on an aggregate command is not a resumable error. Only errors on a getMore command may be considered resumable errors.\n\nexport function isResumableError(error?: MongoError, wireVersion?: number): boolean {\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n\n  if (wireVersion != null && wireVersion >= 9) {\n    // DRIVERS-1308: For 4.4 drivers running against 4.4 servers, drivers will add a special case to treat the CursorNotFound error code as resumable\n    if (error && error instanceof MongoError && error.code === 43) {\n      return true;\n    }\n    return error instanceof MongoError && error.hasErrorLabel('ResumableChangeStreamError');\n  }\n\n  if (error && typeof error.code === 'number') {\n    return GET_MORE_RESUMABLE_CODES.has(error.code);\n  }\n  return false;\n}\n", "import { MongoInvalidArgumentError } from './error';\n\n/** @internal */\nconst kPromise = Symbol('promise');\n\ninterface PromiseStore {\n  [kPromise]?: PromiseConstructor;\n}\n\nconst store: PromiseStore = {\n  [kPromise]: undefined\n};\n\n/**\n * Global promise store allowing user-provided promises\n * @public\n */\nexport class PromiseProvider {\n  /** Validates the passed in promise library */\n  static validate(lib: unknown): lib is PromiseConstructor {\n    if (typeof lib !== 'function')\n      throw new MongoInvalidArgumentError(`Promise must be a function, got ${lib}`);\n    return !!lib;\n  }\n\n  /** Sets the promise library */\n  static set(lib: PromiseConstructor): void {\n    if (!PromiseProvider.validate(lib)) {\n      // validate\n      return;\n    }\n    store[kPromise] = lib;\n  }\n\n  /** Get the stored promise library, or resolves passed in */\n  static get(): PromiseConstructor {\n    return store[kPromise] as PromiseConstructor;\n  }\n}\n\nPromiseProvider.set(global.Promise);\n", "/** @public */\nexport type W = number | 'majority';\n\n/** @public */\nexport interface WriteConcernOptions {\n  /** Write Concern as an object */\n  writeConcern?: WriteConcern | WriteConcernSettings;\n}\n\n/** @public */\nexport interface WriteConcernSettings {\n  /** The write concern */\n  w?: W;\n  /** The write concern timeout */\n  wtimeoutMS?: number;\n  /** The journal write concern */\n  journal?: boolean;\n\n  // legacy options\n  /** The journal write concern */\n  j?: boolean;\n  /** The write concern timeout */\n  wtimeout?: number;\n  /** The file sync write concern */\n  fsync?: boolean | 1;\n}\n\nexport const WRITE_CONCERN_KEYS = ['w', 'wtimeout', 'j', 'journal', 'fsync'];\n\n/**\n * A MongoDB WriteConcern, which describes the level of acknowledgement\n * requested from MongoDB for write operations.\n * @public\n *\n * @see https://docs.mongodb.com/manual/reference/write-concern/\n */\nexport class WriteConcern {\n  /** request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags. */\n  w?: W;\n  /** specify a time limit to prevent write operations from blocking indefinitely */\n  wtimeout?: number;\n  /** request acknowledgment that the write operation has been written to the on-disk journal */\n  j?: boolean;\n  /** equivalent to the j option */\n  fsync?: boolean | 1;\n\n  /**\n   * Constructs a WriteConcern from the write concern properties.\n   * @param w - request acknowledgment that the write operation has propagated to a specified number of mongod instances or to mongod instances with specified tags.\n   * @param wtimeout - specify a time limit to prevent write operations from blocking indefinitely\n   * @param j - request acknowledgment that the write operation has been written to the on-disk journal\n   * @param fsync - equivalent to the j option\n   */\n  constructor(w?: W, wtimeout?: number, j?: boolean, fsync?: boolean | 1) {\n    if (w != null) {\n      if (!Number.isNaN(Number(w))) {\n        this.w = Number(w);\n      } else {\n        this.w = w;\n      }\n    }\n    if (wtimeout != null) {\n      this.wtimeout = wtimeout;\n    }\n    if (j != null) {\n      this.j = j;\n    }\n    if (fsync != null) {\n      this.fsync = fsync;\n    }\n  }\n\n  /** Construct a WriteConcern given an options object. */\n  static fromOptions(\n    options?: WriteConcernOptions | WriteConcern | W,\n    inherit?: WriteConcernOptions | WriteConcern\n  ): WriteConcern | undefined {\n    if (options == null) return undefined;\n    inherit = inherit ?? {};\n    let opts: WriteConcernSettings | WriteConcern | undefined;\n    if (typeof options === 'string' || typeof options === 'number') {\n      opts = { w: options };\n    } else if (options instanceof WriteConcern) {\n      opts = options;\n    } else {\n      opts = options.writeConcern;\n    }\n    const parentOpts: WriteConcern | WriteConcernSettings | undefined =\n      inherit instanceof WriteConcern ? inherit : inherit.writeConcern;\n\n    const {\n      w = undefined,\n      wtimeout = undefined,\n      j = undefined,\n      fsync = undefined,\n      journal = undefined,\n      wtimeoutMS = undefined\n    } = {\n      ...parentOpts,\n      ...opts\n    };\n    if (\n      w != null ||\n      wtimeout != null ||\n      wtimeoutMS != null ||\n      j != null ||\n      journal != null ||\n      fsync != null\n    ) {\n      return new WriteConcern(w, wtimeout ?? wtimeoutMS, j ?? journal, fsync);\n    }\n    return undefined;\n  }\n}\n", "import type { Timestamp, Binary, Long } from '../bson';\nimport type { Topology } from './topology';\nimport type { ClientSession } from '../sessions';\n\n// shared state names\nexport const STATE_CLOSING = 'closing';\nexport const STATE_CLOSED = 'closed';\nexport const STATE_CONNECTING = 'connecting';\nexport const STATE_CONNECTED = 'connected';\n\n/**\n * An enumeration of topology types we know about\n * @public\n */\nexport const TopologyType = Object.freeze({\n  Single: 'Single',\n  ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n  ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n  Sharded: 'Sharded',\n  Unknown: 'Unknown',\n  LoadBalanced: 'LoadBalanced'\n} as const);\n\n/** @public */\nexport type TopologyType = typeof TopologyType[keyof typeof TopologyType];\n\n/**\n * An enumeration of server types we know about\n * @public\n */\nexport const ServerType = Object.freeze({\n  Standalone: 'Standalone',\n  Mongos: 'Mongos',\n  PossiblePrimary: 'PossiblePrimary',\n  RSPrimary: 'RSPrimary',\n  RSSecondary: 'RSSecondary',\n  RSArbiter: 'RSArbiter',\n  RSOther: 'RSOther',\n  RSGhost: 'RSGhost',\n  Unknown: 'Unknown',\n  LoadBalancer: 'LoadBalancer'\n} as const);\n\n/** @public */\nexport type ServerType = typeof ServerType[keyof typeof ServerType];\n\n/** @internal */\nexport type TimerQueue = Set<NodeJS.Timeout>;\n\n/** @internal */\nexport function drainTimerQueue(queue: TimerQueue): void {\n  queue.forEach(clearTimeout);\n  queue.clear();\n}\n\n/** @internal */\nexport function clearAndRemoveTimerFrom(timer: NodeJS.Timeout, timers: TimerQueue): boolean {\n  clearTimeout(timer);\n  return timers.delete(timer);\n}\n\n/** @public */\nexport interface ClusterTime {\n  clusterTime: Timestamp;\n  signature: {\n    hash: Binary;\n    keyId: Long;\n  };\n}\n\n/** Shared function to determine clusterTime for a given topology or session */\nexport function _advanceClusterTime(\n  entity: Topology | ClientSession,\n  $clusterTime: ClusterTime\n): void {\n  if (entity.clusterTime == null) {\n    entity.clusterTime = $clusterTime;\n  } else {\n    if ($clusterTime.clusterTime.greaterThan(entity.clusterTime.clusterTime)) {\n      entity.clusterTime = $clusterTime;\n    }\n  }\n}\n", "import type { Document } from './bson';\n\n/** @public */\nexport const ReadConcernLevel = Object.freeze({\n  local: 'local',\n  majority: 'majority',\n  linearizable: 'linearizable',\n  available: 'available',\n  snapshot: 'snapshot'\n} as const);\n\n/** @public */\nexport type ReadConcernLevel = typeof ReadConcernLevel[keyof typeof ReadConcernLevel];\n\n/** @public */\nexport type ReadConcernLike = ReadConcern | { level: ReadConcernLevel } | ReadConcernLevel;\n\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @public\n *\n * @see https://docs.mongodb.com/manual/reference/read-concern/index.html\n */\nexport class ReadConcern {\n  level: ReadConcernLevel | string;\n\n  /** Constructs a ReadConcern from the read concern level.*/\n  constructor(level: ReadConcernLevel) {\n    /**\n     * A spec test exists that allows level to be any string.\n     * \"invalid readConcern with out stage\"\n     * @see ./test/spec/crud/v2/aggregate-out-readConcern.json\n     * @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#unknown-levels-and-additional-options-for-string-based-readconcerns\n     */\n    this.level = ReadConcernLevel[level] ?? level;\n  }\n\n  /**\n   * Construct a ReadConcern given an options object.\n   *\n   * @param options - The options object from which to extract the write concern.\n   */\n  static fromOptions(options?: {\n    readConcern?: ReadConcernLike;\n    level?: ReadConcernLevel;\n  }): ReadConcern | undefined {\n    if (options == null) {\n      return;\n    }\n\n    if (options.readConcern) {\n      const { readConcern } = options;\n      if (readConcern instanceof ReadConcern) {\n        return readConcern;\n      } else if (typeof readConcern === 'string') {\n        return new ReadConcern(readConcern);\n      } else if ('level' in readConcern && readConcern.level) {\n        return new ReadConcern(readConcern.level);\n      }\n    }\n\n    if (options.level) {\n      return new ReadConcern(options.level);\n    }\n  }\n\n  static get MAJORITY(): 'majority' {\n    return ReadConcernLevel.majority;\n  }\n\n  static get AVAILABLE(): 'available' {\n    return ReadConcernLevel.available;\n  }\n\n  static get LINEARIZABLE(): 'linearizable' {\n    return ReadConcernLevel.linearizable;\n  }\n\n  static get SNAPSHOT(): 'snapshot' {\n    return ReadConcernLevel.snapshot;\n  }\n\n  toJSON(): Document {\n    return { level: this.level };\n  }\n}\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "/** @public */\nexport class BSONError extends Error {\n  constructor(message: string) {\n    super(message);\n    Object.setPrototypeOf(this, BSONError.prototype);\n  }\n\n  get name(): string {\n    return 'BSONError';\n  }\n}\n\n/** @public */\nexport class BSONTypeError extends TypeError {\n  constructor(message: string) {\n    super(message);\n    Object.setPrototypeOf(this, BSONTypeError.prototype);\n  }\n\n  get name(): string {\n    return 'BSONTypeError';\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* We do not want to have to include DOM types just for this check */\ndeclare const window: unknown;\ndeclare const self: unknown;\ndeclare const global: unknown;\n\nfunction checkForMath(potentialGlobal: any) {\n  // eslint-disable-next-line eqeqeq\n  return potentialGlobal && potentialGlobal.Math == Math && potentialGlobal;\n}\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nexport function getGlobal<T = Record<string, unknown>>(): T {\n  return (\n    checkForMath(typeof globalThis === 'object' && globalThis) ||\n    checkForMath(typeof window === 'object' && window) ||\n    checkForMath(typeof self === 'object' && self) ||\n    checkForMath(typeof global === 'object' && global) ||\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval\n    Function('return this')()\n  );\n}\n", "import { Buffer } from 'buffer';\nimport { getGlobal } from '../utils/global';\n\ntype RandomBytesFunction = (size: number) => Uint8Array;\n\n/**\n * Normalizes our expected stringified form of a function across versions of node\n * @param fn - The function to stringify\n */\nexport function normalizedFunctionString(fn: Function): string {\n  return fn.toString().replace('function(', 'function (');\n}\n\nfunction isReactNative() {\n  const g = getGlobal<{ navigator?: { product?: string } }>();\n  return typeof g.navigator === 'object' && g.navigator.product === 'ReactNative';\n}\n\nconst insecureRandomBytes: RandomBytesFunction = function insecureRandomBytes(size: number) {\n  const insecureWarning = isReactNative()\n    ? 'BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values.'\n    : 'BSON: No cryptographic implementation for random bytes present, falling back to a less secure implementation.';\n  console.warn(insecureWarning);\n\n  const result = Buffer.alloc(size);\n  for (let i = 0; i < size; ++i) result[i] = Math.floor(Math.random() * 256);\n  return result;\n};\n\n/* We do not want to have to include DOM types just for this check */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare let window: any;\ndeclare let require: Function;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare let global: any;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare let process: any; // Used by @rollup/plugin-replace\n\nconst detectRandomBytes = (): RandomBytesFunction => {\n  if (process.browser) {\n    if (typeof window !== 'undefined') {\n      // browser crypto implementation(s)\n      const target = window.crypto || window.msCrypto; // allow for IE11\n      if (target && target.getRandomValues) {\n        return size => target.getRandomValues(Buffer.alloc(size));\n      }\n    }\n\n    if (typeof global !== 'undefined' && global.crypto && global.crypto.getRandomValues) {\n      // allow for RN packages such as https://www.npmjs.com/package/react-native-get-random-values to populate global\n      return size => global.crypto.getRandomValues(Buffer.alloc(size));\n    }\n\n    return insecureRandomBytes;\n  } else {\n    let requiredRandomBytes: RandomBytesFunction | null | undefined;\n    try {\n      requiredRandomBytes = require('crypto').randomBytes;\n    } catch (e) {\n      // keep the fallback\n    }\n\n    // NOTE: in transpiled cases the above require might return null/undefined\n\n    return requiredRandomBytes || insecureRandomBytes;\n  }\n};\n\nexport const randomBytes = detectRandomBytes();\n\nexport function isAnyArrayBuffer(value: unknown): value is ArrayBuffer {\n  return ['[object ArrayBuffer]', '[object SharedArrayBuffer]'].includes(\n    Object.prototype.toString.call(value)\n  );\n}\n\nexport function isUint8Array(value: unknown): value is Uint8Array {\n  return Object.prototype.toString.call(value) === '[object Uint8Array]';\n}\n\nexport function isBigInt64Array(value: unknown): value is BigInt64Array {\n  return Object.prototype.toString.call(value) === '[object BigInt64Array]';\n}\n\nexport function isBigUInt64Array(value: unknown): value is BigUint64Array {\n  return Object.prototype.toString.call(value) === '[object BigUint64Array]';\n}\n\nexport function isRegExp(d: unknown): d is RegExp {\n  return Object.prototype.toString.call(d) === '[object RegExp]';\n}\n\nexport function isMap(d: unknown): d is Map<unknown, unknown> {\n  return Object.prototype.toString.call(d) === '[object Map]';\n}\n\n/** Call to check if your environment has `Buffer` */\nexport function haveBuffer(): boolean {\n  return typeof global !== 'undefined' && typeof global.Buffer !== 'undefined';\n}\n\n// To ensure that 0.4 of node works correctly\nexport function isDate(d: unknown): d is Date {\n  return isObjectLike(d) && Object.prototype.toString.call(d) === '[object Date]';\n}\n\n/**\n * @internal\n * this is to solve the `'someKey' in x` problem where x is unknown.\n * https://github.com/typescript-eslint/typescript-eslint/issues/1071#issuecomment-541955753\n */\nexport function isObjectLike(candidate: unknown): candidate is Record<string, unknown> {\n  return typeof candidate === 'object' && candidate !== null;\n}\n\ndeclare let console: { warn(...message: unknown[]): void };\nexport function deprecate<T extends Function>(fn: T, message: string): T {\n  let warned = false;\n  function deprecated(this: unknown, ...args: unknown[]) {\n    if (!warned) {\n      console.warn(message);\n      warned = true;\n    }\n    return fn.apply(this, args);\n  }\n  return deprecated as unknown as T;\n}\n", "import { Buffer } from 'buffer';\nimport { BSONTypeError } from './error';\nimport { isAnyArrayBuffer } from './parser/utils';\n\n/**\n * Makes sure that, if a Uint8Array is passed in, it is wrapped in a Buffer.\n *\n * @param potentialBuffer - The potential buffer\n * @returns Buffer the input if potentialBuffer is a buffer, or a buffer that\n * wraps a passed in Uint8Array\n * @throws BSONTypeError If anything other than a Buffer or Uint8Array is passed in\n */\nexport function ensureBuffer(potentialBuffer: Buffer | ArrayBufferView | ArrayBuffer): Buffer {\n  if (ArrayBuffer.isView(potentialBuffer)) {\n    return Buffer.from(\n      potentialBuffer.buffer,\n      potentialBuffer.byteOffset,\n      potentialBuffer.byteLength\n    );\n  }\n\n  if (isAnyArrayBuffer(potentialBuffer)) {\n    return Buffer.from(potentialBuffer);\n  }\n\n  throw new BSONTypeError('Must use either Buffer or TypedArray');\n}\n", "import { Buffer } from 'buffer';\nimport { BSONTypeError } from './error';\n\n// Validation regex for v4 uuid (validates with or without dashes)\nconst VALIDATION_REGEX =\n  /^(?:[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|[0-9a-f]{12}4[0-9a-f]{3}[89ab][0-9a-f]{15})$/i;\n\nexport const uuidValidateString = (str: string): boolean =>\n  typeof str === 'string' && VALIDATION_REGEX.test(str);\n\nexport const uuidHexStringToBuffer = (hexString: string): Buffer => {\n  if (!uuidValidateString(hexString)) {\n    throw new BSONTypeError(\n      'UUID string representations must be a 32 or 36 character hex string (dashes excluded/included). Format: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" or \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\".'\n    );\n  }\n\n  const sanitizedHexString = hexString.replace(/-/g, '');\n  return Buffer.from(sanitizedHexString, 'hex');\n};\n\nexport const bufferToUuidHexString = (buffer: Buffer, includeDashes = true): string =>\n  includeDashes\n    ? buffer.toString('hex', 0, 4) +\n      '-' +\n      buffer.toString('hex', 4, 6) +\n      '-' +\n      buffer.toString('hex', 6, 8) +\n      '-' +\n      buffer.toString('hex', 8, 10) +\n      '-' +\n      buffer.toString('hex', 10, 16)\n    : buffer.toString('hex');\n", "/** @internal */\nexport const BSON_INT32_MAX = 0x7fffffff;\n/** @internal */\nexport const BSON_INT32_MIN = -0x80000000;\n/** @internal */\nexport const BSON_INT64_MAX = Math.pow(2, 63) - 1;\n/** @internal */\nexport const BSON_INT64_MIN = -Math.pow(2, 63);\n\n/**\n * Any integer up to 2^53 can be precisely represented by a double.\n * @internal\n */\nexport const JS_INT_MAX = Math.pow(2, 53);\n\n/**\n * Any integer down to -2^53 can be precisely represented by a double.\n * @internal\n */\nexport const JS_INT_MIN = -Math.pow(2, 53);\n\n/** Number BSON Type @internal */\nexport const BSON_DATA_NUMBER = 1;\n\n/** String BSON Type @internal */\nexport const BSON_DATA_STRING = 2;\n\n/** Object BSON Type @internal */\nexport const BSON_DATA_OBJECT = 3;\n\n/** Array BSON Type @internal */\nexport const BSON_DATA_ARRAY = 4;\n\n/** Binary BSON Type @internal */\nexport const BSON_DATA_BINARY = 5;\n\n/** Binary BSON Type @internal */\nexport const BSON_DATA_UNDEFINED = 6;\n\n/** ObjectId BSON Type @internal */\nexport const BSON_DATA_OID = 7;\n\n/** Boolean BSON Type @internal */\nexport const BSON_DATA_BOOLEAN = 8;\n\n/** Date BSON Type @internal */\nexport const BSON_DATA_DATE = 9;\n\n/** null BSON Type @internal */\nexport const BSON_DATA_NULL = 10;\n\n/** RegExp BSON Type @internal */\nexport const BSON_DATA_REGEXP = 11;\n\n/** Code BSON Type @internal */\nexport const BSON_DATA_DBPOINTER = 12;\n\n/** Code BSON Type @internal */\nexport const BSON_DATA_CODE = 13;\n\n/** Symbol BSON Type @internal */\nexport const BSON_DATA_SYMBOL = 14;\n\n/** Code with Scope BSON Type @internal */\nexport const BSON_DATA_CODE_W_SCOPE = 15;\n\n/** 32 bit Integer BSON Type @internal */\nexport const BSON_DATA_INT = 16;\n\n/** Timestamp BSON Type @internal */\nexport const BSON_DATA_TIMESTAMP = 17;\n\n/** Long BSON Type @internal */\nexport const BSON_DATA_LONG = 18;\n\n/** Decimal128 BSON Type @internal */\nexport const BSON_DATA_DECIMAL128 = 19;\n\n/** MinKey BSON Type @internal */\nexport const BSON_DATA_MIN_KEY = 0xff;\n\n/** MaxKey BSON Type @internal */\nexport const BSON_DATA_MAX_KEY = 0x7f;\n\n/** Binary Default Type @internal */\nexport const BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/** Binary Function Type @internal */\nexport const BSON_BINARY_SUBTYPE_FUNCTION = 1;\n\n/** Binary Byte Array Type @internal */\nexport const BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n\n/** Binary Deprecated UUID Type @deprecated Please use BSON_BINARY_SUBTYPE_UUID_NEW @internal */\nexport const BSON_BINARY_SUBTYPE_UUID = 3;\n\n/** Binary UUID Type @internal */\nexport const BSON_BINARY_SUBTYPE_UUID_NEW = 4;\n\n/** Binary MD5 Type @internal */\nexport const BSON_BINARY_SUBTYPE_MD5 = 5;\n\n/** Encrypted BSON type @internal */\nexport const BSON_BINARY_SUBTYPE_ENCRYPTED = 6;\n\n/** Column BSON type @internal */\nexport const BSON_BINARY_SUBTYPE_COLUMN = 7;\n\n/** Binary User Defined Type @internal */\nexport const BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n", "import { Buffer } from 'buffer';\nimport { ensureBuffer } from './ensure_buffer';\nimport { bufferToUuidHexString, uuidHexStringToBuffer, uuidValidateString } from './uuid_utils';\nimport { isUint8Array, randomBytes } from './parser/utils';\nimport type { EJSONOptions } from './extended_json';\nimport { BSONError, BSONTypeError } from './error';\nimport { BSON_BINARY_SUBTYPE_UUID_NEW } from './constants';\n\n/** @public */\nexport type BinarySequence = Uint8Array | Buffer | number[];\n\n/** @public */\nexport interface BinaryExtendedLegacy {\n  $type: string;\n  $binary: string;\n}\n\n/** @public */\nexport interface BinaryExtended {\n  $binary: {\n    subType: string;\n    base64: string;\n  };\n}\n\n/**\n * A class representation of the BSON Binary type.\n * @public\n * @category BSONType\n */\nexport class Binary {\n  _bsontype!: 'Binary';\n\n  /**\n   * Binary default subtype\n   * @internal\n   */\n  private static readonly BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n  /** Initial buffer default size */\n  static readonly BUFFER_SIZE = 256;\n  /** Default BSON type */\n  static readonly SUBTYPE_DEFAULT = 0;\n  /** Function BSON type */\n  static readonly SUBTYPE_FUNCTION = 1;\n  /** Byte Array BSON type */\n  static readonly SUBTYPE_BYTE_ARRAY = 2;\n  /** Deprecated UUID BSON type @deprecated Please use SUBTYPE_UUID */\n  static readonly SUBTYPE_UUID_OLD = 3;\n  /** UUID BSON type */\n  static readonly SUBTYPE_UUID = 4;\n  /** MD5 BSON type */\n  static readonly SUBTYPE_MD5 = 5;\n  /** Encrypted BSON type */\n  static readonly SUBTYPE_ENCRYPTED = 6;\n  /** Column BSON type */\n  static readonly SUBTYPE_COLUMN = 7;\n  /** User BSON type */\n  static readonly SUBTYPE_USER_DEFINED = 128;\n\n  buffer!: Buffer;\n  sub_type!: number;\n  position!: number;\n\n  /**\n   * Create a new Binary instance.\n   *\n   * This constructor can accept a string as its first argument. In this case,\n   * this string will be encoded using ISO-8859-1, **not** using UTF-8.\n   * This is almost certainly not what you want. Use `new Binary(Buffer.from(string))`\n   * instead to convert the string to a Buffer using UTF-8 first.\n   *\n   * @param buffer - a buffer object containing the binary data.\n   * @param subType - the option binary type.\n   */\n  constructor(buffer?: string | BinarySequence, subType?: number) {\n    if (!(this instanceof Binary)) return new Binary(buffer, subType);\n\n    if (\n      !(buffer == null) &&\n      !(typeof buffer === 'string') &&\n      !ArrayBuffer.isView(buffer) &&\n      !(buffer instanceof ArrayBuffer) &&\n      !Array.isArray(buffer)\n    ) {\n      throw new BSONTypeError(\n        'Binary can only be constructed from string, Buffer, TypedArray, or Array<number>'\n      );\n    }\n\n    this.sub_type = subType ?? Binary.BSON_BINARY_SUBTYPE_DEFAULT;\n\n    if (buffer == null) {\n      // create an empty binary buffer\n      this.buffer = Buffer.alloc(Binary.BUFFER_SIZE);\n      this.position = 0;\n    } else {\n      if (typeof buffer === 'string') {\n        // string\n        this.buffer = Buffer.from(buffer, 'binary');\n      } else if (Array.isArray(buffer)) {\n        // number[]\n        this.buffer = Buffer.from(buffer);\n      } else {\n        // Buffer | TypedArray | ArrayBuffer\n        this.buffer = ensureBuffer(buffer);\n      }\n\n      this.position = this.buffer.byteLength;\n    }\n  }\n\n  /**\n   * Updates this binary with byte_value.\n   *\n   * @param byteValue - a single byte we wish to write.\n   */\n  put(byteValue: string | number | Uint8Array | Buffer | number[]): void {\n    // If it's a string and a has more than one character throw an error\n    if (typeof byteValue === 'string' && byteValue.length !== 1) {\n      throw new BSONTypeError('only accepts single character String');\n    } else if (typeof byteValue !== 'number' && byteValue.length !== 1)\n      throw new BSONTypeError('only accepts single character Uint8Array or Array');\n\n    // Decode the byte value once\n    let decodedByte: number;\n    if (typeof byteValue === 'string') {\n      decodedByte = byteValue.charCodeAt(0);\n    } else if (typeof byteValue === 'number') {\n      decodedByte = byteValue;\n    } else {\n      decodedByte = byteValue[0];\n    }\n\n    if (decodedByte < 0 || decodedByte > 255) {\n      throw new BSONTypeError('only accepts number in a valid unsigned byte range 0-255');\n    }\n\n    if (this.buffer.length > this.position) {\n      this.buffer[this.position++] = decodedByte;\n    } else {\n      const buffer = Buffer.alloc(Binary.BUFFER_SIZE + this.buffer.length);\n      // Combine the two buffers together\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n      this.buffer = buffer;\n      this.buffer[this.position++] = decodedByte;\n    }\n  }\n\n  /**\n   * Writes a buffer or string to the binary.\n   *\n   * @param sequence - a string or buffer to be written to the Binary BSON object.\n   * @param offset - specify the binary of where to write the content.\n   */\n  write(sequence: string | BinarySequence, offset: number): void {\n    offset = typeof offset === 'number' ? offset : this.position;\n\n    // If the buffer is to small let's extend the buffer\n    if (this.buffer.length < offset + sequence.length) {\n      const buffer = Buffer.alloc(this.buffer.length + sequence.length);\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n\n      // Assign the new buffer\n      this.buffer = buffer;\n    }\n\n    if (ArrayBuffer.isView(sequence)) {\n      this.buffer.set(ensureBuffer(sequence), offset);\n      this.position =\n        offset + sequence.byteLength > this.position ? offset + sequence.length : this.position;\n    } else if (typeof sequence === 'string') {\n      this.buffer.write(sequence, offset, sequence.length, 'binary');\n      this.position =\n        offset + sequence.length > this.position ? offset + sequence.length : this.position;\n    }\n  }\n\n  /**\n   * Reads **length** bytes starting at **position**.\n   *\n   * @param position - read from the given position in the Binary.\n   * @param length - the number of bytes to read.\n   */\n  read(position: number, length: number): BinarySequence {\n    length = length && length > 0 ? length : this.position;\n\n    // Let's return the data based on the type we have\n    return this.buffer.slice(position, position + length);\n  }\n\n  /**\n   * Returns the value of this binary as a string.\n   * @param asRaw - Will skip converting to a string\n   * @remarks\n   * This is handy when calling this function conditionally for some key value pairs and not others\n   */\n  value(asRaw?: boolean): string | BinarySequence {\n    asRaw = !!asRaw;\n\n    // Optimize to serialize for the situation where the data == size of buffer\n    if (asRaw && this.buffer.length === this.position) {\n      return this.buffer;\n    }\n\n    // If it's a node.js buffer object\n    if (asRaw) {\n      return this.buffer.slice(0, this.position);\n    }\n    return this.buffer.toString('binary', 0, this.position);\n  }\n\n  /** the length of the binary sequence */\n  length(): number {\n    return this.position;\n  }\n\n  toJSON(): string {\n    return this.buffer.toString('base64');\n  }\n\n  toString(format?: string): string {\n    return this.buffer.toString(format);\n  }\n\n  /** @internal */\n  toExtendedJSON(options?: EJSONOptions): BinaryExtendedLegacy | BinaryExtended {\n    options = options || {};\n    const base64String = this.buffer.toString('base64');\n\n    const subType = Number(this.sub_type).toString(16);\n    if (options.legacy) {\n      return {\n        $binary: base64String,\n        $type: subType.length === 1 ? '0' + subType : subType\n      };\n    }\n    return {\n      $binary: {\n        base64: base64String,\n        subType: subType.length === 1 ? '0' + subType : subType\n      }\n    };\n  }\n\n  toUUID(): UUID {\n    if (this.sub_type === Binary.SUBTYPE_UUID) {\n      return new UUID(this.buffer.slice(0, this.position));\n    }\n\n    throw new BSONError(\n      `Binary sub_type \"${this.sub_type}\" is not supported for converting to UUID. Only \"${Binary.SUBTYPE_UUID}\" is currently supported.`\n    );\n  }\n\n  /** @internal */\n  static fromExtendedJSON(\n    doc: BinaryExtendedLegacy | BinaryExtended | UUIDExtended,\n    options?: EJSONOptions\n  ): Binary {\n    options = options || {};\n    let data: Buffer | undefined;\n    let type;\n    if ('$binary' in doc) {\n      if (options.legacy && typeof doc.$binary === 'string' && '$type' in doc) {\n        type = doc.$type ? parseInt(doc.$type, 16) : 0;\n        data = Buffer.from(doc.$binary, 'base64');\n      } else {\n        if (typeof doc.$binary !== 'string') {\n          type = doc.$binary.subType ? parseInt(doc.$binary.subType, 16) : 0;\n          data = Buffer.from(doc.$binary.base64, 'base64');\n        }\n      }\n    } else if ('$uuid' in doc) {\n      type = 4;\n      data = uuidHexStringToBuffer(doc.$uuid);\n    }\n    if (!data) {\n      throw new BSONTypeError(`Unexpected Binary Extended JSON format ${JSON.stringify(doc)}`);\n    }\n    return type === BSON_BINARY_SUBTYPE_UUID_NEW ? new UUID(data) : new Binary(data, type);\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    const asBuffer = this.value(true);\n    return `new Binary(Buffer.from(\"${asBuffer.toString('hex')}\", \"hex\"), ${this.sub_type})`;\n  }\n}\n\nObject.defineProperty(Binary.prototype, '_bsontype', { value: 'Binary' });\n\n/** @public */\nexport type UUIDExtended = {\n  $uuid: string;\n};\nconst UUID_BYTE_LENGTH = 16;\n\n/**\n * A class representation of the BSON UUID type.\n * @public\n */\nexport class UUID extends Binary {\n  static cacheHexString: boolean;\n\n  /** UUID hexString cache @internal */\n  private __id?: string;\n\n  /**\n   * Create an UUID type\n   *\n   * @param input - Can be a 32 or 36 character hex string (dashes excluded/included) or a 16 byte binary Buffer.\n   */\n  constructor(input?: string | Buffer | UUID) {\n    let bytes;\n    let hexStr;\n    if (input == null) {\n      bytes = UUID.generate();\n    } else if (input instanceof UUID) {\n      bytes = Buffer.from(input.buffer);\n      hexStr = input.__id;\n    } else if (ArrayBuffer.isView(input) && input.byteLength === UUID_BYTE_LENGTH) {\n      bytes = ensureBuffer(input);\n    } else if (typeof input === 'string') {\n      bytes = uuidHexStringToBuffer(input);\n    } else {\n      throw new BSONTypeError(\n        'Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).'\n      );\n    }\n    super(bytes, BSON_BINARY_SUBTYPE_UUID_NEW);\n    this.__id = hexStr;\n  }\n\n  /**\n   * The UUID bytes\n   * @readonly\n   */\n  get id(): Buffer {\n    return this.buffer;\n  }\n\n  set id(value: Buffer) {\n    this.buffer = value;\n\n    if (UUID.cacheHexString) {\n      this.__id = bufferToUuidHexString(value);\n    }\n  }\n\n  /**\n   * Returns the UUID id as a 32 or 36 character hex string representation, excluding/including dashes (defaults to 36 character dash separated)\n   * @param includeDashes - should the string exclude dash-separators.\n   * */\n  toHexString(includeDashes = true): string {\n    if (UUID.cacheHexString && this.__id) {\n      return this.__id;\n    }\n\n    const uuidHexString = bufferToUuidHexString(this.id, includeDashes);\n\n    if (UUID.cacheHexString) {\n      this.__id = uuidHexString;\n    }\n\n    return uuidHexString;\n  }\n\n  /**\n   * Converts the id into a 36 character (dashes included) hex string, unless a encoding is specified.\n   */\n  toString(encoding?: string): string {\n    return encoding ? this.id.toString(encoding) : this.toHexString();\n  }\n\n  /**\n   * Converts the id into its JSON string representation.\n   * A 36 character (dashes included) hex string in the format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n   */\n  toJSON(): string {\n    return this.toHexString();\n  }\n\n  /**\n   * Compares the equality of this UUID with `otherID`.\n   *\n   * @param otherId - UUID instance to compare against.\n   */\n  equals(otherId: string | Buffer | UUID): boolean {\n    if (!otherId) {\n      return false;\n    }\n\n    if (otherId instanceof UUID) {\n      return otherId.id.equals(this.id);\n    }\n\n    try {\n      return new UUID(otherId).id.equals(this.id);\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Creates a Binary instance from the current UUID.\n   */\n  toBinary(): Binary {\n    return new Binary(this.id, Binary.SUBTYPE_UUID);\n  }\n\n  /**\n   * Generates a populated buffer containing a v4 uuid\n   */\n  static generate(): Buffer {\n    const bytes = randomBytes(UUID_BYTE_LENGTH);\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    // Kindly borrowed from https://github.com/uuidjs/uuid/blob/master/src/v4.js\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    return Buffer.from(bytes);\n  }\n\n  /**\n   * Checks if a value is a valid bson UUID\n   * @param input - UUID, string or Buffer to validate.\n   */\n  static isValid(input: string | Buffer | UUID): boolean {\n    if (!input) {\n      return false;\n    }\n\n    if (input instanceof UUID) {\n      return true;\n    }\n\n    if (typeof input === 'string') {\n      return uuidValidateString(input);\n    }\n\n    if (isUint8Array(input)) {\n      // check for length & uuid version (https://tools.ietf.org/html/rfc4122#section-4.1.3)\n      if (input.length !== UUID_BYTE_LENGTH) {\n        return false;\n      }\n\n      return (input[6] & 0xf0) === 0x40 && (input[8] & 0x80) === 0x80;\n    }\n\n    return false;\n  }\n\n  /**\n   * Creates an UUID from a hex string representation of an UUID.\n   * @param hexString - 32 or 36 character hex string (dashes excluded/included).\n   */\n  static createFromHexString(hexString: string): UUID {\n    const buffer = uuidHexStringToBuffer(hexString);\n    return new UUID(buffer);\n  }\n\n  /**\n   * Converts to a string representation of this Id.\n   *\n   * @returns return the 36 character hex string representation.\n   * @internal\n   */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return `new UUID(\"${this.toHexString()}\")`;\n  }\n}\n", "import type { Document } from './bson';\n\n/** @public */\nexport interface CodeExtended {\n  $code: string | Function;\n  $scope?: Document;\n}\n\n/**\n * A class representation of the BSON Code type.\n * @public\n * @category BSONType\n */\nexport class Code {\n  _bsontype!: 'Code';\n\n  code!: string | Function;\n  scope?: Document;\n  /**\n   * @param code - a string or function.\n   * @param scope - an optional scope for the function.\n   */\n  constructor(code: string | Function, scope?: Document) {\n    if (!(this instanceof Code)) return new Code(code, scope);\n\n    this.code = code;\n    this.scope = scope;\n  }\n\n  toJSON(): { code: string | Function; scope?: Document } {\n    return { code: this.code, scope: this.scope };\n  }\n\n  /** @internal */\n  toExtendedJSON(): CodeExtended {\n    if (this.scope) {\n      return { $code: this.code, $scope: this.scope };\n    }\n\n    return { $code: this.code };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: CodeExtended): Code {\n    return new Code(doc.$code, doc.$scope);\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    const codeJson = this.toJSON();\n    return `new Code(\"${String(codeJson.code)}\"${\n      codeJson.scope ? `, ${JSON.stringify(codeJson.scope)}` : ''\n    })`;\n  }\n}\n\nObject.defineProperty(Code.prototype, '_bsontype', { value: 'Code' });\n", "import type { Document } from './bson';\nimport type { EJSONOptions } from './extended_json';\nimport type { ObjectId } from './objectid';\nimport { isObjectLike } from './parser/utils';\n\n/** @public */\nexport interface DBRefLike {\n  $ref: string;\n  $id: ObjectId;\n  $db?: string;\n}\n\n/** @internal */\nexport function isDBRefLike(value: unknown): value is DBRefLike {\n  return (\n    isObjectLike(value) &&\n    value.$id != null &&\n    typeof value.$ref === 'string' &&\n    (value.$db == null || typeof value.$db === 'string')\n  );\n}\n\n/**\n * A class representation of the BSON DBRef type.\n * @public\n * @category BSONType\n */\nexport class DBRef {\n  _bsontype!: 'DBRef';\n\n  collection!: string;\n  oid!: ObjectId;\n  db?: string;\n  fields!: Document;\n\n  /**\n   * @param collection - the collection name.\n   * @param oid - the reference ObjectId.\n   * @param db - optional db name, if omitted the reference is local to the current db.\n   */\n  constructor(collection: string, oid: ObjectId, db?: string, fields?: Document) {\n    if (!(this instanceof DBRef)) return new DBRef(collection, oid, db, fields);\n\n    // check if namespace has been provided\n    const parts = collection.split('.');\n    if (parts.length === 2) {\n      db = parts.shift();\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      collection = parts.shift()!;\n    }\n\n    this.collection = collection;\n    this.oid = oid;\n    this.db = db;\n    this.fields = fields || {};\n  }\n\n  // Property provided for compatibility with the 1.x parser\n  // the 1.x parser used a \"namespace\" property, while 4.x uses \"collection\"\n\n  /** @internal */\n  get namespace(): string {\n    return this.collection;\n  }\n\n  set namespace(value: string) {\n    this.collection = value;\n  }\n\n  toJSON(): DBRefLike & Document {\n    const o = Object.assign(\n      {\n        $ref: this.collection,\n        $id: this.oid\n      },\n      this.fields\n    );\n\n    if (this.db != null) o.$db = this.db;\n    return o;\n  }\n\n  /** @internal */\n  toExtendedJSON(options?: EJSONOptions): DBRefLike {\n    options = options || {};\n    let o: DBRefLike = {\n      $ref: this.collection,\n      $id: this.oid\n    };\n\n    if (options.legacy) {\n      return o;\n    }\n\n    if (this.db) o.$db = this.db;\n    o = Object.assign(o, this.fields);\n    return o;\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: DBRefLike): DBRef {\n    const copy = Object.assign({}, doc) as Partial<DBRefLike>;\n    delete copy.$ref;\n    delete copy.$id;\n    delete copy.$db;\n    return new DBRef(doc.$ref, doc.$id, doc.$db, copy);\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    // NOTE: if OID is an ObjectId class it will just print the oid string.\n    const oid =\n      this.oid === undefined || this.oid.toString === undefined ? this.oid : this.oid.toString();\n    return `new DBRef(\"${this.namespace}\", new ObjectId(\"${String(oid)}\")${\n      this.db ? `, \"${this.db}\"` : ''\n    })`;\n  }\n}\n\nObject.defineProperty(DBRef.prototype, '_bsontype', { value: 'DBRef' });\n", "import type { EJSONOptions } from './extended_json';\nimport { isObjectLike } from './parser/utils';\nimport type { Timestamp } from './timestamp';\n\ninterface LongWASMHelpers {\n  /** Gets the high bits of the last operation performed */\n  get_high(this: void): number;\n  div_u(\n    this: void,\n    lowBits: number,\n    highBits: number,\n    lowBitsDivisor: number,\n    highBitsDivisor: number\n  ): number;\n  div_s(\n    this: void,\n    lowBits: number,\n    highBits: number,\n    lowBitsDivisor: number,\n    highBitsDivisor: number\n  ): number;\n  rem_u(\n    this: void,\n    lowBits: number,\n    highBits: number,\n    lowBitsDivisor: number,\n    highBitsDivisor: number\n  ): number;\n  rem_s(\n    this: void,\n    lowBits: number,\n    highBits: number,\n    lowBitsDivisor: number,\n    highBitsDivisor: number\n  ): number;\n  mul(\n    this: void,\n    lowBits: number,\n    highBits: number,\n    lowBitsMultiplier: number,\n    highBitsMultiplier: number\n  ): number;\n}\n\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nlet wasm: LongWASMHelpers | undefined = undefined;\n\n/* We do not want to have to include DOM types just for this check */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const WebAssembly: any;\n\ntry {\n  wasm = new WebAssembly.Instance(\n    new WebAssembly.Module(\n      // prettier-ignore\n      new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])\n    ),\n    {}\n  ).exports as unknown as LongWASMHelpers;\n} catch {\n  // no wasm support\n}\n\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_24_DBL = 1 << 24;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n\n/** A cache of the Long representations of small integer values. */\nconst INT_CACHE: { [key: number]: Long } = {};\n\n/** A cache of the Long representations of small unsigned integer values. */\nconst UINT_CACHE: { [key: number]: Long } = {};\n\n/** @public */\nexport interface LongExtended {\n  $numberLong: string;\n}\n\n/**\n * A class representing a 64-bit integer\n * @public\n * @category BSONType\n * @remarks\n * The internal representation of a long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16 bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n * Common constant values ZERO, ONE, NEG_ONE, etc. are found as static properties on this class.\n */\nexport class Long {\n  _bsontype!: 'Long';\n\n  /** An indicator used to reliably determine if an object is a Long or not. */\n  __isLong__!: true;\n\n  /**\n   * The high 32 bits as a signed value.\n   */\n  high!: number;\n\n  /**\n   * The low 32 bits as a signed value.\n   */\n  low!: number;\n\n  /**\n   * Whether unsigned or not.\n   */\n  unsigned!: boolean;\n\n  /**\n   * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n   *  See the from* functions below for more convenient ways of constructing Longs.\n   *\n   * Acceptable signatures are:\n   * - Long(low, high, unsigned?)\n   * - Long(bigint, unsigned?)\n   * - Long(string, unsigned?)\n   *\n   * @param low - The low (signed) 32 bits of the long\n   * @param high - The high (signed) 32 bits of the long\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   */\n  constructor(low: number | bigint | string = 0, high?: number | boolean, unsigned?: boolean) {\n    if (!(this instanceof Long)) return new Long(low, high, unsigned);\n\n    if (typeof low === 'bigint') {\n      Object.assign(this, Long.fromBigInt(low, !!high));\n    } else if (typeof low === 'string') {\n      Object.assign(this, Long.fromString(low, !!high));\n    } else {\n      this.low = low | 0;\n      this.high = (high as number) | 0;\n      this.unsigned = !!unsigned;\n    }\n\n    Object.defineProperty(this, '__isLong__', {\n      value: true,\n      configurable: false,\n      writable: false,\n      enumerable: false\n    });\n  }\n\n  static TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\n\n  /** Maximum unsigned value. */\n  static MAX_UNSIGNED_VALUE = Long.fromBits(0xffffffff | 0, 0xffffffff | 0, true);\n  /** Signed zero */\n  static ZERO = Long.fromInt(0);\n  /** Unsigned zero. */\n  static UZERO = Long.fromInt(0, true);\n  /** Signed one. */\n  static ONE = Long.fromInt(1);\n  /** Unsigned one. */\n  static UONE = Long.fromInt(1, true);\n  /** Signed negative one. */\n  static NEG_ONE = Long.fromInt(-1);\n  /** Maximum signed value. */\n  static MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\n  /** Minimum signed value. */\n  static MIN_VALUE = Long.fromBits(0, 0x80000000 | 0, false);\n\n  /**\n   * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits.\n   * Each is assumed to use 32 bits.\n   * @param lowBits - The low 32 bits\n   * @param highBits - The high 32 bits\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromBits(lowBits: number, highBits: number, unsigned?: boolean): Long {\n    return new Long(lowBits, highBits, unsigned);\n  }\n\n  /**\n   * Returns a Long representing the given 32 bit integer value.\n   * @param value - The 32 bit integer in question\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromInt(value: number, unsigned?: boolean): Long {\n    let obj, cachedObj, cache;\n    if (unsigned) {\n      value >>>= 0;\n      if ((cache = 0 <= value && value < 256)) {\n        cachedObj = UINT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n      obj = Long.fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n      if (cache) UINT_CACHE[value] = obj;\n      return obj;\n    } else {\n      value |= 0;\n      if ((cache = -128 <= value && value < 128)) {\n        cachedObj = INT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n      obj = Long.fromBits(value, value < 0 ? -1 : 0, false);\n      if (cache) INT_CACHE[value] = obj;\n      return obj;\n    }\n  }\n\n  /**\n   * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n   * @param value - The number in question\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromNumber(value: number, unsigned?: boolean): Long {\n    if (isNaN(value)) return unsigned ? Long.UZERO : Long.ZERO;\n    if (unsigned) {\n      if (value < 0) return Long.UZERO;\n      if (value >= TWO_PWR_64_DBL) return Long.MAX_UNSIGNED_VALUE;\n    } else {\n      if (value <= -TWO_PWR_63_DBL) return Long.MIN_VALUE;\n      if (value + 1 >= TWO_PWR_63_DBL) return Long.MAX_VALUE;\n    }\n    if (value < 0) return Long.fromNumber(-value, unsigned).neg();\n    return Long.fromBits(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n  }\n\n  /**\n   * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n   * @param value - The number in question\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromBigInt(value: bigint, unsigned?: boolean): Long {\n    return Long.fromString(value.toString(), unsigned);\n  }\n\n  /**\n   * Returns a Long representation of the given string, written using the specified radix.\n   * @param str - The textual representation of the Long\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @param radix - The radix in which the text is written (2-36), defaults to 10\n   * @returns The corresponding Long value\n   */\n  static fromString(str: string, unsigned?: boolean, radix?: number): Long {\n    if (str.length === 0) throw Error('empty string');\n    if (str === 'NaN' || str === 'Infinity' || str === '+Infinity' || str === '-Infinity')\n      return Long.ZERO;\n    if (typeof unsigned === 'number') {\n      // For goog.math.long compatibility\n      (radix = unsigned), (unsigned = false);\n    } else {\n      unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n\n    let p;\n    if ((p = str.indexOf('-')) > 0) throw Error('interior hyphen');\n    else if (p === 0) {\n      return Long.fromString(str.substring(1), unsigned, radix).neg();\n    }\n\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    const radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n    let result = Long.ZERO;\n    for (let i = 0; i < str.length; i += 8) {\n      const size = Math.min(8, str.length - i),\n        value = parseInt(str.substring(i, i + size), radix);\n      if (size < 8) {\n        const power = Long.fromNumber(Math.pow(radix, size));\n        result = result.mul(power).add(Long.fromNumber(value));\n      } else {\n        result = result.mul(radixToPower);\n        result = result.add(Long.fromNumber(value));\n      }\n    }\n    result.unsigned = unsigned;\n    return result;\n  }\n\n  /**\n   * Creates a Long from its byte representation.\n   * @param bytes - Byte representation\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @param le - Whether little or big endian, defaults to big endian\n   * @returns The corresponding Long value\n   */\n  static fromBytes(bytes: number[], unsigned?: boolean, le?: boolean): Long {\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n  }\n\n  /**\n   * Creates a Long from its little endian byte representation.\n   * @param bytes - Little endian byte representation\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromBytesLE(bytes: number[], unsigned?: boolean): Long {\n    return new Long(\n      bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24),\n      bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24),\n      unsigned\n    );\n  }\n\n  /**\n   * Creates a Long from its big endian byte representation.\n   * @param bytes - Big endian byte representation\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   * @returns The corresponding Long value\n   */\n  static fromBytesBE(bytes: number[], unsigned?: boolean): Long {\n    return new Long(\n      (bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7],\n      (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3],\n      unsigned\n    );\n  }\n\n  /**\n   * Tests if the specified object is a Long.\n   */\n  static isLong(value: unknown): value is Long {\n    return isObjectLike(value) && value['__isLong__'] === true;\n  }\n\n  /**\n   * Converts the specified value to a Long.\n   * @param unsigned - Whether unsigned or not, defaults to signed\n   */\n  static fromValue(\n    val: number | string | { low: number; high: number; unsigned?: boolean },\n    unsigned?: boolean\n  ): Long {\n    if (typeof val === 'number') return Long.fromNumber(val, unsigned);\n    if (typeof val === 'string') return Long.fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return Long.fromBits(\n      val.low,\n      val.high,\n      typeof unsigned === 'boolean' ? unsigned : val.unsigned\n    );\n  }\n\n  /** Returns the sum of this and the specified Long. */\n  add(addend: string | number | Long | Timestamp): Long {\n    if (!Long.isLong(addend)) addend = Long.fromValue(addend);\n\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n    const a48 = this.high >>> 16;\n    const a32 = this.high & 0xffff;\n    const a16 = this.low >>> 16;\n    const a00 = this.low & 0xffff;\n\n    const b48 = addend.high >>> 16;\n    const b32 = addend.high & 0xffff;\n    const b16 = addend.low >>> 16;\n    const b00 = addend.low & 0xffff;\n\n    let c48 = 0,\n      c32 = 0,\n      c16 = 0,\n      c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += a48 + b48;\n    c48 &= 0xffff;\n    return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n  }\n\n  /**\n   * Returns the sum of this and the specified Long.\n   * @returns Sum\n   */\n  and(other: string | number | Long | Timestamp): Long {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n  }\n\n  /**\n   * Compares this Long's value with the specified's.\n   * @returns 0 if they are the same, 1 if the this is greater and -1 if the given one is greater\n   */\n  compare(other: string | number | Long | Timestamp): 0 | 1 | -1 {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.eq(other)) return 0;\n    const thisNeg = this.isNegative(),\n      otherNeg = other.isNegative();\n    if (thisNeg && !otherNeg) return -1;\n    if (!thisNeg && otherNeg) return 1;\n    // At this point the sign bits are the same\n    if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return other.high >>> 0 > this.high >>> 0 ||\n      (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n      ? -1\n      : 1;\n  }\n\n  /** This is an alias of {@link Long.compare} */\n  comp(other: string | number | Long | Timestamp): 0 | 1 | -1 {\n    return this.compare(other);\n  }\n\n  /**\n   * Returns this Long divided by the specified. The result is signed if this Long is signed or unsigned if this Long is unsigned.\n   * @returns Quotient\n   */\n  divide(divisor: string | number | Long | Timestamp): Long {\n    if (!Long.isLong(divisor)) divisor = Long.fromValue(divisor);\n    if (divisor.isZero()) throw Error('division by zero');\n\n    // use wasm support if present\n    if (wasm) {\n      // guard against signed division overflow: the largest\n      // negative number / -1 would be 1 larger than the largest\n      // positive number, due to two's complement.\n      if (\n        !this.unsigned &&\n        this.high === -0x80000000 &&\n        divisor.low === -1 &&\n        divisor.high === -1\n      ) {\n        // be consistent with non-wasm code path\n        return this;\n      }\n      const low = (this.unsigned ? wasm.div_u : wasm.div_s)(\n        this.low,\n        this.high,\n        divisor.low,\n        divisor.high\n      );\n      return Long.fromBits(low, wasm.get_high(), this.unsigned);\n    }\n\n    if (this.isZero()) return this.unsigned ? Long.UZERO : Long.ZERO;\n    let approx, rem, res;\n    if (!this.unsigned) {\n      // This section is only relevant for signed longs and is derived from the\n      // closure library as a whole.\n      if (this.eq(Long.MIN_VALUE)) {\n        if (divisor.eq(Long.ONE) || divisor.eq(Long.NEG_ONE)) return Long.MIN_VALUE;\n        // recall that -MIN_VALUE == MIN_VALUE\n        else if (divisor.eq(Long.MIN_VALUE)) return Long.ONE;\n        else {\n          // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n          const halfThis = this.shr(1);\n          approx = halfThis.div(divisor).shl(1);\n          if (approx.eq(Long.ZERO)) {\n            return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\n          } else {\n            rem = this.sub(divisor.mul(approx));\n            res = approx.add(rem.div(divisor));\n            return res;\n          }\n        }\n      } else if (divisor.eq(Long.MIN_VALUE)) return this.unsigned ? Long.UZERO : Long.ZERO;\n      if (this.isNegative()) {\n        if (divisor.isNegative()) return this.neg().div(divisor.neg());\n        return this.neg().div(divisor).neg();\n      } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n      res = Long.ZERO;\n    } else {\n      // The algorithm below has not been made for unsigned longs. It's therefore\n      // required to take special care of the MSB prior to running it.\n      if (!divisor.unsigned) divisor = divisor.toUnsigned();\n      if (divisor.gt(this)) return Long.UZERO;\n      if (divisor.gt(this.shru(1)))\n        // 15 >>> 1 = 7 ; with divisor = 8 ; true\n        return Long.UONE;\n      res = Long.UZERO;\n    }\n\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    rem = this;\n    while (rem.gte(divisor)) {\n      // Approximate the result of division. This may be a little greater or\n      // smaller than the actual value.\n      approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n\n      // We will tweak the approximate result by changing it in the 48-th digit or\n      // the smallest non-fractional digit, whichever is larger.\n      const log2 = Math.ceil(Math.log(approx) / Math.LN2);\n      const delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n      // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      let approxRes = Long.fromNumber(approx);\n      let approxRem = approxRes.mul(divisor);\n      while (approxRem.isNegative() || approxRem.gt(rem)) {\n        approx -= delta;\n        approxRes = Long.fromNumber(approx, this.unsigned);\n        approxRem = approxRes.mul(divisor);\n      }\n\n      // We know the answer can't be zero... and actually, zero would cause\n      // infinite recursion since we would make no progress.\n      if (approxRes.isZero()) approxRes = Long.ONE;\n\n      res = res.add(approxRes);\n      rem = rem.sub(approxRem);\n    }\n    return res;\n  }\n\n  /**This is an alias of {@link Long.divide} */\n  div(divisor: string | number | Long | Timestamp): Long {\n    return this.divide(divisor);\n  }\n\n  /**\n   * Tests if this Long's value equals the specified's.\n   * @param other - Other value\n   */\n  equals(other: string | number | Long | Timestamp): boolean {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1)\n      return false;\n    return this.high === other.high && this.low === other.low;\n  }\n\n  /** This is an alias of {@link Long.equals} */\n  eq(other: string | number | Long | Timestamp): boolean {\n    return this.equals(other);\n  }\n\n  /** Gets the high 32 bits as a signed integer. */\n  getHighBits(): number {\n    return this.high;\n  }\n\n  /** Gets the high 32 bits as an unsigned integer. */\n  getHighBitsUnsigned(): number {\n    return this.high >>> 0;\n  }\n\n  /** Gets the low 32 bits as a signed integer. */\n  getLowBits(): number {\n    return this.low;\n  }\n\n  /** Gets the low 32 bits as an unsigned integer. */\n  getLowBitsUnsigned(): number {\n    return this.low >>> 0;\n  }\n\n  /** Gets the number of bits needed to represent the absolute value of this Long. */\n  getNumBitsAbs(): number {\n    if (this.isNegative()) {\n      // Unsigned Longs are never negative\n      return this.eq(Long.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n    }\n    const val = this.high !== 0 ? this.high : this.low;\n    let bit: number;\n    for (bit = 31; bit > 0; bit--) if ((val & (1 << bit)) !== 0) break;\n    return this.high !== 0 ? bit + 33 : bit + 1;\n  }\n\n  /** Tests if this Long's value is greater than the specified's. */\n  greaterThan(other: string | number | Long | Timestamp): boolean {\n    return this.comp(other) > 0;\n  }\n\n  /** This is an alias of {@link Long.greaterThan} */\n  gt(other: string | number | Long | Timestamp): boolean {\n    return this.greaterThan(other);\n  }\n\n  /** Tests if this Long's value is greater than or equal the specified's. */\n  greaterThanOrEqual(other: string | number | Long | Timestamp): boolean {\n    return this.comp(other) >= 0;\n  }\n\n  /** This is an alias of {@link Long.greaterThanOrEqual} */\n  gte(other: string | number | Long | Timestamp): boolean {\n    return this.greaterThanOrEqual(other);\n  }\n  /** This is an alias of {@link Long.greaterThanOrEqual} */\n  ge(other: string | number | Long | Timestamp): boolean {\n    return this.greaterThanOrEqual(other);\n  }\n\n  /** Tests if this Long's value is even. */\n  isEven(): boolean {\n    return (this.low & 1) === 0;\n  }\n\n  /** Tests if this Long's value is negative. */\n  isNegative(): boolean {\n    return !this.unsigned && this.high < 0;\n  }\n\n  /** Tests if this Long's value is odd. */\n  isOdd(): boolean {\n    return (this.low & 1) === 1;\n  }\n\n  /** Tests if this Long's value is positive. */\n  isPositive(): boolean {\n    return this.unsigned || this.high >= 0;\n  }\n\n  /** Tests if this Long's value equals zero. */\n  isZero(): boolean {\n    return this.high === 0 && this.low === 0;\n  }\n\n  /** Tests if this Long's value is less than the specified's. */\n  lessThan(other: string | number | Long | Timestamp): boolean {\n    return this.comp(other) < 0;\n  }\n\n  /** This is an alias of {@link Long#lessThan}. */\n  lt(other: string | number | Long | Timestamp): boolean {\n    return this.lessThan(other);\n  }\n\n  /** Tests if this Long's value is less than or equal the specified's. */\n  lessThanOrEqual(other: string | number | Long | Timestamp): boolean {\n    return this.comp(other) <= 0;\n  }\n\n  /** This is an alias of {@link Long.lessThanOrEqual} */\n  lte(other: string | number | Long | Timestamp): boolean {\n    return this.lessThanOrEqual(other);\n  }\n\n  /** Returns this Long modulo the specified. */\n  modulo(divisor: string | number | Long | Timestamp): Long {\n    if (!Long.isLong(divisor)) divisor = Long.fromValue(divisor);\n\n    // use wasm support if present\n    if (wasm) {\n      const low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\n        this.low,\n        this.high,\n        divisor.low,\n        divisor.high\n      );\n      return Long.fromBits(low, wasm.get_high(), this.unsigned);\n    }\n\n    return this.sub(this.div(divisor).mul(divisor));\n  }\n\n  /** This is an alias of {@link Long.modulo} */\n  mod(divisor: string | number | Long | Timestamp): Long {\n    return this.modulo(divisor);\n  }\n  /** This is an alias of {@link Long.modulo} */\n  rem(divisor: string | number | Long | Timestamp): Long {\n    return this.modulo(divisor);\n  }\n\n  /**\n   * Returns the product of this and the specified Long.\n   * @param multiplier - Multiplier\n   * @returns Product\n   */\n  multiply(multiplier: string | number | Long | Timestamp): Long {\n    if (this.isZero()) return Long.ZERO;\n    if (!Long.isLong(multiplier)) multiplier = Long.fromValue(multiplier);\n\n    // use wasm support if present\n    if (wasm) {\n      const low = wasm.mul(this.low, this.high, multiplier.low, multiplier.high);\n      return Long.fromBits(low, wasm.get_high(), this.unsigned);\n    }\n\n    if (multiplier.isZero()) return Long.ZERO;\n    if (this.eq(Long.MIN_VALUE)) return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n    if (multiplier.eq(Long.MIN_VALUE)) return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n\n    if (this.isNegative()) {\n      if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());\n      else return this.neg().mul(multiplier).neg();\n    } else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg();\n\n    // If both longs are small, use float multiplication\n    if (this.lt(Long.TWO_PWR_24) && multiplier.lt(Long.TWO_PWR_24))\n      return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n\n    const a48 = this.high >>> 16;\n    const a32 = this.high & 0xffff;\n    const a16 = this.low >>> 16;\n    const a00 = this.low & 0xffff;\n\n    const b48 = multiplier.high >>> 16;\n    const b32 = multiplier.high & 0xffff;\n    const b16 = multiplier.low >>> 16;\n    const b00 = multiplier.low & 0xffff;\n\n    let c48 = 0,\n      c32 = 0,\n      c16 = 0,\n      c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xffff;\n    return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n  }\n\n  /** This is an alias of {@link Long.multiply} */\n  mul(multiplier: string | number | Long | Timestamp): Long {\n    return this.multiply(multiplier);\n  }\n\n  /** Returns the Negation of this Long's value. */\n  negate(): Long {\n    if (!this.unsigned && this.eq(Long.MIN_VALUE)) return Long.MIN_VALUE;\n    return this.not().add(Long.ONE);\n  }\n\n  /** This is an alias of {@link Long.negate} */\n  neg(): Long {\n    return this.negate();\n  }\n\n  /** Returns the bitwise NOT of this Long. */\n  not(): Long {\n    return Long.fromBits(~this.low, ~this.high, this.unsigned);\n  }\n\n  /** Tests if this Long's value differs from the specified's. */\n  notEquals(other: string | number | Long | Timestamp): boolean {\n    return !this.equals(other);\n  }\n\n  /** This is an alias of {@link Long.notEquals} */\n  neq(other: string | number | Long | Timestamp): boolean {\n    return this.notEquals(other);\n  }\n  /** This is an alias of {@link Long.notEquals} */\n  ne(other: string | number | Long | Timestamp): boolean {\n    return this.notEquals(other);\n  }\n\n  /**\n   * Returns the bitwise OR of this Long and the specified.\n   */\n  or(other: number | string | Long): Long {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n  }\n\n  /**\n   * Returns this Long with bits shifted to the left by the given amount.\n   * @param numBits - Number of bits\n   * @returns Shifted Long\n   */\n  shiftLeft(numBits: number | Long): Long {\n    if (Long.isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    else if (numBits < 32)\n      return Long.fromBits(\n        this.low << numBits,\n        (this.high << numBits) | (this.low >>> (32 - numBits)),\n        this.unsigned\n      );\n    else return Long.fromBits(0, this.low << (numBits - 32), this.unsigned);\n  }\n\n  /** This is an alias of {@link Long.shiftLeft} */\n  shl(numBits: number | Long): Long {\n    return this.shiftLeft(numBits);\n  }\n\n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount.\n   * @param numBits - Number of bits\n   * @returns Shifted Long\n   */\n  shiftRight(numBits: number | Long): Long {\n    if (Long.isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    else if (numBits < 32)\n      return Long.fromBits(\n        (this.low >>> numBits) | (this.high << (32 - numBits)),\n        this.high >> numBits,\n        this.unsigned\n      );\n    else return Long.fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n  }\n\n  /** This is an alias of {@link Long.shiftRight} */\n  shr(numBits: number | Long): Long {\n    return this.shiftRight(numBits);\n  }\n\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount.\n   * @param numBits - Number of bits\n   * @returns Shifted Long\n   */\n  shiftRightUnsigned(numBits: Long | number): Long {\n    if (Long.isLong(numBits)) numBits = numBits.toInt();\n    numBits &= 63;\n    if (numBits === 0) return this;\n    else {\n      const high = this.high;\n      if (numBits < 32) {\n        const low = this.low;\n        return Long.fromBits(\n          (low >>> numBits) | (high << (32 - numBits)),\n          high >>> numBits,\n          this.unsigned\n        );\n      } else if (numBits === 32) return Long.fromBits(high, 0, this.unsigned);\n      else return Long.fromBits(high >>> (numBits - 32), 0, this.unsigned);\n    }\n  }\n\n  /** This is an alias of {@link Long.shiftRightUnsigned} */\n  shr_u(numBits: number | Long): Long {\n    return this.shiftRightUnsigned(numBits);\n  }\n  /** This is an alias of {@link Long.shiftRightUnsigned} */\n  shru(numBits: number | Long): Long {\n    return this.shiftRightUnsigned(numBits);\n  }\n\n  /**\n   * Returns the difference of this and the specified Long.\n   * @param subtrahend - Subtrahend\n   * @returns Difference\n   */\n  subtract(subtrahend: string | number | Long | Timestamp): Long {\n    if (!Long.isLong(subtrahend)) subtrahend = Long.fromValue(subtrahend);\n    return this.add(subtrahend.neg());\n  }\n\n  /** This is an alias of {@link Long.subtract} */\n  sub(subtrahend: string | number | Long | Timestamp): Long {\n    return this.subtract(subtrahend);\n  }\n\n  /** Converts the Long to a 32 bit integer, assuming it is a 32 bit integer. */\n  toInt(): number {\n    return this.unsigned ? this.low >>> 0 : this.low;\n  }\n\n  /** Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa). */\n  toNumber(): number {\n    if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n  }\n\n  /** Converts the Long to a BigInt (arbitrary precision). */\n  toBigInt(): bigint {\n    return BigInt(this.toString());\n  }\n\n  /**\n   * Converts this Long to its byte representation.\n   * @param le - Whether little or big endian, defaults to big endian\n   * @returns Byte representation\n   */\n  toBytes(le?: boolean): number[] {\n    return le ? this.toBytesLE() : this.toBytesBE();\n  }\n\n  /**\n   * Converts this Long to its little endian byte representation.\n   * @returns Little endian byte representation\n   */\n  toBytesLE(): number[] {\n    const hi = this.high,\n      lo = this.low;\n    return [\n      lo & 0xff,\n      (lo >>> 8) & 0xff,\n      (lo >>> 16) & 0xff,\n      lo >>> 24,\n      hi & 0xff,\n      (hi >>> 8) & 0xff,\n      (hi >>> 16) & 0xff,\n      hi >>> 24\n    ];\n  }\n\n  /**\n   * Converts this Long to its big endian byte representation.\n   * @returns Big endian byte representation\n   */\n  toBytesBE(): number[] {\n    const hi = this.high,\n      lo = this.low;\n    return [\n      hi >>> 24,\n      (hi >>> 16) & 0xff,\n      (hi >>> 8) & 0xff,\n      hi & 0xff,\n      lo >>> 24,\n      (lo >>> 16) & 0xff,\n      (lo >>> 8) & 0xff,\n      lo & 0xff\n    ];\n  }\n\n  /**\n   * Converts this Long to signed.\n   */\n  toSigned(): Long {\n    if (!this.unsigned) return this;\n    return Long.fromBits(this.low, this.high, false);\n  }\n\n  /**\n   * Converts the Long to a string written in the specified radix.\n   * @param radix - Radix (2-36), defaults to 10\n   * @throws RangeError If `radix` is out of range\n   */\n  toString(radix?: number): string {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    if (this.isZero()) return '0';\n    if (this.isNegative()) {\n      // Unsigned Longs are never negative\n      if (this.eq(Long.MIN_VALUE)) {\n        // We need to change the Long value before it can be negated, so we remove\n        // the bottom-most digit in this base and then recurse to do the rest.\n        const radixLong = Long.fromNumber(radix),\n          div = this.div(radixLong),\n          rem1 = div.mul(radixLong).sub(this);\n        return div.toString(radix) + rem1.toInt().toString(radix);\n      } else return '-' + this.neg().toString(radix);\n    }\n\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    const radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let rem: Long = this;\n    let result = '';\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const remDiv = rem.div(radixToPower);\n      const intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0;\n      let digits = intval.toString(radix);\n      rem = remDiv;\n      if (rem.isZero()) {\n        return digits + result;\n      } else {\n        while (digits.length < 6) digits = '0' + digits;\n        result = '' + digits + result;\n      }\n    }\n  }\n\n  /** Converts this Long to unsigned. */\n  toUnsigned(): Long {\n    if (this.unsigned) return this;\n    return Long.fromBits(this.low, this.high, true);\n  }\n\n  /** Returns the bitwise XOR of this Long and the given one. */\n  xor(other: Long | number | string): Long {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n  }\n\n  /** This is an alias of {@link Long.isZero} */\n  eqz(): boolean {\n    return this.isZero();\n  }\n\n  /** This is an alias of {@link Long.lessThanOrEqual} */\n  le(other: string | number | Long | Timestamp): boolean {\n    return this.lessThanOrEqual(other);\n  }\n\n  /*\n   ****************************************************************\n   *                  BSON SPECIFIC ADDITIONS                     *\n   ****************************************************************\n   */\n  toExtendedJSON(options?: EJSONOptions): number | LongExtended {\n    if (options && options.relaxed) return this.toNumber();\n    return { $numberLong: this.toString() };\n  }\n  static fromExtendedJSON(doc: { $numberLong: string }, options?: EJSONOptions): number | Long {\n    const result = Long.fromString(doc.$numberLong);\n    return options && options.relaxed ? result.toNumber() : result;\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return `new Long(\"${this.toString()}\"${this.unsigned ? ', true' : ''})`;\n  }\n}\n\nObject.defineProperty(Long.prototype, '__isLong__', { value: true });\nObject.defineProperty(Long.prototype, '_bsontype', { value: 'Long' });\n", "import { Buffer } from 'buffer';\nimport { BSONTypeError } from './error';\nimport { Long } from './long';\nimport { isUint8Array } from './parser/utils';\n\nconst PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nconst PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nconst PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\n\nconst EXPONENT_MAX = 6111;\nconst EXPONENT_MIN = -6176;\nconst EXPONENT_BIAS = 6176;\nconst MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nconst NAN_BUFFER = [\n  0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nconst INF_NEGATIVE_BUFFER = [\n  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse();\nconst INF_POSITIVE_BUFFER = [\n  0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse();\n\nconst EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\n\n// Extract least significant 5 bits\nconst COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nconst EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nconst COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nconst COMBINATION_NAN = 31;\n\n// Detect if the value is a digit\nfunction isDigit(value: string): boolean {\n  return !isNaN(parseInt(value, 10));\n}\n\n// Divide two uint128 values\nfunction divideu128(value: { parts: [number, number, number, number] }) {\n  const DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  let _rem = Long.fromNumber(0);\n\n  if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for (let i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n}\n\n// Multiply two Long values and return the 128 bit value\nfunction multiply64x2(left: Long, right: Long): { high: Long; low: Long } {\n  if (!left && !right) {\n    return { high: Long.fromNumber(0), low: Long.fromNumber(0) };\n  }\n\n  const leftHigh = left.shiftRightUnsigned(32);\n  const leftLow = new Long(left.getLowBits(), 0);\n  const rightHigh = right.shiftRightUnsigned(32);\n  const rightLow = new Long(right.getLowBits(), 0);\n\n  let productHigh = leftHigh.multiply(rightHigh);\n  let productMid = leftHigh.multiply(rightLow);\n  const productMid2 = leftLow.multiply(rightHigh);\n  let productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n    .add(productMid2)\n    .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return { high: productHigh, low: productLow };\n}\n\nfunction lessThan(left: Long, right: Long): boolean {\n  // Make values unsigned\n  const uhleft = left.high >>> 0;\n  const uhright = right.high >>> 0;\n\n  // Compare high bits first\n  if (uhleft < uhright) {\n    return true;\n  } else if (uhleft === uhright) {\n    const ulleft = left.low >>> 0;\n    const ulright = right.low >>> 0;\n    if (ulleft < ulright) return true;\n  }\n\n  return false;\n}\n\nfunction invalidErr(string: string, message: string) {\n  throw new BSONTypeError(`\"${string}\" is not a valid Decimal128 string - ${message}`);\n}\n\n/** @public */\nexport interface Decimal128Extended {\n  $numberDecimal: string;\n}\n\n/**\n * A class representation of the BSON Decimal128 type.\n * @public\n * @category BSONType\n */\nexport class Decimal128 {\n  _bsontype!: 'Decimal128';\n\n  readonly bytes!: Buffer;\n\n  /**\n   * @param bytes - a buffer containing the raw Decimal128 bytes in little endian order,\n   *                or a string representation as returned by .toString()\n   */\n  constructor(bytes: Buffer | string) {\n    if (!(this instanceof Decimal128)) return new Decimal128(bytes);\n\n    if (typeof bytes === 'string') {\n      this.bytes = Decimal128.fromString(bytes).bytes;\n    } else if (isUint8Array(bytes)) {\n      if (bytes.byteLength !== 16) {\n        throw new BSONTypeError('Decimal128 must take a Buffer of 16 bytes');\n      }\n      this.bytes = bytes;\n    } else {\n      throw new BSONTypeError('Decimal128 must take a Buffer or string');\n    }\n  }\n\n  /**\n   * Create a Decimal128 instance from a string representation\n   *\n   * @param representation - a numeric string representation.\n   */\n  static fromString(representation: string): Decimal128 {\n    // Parse state tracking\n    let isNegative = false;\n    let sawRadix = false;\n    let foundNonZero = false;\n\n    // Total number of significant digits (no leading or trailing zero)\n    let significantDigits = 0;\n    // Total number of significand digits read\n    let nDigitsRead = 0;\n    // Total number of digits (no leading zeros)\n    let nDigits = 0;\n    // The number of the digits after radix\n    let radixPosition = 0;\n    // The index of the first non-zero in *str*\n    let firstNonZero = 0;\n\n    // Digits Array\n    const digits = [0];\n    // The number of digits in digits\n    let nDigitsStored = 0;\n    // Insertion pointer for digits\n    let digitsInsert = 0;\n    // The index of the first non-zero digit\n    let firstDigit = 0;\n    // The index of the last digit\n    let lastDigit = 0;\n\n    // Exponent\n    let exponent = 0;\n    // loop index over array\n    let i = 0;\n    // The high 17 digits of the significand\n    let significandHigh = new Long(0, 0);\n    // The low 17 digits of the significand\n    let significandLow = new Long(0, 0);\n    // The biased exponent\n    let biasedExponent = 0;\n\n    // Read index\n    let index = 0;\n\n    // Naively prevent against REDOS attacks.\n    // TODO: implementing a custom parsing for this, or refactoring the regex would yield\n    //       further gains.\n    if (representation.length >= 7000) {\n      throw new BSONTypeError('' + representation + ' not a valid Decimal128 string');\n    }\n\n    // Results\n    const stringMatch = representation.match(PARSE_STRING_REGEXP);\n    const infMatch = representation.match(PARSE_INF_REGEXP);\n    const nanMatch = representation.match(PARSE_NAN_REGEXP);\n\n    // Validate the string\n    if ((!stringMatch && !infMatch && !nanMatch) || representation.length === 0) {\n      throw new BSONTypeError('' + representation + ' not a valid Decimal128 string');\n    }\n\n    if (stringMatch) {\n      // full_match = stringMatch[0]\n      // sign = stringMatch[1]\n\n      const unsignedNumber = stringMatch[2];\n      // stringMatch[3] is undefined if a whole number (ex \"1\", 12\")\n      // but defined if a number w/ decimal in it (ex \"1.0, 12.2\")\n\n      const e = stringMatch[4];\n      const expSign = stringMatch[5];\n      const expNumber = stringMatch[6];\n\n      // they provided e, but didn't give an exponent number. for ex \"1e\"\n      if (e && expNumber === undefined) invalidErr(representation, 'missing exponent power');\n\n      // they provided e, but didn't give a number before it. for ex \"e1\"\n      if (e && unsignedNumber === undefined) invalidErr(representation, 'missing exponent base');\n\n      if (e === undefined && (expSign || expNumber)) {\n        invalidErr(representation, 'missing e before exponent');\n      }\n    }\n\n    // Get the negative or positive sign\n    if (representation[index] === '+' || representation[index] === '-') {\n      isNegative = representation[index++] === '-';\n    }\n\n    // Check if user passed Infinity or NaN\n    if (!isDigit(representation[index]) && representation[index] !== '.') {\n      if (representation[index] === 'i' || representation[index] === 'I') {\n        return new Decimal128(Buffer.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      } else if (representation[index] === 'N') {\n        return new Decimal128(Buffer.from(NAN_BUFFER));\n      }\n    }\n\n    // Read all the digits\n    while (isDigit(representation[index]) || representation[index] === '.') {\n      if (representation[index] === '.') {\n        if (sawRadix) invalidErr(representation, 'contains multiple periods');\n\n        sawRadix = true;\n        index = index + 1;\n        continue;\n      }\n\n      if (nDigitsStored < 34) {\n        if (representation[index] !== '0' || foundNonZero) {\n          if (!foundNonZero) {\n            firstNonZero = nDigitsRead;\n          }\n\n          foundNonZero = true;\n\n          // Only store 34 digits\n          digits[digitsInsert++] = parseInt(representation[index], 10);\n          nDigitsStored = nDigitsStored + 1;\n        }\n      }\n\n      if (foundNonZero) nDigits = nDigits + 1;\n      if (sawRadix) radixPosition = radixPosition + 1;\n\n      nDigitsRead = nDigitsRead + 1;\n      index = index + 1;\n    }\n\n    if (sawRadix && !nDigitsRead)\n      throw new BSONTypeError('' + representation + ' not a valid Decimal128 string');\n\n    // Read exponent if exists\n    if (representation[index] === 'e' || representation[index] === 'E') {\n      // Read exponent digits\n      const match = representation.substr(++index).match(EXPONENT_REGEX);\n\n      // No digits read\n      if (!match || !match[2]) return new Decimal128(Buffer.from(NAN_BUFFER));\n\n      // Get exponent\n      exponent = parseInt(match[0], 10);\n\n      // Adjust the index\n      index = index + match[0].length;\n    }\n\n    // Return not a number\n    if (representation[index]) return new Decimal128(Buffer.from(NAN_BUFFER));\n\n    // Done reading input\n    // Find first non-zero digit in digits\n    firstDigit = 0;\n\n    if (!nDigitsStored) {\n      firstDigit = 0;\n      lastDigit = 0;\n      digits[0] = 0;\n      nDigits = 1;\n      nDigitsStored = 1;\n      significantDigits = 0;\n    } else {\n      lastDigit = nDigitsStored - 1;\n      significantDigits = nDigits;\n      if (significantDigits !== 1) {\n        while (digits[firstNonZero + significantDigits - 1] === 0) {\n          significantDigits = significantDigits - 1;\n        }\n      }\n    }\n\n    // Normalization of exponent\n    // Correct exponent based on radix position, and shift significand as needed\n    // to represent user input\n\n    // Overflow prevention\n    if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n      exponent = EXPONENT_MIN;\n    } else {\n      exponent = exponent - radixPosition;\n    }\n\n    // Attempt to normalize the exponent\n    while (exponent > EXPONENT_MAX) {\n      // Shift exponent to significand and decrease\n      lastDigit = lastDigit + 1;\n\n      if (lastDigit - firstDigit > MAX_DIGITS) {\n        // Check if we have a zero then just hard clamp, otherwise fail\n        const digitsString = digits.join('');\n        if (digitsString.match(/^0+$/)) {\n          exponent = EXPONENT_MAX;\n          break;\n        }\n\n        invalidErr(representation, 'overflow');\n      }\n      exponent = exponent - 1;\n    }\n\n    while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n      // Shift last digit. can only do this if < significant digits than # stored.\n      if (lastDigit === 0 && significantDigits < nDigitsStored) {\n        exponent = EXPONENT_MIN;\n        significantDigits = 0;\n        break;\n      }\n\n      if (nDigitsStored < nDigits) {\n        // adjust to match digits not stored\n        nDigits = nDigits - 1;\n      } else {\n        // adjust to round\n        lastDigit = lastDigit - 1;\n      }\n\n      if (exponent < EXPONENT_MAX) {\n        exponent = exponent + 1;\n      } else {\n        // Check if we have a zero then just hard clamp, otherwise fail\n        const digitsString = digits.join('');\n        if (digitsString.match(/^0+$/)) {\n          exponent = EXPONENT_MAX;\n          break;\n        }\n        invalidErr(representation, 'overflow');\n      }\n    }\n\n    // Round\n    // We've normalized the exponent, but might still need to round.\n    if (lastDigit - firstDigit + 1 < significantDigits) {\n      let endOfString = nDigitsRead;\n\n      // If we have seen a radix point, 'string' is 1 longer than we have\n      // documented with ndigits_read, so inc the position of the first nonzero\n      // digit and the position that digits are read to.\n      if (sawRadix) {\n        firstNonZero = firstNonZero + 1;\n        endOfString = endOfString + 1;\n      }\n      // if negative, we need to increment again to account for - sign at start.\n      if (isNegative) {\n        firstNonZero = firstNonZero + 1;\n        endOfString = endOfString + 1;\n      }\n\n      const roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);\n      let roundBit = 0;\n\n      if (roundDigit >= 5) {\n        roundBit = 1;\n        if (roundDigit === 5) {\n          roundBit = digits[lastDigit] % 2 === 1 ? 1 : 0;\n          for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n            if (parseInt(representation[i], 10)) {\n              roundBit = 1;\n              break;\n            }\n          }\n        }\n      }\n\n      if (roundBit) {\n        let dIdx = lastDigit;\n\n        for (; dIdx >= 0; dIdx--) {\n          if (++digits[dIdx] > 9) {\n            digits[dIdx] = 0;\n\n            // overflowed most significant digit\n            if (dIdx === 0) {\n              if (exponent < EXPONENT_MAX) {\n                exponent = exponent + 1;\n                digits[dIdx] = 1;\n              } else {\n                return new Decimal128(\n                  Buffer.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER)\n                );\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Encode significand\n    // The high 17 digits of the significand\n    significandHigh = Long.fromNumber(0);\n    // The low 17 digits of the significand\n    significandLow = Long.fromNumber(0);\n\n    // read a zero\n    if (significantDigits === 0) {\n      significandHigh = Long.fromNumber(0);\n      significandLow = Long.fromNumber(0);\n    } else if (lastDigit - firstDigit < 17) {\n      let dIdx = firstDigit;\n      significandLow = Long.fromNumber(digits[dIdx++]);\n      significandHigh = new Long(0, 0);\n\n      for (; dIdx <= lastDigit; dIdx++) {\n        significandLow = significandLow.multiply(Long.fromNumber(10));\n        significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n      }\n    } else {\n      let dIdx = firstDigit;\n      significandHigh = Long.fromNumber(digits[dIdx++]);\n\n      for (; dIdx <= lastDigit - 17; dIdx++) {\n        significandHigh = significandHigh.multiply(Long.fromNumber(10));\n        significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n      }\n\n      significandLow = Long.fromNumber(digits[dIdx++]);\n\n      for (; dIdx <= lastDigit; dIdx++) {\n        significandLow = significandLow.multiply(Long.fromNumber(10));\n        significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n      }\n    }\n\n    const significand = multiply64x2(significandHigh, Long.fromString('100000000000000000'));\n    significand.low = significand.low.add(significandLow);\n\n    if (lessThan(significand.low, significandLow)) {\n      significand.high = significand.high.add(Long.fromNumber(1));\n    }\n\n    // Biased exponent\n    biasedExponent = exponent + EXPONENT_BIAS;\n    const dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n    // Encode combination, exponent, and significand.\n    if (\n      significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber(1))\n    ) {\n      // Encode '11' into bits 1 to 3\n      dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n      dec.high = dec.high.or(\n        Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47))\n      );\n      dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n    } else {\n      dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n      dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n    }\n\n    dec.low = significand.low;\n\n    // Encode sign\n    if (isNegative) {\n      dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n    }\n\n    // Encode into a buffer\n    const buffer = Buffer.alloc(16);\n    index = 0;\n\n    // Encode the low 64 bits of the decimal\n    // Encode low bits\n    buffer[index++] = dec.low.low & 0xff;\n    buffer[index++] = (dec.low.low >> 8) & 0xff;\n    buffer[index++] = (dec.low.low >> 16) & 0xff;\n    buffer[index++] = (dec.low.low >> 24) & 0xff;\n    // Encode high bits\n    buffer[index++] = dec.low.high & 0xff;\n    buffer[index++] = (dec.low.high >> 8) & 0xff;\n    buffer[index++] = (dec.low.high >> 16) & 0xff;\n    buffer[index++] = (dec.low.high >> 24) & 0xff;\n\n    // Encode the high 64 bits of the decimal\n    // Encode low bits\n    buffer[index++] = dec.high.low & 0xff;\n    buffer[index++] = (dec.high.low >> 8) & 0xff;\n    buffer[index++] = (dec.high.low >> 16) & 0xff;\n    buffer[index++] = (dec.high.low >> 24) & 0xff;\n    // Encode high bits\n    buffer[index++] = dec.high.high & 0xff;\n    buffer[index++] = (dec.high.high >> 8) & 0xff;\n    buffer[index++] = (dec.high.high >> 16) & 0xff;\n    buffer[index++] = (dec.high.high >> 24) & 0xff;\n\n    // Return the new Decimal128\n    return new Decimal128(buffer);\n  }\n\n  /** Create a string representation of the raw Decimal128 value */\n  toString(): string {\n    // Note: bits in this routine are referred to starting at 0,\n    // from the sign bit, towards the coefficient.\n\n    // decoded biased exponent (14 bits)\n    let biased_exponent;\n    // the number of significand digits\n    let significand_digits = 0;\n    // the base-10 digits in the significand\n    const significand = new Array<number>(36);\n    for (let i = 0; i < significand.length; i++) significand[i] = 0;\n    // read pointer into significand\n    let index = 0;\n\n    // true if the number is zero\n    let is_zero = false;\n\n    // the most significant significand bits (50-46)\n    let significand_msb;\n    // temporary storage for significand decoding\n    let significand128: { parts: [number, number, number, number] } = { parts: [0, 0, 0, 0] };\n    // indexing variables\n    let j, k;\n\n    // Output string\n    const string: string[] = [];\n\n    // Unpack index\n    index = 0;\n\n    // Buffer reference\n    const buffer = this.bytes;\n\n    // Unpack the low 64bits into a long\n    // bits 96 - 127\n    const low =\n      buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n    // bits 64 - 95\n    const midl =\n      buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n    // Unpack the high 64bits into a long\n    // bits 32 - 63\n    const midh =\n      buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n    // bits 0 - 31\n    const high =\n      buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n    // Unpack index\n    index = 0;\n\n    // Create the state of the decimal\n    const dec = {\n      low: new Long(low, midl),\n      high: new Long(midh, high)\n    };\n\n    if (dec.high.lessThan(Long.ZERO)) {\n      string.push('-');\n    }\n\n    // Decode combination field and exponent\n    // bits 1 - 5\n    const combination = (high >> 26) & COMBINATION_MASK;\n\n    if (combination >> 3 === 3) {\n      // Check for 'special' values\n      if (combination === COMBINATION_INFINITY) {\n        return string.join('') + 'Infinity';\n      } else if (combination === COMBINATION_NAN) {\n        return 'NaN';\n      } else {\n        biased_exponent = (high >> 15) & EXPONENT_MASK;\n        significand_msb = 0x08 + ((high >> 14) & 0x01);\n      }\n    } else {\n      significand_msb = (high >> 14) & 0x07;\n      biased_exponent = (high >> 17) & EXPONENT_MASK;\n    }\n\n    // unbiased exponent\n    const exponent = biased_exponent - EXPONENT_BIAS;\n\n    // Create string of significand digits\n\n    // Convert the 114-bit binary number represented by\n    // (significand_high, significand_low) to at most 34 decimal\n    // digits through modulo and division.\n    significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n    significand128.parts[1] = midh;\n    significand128.parts[2] = midl;\n    significand128.parts[3] = low;\n\n    if (\n      significand128.parts[0] === 0 &&\n      significand128.parts[1] === 0 &&\n      significand128.parts[2] === 0 &&\n      significand128.parts[3] === 0\n    ) {\n      is_zero = true;\n    } else {\n      for (k = 3; k >= 0; k--) {\n        let least_digits = 0;\n        // Perform the divide\n        const result = divideu128(significand128);\n        significand128 = result.quotient;\n        least_digits = result.rem.low;\n\n        // We now have the 9 least significant digits (in base 2).\n        // Convert and output to string.\n        if (!least_digits) continue;\n\n        for (j = 8; j >= 0; j--) {\n          // significand[k * 9 + j] = Math.round(least_digits % 10);\n          significand[k * 9 + j] = least_digits % 10;\n          // least_digits = Math.round(least_digits / 10);\n          least_digits = Math.floor(least_digits / 10);\n        }\n      }\n    }\n\n    // Output format options:\n    // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n    // Regular    - ddd.ddd\n\n    if (is_zero) {\n      significand_digits = 1;\n      significand[index] = 0;\n    } else {\n      significand_digits = 36;\n      while (!significand[index]) {\n        significand_digits = significand_digits - 1;\n        index = index + 1;\n      }\n    }\n\n    // the exponent if scientific notation is used\n    const scientific_exponent = significand_digits - 1 + exponent;\n\n    // The scientific exponent checks are dictated by the string conversion\n    // specification and are somewhat arbitrary cutoffs.\n    //\n    // We must check exponent > 0, because if this is the case, the number\n    // has trailing zeros.  However, we *cannot* output these trailing zeros,\n    // because doing so would change the precision of the value, and would\n    // change stored data if the string converted number is round tripped.\n    if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n      // Scientific format\n\n      // if there are too many significant digits, we should just be treating numbers\n      // as + or - 0 and using the non-scientific exponent (this is for the \"invalid\n      // representation should be treated as 0/-0\" spec cases in decimal128-1.json)\n      if (significand_digits > 34) {\n        string.push(`${0}`);\n        if (exponent > 0) string.push(`E+${exponent}`);\n        else if (exponent < 0) string.push(`E${exponent}`);\n        return string.join('');\n      }\n\n      string.push(`${significand[index++]}`);\n      significand_digits = significand_digits - 1;\n\n      if (significand_digits) {\n        string.push('.');\n      }\n\n      for (let i = 0; i < significand_digits; i++) {\n        string.push(`${significand[index++]}`);\n      }\n\n      // Exponent\n      string.push('E');\n      if (scientific_exponent > 0) {\n        string.push(`+${scientific_exponent}`);\n      } else {\n        string.push(`${scientific_exponent}`);\n      }\n    } else {\n      // Regular format with no decimal place\n      if (exponent >= 0) {\n        for (let i = 0; i < significand_digits; i++) {\n          string.push(`${significand[index++]}`);\n        }\n      } else {\n        let radix_position = significand_digits + exponent;\n\n        // non-zero digits before radix\n        if (radix_position > 0) {\n          for (let i = 0; i < radix_position; i++) {\n            string.push(`${significand[index++]}`);\n          }\n        } else {\n          string.push('0');\n        }\n\n        string.push('.');\n        // add leading zeros after radix\n        while (radix_position++ < 0) {\n          string.push('0');\n        }\n\n        for (let i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n          string.push(`${significand[index++]}`);\n        }\n      }\n    }\n\n    return string.join('');\n  }\n\n  toJSON(): Decimal128Extended {\n    return { $numberDecimal: this.toString() };\n  }\n\n  /** @internal */\n  toExtendedJSON(): Decimal128Extended {\n    return { $numberDecimal: this.toString() };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: Decimal128Extended): Decimal128 {\n    return Decimal128.fromString(doc.$numberDecimal);\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return `new Decimal128(\"${this.toString()}\")`;\n  }\n}\n\nObject.defineProperty(Decimal128.prototype, '_bsontype', { value: 'Decimal128' });\n", "import type { EJSONOptions } from './extended_json';\n\n/** @public */\nexport interface DoubleExtended {\n  $numberDouble: string;\n}\n\n/**\n * A class representation of the BSON Double type.\n * @public\n * @category BSONType\n */\nexport class Double {\n  _bsontype!: 'Double';\n\n  value!: number;\n  /**\n   * Create a Double type\n   *\n   * @param value - the number we want to represent as a double.\n   */\n  constructor(value: number) {\n    if (!(this instanceof Double)) return new Double(value);\n\n    if ((value as unknown) instanceof Number) {\n      value = value.valueOf();\n    }\n\n    this.value = +value;\n  }\n\n  /**\n   * Access the number value.\n   *\n   * @returns returns the wrapped double number.\n   */\n  valueOf(): number {\n    return this.value;\n  }\n\n  toJSON(): number {\n    return this.value;\n  }\n\n  toString(radix?: number): string {\n    return this.value.toString(radix);\n  }\n\n  /** @internal */\n  toExtendedJSON(options?: EJSONOptions): number | DoubleExtended {\n    if (options && (options.legacy || (options.relaxed && isFinite(this.value)))) {\n      return this.value;\n    }\n\n    if (Object.is(Math.sign(this.value), -0)) {\n      // NOTE: JavaScript has +0 and -0, apparently to model limit calculations. If a user\n      // explicitly provided `-0` then we need to ensure the sign makes it into the output\n      return { $numberDouble: `-${this.value.toFixed(1)}` };\n    }\n\n    return {\n      $numberDouble: Number.isInteger(this.value) ? this.value.toFixed(1) : this.value.toString()\n    };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: DoubleExtended, options?: EJSONOptions): number | Double {\n    const doubleValue = parseFloat(doc.$numberDouble);\n    return options && options.relaxed ? doubleValue : new Double(doubleValue);\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    const eJSON = this.toExtendedJSON() as DoubleExtended;\n    return `new Double(${eJSON.$numberDouble})`;\n  }\n}\n\nObject.defineProperty(Double.prototype, '_bsontype', { value: 'Double' });\n", "import type { EJSONOptions } from './extended_json';\n\n/** @public */\nexport interface Int32Extended {\n  $numberInt: string;\n}\n\n/**\n * A class representation of a BSON Int32 type.\n * @public\n * @category BSONType\n */\nexport class Int32 {\n  _bsontype!: 'Int32';\n\n  value!: number;\n  /**\n   * Create an Int32 type\n   *\n   * @param value - the number we want to represent as an int32.\n   */\n  constructor(value: number | string) {\n    if (!(this instanceof Int32)) return new Int32(value);\n\n    if ((value as unknown) instanceof Number) {\n      value = value.valueOf();\n    }\n\n    this.value = +value | 0;\n  }\n\n  /**\n   * Access the number value.\n   *\n   * @returns returns the wrapped int32 number.\n   */\n  valueOf(): number {\n    return this.value;\n  }\n\n  toString(radix?: number): string {\n    return this.value.toString(radix);\n  }\n\n  toJSON(): number {\n    return this.value;\n  }\n\n  /** @internal */\n  toExtendedJSON(options?: EJSONOptions): number | Int32Extended {\n    if (options && (options.relaxed || options.legacy)) return this.value;\n    return { $numberInt: this.value.toString() };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: Int32Extended, options?: EJSONOptions): number | Int32 {\n    return options && options.relaxed ? parseInt(doc.$numberInt, 10) : new Int32(doc.$numberInt);\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return `new Int32(${this.valueOf()})`;\n  }\n}\n\nObject.defineProperty(Int32.prototype, '_bsontype', { value: 'Int32' });\n", "/** @public */\nexport interface MaxKeyExtended {\n  $maxKey: 1;\n}\n\n/**\n * A class representation of the BSON MaxKey type.\n * @public\n * @category BSONType\n */\nexport class MaxKey {\n  _bsontype!: 'MaxKey';\n\n  constructor() {\n    if (!(this instanceof MaxKey)) return new MaxKey();\n  }\n\n  /** @internal */\n  toExtendedJSON(): MaxKeyExtended {\n    return { $maxKey: 1 };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(): MaxKey {\n    return new MaxKey();\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return 'new MaxKey()';\n  }\n}\n\nObject.defineProperty(MaxKey.prototype, '_bsontype', { value: 'MaxKey' });\n", "/** @public */\nexport interface MinKeyExtended {\n  $minKey: 1;\n}\n\n/**\n * A class representation of the BSON MinKey type.\n * @public\n * @category BSONType\n */\nexport class MinKey {\n  _bsontype!: 'MinKey';\n\n  constructor() {\n    if (!(this instanceof MinKey)) return new MinKey();\n  }\n\n  /** @internal */\n  toExtendedJSON(): MinKeyExtended {\n    return { $minKey: 1 };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(): MinKey {\n    return new MinKey();\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return 'new MinKey()';\n  }\n}\n\nObject.defineProperty(MinKey.prototype, '_bsontype', { value: 'MinKey' });\n", "import { Buffer } from 'buffer';\nimport { ensureBuffer } from './ensure_buffer';\nimport { BSONTypeError } from './error';\nimport { deprecate, isUint8Array, randomBytes } from './parser/utils';\n\n// Regular expression that checks for hex value\nconst checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\n\n// Unique sequence for the current process (initialized on first use)\nlet PROCESS_UNIQUE: Uint8Array | null = null;\n\n/** @public */\nexport interface ObjectIdLike {\n  id: string | Buffer;\n  __id?: string;\n  toHexString(): string;\n}\n\n/** @public */\nexport interface ObjectIdExtended {\n  $oid: string;\n}\n\nconst kId = Symbol('id');\n\n/**\n * A class representation of the BSON ObjectId type.\n * @public\n * @category BSONType\n */\nexport class ObjectId {\n  _bsontype!: 'ObjectID';\n\n  /** @internal */\n  static index = Math.floor(Math.random() * 0xffffff);\n\n  static cacheHexString: boolean;\n\n  /** ObjectId Bytes @internal */\n  private [kId]!: Buffer;\n  /** ObjectId hexString cache @internal */\n  private __id?: string;\n\n  /**\n   * Create an ObjectId type\n   *\n   * @param inputId - Can be a 24 character hex string, 12 byte binary Buffer, or a number.\n   */\n  constructor(inputId?: string | number | ObjectId | ObjectIdLike | Buffer | Uint8Array) {\n    if (!(this instanceof ObjectId)) return new ObjectId(inputId);\n\n    // workingId is set based on type of input and whether valid id exists for the input\n    let workingId;\n    if (typeof inputId === 'object' && inputId && 'id' in inputId) {\n      if (typeof inputId.id !== 'string' && !ArrayBuffer.isView(inputId.id)) {\n        throw new BSONTypeError(\n          'Argument passed in must have an id that is of type string or Buffer'\n        );\n      }\n      if ('toHexString' in inputId && typeof inputId.toHexString === 'function') {\n        workingId = Buffer.from(inputId.toHexString(), 'hex');\n      } else {\n        workingId = inputId.id;\n      }\n    } else {\n      workingId = inputId;\n    }\n\n    // the following cases use workingId to construct an ObjectId\n    if (workingId == null || typeof workingId === 'number') {\n      // The most common use case (blank id, new objectId instance)\n      // Generate a new id\n      this[kId] = ObjectId.generate(typeof workingId === 'number' ? workingId : undefined);\n    } else if (ArrayBuffer.isView(workingId) && workingId.byteLength === 12) {\n      // If intstanceof matches we can escape calling ensure buffer in Node.js environments\n      this[kId] = workingId instanceof Buffer ? workingId : ensureBuffer(workingId);\n    } else if (typeof workingId === 'string') {\n      if (workingId.length === 12) {\n        const bytes = Buffer.from(workingId);\n        if (bytes.byteLength === 12) {\n          this[kId] = bytes;\n        } else {\n          throw new BSONTypeError('Argument passed in must be a string of 12 bytes');\n        }\n      } else if (workingId.length === 24 && checkForHexRegExp.test(workingId)) {\n        this[kId] = Buffer.from(workingId, 'hex');\n      } else {\n        throw new BSONTypeError(\n          'Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer'\n        );\n      }\n    } else {\n      throw new BSONTypeError('Argument passed in does not match the accepted types');\n    }\n    // If we are caching the hex string\n    if (ObjectId.cacheHexString) {\n      this.__id = this.id.toString('hex');\n    }\n  }\n\n  /**\n   * The ObjectId bytes\n   * @readonly\n   */\n  get id(): Buffer {\n    return this[kId];\n  }\n\n  set id(value: Buffer) {\n    this[kId] = value;\n    if (ObjectId.cacheHexString) {\n      this.__id = value.toString('hex');\n    }\n  }\n\n  /**\n   * The generation time of this ObjectId instance\n   * @deprecated Please use getTimestamp / createFromTime which returns an int32 epoch\n   */\n  get generationTime(): number {\n    return this.id.readInt32BE(0);\n  }\n\n  set generationTime(value: number) {\n    // Encode time into first 4 bytes\n    this.id.writeUInt32BE(value, 0);\n  }\n\n  /** Returns the ObjectId id as a 24 character hex string representation */\n  toHexString(): string {\n    if (ObjectId.cacheHexString && this.__id) {\n      return this.__id;\n    }\n\n    const hexString = this.id.toString('hex');\n\n    if (ObjectId.cacheHexString && !this.__id) {\n      this.__id = hexString;\n    }\n\n    return hexString;\n  }\n\n  /**\n   * Update the ObjectId index\n   * @privateRemarks\n   * Used in generating new ObjectId's on the driver\n   * @internal\n   */\n  static getInc(): number {\n    return (ObjectId.index = (ObjectId.index + 1) % 0xffffff);\n  }\n\n  /**\n   * Generate a 12 byte id buffer used in ObjectId's\n   *\n   * @param time - pass in a second based timestamp.\n   */\n  static generate(time?: number): Buffer {\n    if ('number' !== typeof time) {\n      time = Math.floor(Date.now() / 1000);\n    }\n\n    const inc = ObjectId.getInc();\n    const buffer = Buffer.alloc(12);\n\n    // 4-byte timestamp\n    buffer.writeUInt32BE(time, 0);\n\n    // set PROCESS_UNIQUE if yet not initialized\n    if (PROCESS_UNIQUE === null) {\n      PROCESS_UNIQUE = randomBytes(5);\n    }\n\n    // 5-byte process unique\n    buffer[4] = PROCESS_UNIQUE[0];\n    buffer[5] = PROCESS_UNIQUE[1];\n    buffer[6] = PROCESS_UNIQUE[2];\n    buffer[7] = PROCESS_UNIQUE[3];\n    buffer[8] = PROCESS_UNIQUE[4];\n\n    // 3-byte counter\n    buffer[11] = inc & 0xff;\n    buffer[10] = (inc >> 8) & 0xff;\n    buffer[9] = (inc >> 16) & 0xff;\n\n    return buffer;\n  }\n\n  /**\n   * Converts the id into a 24 character hex string for printing\n   *\n   * @param format - The Buffer toString format parameter.\n   */\n  toString(format?: string): string {\n    // Is the id a buffer then use the buffer toString method to return the format\n    if (format) return this.id.toString(format);\n    return this.toHexString();\n  }\n\n  /** Converts to its JSON the 24 character hex string representation. */\n  toJSON(): string {\n    return this.toHexString();\n  }\n\n  /**\n   * Compares the equality of this ObjectId with `otherID`.\n   *\n   * @param otherId - ObjectId instance to compare against.\n   */\n  equals(otherId: string | ObjectId | ObjectIdLike): boolean {\n    if (otherId === undefined || otherId === null) {\n      return false;\n    }\n\n    if (otherId instanceof ObjectId) {\n      return this[kId][11] === otherId[kId][11] && this[kId].equals(otherId[kId]);\n    }\n\n    if (\n      typeof otherId === 'string' &&\n      ObjectId.isValid(otherId) &&\n      otherId.length === 12 &&\n      isUint8Array(this.id)\n    ) {\n      return otherId === Buffer.prototype.toString.call(this.id, 'latin1');\n    }\n\n    if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 24) {\n      return otherId.toLowerCase() === this.toHexString();\n    }\n\n    if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 12) {\n      return Buffer.from(otherId).equals(this.id);\n    }\n\n    if (\n      typeof otherId === 'object' &&\n      'toHexString' in otherId &&\n      typeof otherId.toHexString === 'function'\n    ) {\n      const otherIdString = otherId.toHexString();\n      const thisIdString = this.toHexString().toLowerCase();\n      return typeof otherIdString === 'string' && otherIdString.toLowerCase() === thisIdString;\n    }\n\n    return false;\n  }\n\n  /** Returns the generation date (accurate up to the second) that this ID was generated. */\n  getTimestamp(): Date {\n    const timestamp = new Date();\n    const time = this.id.readUInt32BE(0);\n    timestamp.setTime(Math.floor(time) * 1000);\n    return timestamp;\n  }\n\n  /** @internal */\n  static createPk(): ObjectId {\n    return new ObjectId();\n  }\n\n  /**\n   * Creates an ObjectId from a second based number, with the rest of the ObjectId zeroed out. Used for comparisons or sorting the ObjectId.\n   *\n   * @param time - an integer number representing a number of seconds.\n   */\n  static createFromTime(time: number): ObjectId {\n    const buffer = Buffer.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    // Encode time into first 4 bytes\n    buffer.writeUInt32BE(time, 0);\n    // Return the new objectId\n    return new ObjectId(buffer);\n  }\n\n  /**\n   * Creates an ObjectId from a hex string representation of an ObjectId.\n   *\n   * @param hexString - create a ObjectId from a passed in 24 character hexstring.\n   */\n  static createFromHexString(hexString: string): ObjectId {\n    // Throw an error if it's not a valid setup\n    if (typeof hexString === 'undefined' || (hexString != null && hexString.length !== 24)) {\n      throw new BSONTypeError(\n        'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n      );\n    }\n\n    return new ObjectId(Buffer.from(hexString, 'hex'));\n  }\n\n  /**\n   * Checks if a value is a valid bson ObjectId\n   *\n   * @param id - ObjectId instance to validate.\n   */\n  static isValid(id: string | number | ObjectId | ObjectIdLike | Buffer | Uint8Array): boolean {\n    if (id == null) return false;\n\n    try {\n      new ObjectId(id);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /** @internal */\n  toExtendedJSON(): ObjectIdExtended {\n    if (this.toHexString) return { $oid: this.toHexString() };\n    return { $oid: this.toString('hex') };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: ObjectIdExtended): ObjectId {\n    return new ObjectId(doc.$oid);\n  }\n\n  /**\n   * Converts to a string representation of this Id.\n   *\n   * @returns return the 24 character hex string representation.\n   * @internal\n   */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return `new ObjectId(\"${this.toHexString()}\")`;\n  }\n}\n\n// Deprecated methods\nObject.defineProperty(ObjectId.prototype, 'generate', {\n  value: deprecate(\n    (time: number) => ObjectId.generate(time),\n    'Please use the static `ObjectId.generate(time)` instead'\n  )\n});\n\nObject.defineProperty(ObjectId.prototype, 'getInc', {\n  value: deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n});\n\nObject.defineProperty(ObjectId.prototype, 'get_inc', {\n  value: deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n});\n\nObject.defineProperty(ObjectId, 'get_inc', {\n  value: deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n});\n\nObject.defineProperty(ObjectId.prototype, '_bsontype', { value: 'ObjectID' });\n", "import { BSONError, BSONTypeError } from './error';\nimport type { EJSONOptions } from './extended_json';\n\nfunction alphabetize(str: string): string {\n  return str.split('').sort().join('');\n}\n\n/** @public */\nexport interface BSONRegExpExtendedLegacy {\n  $regex: string | BSONRegExp;\n  $options: string;\n}\n\n/** @public */\nexport interface BSONRegExpExtended {\n  $regularExpression: {\n    pattern: string;\n    options: string;\n  };\n}\n\n/**\n * A class representation of the BSON RegExp type.\n * @public\n * @category BSONType\n */\nexport class BSONRegExp {\n  _bsontype!: 'BSONRegExp';\n\n  pattern!: string;\n  options!: string;\n  /**\n   * @param pattern - The regular expression pattern to match\n   * @param options - The regular expression options\n   */\n  constructor(pattern: string, options?: string) {\n    if (!(this instanceof BSONRegExp)) return new BSONRegExp(pattern, options);\n\n    this.pattern = pattern;\n    this.options = alphabetize(options ?? '');\n\n    if (this.pattern.indexOf('\\x00') !== -1) {\n      throw new BSONError(\n        `BSON Regex patterns cannot contain null bytes, found: ${JSON.stringify(this.pattern)}`\n      );\n    }\n    if (this.options.indexOf('\\x00') !== -1) {\n      throw new BSONError(\n        `BSON Regex options cannot contain null bytes, found: ${JSON.stringify(this.options)}`\n      );\n    }\n\n    // Validate options\n    for (let i = 0; i < this.options.length; i++) {\n      if (\n        !(\n          this.options[i] === 'i' ||\n          this.options[i] === 'm' ||\n          this.options[i] === 'x' ||\n          this.options[i] === 'l' ||\n          this.options[i] === 's' ||\n          this.options[i] === 'u'\n        )\n      ) {\n        throw new BSONError(`The regular expression option [${this.options[i]}] is not supported`);\n      }\n    }\n  }\n\n  static parseOptions(options?: string): string {\n    return options ? options.split('').sort().join('') : '';\n  }\n\n  /** @internal */\n  toExtendedJSON(options?: EJSONOptions): BSONRegExpExtendedLegacy | BSONRegExpExtended {\n    options = options || {};\n    if (options.legacy) {\n      return { $regex: this.pattern, $options: this.options };\n    }\n    return { $regularExpression: { pattern: this.pattern, options: this.options } };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: BSONRegExpExtendedLegacy | BSONRegExpExtended): BSONRegExp {\n    if ('$regex' in doc) {\n      if (typeof doc.$regex !== 'string') {\n        // This is for $regex query operators that have extended json values.\n        if (doc.$regex._bsontype === 'BSONRegExp') {\n          return doc as unknown as BSONRegExp;\n        }\n      } else {\n        return new BSONRegExp(doc.$regex, BSONRegExp.parseOptions(doc.$options));\n      }\n    }\n    if ('$regularExpression' in doc) {\n      return new BSONRegExp(\n        doc.$regularExpression.pattern,\n        BSONRegExp.parseOptions(doc.$regularExpression.options)\n      );\n    }\n    throw new BSONTypeError(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(doc)}`);\n  }\n}\n\nObject.defineProperty(BSONRegExp.prototype, '_bsontype', { value: 'BSONRegExp' });\n", "/** @public */\nexport interface BSONSymbolExtended {\n  $symbol: string;\n}\n\n/**\n * A class representation of the BSON Symbol type.\n * @public\n * @category BSONType\n */\nexport class BSONSymbol {\n  _bsontype!: 'Symbol';\n\n  value!: string;\n  /**\n   * @param value - the string representing the symbol.\n   */\n  constructor(value: string) {\n    if (!(this instanceof BSONSymbol)) return new BSONSymbol(value);\n\n    this.value = value;\n  }\n\n  /** Access the wrapped string value. */\n  valueOf(): string {\n    return this.value;\n  }\n\n  toString(): string {\n    return this.value;\n  }\n\n  /** @internal */\n  inspect(): string {\n    return `new BSONSymbol(\"${this.value}\")`;\n  }\n\n  toJSON(): string {\n    return this.value;\n  }\n\n  /** @internal */\n  toExtendedJSON(): BSONSymbolExtended {\n    return { $symbol: this.value };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: BSONSymbolExtended): BSONSymbol {\n    return new BSONSymbol(doc.$symbol);\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n}\n\nObject.defineProperty(BSONSymbol.prototype, '_bsontype', { value: 'Symbol' });\n", "import { Long } from './long';\nimport { isObjectLike } from './parser/utils';\n\n/** @public */\nexport type TimestampOverrides = '_bsontype' | 'toExtendedJSON' | 'fromExtendedJSON' | 'inspect';\n/** @public */\nexport type LongWithoutOverrides = new (low: unknown, high?: number, unsigned?: boolean) => {\n  [P in Exclude<keyof Long, TimestampOverrides>]: Long[P];\n};\n/** @public */\nexport const LongWithoutOverridesClass: LongWithoutOverrides =\n  Long as unknown as LongWithoutOverrides;\n\n/** @public */\nexport interface TimestampExtended {\n  $timestamp: {\n    t: number;\n    i: number;\n  };\n}\n\n/**\n * @public\n * @category BSONType\n * */\nexport class Timestamp extends LongWithoutOverridesClass {\n  _bsontype!: 'Timestamp';\n\n  static readonly MAX_VALUE = Long.MAX_UNSIGNED_VALUE;\n\n  /**\n   * @param low - A 64-bit Long representing the Timestamp.\n   */\n  constructor(long: Long);\n  /**\n   * @param value - A pair of two values indicating timestamp and increment.\n   */\n  constructor(value: { t: number; i: number });\n  /**\n   * @param low - the low (signed) 32 bits of the Timestamp.\n   * @param high - the high (signed) 32 bits of the Timestamp.\n   * @deprecated Please use `Timestamp({ t: high, i: low })` or `Timestamp(Long(low, high))` instead.\n   */\n  constructor(low: number, high: number);\n  constructor(low: number | Long | { t: number; i: number }, high?: number) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    if (!(this instanceof Timestamp)) return new Timestamp(low, high);\n\n    if (Long.isLong(low)) {\n      super(low.low, low.high, true);\n    } else if (isObjectLike(low) && typeof low.t !== 'undefined' && typeof low.i !== 'undefined') {\n      super(low.i, low.t, true);\n    } else {\n      super(low, high, true);\n    }\n    Object.defineProperty(this, '_bsontype', {\n      value: 'Timestamp',\n      writable: false,\n      configurable: false,\n      enumerable: false\n    });\n  }\n\n  toJSON(): { $timestamp: string } {\n    return {\n      $timestamp: this.toString()\n    };\n  }\n\n  /** Returns a Timestamp represented by the given (32-bit) integer value. */\n  static fromInt(value: number): Timestamp {\n    return new Timestamp(Long.fromInt(value, true));\n  }\n\n  /** Returns a Timestamp representing the given number value, provided that it is a finite number. Otherwise, zero is returned. */\n  static fromNumber(value: number): Timestamp {\n    return new Timestamp(Long.fromNumber(value, true));\n  }\n\n  /**\n   * Returns a Timestamp for the given high and low bits. Each is assumed to use 32 bits.\n   *\n   * @param lowBits - the low 32-bits.\n   * @param highBits - the high 32-bits.\n   */\n  static fromBits(lowBits: number, highBits: number): Timestamp {\n    return new Timestamp(lowBits, highBits);\n  }\n\n  /**\n   * Returns a Timestamp from the given string, optionally using the given radix.\n   *\n   * @param str - the textual representation of the Timestamp.\n   * @param optRadix - the radix in which the text is written.\n   */\n  static fromString(str: string, optRadix: number): Timestamp {\n    return new Timestamp(Long.fromString(str, true, optRadix));\n  }\n\n  /** @internal */\n  toExtendedJSON(): TimestampExtended {\n    return { $timestamp: { t: this.high >>> 0, i: this.low >>> 0 } };\n  }\n\n  /** @internal */\n  static fromExtendedJSON(doc: TimestampExtended): Timestamp {\n    return new Timestamp(doc.$timestamp);\n  }\n\n  /** @internal */\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.inspect();\n  }\n\n  inspect(): string {\n    return `new Timestamp({ t: ${this.getHighBits()}, i: ${this.getLowBits()} })`;\n  }\n}\n", "import { Binary } from './binary';\nimport type { Document } from './bson';\nimport { Code } from './code';\nimport { DBRef, isDBRefLike } from './db_ref';\nimport { Decimal128 } from './decimal128';\nimport { Double } from './double';\nimport { BSONError, BSONTypeError } from './error';\nimport { Int32 } from './int_32';\nimport { Long } from './long';\nimport { MaxKey } from './max_key';\nimport { MinKey } from './min_key';\nimport { ObjectId } from './objectid';\nimport { isDate, isObjectLike, isRegExp } from './parser/utils';\nimport { BSONRegExp } from './regexp';\nimport { BSONSymbol } from './symbol';\nimport { Timestamp } from './timestamp';\n\n/** @public */\nexport type EJSONOptions = EJSON.Options;\n\n/** @internal */\ntype BSONType =\n  | Binary\n  | Code\n  | DBRef\n  | Decimal128\n  | Double\n  | Int32\n  | Long\n  | MaxKey\n  | MinKey\n  | ObjectId\n  | BSONRegExp\n  | BSONSymbol\n  | Timestamp;\n\nexport function isBSONType(value: unknown): value is BSONType {\n  return (\n    isObjectLike(value) && Reflect.has(value, '_bsontype') && typeof value._bsontype === 'string'\n  );\n}\n\n// INT32 boundaries\nconst BSON_INT32_MAX = 0x7fffffff;\nconst BSON_INT32_MIN = -0x80000000;\n// INT64 boundaries\n// const BSON_INT64_MAX = 0x7fffffffffffffff; // TODO(NODE-4377): This number cannot be precisely represented in JS\nconst BSON_INT64_MAX = 0x8000000000000000;\nconst BSON_INT64_MIN = -0x8000000000000000;\n\n// all the types where we don't need to do any special processing and can just pass the EJSON\n//straight to type.fromExtendedJSON\nconst keysToCodecs = {\n  $oid: ObjectId,\n  $binary: Binary,\n  $uuid: Binary,\n  $symbol: BSONSymbol,\n  $numberInt: Int32,\n  $numberDecimal: Decimal128,\n  $numberDouble: Double,\n  $numberLong: Long,\n  $minKey: MinKey,\n  $maxKey: MaxKey,\n  $regex: BSONRegExp,\n  $regularExpression: BSONRegExp,\n  $timestamp: Timestamp\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction deserializeValue(value: any, options: EJSON.Options = {}) {\n  if (typeof value === 'number') {\n    if (options.relaxed || options.legacy) {\n      return value;\n    }\n\n    // if it's an integer, should interpret as smallest BSON integer\n    // that can represent it exactly. (if out of range, interpret as double.)\n    if (Math.floor(value) === value) {\n      if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) return new Int32(value);\n      if (value >= BSON_INT64_MIN && value <= BSON_INT64_MAX) return Long.fromNumber(value);\n    }\n\n    // If the number is a non-integer or out of integer range, should interpret as BSON Double.\n    return new Double(value);\n  }\n\n  // from here on out we're looking for bson types, so bail if its not an object\n  if (value == null || typeof value !== 'object') return value;\n\n  // upgrade deprecated undefined to null\n  if (value.$undefined) return null;\n\n  const keys = Object.keys(value).filter(\n    k => k.startsWith('$') && value[k] != null\n  ) as (keyof typeof keysToCodecs)[];\n  for (let i = 0; i < keys.length; i++) {\n    const c = keysToCodecs[keys[i]];\n    if (c) return c.fromExtendedJSON(value, options);\n  }\n\n  if (value.$date != null) {\n    const d = value.$date;\n    const date = new Date();\n\n    if (options.legacy) {\n      if (typeof d === 'number') date.setTime(d);\n      else if (typeof d === 'string') date.setTime(Date.parse(d));\n    } else {\n      if (typeof d === 'string') date.setTime(Date.parse(d));\n      else if (Long.isLong(d)) date.setTime(d.toNumber());\n      else if (typeof d === 'number' && options.relaxed) date.setTime(d);\n    }\n    return date;\n  }\n\n  if (value.$code != null) {\n    const copy = Object.assign({}, value);\n    if (value.$scope) {\n      copy.$scope = deserializeValue(value.$scope);\n    }\n\n    return Code.fromExtendedJSON(value);\n  }\n\n  if (isDBRefLike(value) || value.$dbPointer) {\n    const v = value.$ref ? value : value.$dbPointer;\n\n    // we run into this in a \"degenerate EJSON\" case (with $id and $ref order flipped)\n    // because of the order JSON.parse goes through the document\n    if (v instanceof DBRef) return v;\n\n    const dollarKeys = Object.keys(v).filter(k => k.startsWith('$'));\n    let valid = true;\n    dollarKeys.forEach(k => {\n      if (['$ref', '$id', '$db'].indexOf(k) === -1) valid = false;\n    });\n\n    // only make DBRef if $ keys are all valid\n    if (valid) return DBRef.fromExtendedJSON(v);\n  }\n\n  return value;\n}\n\ntype EJSONSerializeOptions = EJSON.Options & {\n  seenObjects: { obj: unknown; propertyName: string }[];\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeArray(array: any[], options: EJSONSerializeOptions): any[] {\n  return array.map((v: unknown, index: number) => {\n    options.seenObjects.push({ propertyName: `index ${index}`, obj: null });\n    try {\n      return serializeValue(v, options);\n    } finally {\n      options.seenObjects.pop();\n    }\n  });\n}\n\nfunction getISOString(date: Date) {\n  const isoStr = date.toISOString();\n  // we should only show milliseconds in timestamp if they're non-zero\n  return date.getUTCMilliseconds() !== 0 ? isoStr : isoStr.slice(0, -5) + 'Z';\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeValue(value: any, options: EJSONSerializeOptions): any {\n  if ((typeof value === 'object' || typeof value === 'function') && value !== null) {\n    const index = options.seenObjects.findIndex(entry => entry.obj === value);\n    if (index !== -1) {\n      const props = options.seenObjects.map(entry => entry.propertyName);\n      const leadingPart = props\n        .slice(0, index)\n        .map(prop => `${prop} -> `)\n        .join('');\n      const alreadySeen = props[index];\n      const circularPart =\n        ' -> ' +\n        props\n          .slice(index + 1, props.length - 1)\n          .map(prop => `${prop} -> `)\n          .join('');\n      const current = props[props.length - 1];\n      const leadingSpace = ' '.repeat(leadingPart.length + alreadySeen.length / 2);\n      const dashes = '-'.repeat(\n        circularPart.length + (alreadySeen.length + current.length) / 2 - 1\n      );\n\n      throw new BSONTypeError(\n        'Converting circular structure to EJSON:\\n' +\n          `    ${leadingPart}${alreadySeen}${circularPart}${current}\\n` +\n          `    ${leadingSpace}\\\\${dashes}/`\n      );\n    }\n    options.seenObjects[options.seenObjects.length - 1].obj = value;\n  }\n\n  if (Array.isArray(value)) return serializeArray(value, options);\n\n  if (value === undefined) return null;\n\n  if (value instanceof Date || isDate(value)) {\n    const dateNum = value.getTime(),\n      // is it in year range 1970-9999?\n      inRange = dateNum > -1 && dateNum < 253402318800000;\n\n    if (options.legacy) {\n      return options.relaxed && inRange\n        ? { $date: value.getTime() }\n        : { $date: getISOString(value) };\n    }\n    return options.relaxed && inRange\n      ? { $date: getISOString(value) }\n      : { $date: { $numberLong: value.getTime().toString() } };\n  }\n\n  if (typeof value === 'number' && (!options.relaxed || !isFinite(value))) {\n    // it's an integer\n    if (Math.floor(value) === value) {\n      const int32Range = value >= BSON_INT32_MIN && value <= BSON_INT32_MAX,\n        int64Range = value >= BSON_INT64_MIN && value <= BSON_INT64_MAX;\n\n      // interpret as being of the smallest BSON integer type that can represent the number exactly\n      if (int32Range) return { $numberInt: value.toString() };\n      if (int64Range) return { $numberLong: value.toString() };\n    }\n    return { $numberDouble: value.toString() };\n  }\n\n  if (value instanceof RegExp || isRegExp(value)) {\n    let flags = value.flags;\n    if (flags === undefined) {\n      const match = value.toString().match(/[gimuy]*$/);\n      if (match) {\n        flags = match[0];\n      }\n    }\n\n    const rx = new BSONRegExp(value.source, flags);\n    return rx.toExtendedJSON(options);\n  }\n\n  if (value != null && typeof value === 'object') return serializeDocument(value, options);\n  return value;\n}\n\nconst BSON_TYPE_MAPPINGS = {\n  Binary: (o: Binary) => new Binary(o.value(), o.sub_type),\n  Code: (o: Code) => new Code(o.code, o.scope),\n  DBRef: (o: DBRef) => new DBRef(o.collection || o.namespace, o.oid, o.db, o.fields), // \"namespace\" for 1.x library backwards compat\n  Decimal128: (o: Decimal128) => new Decimal128(o.bytes),\n  Double: (o: Double) => new Double(o.value),\n  Int32: (o: Int32) => new Int32(o.value),\n  Long: (\n    o: Long & {\n      low_: number;\n      high_: number;\n      unsigned_: boolean | undefined;\n    }\n  ) =>\n    Long.fromBits(\n      // underscore variants for 1.x backwards compatibility\n      o.low != null ? o.low : o.low_,\n      o.low != null ? o.high : o.high_,\n      o.low != null ? o.unsigned : o.unsigned_\n    ),\n  MaxKey: () => new MaxKey(),\n  MinKey: () => new MinKey(),\n  ObjectID: (o: ObjectId) => new ObjectId(o),\n  ObjectId: (o: ObjectId) => new ObjectId(o), // support 4.0.0/4.0.1 before _bsontype was reverted back to ObjectID\n  BSONRegExp: (o: BSONRegExp) => new BSONRegExp(o.pattern, o.options),\n  Symbol: (o: BSONSymbol) => new BSONSymbol(o.value),\n  Timestamp: (o: Timestamp) => Timestamp.fromBits(o.low, o.high)\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeDocument(doc: any, options: EJSONSerializeOptions) {\n  if (doc == null || typeof doc !== 'object') throw new BSONError('not an object instance');\n\n  const bsontype: BSONType['_bsontype'] = doc._bsontype;\n  if (typeof bsontype === 'undefined') {\n    // It's a regular object. Recursively serialize its property values.\n    const _doc: Document = {};\n    for (const name in doc) {\n      options.seenObjects.push({ propertyName: name, obj: null });\n      try {\n        const value = serializeValue(doc[name], options);\n        if (name === '__proto__') {\n          Object.defineProperty(_doc, name, {\n            value,\n            writable: true,\n            enumerable: true,\n            configurable: true\n          });\n        } else {\n          _doc[name] = value;\n        }\n      } finally {\n        options.seenObjects.pop();\n      }\n    }\n    return _doc;\n  } else if (isBSONType(doc)) {\n    // the \"document\" is really just a BSON type object\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let outDoc: any = doc;\n    if (typeof outDoc.toExtendedJSON !== 'function') {\n      // There's no EJSON serialization function on the object. It's probably an\n      // object created by a previous version of this library (or another library)\n      // that's duck-typing objects to look like they were generated by this library).\n      // Copy the object into this library's version of that type.\n      const mapper = BSON_TYPE_MAPPINGS[doc._bsontype];\n      if (!mapper) {\n        throw new BSONTypeError('Unrecognized or invalid _bsontype: ' + doc._bsontype);\n      }\n      outDoc = mapper(outDoc);\n    }\n\n    // Two BSON types may have nested objects that may need to be serialized too\n    if (bsontype === 'Code' && outDoc.scope) {\n      outDoc = new Code(outDoc.code, serializeValue(outDoc.scope, options));\n    } else if (bsontype === 'DBRef' && outDoc.oid) {\n      outDoc = new DBRef(\n        serializeValue(outDoc.collection, options),\n        serializeValue(outDoc.oid, options),\n        serializeValue(outDoc.db, options),\n        serializeValue(outDoc.fields, options)\n      );\n    }\n\n    return outDoc.toExtendedJSON(options);\n  } else {\n    throw new BSONError('_bsontype must be a string, but was: ' + typeof bsontype);\n  }\n}\n\n/**\n * EJSON parse / stringify API\n * @public\n */\n// the namespace here is used to emulate `export * as EJSON from '...'`\n// which as of now (sept 2020) api-extractor does not support\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace EJSON {\n  export interface Options {\n    /** Output using the Extended JSON v1 spec */\n    legacy?: boolean;\n    /** Enable Extended JSON's `relaxed` mode, which attempts to return native JS types where possible, rather than BSON types */\n    relaxed?: boolean;\n    /**\n     * Disable Extended JSON's `relaxed` mode, which attempts to return BSON types where possible, rather than native JS types\n     * @deprecated Please use the relaxed property instead\n     */\n    strict?: boolean;\n  }\n\n  /**\n   * Parse an Extended JSON string, constructing the JavaScript value or object described by that\n   * string.\n   *\n   * @example\n   * ```js\n   * const { EJSON } = require('bson');\n   * const text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n   *\n   * // prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\n   * console.log(EJSON.parse(text, { relaxed: false }));\n   *\n   * // prints { int32: 10 }\n   * console.log(EJSON.parse(text));\n   * ```\n   */\n  export function parse(text: string, options?: EJSON.Options): SerializableTypes {\n    const finalOptions = Object.assign({}, { relaxed: true, legacy: false }, options);\n\n    // relaxed implies not strict\n    if (typeof finalOptions.relaxed === 'boolean') finalOptions.strict = !finalOptions.relaxed;\n    if (typeof finalOptions.strict === 'boolean') finalOptions.relaxed = !finalOptions.strict;\n\n    return JSON.parse(text, (key, value) => {\n      if (key.indexOf('\\x00') !== -1) {\n        throw new BSONError(\n          `BSON Document field names cannot contain null bytes, found: ${JSON.stringify(key)}`\n        );\n      }\n      return deserializeValue(value, finalOptions);\n    });\n  }\n\n  export type JSONPrimitive = string | number | boolean | null;\n  export type SerializableTypes = Document | Array<JSONPrimitive | Document> | JSONPrimitive;\n\n  /**\n   * Converts a BSON document to an Extended JSON string, optionally replacing values if a replacer\n   * function is specified or optionally including only the specified properties if a replacer array\n   * is specified.\n   *\n   * @param value - The value to convert to extended JSON\n   * @param replacer - A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string\n   * @param space - A String or Number object that's used to insert white space into the output JSON string for readability purposes.\n   * @param options - Optional settings\n   *\n   * @example\n   * ```js\n   * const { EJSON } = require('bson');\n   * const Int32 = require('mongodb').Int32;\n   * const doc = { int32: new Int32(10) };\n   *\n   * // prints '{\"int32\":{\"$numberInt\":\"10\"}}'\n   * console.log(EJSON.stringify(doc, { relaxed: false }));\n   *\n   * // prints '{\"int32\":10}'\n   * console.log(EJSON.stringify(doc));\n   * ```\n   */\n  export function stringify(\n    value: SerializableTypes,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    replacer?: (number | string)[] | ((this: any, key: string, value: any) => any) | EJSON.Options,\n    space?: string | number,\n    options?: EJSON.Options\n  ): string {\n    if (space != null && typeof space === 'object') {\n      options = space;\n      space = 0;\n    }\n    if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n      options = replacer;\n      replacer = undefined;\n      space = 0;\n    }\n    const serializeOptions = Object.assign({ relaxed: true, legacy: false }, options, {\n      seenObjects: [{ propertyName: '(root)', obj: null }]\n    });\n\n    const doc = serializeValue(value, serializeOptions);\n    return JSON.stringify(doc, replacer as Parameters<JSON['stringify']>[1], space);\n  }\n\n  /**\n   * Serializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n   *\n   * @param value - The object to serialize\n   * @param options - Optional settings passed to the `stringify` function\n   */\n  export function serialize(value: SerializableTypes, options?: EJSON.Options): Document {\n    options = options || {};\n    return JSON.parse(stringify(value, options));\n  }\n\n  /**\n   * Deserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n   *\n   * @param ejson - The Extended JSON object to deserialize\n   * @param options - Optional settings passed to the parse method\n   */\n  export function deserialize(ejson: Document, options?: EJSON.Options): SerializableTypes {\n    options = options || {};\n    return parse(JSON.stringify(ejson), options);\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n// We have an ES6 Map available, return the native instance\n\nimport { getGlobal } from './utils/global';\n\n/** @public */\nlet bsonMap: MapConstructor;\n\nconst bsonGlobal = getGlobal<{ Map?: MapConstructor }>();\nif (bsonGlobal.Map) {\n  bsonMap = bsonGlobal.Map;\n} else {\n  // We will return a polyfill\n  bsonMap = class Map {\n    private _keys: string[];\n    private _values: Record<string, any>;\n    constructor(array: [string, any][] = []) {\n      this._keys = [];\n      this._values = {};\n\n      for (let i = 0; i < array.length; i++) {\n        if (array[i] == null) continue; // skip null and undefined\n        const entry = array[i];\n        const key = entry[0];\n        const value = entry[1];\n        // Add the key to the list of keys in order\n        this._keys.push(key);\n        // Add the key and value to the values dictionary with a point\n        // to the location in the ordered keys list\n        this._values[key] = { v: value, i: this._keys.length - 1 };\n      }\n    }\n    clear() {\n      this._keys = [];\n      this._values = {};\n    }\n    delete(key: string) {\n      const value = this._values[key];\n      if (value == null) return false;\n      // Delete entry\n      delete this._values[key];\n      // Remove the key from the ordered keys list\n      this._keys.splice(value.i, 1);\n      return true;\n    }\n    entries() {\n      let index = 0;\n\n      return {\n        next: () => {\n          const key = this._keys[index++];\n          return {\n            value: key !== undefined ? [key, this._values[key].v] : undefined,\n            done: key !== undefined ? false : true\n          };\n        }\n      };\n    }\n    forEach(callback: (this: this, value: any, key: string, self: this) => void, self?: this) {\n      self = self || this;\n\n      for (let i = 0; i < this._keys.length; i++) {\n        const key = this._keys[i];\n        // Call the forEach callback\n        callback.call(self, this._values[key].v, key, self);\n      }\n    }\n    get(key: string) {\n      return this._values[key] ? this._values[key].v : undefined;\n    }\n    has(key: string) {\n      return this._values[key] != null;\n    }\n    keys() {\n      let index = 0;\n\n      return {\n        next: () => {\n          const key = this._keys[index++];\n          return {\n            value: key !== undefined ? key : undefined,\n            done: key !== undefined ? false : true\n          };\n        }\n      };\n    }\n    set(key: string, value: any) {\n      if (this._values[key]) {\n        this._values[key].v = value;\n        return this;\n      }\n\n      // Add the key to the list of keys in order\n      this._keys.push(key);\n      // Add the key and value to the values dictionary with a point\n      // to the location in the ordered keys list\n      this._values[key] = { v: value, i: this._keys.length - 1 };\n      return this;\n    }\n    values() {\n      let index = 0;\n\n      return {\n        next: () => {\n          const key = this._keys[index++];\n          return {\n            value: key !== undefined ? this._values[key].v : undefined,\n            done: key !== undefined ? false : true\n          };\n        }\n      };\n    }\n    get size() {\n      return this._keys.length;\n    }\n  } as unknown as MapConstructor;\n}\n\nexport { bsonMap as Map };\n", "import { Buffer } from 'buffer';\nimport { Binary } from '../binary';\nimport type { Document } from '../bson';\nimport * as constants from '../constants';\nimport { isAnyArrayBuffer, isDate, isRegExp, normalizedFunctionString } from './utils';\n\nexport function calculateObjectSize(\n  object: Document,\n  serializeFunctions?: boolean,\n  ignoreUndefined?: boolean\n): number {\n  let totalLength = 4 + 1;\n\n  if (Array.isArray(object)) {\n    for (let i = 0; i < object.length; i++) {\n      totalLength += calculateElement(\n        i.toString(),\n        object[i],\n        serializeFunctions,\n        true,\n        ignoreUndefined\n      );\n    }\n  } else {\n    // If we have toBSON defined, override the current object\n\n    if (typeof object?.toBSON === 'function') {\n      object = object.toBSON();\n    }\n\n    // Calculate size\n    for (const key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n    }\n  }\n\n  return totalLength;\n}\n\n/** @internal */\nfunction calculateElement(\n  name: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any,\n  serializeFunctions = false,\n  isArray = false,\n  ignoreUndefined = false\n) {\n  // If we have toBSON defined, override the current object\n  if (typeof value?.toBSON === 'function') {\n    value = value.toBSON();\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;\n    case 'number':\n      if (\n        Math.floor(value) === value &&\n        value >= constants.JS_INT_MIN &&\n        value <= constants.JS_INT_MAX\n      ) {\n        if (value >= constants.BSON_INT32_MIN && value <= constants.BSON_INT32_MAX) {\n          // 32 bit\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        }\n      } else {\n        // 64 bit\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      }\n    case 'undefined':\n      if (isArray || !ignoreUndefined)\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      return 0;\n    case 'boolean':\n      return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n    case 'object':\n      if (value == null || value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      } else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n      } else if (value instanceof Date || isDate(value)) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (\n        ArrayBuffer.isView(value) ||\n        value instanceof ArrayBuffer ||\n        isAnyArrayBuffer(value)\n      ) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.byteLength\n        );\n      } else if (\n        value['_bsontype'] === 'Long' ||\n        value['_bsontype'] === 'Double' ||\n        value['_bsontype'] === 'Timestamp'\n      ) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (value['_bsontype'] === 'Decimal128') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n      } else if (value['_bsontype'] === 'Code') {\n        // Calculate size depending on the availability of a scope\n        if (value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            Buffer.byteLength(value.code.toString(), 'utf8') +\n            1 +\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            Buffer.byteLength(value.code.toString(), 'utf8') +\n            1\n          );\n        }\n      } else if (value['_bsontype'] === 'Binary') {\n        const binary: Binary = value;\n        // Check what kind of subtype we have\n        if (binary.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            (binary.position + 1 + 4 + 1 + 4)\n          );\n        } else {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (binary.position + 1 + 4 + 1)\n          );\n        }\n      } else if (value['_bsontype'] === 'Symbol') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          Buffer.byteLength(value.value, 'utf8') +\n          4 +\n          1 +\n          1\n        );\n      } else if (value['_bsontype'] === 'DBRef') {\n        // Set up correct object for serialization\n        const ordered_values = Object.assign(\n          {\n            $ref: value.collection,\n            $id: value.oid\n          },\n          value.fields\n        );\n\n        // Add db reference if it exists\n        if (value.db != null) {\n          ordered_values['$db'] = value.db;\n        }\n\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined)\n        );\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.source, 'utf8') +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.pattern, 'utf8') +\n          1 +\n          Buffer.byteLength(value.options, 'utf8') +\n          1\n        );\n      } else {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          calculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n          1\n        );\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if (value instanceof RegExp || isRegExp(value) || String.call(value) === '[object RegExp]') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.source, 'utf8') +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else {\n        if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            Buffer.byteLength(normalizedFunctionString(value), 'utf8') +\n            1 +\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else if (serializeFunctions) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            Buffer.byteLength(normalizedFunctionString(value), 'utf8') +\n            1\n          );\n        }\n      }\n  }\n\n  return 0;\n}\n", "const FIRST_BIT = 0x80;\nconst FIRST_TWO_BITS = 0xc0;\nconst FIRST_THREE_BITS = 0xe0;\nconst FIRST_FOUR_BITS = 0xf0;\nconst FIRST_FIVE_BITS = 0xf8;\n\nconst TWO_BIT_CHAR = 0xc0;\nconst THREE_BIT_CHAR = 0xe0;\nconst FOUR_BIT_CHAR = 0xf0;\nconst CONTINUING_CHAR = 0x80;\n\n/**\n * Determines if the passed in bytes are valid utf8\n * @param bytes - An array of 8-bit bytes. Must be indexable and have length property\n * @param start - The index to start validating\n * @param end - The index to end validating\n */\nexport function validateUtf8(\n  bytes: { [index: number]: number },\n  start: number,\n  end: number\n): boolean {\n  let continuation = 0;\n\n  for (let i = start; i < end; i += 1) {\n    const byte = bytes[i];\n\n    if (continuation) {\n      if ((byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {\n        return false;\n      }\n      continuation -= 1;\n    } else if (byte & FIRST_BIT) {\n      if ((byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {\n        continuation = 1;\n      } else if ((byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {\n        continuation = 2;\n      } else if ((byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {\n        continuation = 3;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  return !continuation;\n}\n", "import { Buffer } from 'buffer';\nimport { Binary } from '../binary';\nimport type { Document } from '../bson';\nimport { Code } from '../code';\nimport * as constants from '../constants';\nimport { DBRef, DBRefLike, isDBRefLike } from '../db_ref';\nimport { Decimal128 } from '../decimal128';\nimport { Double } from '../double';\nimport { BSONError } from '../error';\nimport { Int32 } from '../int_32';\nimport { Long } from '../long';\nimport { MaxKey } from '../max_key';\nimport { MinKey } from '../min_key';\nimport { ObjectId } from '../objectid';\nimport { BSONRegExp } from '../regexp';\nimport { BSONSymbol } from '../symbol';\nimport { Timestamp } from '../timestamp';\nimport { validateUtf8 } from '../validate_utf8';\n\n/** @public */\nexport interface DeserializeOptions {\n  /** evaluate functions in the BSON document scoped to the object deserialized. */\n  evalFunctions?: boolean;\n  /** cache evaluated functions for reuse. */\n  cacheFunctions?: boolean;\n  /**\n   * use a crc32 code for caching, otherwise use the string of the function.\n   * @deprecated this option to use the crc32 function never worked as intended\n   * due to the fact that the crc32 function itself was never implemented.\n   * */\n  cacheFunctionsCrc32?: boolean;\n  /** when deserializing a Long will fit it into a Number if it's smaller than 53 bits */\n  promoteLongs?: boolean;\n  /** when deserializing a Binary will return it as a node.js Buffer instance. */\n  promoteBuffers?: boolean;\n  /** when deserializing will promote BSON values to their Node.js closest equivalent types. */\n  promoteValues?: boolean;\n  /** allow to specify if there what fields we wish to return as unserialized raw buffer. */\n  fieldsAsRaw?: Document;\n  /** return BSON regular expressions as BSONRegExp instances. */\n  bsonRegExp?: boolean;\n  /** allows the buffer to be larger than the parsed BSON object */\n  allowObjectSmallerThanBufferSize?: boolean;\n  /** Offset into buffer to begin reading document from */\n  index?: number;\n\n  raw?: boolean;\n  /** Allows for opt-out utf-8 validation for all keys or\n   * specified keys. Must be all true or all false.\n   *\n   * @example\n   * ```js\n   * // disables validation on all keys\n   *  validation: { utf8: false }\n   *\n   * // enables validation only on specified keys a, b, and c\n   *  validation: { utf8: { a: true, b: true, c: true } }\n   *\n   *  // disables validation only on specified keys a, b\n   *  validation: { utf8: { a: false, b: false } }\n   * ```\n   */\n  validation?: { utf8: boolean | Record<string, true> | Record<string, false> };\n}\n\n// Internal long versions\nconst JS_INT_MAX_LONG = Long.fromNumber(constants.JS_INT_MAX);\nconst JS_INT_MIN_LONG = Long.fromNumber(constants.JS_INT_MIN);\n\nconst functionCache: { [hash: string]: Function } = {};\n\nexport function deserialize(\n  buffer: Buffer,\n  options: DeserializeOptions,\n  isArray?: boolean\n): Document {\n  options = options == null ? {} : options;\n  const index = options && options.index ? options.index : 0;\n  // Read the document size\n  const size =\n    buffer[index] |\n    (buffer[index + 1] << 8) |\n    (buffer[index + 2] << 16) |\n    (buffer[index + 3] << 24);\n\n  if (size < 5) {\n    throw new BSONError(`bson size must be >= 5, is ${size}`);\n  }\n\n  if (options.allowObjectSmallerThanBufferSize && buffer.length < size) {\n    throw new BSONError(`buffer length ${buffer.length} must be >= bson size ${size}`);\n  }\n\n  if (!options.allowObjectSmallerThanBufferSize && buffer.length !== size) {\n    throw new BSONError(`buffer length ${buffer.length} must === bson size ${size}`);\n  }\n\n  if (size + index > buffer.byteLength) {\n    throw new BSONError(\n      `(bson size ${size} + options.index ${index} must be <= buffer length ${buffer.byteLength})`\n    );\n  }\n\n  // Illegal end value\n  if (buffer[index + size - 1] !== 0) {\n    throw new BSONError(\n      \"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\"\n    );\n  }\n\n  // Start deserializtion\n  return deserializeObject(buffer, index, options, isArray);\n}\n\nconst allowedDBRefKeys = /^\\$ref$|^\\$id$|^\\$db$/;\n\nfunction deserializeObject(\n  buffer: Buffer,\n  index: number,\n  options: DeserializeOptions,\n  isArray = false\n) {\n  const evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];\n  const cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];\n\n  const fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n\n  // Return raw bson buffer instead of parsing it\n  const raw = options['raw'] == null ? false : options['raw'];\n\n  // Return BSONRegExp objects instead of native regular expressions\n  const bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n\n  // Controls the promotion of values vs wrapper classes\n  const promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];\n  const promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];\n  const promoteValues = options['promoteValues'] == null ? true : options['promoteValues'];\n\n  // Ensures default validation option if none given\n  const validation = options.validation == null ? { utf8: true } : options.validation;\n\n  // Shows if global utf-8 validation is enabled or disabled\n  let globalUTFValidation = true;\n  // Reflects utf-8 validation setting regardless of global or specific key validation\n  let validationSetting: boolean;\n  // Set of keys either to enable or disable validation on\n  const utf8KeysSet = new Set();\n\n  // Check for boolean uniformity and empty validation option\n  const utf8ValidatedKeys = validation.utf8;\n  if (typeof utf8ValidatedKeys === 'boolean') {\n    validationSetting = utf8ValidatedKeys;\n  } else {\n    globalUTFValidation = false;\n    const utf8ValidationValues = Object.keys(utf8ValidatedKeys).map(function (key) {\n      return utf8ValidatedKeys[key];\n    });\n    if (utf8ValidationValues.length === 0) {\n      throw new BSONError('UTF-8 validation setting cannot be empty');\n    }\n    if (typeof utf8ValidationValues[0] !== 'boolean') {\n      throw new BSONError('Invalid UTF-8 validation option, must specify boolean values');\n    }\n    validationSetting = utf8ValidationValues[0];\n    // Ensures boolean uniformity in utf-8 validation (all true or all false)\n    if (!utf8ValidationValues.every(item => item === validationSetting)) {\n      throw new BSONError('Invalid UTF-8 validation option - keys must be all true or all false');\n    }\n  }\n\n  // Add keys to set that will either be validated or not based on validationSetting\n  if (!globalUTFValidation) {\n    for (const key of Object.keys(utf8ValidatedKeys)) {\n      utf8KeysSet.add(key);\n    }\n  }\n\n  // Set the start index\n  const startIndex = index;\n\n  // Validate that we have at least 4 bytes of buffer\n  if (buffer.length < 5) throw new BSONError('corrupt bson message < 5 bytes long');\n\n  // Read the document size\n  const size =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n  // Ensure buffer is valid size\n  if (size < 5 || size > buffer.length) throw new BSONError('corrupt bson message');\n\n  // Create holding object\n  const object: Document = isArray ? [] : {};\n  // Used for arrays to skip having to perform utf8 decoding\n  let arrayIndex = 0;\n  const done = false;\n\n  let isPossibleDBRef = isArray ? false : null;\n\n  // While we have more left data left keep parsing\n  const dataview = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  while (!done) {\n    // Read the type\n    const elementType = buffer[index++];\n\n    // If we get a zero it's the last byte, exit\n    if (elementType === 0) break;\n\n    // Get the start search index\n    let i = index;\n    // Locate the end of the c string\n    while (buffer[i] !== 0x00 && i < buffer.length) {\n      i++;\n    }\n\n    // If are at the end of the buffer there is a problem with the document\n    if (i >= buffer.byteLength) throw new BSONError('Bad BSON Document: illegal CString');\n\n    // Represents the key\n    const name = isArray ? arrayIndex++ : buffer.toString('utf8', index, i);\n\n    // shouldValidateKey is true if the key should be validated, false otherwise\n    let shouldValidateKey = true;\n    if (globalUTFValidation || utf8KeysSet.has(name)) {\n      shouldValidateKey = validationSetting;\n    } else {\n      shouldValidateKey = !validationSetting;\n    }\n\n    if (isPossibleDBRef !== false && (name as string)[0] === '$') {\n      isPossibleDBRef = allowedDBRefKeys.test(name as string);\n    }\n    let value;\n\n    index = i + 1;\n\n    if (elementType === constants.BSON_DATA_STRING) {\n      const stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      ) {\n        throw new BSONError('bad string length in bson');\n      }\n      value = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n      index = index + stringSize;\n    } else if (elementType === constants.BSON_DATA_OID) {\n      const oid = Buffer.alloc(12);\n      buffer.copy(oid, 0, index, index + 12);\n      value = new ObjectId(oid);\n      index = index + 12;\n    } else if (elementType === constants.BSON_DATA_INT && promoteValues === false) {\n      value = new Int32(\n        buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24)\n      );\n    } else if (elementType === constants.BSON_DATA_INT) {\n      value =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n    } else if (elementType === constants.BSON_DATA_NUMBER && promoteValues === false) {\n      value = new Double(dataview.getFloat64(index, true));\n      index = index + 8;\n    } else if (elementType === constants.BSON_DATA_NUMBER) {\n      value = dataview.getFloat64(index, true);\n      index = index + 8;\n    } else if (elementType === constants.BSON_DATA_DATE) {\n      const lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      const highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      value = new Date(new Long(lowBits, highBits).toNumber());\n    } else if (elementType === constants.BSON_DATA_BOOLEAN) {\n      if (buffer[index] !== 0 && buffer[index] !== 1)\n        throw new BSONError('illegal boolean type value');\n      value = buffer[index++] === 1;\n    } else if (elementType === constants.BSON_DATA_OBJECT) {\n      const _index = index;\n      const objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      if (objectSize <= 0 || objectSize > buffer.length - index)\n        throw new BSONError('bad embedded document length in bson');\n\n      // We have a raw value\n      if (raw) {\n        value = buffer.slice(index, index + objectSize);\n      } else {\n        let objectOptions = options;\n        if (!globalUTFValidation) {\n          objectOptions = { ...options, validation: { utf8: shouldValidateKey } };\n        }\n        value = deserializeObject(buffer, _index, objectOptions, false);\n      }\n\n      index = index + objectSize;\n    } else if (elementType === constants.BSON_DATA_ARRAY) {\n      const _index = index;\n      const objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      let arrayOptions = options;\n\n      // Stop index\n      const stopIndex = index + objectSize;\n\n      // All elements of array to be returned as raw bson\n      if (fieldsAsRaw && fieldsAsRaw[name]) {\n        arrayOptions = {};\n        for (const n in options) {\n          (\n            arrayOptions as {\n              [key: string]: DeserializeOptions[keyof DeserializeOptions];\n            }\n          )[n] = options[n as keyof DeserializeOptions];\n        }\n        arrayOptions['raw'] = true;\n      }\n      if (!globalUTFValidation) {\n        arrayOptions = { ...arrayOptions, validation: { utf8: shouldValidateKey } };\n      }\n      value = deserializeObject(buffer, _index, arrayOptions, true);\n      index = index + objectSize;\n\n      if (buffer[index - 1] !== 0) throw new BSONError('invalid array terminator byte');\n      if (index !== stopIndex) throw new BSONError('corrupted array bson');\n    } else if (elementType === constants.BSON_DATA_UNDEFINED) {\n      value = undefined;\n    } else if (elementType === constants.BSON_DATA_NULL) {\n      value = null;\n    } else if (elementType === constants.BSON_DATA_LONG) {\n      // Unpack the low and high bits\n      const lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      const highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      const long = new Long(lowBits, highBits);\n      // Promote the long if possible\n      if (promoteLongs && promoteValues === true) {\n        value =\n          long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n            ? long.toNumber()\n            : long;\n      } else {\n        value = long;\n      }\n    } else if (elementType === constants.BSON_DATA_DECIMAL128) {\n      // Buffer to contain the decimal bytes\n      const bytes = Buffer.alloc(16);\n      // Copy the next 16 bytes into the bytes buffer\n      buffer.copy(bytes, 0, index, index + 16);\n      // Update index\n      index = index + 16;\n      // Assign the new Decimal128 value\n      const decimal128 = new Decimal128(bytes) as Decimal128 | { toObject(): unknown };\n      // If we have an alternative mapper use that\n      if ('toObject' in decimal128 && typeof decimal128.toObject === 'function') {\n        value = decimal128.toObject();\n      } else {\n        value = decimal128;\n      }\n    } else if (elementType === constants.BSON_DATA_BINARY) {\n      let binarySize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      const totalBinarySize = binarySize;\n      const subType = buffer[index++];\n\n      // Did we have a negative binary size, throw\n      if (binarySize < 0) throw new BSONError('Negative binary type element size found');\n\n      // Is the length longer than the document\n      if (binarySize > buffer.byteLength)\n        throw new BSONError('Binary type size larger than document size');\n\n      // Decode as raw Buffer object if options specifies it\n      if (buffer['slice'] != null) {\n        // If we have subtype 2 skip the 4 bytes for the size\n        if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n          binarySize =\n            buffer[index++] |\n            (buffer[index++] << 8) |\n            (buffer[index++] << 16) |\n            (buffer[index++] << 24);\n          if (binarySize < 0)\n            throw new BSONError('Negative binary type element size found for subtype 0x02');\n          if (binarySize > totalBinarySize - 4)\n            throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n          if (binarySize < totalBinarySize - 4)\n            throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n        }\n\n        if (promoteBuffers && promoteValues) {\n          value = buffer.slice(index, index + binarySize);\n        } else {\n          value = new Binary(buffer.slice(index, index + binarySize), subType);\n          if (subType === constants.BSON_BINARY_SUBTYPE_UUID_NEW) {\n            value = value.toUUID();\n          }\n        }\n      } else {\n        const _buffer = Buffer.alloc(binarySize);\n        // If we have subtype 2 skip the 4 bytes for the size\n        if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n          binarySize =\n            buffer[index++] |\n            (buffer[index++] << 8) |\n            (buffer[index++] << 16) |\n            (buffer[index++] << 24);\n          if (binarySize < 0)\n            throw new BSONError('Negative binary type element size found for subtype 0x02');\n          if (binarySize > totalBinarySize - 4)\n            throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n          if (binarySize < totalBinarySize - 4)\n            throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n        }\n\n        // Copy the data\n        for (i = 0; i < binarySize; i++) {\n          _buffer[i] = buffer[index + i];\n        }\n\n        if (promoteBuffers && promoteValues) {\n          value = _buffer;\n        } else if (subType === constants.BSON_BINARY_SUBTYPE_UUID_NEW) {\n          value = new Binary(buffer.slice(index, index + binarySize), subType).toUUID();\n        } else {\n          value = new Binary(buffer.slice(index, index + binarySize), subType);\n        }\n      }\n\n      // Update the index\n      index = index + binarySize;\n    } else if (elementType === constants.BSON_DATA_REGEXP && bsonRegExp === false) {\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new BSONError('Bad BSON Document: illegal CString');\n      // Return the C string\n      const source = buffer.toString('utf8', index, i);\n      // Create the regexp\n      index = i + 1;\n\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new BSONError('Bad BSON Document: illegal CString');\n      // Return the C string\n      const regExpOptions = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // For each option add the corresponding one for javascript\n      const optionsArray = new Array(regExpOptions.length);\n\n      // Parse options\n      for (i = 0; i < regExpOptions.length; i++) {\n        switch (regExpOptions[i]) {\n          case 'm':\n            optionsArray[i] = 'm';\n            break;\n          case 's':\n            optionsArray[i] = 'g';\n            break;\n          case 'i':\n            optionsArray[i] = 'i';\n            break;\n        }\n      }\n\n      value = new RegExp(source, optionsArray.join(''));\n    } else if (elementType === constants.BSON_DATA_REGEXP && bsonRegExp === true) {\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new BSONError('Bad BSON Document: illegal CString');\n      // Return the C string\n      const source = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new BSONError('Bad BSON Document: illegal CString');\n      // Return the C string\n      const regExpOptions = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // Set the object\n      value = new BSONRegExp(source, regExpOptions);\n    } else if (elementType === constants.BSON_DATA_SYMBOL) {\n      const stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      ) {\n        throw new BSONError('bad string length in bson');\n      }\n      const symbol = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n      value = promoteValues ? symbol : new BSONSymbol(symbol);\n      index = index + stringSize;\n    } else if (elementType === constants.BSON_DATA_TIMESTAMP) {\n      const lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      const highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n\n      value = new Timestamp(lowBits, highBits);\n    } else if (elementType === constants.BSON_DATA_MIN_KEY) {\n      value = new MinKey();\n    } else if (elementType === constants.BSON_DATA_MAX_KEY) {\n      value = new MaxKey();\n    } else if (elementType === constants.BSON_DATA_CODE) {\n      const stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      ) {\n        throw new BSONError('bad string length in bson');\n      }\n      const functionString = getValidatedString(\n        buffer,\n        index,\n        index + stringSize - 1,\n        shouldValidateKey\n      );\n\n      // If we are evaluating the functions\n      if (evalFunctions) {\n        // If we have cache enabled let's look for the md5 of the function in the cache\n        if (cacheFunctions) {\n          // Got to do this to avoid V8 deoptimizing the call due to finding eval\n          value = isolateEval(functionString, functionCache, object);\n        } else {\n          value = isolateEval(functionString);\n        }\n      } else {\n        value = new Code(functionString);\n      }\n\n      // Update parse index position\n      index = index + stringSize;\n    } else if (elementType === constants.BSON_DATA_CODE_W_SCOPE) {\n      const totalSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n\n      // Element cannot be shorter than totalSize + stringSize + documentSize + terminator\n      if (totalSize < 4 + 4 + 4 + 1) {\n        throw new BSONError('code_w_scope total size shorter minimum expected length');\n      }\n\n      // Get the code string size\n      const stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      // Check if we have a valid string\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      ) {\n        throw new BSONError('bad string length in bson');\n      }\n\n      // Javascript function\n      const functionString = getValidatedString(\n        buffer,\n        index,\n        index + stringSize - 1,\n        shouldValidateKey\n      );\n      // Update parse index position\n      index = index + stringSize;\n      // Parse the element\n      const _index = index;\n      // Decode the size of the object document\n      const objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      // Decode the scope object\n      const scopeObject = deserializeObject(buffer, _index, options, false);\n      // Adjust the index\n      index = index + objectSize;\n\n      // Check if field length is too short\n      if (totalSize < 4 + 4 + objectSize + stringSize) {\n        throw new BSONError('code_w_scope total size is too short, truncating scope');\n      }\n\n      // Check if totalSize field is too long\n      if (totalSize > 4 + 4 + objectSize + stringSize) {\n        throw new BSONError('code_w_scope total size is too long, clips outer document');\n      }\n\n      // If we are evaluating the functions\n      if (evalFunctions) {\n        // If we have cache enabled let's look for the md5 of the function in the cache\n        if (cacheFunctions) {\n          // Got to do this to avoid V8 deoptimizing the call due to finding eval\n          value = isolateEval(functionString, functionCache, object);\n        } else {\n          value = isolateEval(functionString);\n        }\n\n        value.scope = scopeObject;\n      } else {\n        value = new Code(functionString, scopeObject);\n      }\n    } else if (elementType === constants.BSON_DATA_DBPOINTER) {\n      // Get the code string size\n      const stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      // Check if we have a valid string\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new BSONError('bad string length in bson');\n      // Namespace\n      if (validation != null && validation.utf8) {\n        if (!validateUtf8(buffer, index, index + stringSize - 1)) {\n          throw new BSONError('Invalid UTF-8 string in BSON document');\n        }\n      }\n      const namespace = buffer.toString('utf8', index, index + stringSize - 1);\n      // Update parse index position\n      index = index + stringSize;\n\n      // Read the oid\n      const oidBuffer = Buffer.alloc(12);\n      buffer.copy(oidBuffer, 0, index, index + 12);\n      const oid = new ObjectId(oidBuffer);\n\n      // Update the index\n      index = index + 12;\n\n      // Upgrade to DBRef type\n      value = new DBRef(namespace, oid);\n    } else {\n      throw new BSONError(\n        `Detected unknown BSON type ${elementType.toString(16)} for fieldname \"${name}\"`\n      );\n    }\n    if (name === '__proto__') {\n      Object.defineProperty(object, name, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });\n    } else {\n      object[name] = value;\n    }\n  }\n\n  // Check if the deserialization was against a valid array/object\n  if (size !== index - startIndex) {\n    if (isArray) throw new BSONError('corrupt array bson');\n    throw new BSONError('corrupt object bson');\n  }\n\n  // if we did not find \"$ref\", \"$id\", \"$db\", or found an extraneous $key, don't make a DBRef\n  if (!isPossibleDBRef) return object;\n\n  if (isDBRefLike(object)) {\n    const copy = Object.assign({}, object) as Partial<DBRefLike>;\n    delete copy.$ref;\n    delete copy.$id;\n    delete copy.$db;\n    return new DBRef(object.$ref, object.$id, object.$db, copy);\n  }\n\n  return object;\n}\n\n/**\n * Ensure eval is isolated, store the result in functionCache.\n *\n * @internal\n */\nfunction isolateEval(\n  functionString: string,\n  functionCache?: { [hash: string]: Function },\n  object?: Document\n) {\n  // eslint-disable-next-line @typescript-eslint/no-implied-eval\n  if (!functionCache) return new Function(functionString);\n  // Check for cache hit, eval if missing and return cached function\n  if (functionCache[functionString] == null) {\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval\n    functionCache[functionString] = new Function(functionString);\n  }\n\n  // Set the object\n  return functionCache[functionString].bind(object);\n}\n\nfunction getValidatedString(\n  buffer: Buffer,\n  start: number,\n  end: number,\n  shouldValidateUtf8: boolean\n) {\n  const value = buffer.toString('utf8', start, end);\n  // if utf8 validation is on, do the check\n  if (shouldValidateUtf8) {\n    for (let i = 0; i < value.length; i++) {\n      if (value.charCodeAt(i) === 0xfffd) {\n        if (!validateUtf8(buffer, start, end)) {\n          throw new BSONError('Invalid UTF-8 string in BSON document');\n        }\n        break;\n      }\n    }\n  }\n  return value;\n}\n", "import type { Buffer } from 'buffer';\nimport { Binary } from '../binary';\nimport type { BSONSymbol, DBRef, Document, MaxKey } from '../bson';\nimport type { Code } from '../code';\nimport * as constants from '../constants';\nimport type { DBRefLike } from '../db_ref';\nimport type { Decimal128 } from '../decimal128';\nimport type { Double } from '../double';\nimport { ensureBuffer } from '../ensure_buffer';\nimport { BSONError, BSONTypeError } from '../error';\nimport { isBSONType } from '../extended_json';\nimport type { Int32 } from '../int_32';\nimport { Long } from '../long';\nimport { Map } from '../map';\nimport type { MinKey } from '../min_key';\nimport type { ObjectId } from '../objectid';\nimport type { BSONRegExp } from '../regexp';\nimport {\n  isBigInt64Array,\n  isBigUInt64Array,\n  isDate,\n  isMap,\n  isRegExp,\n  isUint8Array,\n  normalizedFunctionString\n} from './utils';\n\n/** @public */\nexport interface SerializeOptions {\n  /** the serializer will check if keys are valid. */\n  checkKeys?: boolean;\n  /** serialize the javascript functions **(default:false)**. */\n  serializeFunctions?: boolean;\n  /** serialize will not emit undefined fields **(default:true)** */\n  ignoreUndefined?: boolean;\n  /** @internal Resize internal buffer */\n  minInternalBufferSize?: number;\n  /** the index in the buffer where we wish to start serializing into */\n  index?: number;\n}\n\nconst regexp = /\\x00/; // eslint-disable-line no-control-regex\nconst ignoreKeys = new Set(['$db', '$ref', '$id', '$clusterTime']);\n\n/*\n * isArray indicates if we are writing to a BSON array (type 0x04)\n * which forces the \"key\" which really an array index as a string to be written as ascii\n * This will catch any errors in index as a string generation\n */\n\nfunction serializeString(\n  buffer: Buffer,\n  key: string,\n  value: string,\n  index: number,\n  isArray?: boolean\n) {\n  // Encode String type\n  buffer[index++] = constants.BSON_DATA_STRING;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes + 1;\n  buffer[index - 1] = 0;\n  // Write the string\n  const size = buffer.write(value, index + 4, undefined, 'utf8');\n  // Write the size of the string to buffer\n  buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n  buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n  buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n  buffer[index] = (size + 1) & 0xff;\n  // Update index\n  index = index + 4 + size;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nconst SPACE_FOR_FLOAT64 = new Uint8Array(8);\nconst DV_FOR_FLOAT64 = new DataView(\n  SPACE_FOR_FLOAT64.buffer,\n  SPACE_FOR_FLOAT64.byteOffset,\n  SPACE_FOR_FLOAT64.byteLength\n);\nfunction serializeNumber(\n  buffer: Buffer,\n  key: string,\n  value: number,\n  index: number,\n  isArray?: boolean\n) {\n  // We have an integer value\n  // TODO(NODE-2529): Add support for big int\n  if (\n    Number.isInteger(value) &&\n    value >= constants.BSON_INT32_MIN &&\n    value <= constants.BSON_INT32_MAX\n  ) {\n    // If the value fits in 32 bits encode as int32\n    // Set int type 32 bits or less\n    buffer[index++] = constants.BSON_DATA_INT;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, undefined, 'utf8')\n      : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the int value\n    buffer[index++] = value & 0xff;\n    buffer[index++] = (value >> 8) & 0xff;\n    buffer[index++] = (value >> 16) & 0xff;\n    buffer[index++] = (value >> 24) & 0xff;\n  } else {\n    // Encode as double\n    buffer[index++] = constants.BSON_DATA_NUMBER;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, undefined, 'utf8')\n      : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    DV_FOR_FLOAT64.setFloat64(0, value, true);\n    buffer.set(SPACE_FOR_FLOAT64, index);\n    // Adjust index\n    index = index + 8;\n  }\n\n  return index;\n}\n\nfunction serializeNull(buffer: Buffer, key: string, _: unknown, index: number, isArray?: boolean) {\n  // Set long type\n  buffer[index++] = constants.BSON_DATA_NULL;\n\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n}\n\nfunction serializeBoolean(\n  buffer: Buffer,\n  key: string,\n  value: boolean,\n  index: number,\n  isArray?: boolean\n) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_BOOLEAN;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Encode the boolean value\n  buffer[index++] = value ? 1 : 0;\n  return index;\n}\n\nfunction serializeDate(buffer: Buffer, key: string, value: Date, index: number, isArray?: boolean) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_DATE;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the date\n  const dateInMilis = Long.fromNumber(value.getTime());\n  const lowBits = dateInMilis.getLowBits();\n  const highBits = dateInMilis.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n}\n\nfunction serializeRegExp(\n  buffer: Buffer,\n  key: string,\n  value: RegExp,\n  index: number,\n  isArray?: boolean\n) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_REGEXP;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  if (value.source && value.source.match(regexp) != null) {\n    throw Error('value ' + value.source + ' must not contain null bytes');\n  }\n  // Adjust the index\n  index = index + buffer.write(value.source, index, undefined, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the parameters\n  if (value.ignoreCase) buffer[index++] = 0x69; // i\n  if (value.global) buffer[index++] = 0x73; // s\n  if (value.multiline) buffer[index++] = 0x6d; // m\n\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nfunction serializeBSONRegExp(\n  buffer: Buffer,\n  key: string,\n  value: BSONRegExp,\n  index: number,\n  isArray?: boolean\n) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_REGEXP;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Check the pattern for 0 bytes\n  if (value.pattern.match(regexp) != null) {\n    // The BSON spec doesn't allow keys with null bytes because keys are\n    // null-terminated.\n    throw Error('pattern ' + value.pattern + ' must not contain null bytes');\n  }\n\n  // Adjust the index\n  index = index + buffer.write(value.pattern, index, undefined, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the options\n  index = index + buffer.write(value.options.split('').sort().join(''), index, undefined, 'utf8');\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nfunction serializeMinMax(\n  buffer: Buffer,\n  key: string,\n  value: MinKey | MaxKey,\n  index: number,\n  isArray?: boolean\n) {\n  // Write the type of either min or max key\n  if (value === null) {\n    buffer[index++] = constants.BSON_DATA_NULL;\n  } else if (value._bsontype === 'MinKey') {\n    buffer[index++] = constants.BSON_DATA_MIN_KEY;\n  } else {\n    buffer[index++] = constants.BSON_DATA_MAX_KEY;\n  }\n\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n}\n\nfunction serializeObjectId(\n  buffer: Buffer,\n  key: string,\n  value: ObjectId,\n  index: number,\n  isArray?: boolean\n) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_OID;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the objectId into the shared buffer\n  if (typeof value.id === 'string') {\n    buffer.write(value.id, index, undefined, 'binary');\n  } else if (isUint8Array(value.id)) {\n    // Use the standard JS methods here because buffer.copy() is buggy with the\n    // browser polyfill\n    buffer.set(value.id.subarray(0, 12), index);\n  } else {\n    throw new BSONTypeError('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n  }\n\n  // Adjust index\n  return index + 12;\n}\n\nfunction serializeBuffer(\n  buffer: Buffer,\n  key: string,\n  value: Buffer | Uint8Array,\n  index: number,\n  isArray?: boolean\n) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_BINARY;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Get size of the buffer (current write point)\n  const size = value.length;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the default subtype\n  buffer[index++] = constants.BSON_BINARY_SUBTYPE_DEFAULT;\n  // Copy the content form the binary field to the buffer\n  buffer.set(ensureBuffer(value), index);\n  // Adjust the index\n  index = index + size;\n  return index;\n}\n\nfunction serializeObject(\n  buffer: Buffer,\n  key: string,\n  value: Document,\n  index: number,\n  checkKeys = false,\n  depth = 0,\n  serializeFunctions = false,\n  ignoreUndefined = true,\n  isArray = false,\n  path: Document[] = []\n) {\n  for (let i = 0; i < path.length; i++) {\n    if (path[i] === value) throw new BSONError('cyclic dependency detected');\n  }\n\n  // Push value to stack\n  path.push(value);\n  // Write the type\n  buffer[index++] = Array.isArray(value) ? constants.BSON_DATA_ARRAY : constants.BSON_DATA_OBJECT;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  const endIndex = serializeInto(\n    buffer,\n    value,\n    checkKeys,\n    index,\n    depth + 1,\n    serializeFunctions,\n    ignoreUndefined,\n    path\n  );\n  // Pop stack\n  path.pop();\n  return endIndex;\n}\n\nfunction serializeDecimal128(\n  buffer: Buffer,\n  key: string,\n  value: Decimal128,\n  index: number,\n  isArray?: boolean\n) {\n  buffer[index++] = constants.BSON_DATA_DECIMAL128;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the data from the value\n  // Prefer the standard JS methods because their typechecking is not buggy,\n  // unlike the `buffer` polyfill's.\n  buffer.set(value.bytes.subarray(0, 16), index);\n  return index + 16;\n}\n\nfunction serializeLong(buffer: Buffer, key: string, value: Long, index: number, isArray?: boolean) {\n  // Write the type\n  buffer[index++] =\n    value._bsontype === 'Long' ? constants.BSON_DATA_LONG : constants.BSON_DATA_TIMESTAMP;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the date\n  const lowBits = value.getLowBits();\n  const highBits = value.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n}\n\nfunction serializeInt32(\n  buffer: Buffer,\n  key: string,\n  value: Int32 | number,\n  index: number,\n  isArray?: boolean\n) {\n  value = value.valueOf();\n  // Set int type 32 bits or less\n  buffer[index++] = constants.BSON_DATA_INT;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the int value\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return index;\n}\n\nfunction serializeDouble(\n  buffer: Buffer,\n  key: string,\n  value: Double,\n  index: number,\n  isArray?: boolean\n) {\n  // Encode as double\n  buffer[index++] = constants.BSON_DATA_NUMBER;\n\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write float\n  DV_FOR_FLOAT64.setFloat64(0, value.value, true);\n  buffer.set(SPACE_FOR_FLOAT64, index);\n\n  // Adjust index\n  index = index + 8;\n  return index;\n}\n\nfunction serializeFunction(\n  buffer: Buffer,\n  key: string,\n  value: Function,\n  index: number,\n  _checkKeys = false,\n  _depth = 0,\n  isArray?: boolean\n) {\n  buffer[index++] = constants.BSON_DATA_CODE;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Function string\n  const functionString = normalizedFunctionString(value);\n\n  // Write the string\n  const size = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n}\n\nfunction serializeCode(\n  buffer: Buffer,\n  key: string,\n  value: Code,\n  index: number,\n  checkKeys = false,\n  depth = 0,\n  serializeFunctions = false,\n  ignoreUndefined = true,\n  isArray = false\n) {\n  if (value.scope && typeof value.scope === 'object') {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_CODE_W_SCOPE;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, undefined, 'utf8')\n      : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n\n    // Starting index\n    let startIndex = index;\n\n    // Serialize the function\n    // Get the function string\n    const functionString = typeof value.code === 'string' ? value.code : value.code.toString();\n    // Index adjustment\n    index = index + 4;\n    // Write string into buffer\n    const codeSize = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = codeSize & 0xff;\n    buffer[index + 1] = (codeSize >> 8) & 0xff;\n    buffer[index + 2] = (codeSize >> 16) & 0xff;\n    buffer[index + 3] = (codeSize >> 24) & 0xff;\n    // Write end 0\n    buffer[index + 4 + codeSize - 1] = 0;\n    // Write the\n    index = index + codeSize + 4;\n\n    //\n    // Serialize the scope value\n    const endIndex = serializeInto(\n      buffer,\n      value.scope,\n      checkKeys,\n      index,\n      depth + 1,\n      serializeFunctions,\n      ignoreUndefined\n    );\n    index = endIndex - 1;\n\n    // Writ the total\n    const totalSize = endIndex - startIndex;\n\n    // Write the total size of the object\n    buffer[startIndex++] = totalSize & 0xff;\n    buffer[startIndex++] = (totalSize >> 8) & 0xff;\n    buffer[startIndex++] = (totalSize >> 16) & 0xff;\n    buffer[startIndex++] = (totalSize >> 24) & 0xff;\n    // Write trailing zero\n    buffer[index++] = 0;\n  } else {\n    buffer[index++] = constants.BSON_DATA_CODE;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, undefined, 'utf8')\n      : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    const functionString = value.code.toString();\n    // Write the string\n    const size = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n  }\n\n  return index;\n}\n\nfunction serializeBinary(\n  buffer: Buffer,\n  key: string,\n  value: Binary,\n  index: number,\n  isArray?: boolean\n) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_BINARY;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Extract the buffer\n  const data = value.value(true) as Buffer | Uint8Array;\n  // Calculate size\n  let size = value.position;\n  // Add the deprecated 02 type 4 bytes of size to total\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) size = size + 4;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the subtype to the buffer\n  buffer[index++] = value.sub_type;\n\n  // If we have binary type 2 the 4 first bytes are the size\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n    size = size - 4;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n  }\n\n  // Write the data to the object\n  buffer.set(data, index);\n  // Adjust the index\n  index = index + value.position;\n  return index;\n}\n\nfunction serializeSymbol(\n  buffer: Buffer,\n  key: string,\n  value: BSONSymbol,\n  index: number,\n  isArray?: boolean\n) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_SYMBOL;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the string\n  const size = buffer.write(value.value, index + 4, undefined, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0x00;\n  return index;\n}\n\nfunction serializeDBRef(\n  buffer: Buffer,\n  key: string,\n  value: DBRef,\n  index: number,\n  depth: number,\n  serializeFunctions: boolean,\n  isArray?: boolean\n) {\n  // Write the type\n  buffer[index++] = constants.BSON_DATA_OBJECT;\n  // Number of written bytes\n  const numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, undefined, 'utf8')\n    : buffer.write(key, index, undefined, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  let startIndex = index;\n  let output: DBRefLike = {\n    $ref: value.collection || value.namespace, // \"namespace\" was what library 1.x called \"collection\"\n    $id: value.oid\n  };\n\n  if (value.db != null) {\n    output.$db = value.db;\n  }\n\n  output = Object.assign(output, value.fields);\n  const endIndex = serializeInto(buffer, output, false, index, depth + 1, serializeFunctions);\n\n  // Calculate object size\n  const size = endIndex - startIndex;\n  // Write the size\n  buffer[startIndex++] = size & 0xff;\n  buffer[startIndex++] = (size >> 8) & 0xff;\n  buffer[startIndex++] = (size >> 16) & 0xff;\n  buffer[startIndex++] = (size >> 24) & 0xff;\n  // Set index\n  return endIndex;\n}\n\nexport function serializeInto(\n  buffer: Buffer,\n  object: Document,\n  checkKeys = false,\n  startingIndex = 0,\n  depth = 0,\n  serializeFunctions = false,\n  ignoreUndefined = true,\n  path: Document[] = []\n): number {\n  startingIndex = startingIndex || 0;\n  path = path || [];\n\n  // Push the object to the path\n  path.push(object);\n\n  // Start place to serialize into\n  let index = startingIndex + 4;\n\n  // Special case isArray\n  if (Array.isArray(object)) {\n    // Get object keys\n    for (let i = 0; i < object.length; i++) {\n      const key = `${i}`;\n      let value = object[i];\n\n      // Is there an override value\n      if (typeof value?.toBSON === 'function') {\n        value = value.toBSON();\n      }\n\n      if (typeof value === 'string') {\n        index = serializeString(buffer, key, value, index, true);\n      } else if (typeof value === 'number') {\n        index = serializeNumber(buffer, key, value, index, true);\n      } else if (typeof value === 'bigint') {\n        throw new BSONTypeError('Unsupported type BigInt, please use Decimal128');\n      } else if (typeof value === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index, true);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index, true);\n      } else if (value === undefined) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index, true);\n      } else if (isUint8Array(value)) {\n        index = serializeBuffer(buffer, key, value, index, true);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index, true);\n      } else if (typeof value === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          true,\n          path\n        );\n      } else if (\n        typeof value === 'object' &&\n        isBSONType(value) &&\n        value._bsontype === 'Decimal128'\n      ) {\n        index = serializeDecimal128(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index, true);\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, true);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          true\n        );\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, true);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index, true);\n      } else if (typeof value['_bsontype'] !== 'undefined') {\n        throw new BSONTypeError(`Unrecognized or invalid _bsontype: ${String(value['_bsontype'])}`);\n      }\n    }\n  } else if (object instanceof Map || isMap(object)) {\n    const iterator = object.entries();\n    let done = false;\n\n    while (!done) {\n      // Unpack the next entry\n      const entry = iterator.next();\n      done = !!entry.done;\n      // Are we done, then skip and terminate\n      if (done) continue;\n\n      // Get the entry values\n      const key = entry.value[0];\n      const value = entry.value[1];\n\n      // Check the type of the value\n      const type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (typeof key === 'string' && !ignoreKeys.has(key)) {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw Error('key ' + key + \" must not start with '$'\");\n          } else if (~key.indexOf('.')) {\n            throw Error('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'bigint' || isBigInt64Array(value) || isBigUInt64Array(value)) {\n        throw new BSONTypeError('Unsupported type BigInt, please use Decimal128');\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if (value === null || (value === undefined && ignoreUndefined === false)) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if (isUint8Array(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          false,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined\n        );\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      } else if (typeof value['_bsontype'] !== 'undefined') {\n        throw new BSONTypeError(`Unrecognized or invalid _bsontype: ${String(value['_bsontype'])}`);\n      }\n    }\n  } else {\n    if (typeof object?.toBSON === 'function') {\n      // Provided a custom serialization method\n      object = object.toBSON();\n      if (object != null && typeof object !== 'object') {\n        throw new BSONTypeError('toBSON function did not return an object');\n      }\n    }\n\n    // Iterate over all the keys\n    for (const key in object) {\n      let value = object[key];\n      // Is there an override value\n      if (typeof value?.toBSON === 'function') {\n        value = value.toBSON();\n      }\n\n      // Check the type of the value\n      const type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (typeof key === 'string' && !ignoreKeys.has(key)) {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw Error('key ' + key + \" must not start with '$'\");\n          } else if (~key.indexOf('.')) {\n            throw Error('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'bigint') {\n        throw new BSONTypeError('Unsupported type BigInt, please use Decimal128');\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if (value === undefined) {\n        if (ignoreUndefined === false) index = serializeNull(buffer, key, value, index);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if (isUint8Array(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          false,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined\n        );\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      } else if (typeof value['_bsontype'] !== 'undefined') {\n        throw new BSONTypeError(`Unrecognized or invalid _bsontype: ${String(value['_bsontype'])}`);\n      }\n    }\n  }\n\n  // Remove the path\n  path.pop();\n\n  // Final padding byte for object\n  buffer[index++] = 0x00;\n\n  // Final size\n  const size = index - startingIndex;\n  // Write the size of the object\n  buffer[startingIndex++] = size & 0xff;\n  buffer[startingIndex++] = (size >> 8) & 0xff;\n  buffer[startingIndex++] = (size >> 16) & 0xff;\n  buffer[startingIndex++] = (size >> 24) & 0xff;\n  return index;\n}\n", "import { Buffer } from 'buffer';\nimport { Binary, UUID } from './binary';\nimport { Code } from './code';\nimport { DBRef } from './db_ref';\nimport { Decimal128 } from './decimal128';\nimport { Double } from './double';\nimport { ensureBuffer } from './ensure_buffer';\nimport { EJSON } from './extended_json';\nimport { Int32 } from './int_32';\nimport { Long } from './long';\nimport { Map } from './map';\nimport { MaxKey } from './max_key';\nimport { MinKey } from './min_key';\nimport { ObjectId } from './objectid';\nimport { BSONError, BSONTypeError } from './error';\nimport { calculateObjectSize as internalCalculateObjectSize } from './parser/calculate_size';\n// Parts of the parser\nimport { deserialize as internalDeserialize, DeserializeOptions } from './parser/deserializer';\nimport { serializeInto as internalSerialize, SerializeOptions } from './parser/serializer';\nimport { BSONRegExp } from './regexp';\nimport { BSONSymbol } from './symbol';\nimport { Timestamp } from './timestamp';\nexport type { UUIDExtended, BinaryExtended, BinaryExtendedLegacy, BinarySequence } from './binary';\nexport type { CodeExtended } from './code';\nexport {\n  BSON_BINARY_SUBTYPE_BYTE_ARRAY,\n  BSON_BINARY_SUBTYPE_DEFAULT,\n  BSON_BINARY_SUBTYPE_FUNCTION,\n  BSON_BINARY_SUBTYPE_MD5,\n  BSON_BINARY_SUBTYPE_USER_DEFINED,\n  BSON_BINARY_SUBTYPE_UUID,\n  BSON_BINARY_SUBTYPE_UUID_NEW,\n  BSON_BINARY_SUBTYPE_ENCRYPTED,\n  BSON_BINARY_SUBTYPE_COLUMN,\n  BSON_DATA_ARRAY,\n  BSON_DATA_BINARY,\n  BSON_DATA_BOOLEAN,\n  BSON_DATA_CODE,\n  BSON_DATA_CODE_W_SCOPE,\n  BSON_DATA_DATE,\n  BSON_DATA_DBPOINTER,\n  BSON_DATA_DECIMAL128,\n  BSON_DATA_INT,\n  BSON_DATA_LONG,\n  BSON_DATA_MAX_KEY,\n  BSON_DATA_MIN_KEY,\n  BSON_DATA_NULL,\n  BSON_DATA_NUMBER,\n  BSON_DATA_OBJECT,\n  BSON_DATA_OID,\n  BSON_DATA_REGEXP,\n  BSON_DATA_STRING,\n  BSON_DATA_SYMBOL,\n  BSON_DATA_TIMESTAMP,\n  BSON_DATA_UNDEFINED,\n  BSON_INT32_MAX,\n  BSON_INT32_MIN,\n  BSON_INT64_MAX,\n  BSON_INT64_MIN\n} from './constants';\nexport type { DBRefLike } from './db_ref';\nexport type { Decimal128Extended } from './decimal128';\nexport type { DoubleExtended } from './double';\nexport type { EJSONOptions } from './extended_json';\nexport { EJSON } from './extended_json';\nexport type { Int32Extended } from './int_32';\nexport type { LongExtended } from './long';\nexport type { MaxKeyExtended } from './max_key';\nexport type { MinKeyExtended } from './min_key';\nexport type { ObjectIdExtended, ObjectIdLike } from './objectid';\nexport type { BSONRegExpExtended, BSONRegExpExtendedLegacy } from './regexp';\nexport type { BSONSymbolExtended } from './symbol';\nexport type { LongWithoutOverrides, TimestampExtended, TimestampOverrides } from './timestamp';\nexport { LongWithoutOverridesClass } from './timestamp';\nexport type { SerializeOptions, DeserializeOptions };\nexport {\n  Code,\n  Map,\n  BSONSymbol,\n  DBRef,\n  Binary,\n  ObjectId,\n  UUID,\n  Long,\n  Timestamp,\n  Double,\n  Int32,\n  MinKey,\n  MaxKey,\n  BSONRegExp,\n  Decimal128,\n  // In 4.0.0 and 4.0.1, this property name was changed to ObjectId to match the class name.\n  // This caused interoperability problems with previous versions of the library, so in\n  // later builds we changed it back to ObjectID (capital D) to match legacy implementations.\n  ObjectId as ObjectID\n};\nexport { BSONError, BSONTypeError } from './error';\n\n/** @public */\nexport interface Document {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n}\n\n/** @internal */\n// Default Max Size\nconst MAXSIZE = 1024 * 1024 * 17;\n\n// Current Internal Temporary Serialization Buffer\nlet buffer = Buffer.alloc(MAXSIZE);\n\n/**\n * Sets the size of the internal serialization buffer.\n *\n * @param size - The desired size for the internal serialization buffer\n * @public\n */\nexport function setInternalBufferSize(size: number): void {\n  // Resize the internal serialization buffer if needed\n  if (buffer.length < size) {\n    buffer = Buffer.alloc(size);\n  }\n}\n\n/**\n * Serialize a Javascript object.\n *\n * @param object - the Javascript object to serialize.\n * @returns Buffer object containing the serialized object.\n * @public\n */\nexport function serialize(object: Document, options: SerializeOptions = {}): Buffer {\n  // Unpack the options\n  const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n  const minInternalBufferSize =\n    typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n\n  // Resize the internal serialization buffer if needed\n  if (buffer.length < minInternalBufferSize) {\n    buffer = Buffer.alloc(minInternalBufferSize);\n  }\n\n  // Attempt to serialize\n  const serializationIndex = internalSerialize(\n    buffer,\n    object,\n    checkKeys,\n    0,\n    0,\n    serializeFunctions,\n    ignoreUndefined,\n    []\n  );\n\n  // Create the final buffer\n  const finishedBuffer = Buffer.alloc(serializationIndex);\n\n  // Copy into the finished buffer\n  buffer.copy(finishedBuffer, 0, 0, finishedBuffer.length);\n\n  // Return the buffer\n  return finishedBuffer;\n}\n\n/**\n * Serialize a Javascript object using a predefined Buffer and index into the buffer,\n * useful when pre-allocating the space for serialization.\n *\n * @param object - the Javascript object to serialize.\n * @param finalBuffer - the Buffer you pre-allocated to store the serialized BSON object.\n * @returns the index pointing to the last written byte in the buffer.\n * @public\n */\nexport function serializeWithBufferAndIndex(\n  object: Document,\n  finalBuffer: Buffer,\n  options: SerializeOptions = {}\n): number {\n  // Unpack the options\n  const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n  const startIndex = typeof options.index === 'number' ? options.index : 0;\n\n  // Attempt to serialize\n  const serializationIndex = internalSerialize(\n    buffer,\n    object,\n    checkKeys,\n    0,\n    0,\n    serializeFunctions,\n    ignoreUndefined\n  );\n  buffer.copy(finalBuffer, startIndex, 0, serializationIndex);\n\n  // Return the index\n  return startIndex + serializationIndex - 1;\n}\n\n/**\n * Deserialize data as BSON.\n *\n * @param buffer - the buffer containing the serialized set of BSON documents.\n * @returns returns the deserialized Javascript Object.\n * @public\n */\nexport function deserialize(\n  buffer: Buffer | ArrayBufferView | ArrayBuffer,\n  options: DeserializeOptions = {}\n): Document {\n  return internalDeserialize(buffer instanceof Buffer ? buffer : ensureBuffer(buffer), options);\n}\n\n/** @public */\nexport type CalculateObjectSizeOptions = Pick<\n  SerializeOptions,\n  'serializeFunctions' | 'ignoreUndefined'\n>;\n\n/**\n * Calculate the bson size for a passed in Javascript object.\n *\n * @param object - the Javascript object to calculate the BSON byte size for\n * @returns size of BSON object in bytes\n * @public\n */\nexport function calculateObjectSize(\n  object: Document,\n  options: CalculateObjectSizeOptions = {}\n): number {\n  options = options || {};\n\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n\n  return internalCalculateObjectSize(object, serializeFunctions, ignoreUndefined);\n}\n\n/**\n * Deserialize stream data as BSON documents.\n *\n * @param data - the buffer containing the serialized set of BSON documents.\n * @param startIndex - the start index in the data Buffer where the deserialization is to start.\n * @param numberOfDocuments - number of documents to deserialize.\n * @param documents - an array where to store the deserialized documents.\n * @param docStartIndex - the index in the documents array from where to start inserting documents.\n * @param options - additional options used for the deserialization.\n * @returns next index in the buffer after deserialization **x** numbers of documents.\n * @public\n */\nexport function deserializeStream(\n  data: Buffer | ArrayBufferView | ArrayBuffer,\n  startIndex: number,\n  numberOfDocuments: number,\n  documents: Document[],\n  docStartIndex: number,\n  options: DeserializeOptions\n): number {\n  const internalOptions = Object.assign(\n    { allowObjectSmallerThanBufferSize: true, index: 0 },\n    options\n  );\n  const bufferData = ensureBuffer(data);\n\n  let index = startIndex;\n  // Loop over all documents\n  for (let i = 0; i < numberOfDocuments; i++) {\n    // Find size of the document\n    const size =\n      bufferData[index] |\n      (bufferData[index + 1] << 8) |\n      (bufferData[index + 2] << 16) |\n      (bufferData[index + 3] << 24);\n    // Update options with index\n    internalOptions.index = index;\n    // Parse the document at this point\n    documents[docStartIndex + i] = internalDeserialize(bufferData, internalOptions);\n    // Adjust index by the document size\n    index = index + size;\n  }\n\n  // Return object containing end index of parsing and list of documents\n  return index;\n}\n\n/**\n * BSON default export\n * @deprecated Please use named exports\n * @privateRemarks\n * We want to someday deprecate the default export,\n * so none of the new TS types are being exported on the default\n * @public\n */\nconst BSON = {\n  Binary,\n  Code,\n  DBRef,\n  Decimal128,\n  Double,\n  Int32,\n  Long,\n  UUID,\n  Map,\n  MaxKey,\n  MinKey,\n  ObjectId,\n  ObjectID: ObjectId,\n  BSONRegExp,\n  BSONSymbol,\n  Timestamp,\n  EJSON,\n  setInternalBufferSize,\n  serialize,\n  serializeWithBufferAndIndex,\n  deserialize,\n  calculateObjectSize,\n  deserializeStream,\n  BSONError,\n  BSONTypeError\n};\nexport default BSON;\n", "import type {\n  serialize as serializeFn,\n  deserialize as deserializeFn,\n  calculateObjectSize as calculateObjectSizeFn\n} from 'bson';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nlet BSON = require('bson');\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  BSON = require('bson-ext');\n} catch {} // eslint-disable-line\n\n/** @internal */\nexport const deserialize = BSON.deserialize as typeof deserializeFn;\n/** @internal */\nexport const serialize = BSON.serialize as typeof serializeFn;\n/** @internal */\nexport const calculateObjectSize = BSON.calculateObjectSize as typeof calculateObjectSizeFn;\n\nexport {\n  Long,\n  Binary,\n  ObjectId,\n  Timestamp,\n  Code,\n  MinKey,\n  MaxKey,\n  Decimal128,\n  Int32,\n  Double,\n  DBRef,\n  BSONRegExp,\n  BSONSymbol,\n  Map,\n  Document\n} from 'bson';\n\nimport type { DeserializeOptions, SerializeOptions } from 'bson';\n\n/**\n * BSON Serialization options.\n * @public\n */\nexport interface BSONSerializeOptions\n  extends Omit<SerializeOptions, 'index'>,\n    Omit<\n      DeserializeOptions,\n      | 'evalFunctions'\n      | 'cacheFunctions'\n      | 'cacheFunctionsCrc32'\n      | 'allowObjectSmallerThanBufferSize'\n      | 'index'\n    > {\n  /** Return BSON filled buffers from operations */\n  raw?: boolean;\n}\n\nexport function pluckBSONSerializeOptions(options: BSONSerializeOptions): BSONSerializeOptions {\n  const {\n    fieldsAsRaw,\n    promoteValues,\n    promoteBuffers,\n    promoteLongs,\n    serializeFunctions,\n    ignoreUndefined,\n    bsonRegExp,\n    raw\n  } = options;\n  return {\n    fieldsAsRaw,\n    promoteValues,\n    promoteBuffers,\n    promoteLongs,\n    serializeFunctions,\n    ignoreUndefined,\n    bsonRegExp,\n    raw\n  };\n}\n\n/**\n * Merge the given BSONSerializeOptions, preferring options over the parent's options, and\n * substituting defaults for values not set.\n *\n * @internal\n */\nexport function resolveBSONOptions(\n  options?: BSONSerializeOptions,\n  parent?: { bsonOptions?: BSONSerializeOptions }\n): BSONSerializeOptions {\n  const parentOptions = parent?.bsonOptions;\n  return {\n    raw: options?.raw ?? parentOptions?.raw ?? false,\n    promoteLongs: options?.promoteLongs ?? parentOptions?.promoteLongs ?? true,\n    promoteValues: options?.promoteValues ?? parentOptions?.promoteValues ?? true,\n    promoteBuffers: options?.promoteBuffers ?? parentOptions?.promoteBuffers ?? false,\n    ignoreUndefined: options?.ignoreUndefined ?? parentOptions?.ignoreUndefined ?? false,\n    bsonRegExp: options?.bsonRegExp ?? parentOptions?.bsonRegExp ?? false,\n    serializeFunctions: options?.serializeFunctions ?? parentOptions?.serializeFunctions ?? false,\n    fieldsAsRaw: options?.fieldsAsRaw ?? parentOptions?.fieldsAsRaw ?? {}\n  };\n}\n", "import type { TagSet } from './sdam/server_description';\nimport type { Document } from './bson';\nimport type { ClientSession } from './sessions';\nimport { MongoInvalidArgumentError } from './error';\n\n/** @public */\nexport type ReadPreferenceLike = ReadPreference | ReadPreferenceMode;\n\n/** @public */\nexport const ReadPreferenceMode = Object.freeze({\n  primary: 'primary',\n  primaryPreferred: 'primaryPreferred',\n  secondary: 'secondary',\n  secondaryPreferred: 'secondaryPreferred',\n  nearest: 'nearest'\n} as const);\n\n/** @public */\nexport type ReadPreferenceMode = typeof ReadPreferenceMode[keyof typeof ReadPreferenceMode];\n\n/** @public */\nexport interface HedgeOptions {\n  /** Explicitly enable or disable hedged reads. */\n  enabled?: boolean;\n}\n\n/** @public */\nexport interface ReadPreferenceOptions {\n  /** Max secondary read staleness in seconds, Minimum value is 90 seconds.*/\n  maxStalenessSeconds?: number;\n  /** Server mode in which the same query is dispatched in parallel to multiple replica set members. */\n  hedge?: HedgeOptions;\n}\n\n/** @public */\nexport interface ReadPreferenceLikeOptions extends ReadPreferenceOptions {\n  readPreference?:\n    | ReadPreferenceLike\n    | {\n        mode?: ReadPreferenceMode;\n        preference?: ReadPreferenceMode;\n        tags?: TagSet[];\n        maxStalenessSeconds?: number;\n      };\n}\n\n/** @public */\nexport interface ReadPreferenceFromOptions extends ReadPreferenceLikeOptions {\n  session?: ClientSession;\n  readPreferenceTags?: TagSet[];\n  hedge?: HedgeOptions;\n}\n\n/**\n * The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is\n * used to construct connections.\n * @public\n *\n * @see https://docs.mongodb.com/manual/core/read-preference/\n */\nexport class ReadPreference {\n  mode: ReadPreferenceMode;\n  tags?: TagSet[];\n  hedge?: HedgeOptions;\n  maxStalenessSeconds?: number;\n  minWireVersion?: number;\n\n  public static PRIMARY = ReadPreferenceMode.primary;\n  public static PRIMARY_PREFERRED = ReadPreferenceMode.primaryPreferred;\n  public static SECONDARY = ReadPreferenceMode.secondary;\n  public static SECONDARY_PREFERRED = ReadPreferenceMode.secondaryPreferred;\n  public static NEAREST = ReadPreferenceMode.nearest;\n\n  public static primary = new ReadPreference(ReadPreferenceMode.primary);\n  public static primaryPreferred = new ReadPreference(ReadPreferenceMode.primaryPreferred);\n  public static secondary = new ReadPreference(ReadPreferenceMode.secondary);\n  public static secondaryPreferred = new ReadPreference(ReadPreferenceMode.secondaryPreferred);\n  public static nearest = new ReadPreference(ReadPreferenceMode.nearest);\n\n  /**\n   * @param mode - A string describing the read preference mode (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n   * @param tags - A tag set used to target reads to members with the specified tag(s). tagSet is not available if using read preference mode primary.\n   * @param options - Additional read preference options\n   */\n  constructor(mode: ReadPreferenceMode, tags?: TagSet[], options?: ReadPreferenceOptions) {\n    if (!ReadPreference.isValid(mode)) {\n      throw new MongoInvalidArgumentError(`Invalid read preference mode ${JSON.stringify(mode)}`);\n    }\n    if (options == null && typeof tags === 'object' && !Array.isArray(tags)) {\n      options = tags;\n      tags = undefined;\n    } else if (tags && !Array.isArray(tags)) {\n      throw new MongoInvalidArgumentError('ReadPreference tags must be an array');\n    }\n\n    this.mode = mode;\n    this.tags = tags;\n    this.hedge = options?.hedge;\n    this.maxStalenessSeconds = undefined;\n    this.minWireVersion = undefined;\n\n    options = options ?? {};\n    if (options.maxStalenessSeconds != null) {\n      if (options.maxStalenessSeconds <= 0) {\n        throw new MongoInvalidArgumentError('maxStalenessSeconds must be a positive integer');\n      }\n\n      this.maxStalenessSeconds = options.maxStalenessSeconds;\n\n      // NOTE: The minimum required wire version is 5 for this read preference. If the existing\n      //       topology has a lower value then a MongoError will be thrown during server selection.\n      this.minWireVersion = 5;\n    }\n\n    if (this.mode === ReadPreference.PRIMARY) {\n      if (this.tags && Array.isArray(this.tags) && this.tags.length > 0) {\n        throw new MongoInvalidArgumentError('Primary read preference cannot be combined with tags');\n      }\n\n      if (this.maxStalenessSeconds) {\n        throw new MongoInvalidArgumentError(\n          'Primary read preference cannot be combined with maxStalenessSeconds'\n        );\n      }\n\n      if (this.hedge) {\n        throw new MongoInvalidArgumentError(\n          'Primary read preference cannot be combined with hedge'\n        );\n      }\n    }\n  }\n\n  // Support the deprecated `preference` property introduced in the porcelain layer\n  get preference(): ReadPreferenceMode {\n    return this.mode;\n  }\n\n  static fromString(mode: string): ReadPreference {\n    return new ReadPreference(mode as ReadPreferenceMode);\n  }\n\n  /**\n   * Construct a ReadPreference given an options object.\n   *\n   * @param options - The options object from which to extract the read preference.\n   */\n  static fromOptions(options?: ReadPreferenceFromOptions): ReadPreference | undefined {\n    if (!options) return;\n    const readPreference =\n      options.readPreference ?? options.session?.transaction.options.readPreference;\n    const readPreferenceTags = options.readPreferenceTags;\n\n    if (readPreference == null) {\n      return;\n    }\n\n    if (typeof readPreference === 'string') {\n      return new ReadPreference(readPreference as ReadPreferenceMode, readPreferenceTags);\n    } else if (!(readPreference instanceof ReadPreference) && typeof readPreference === 'object') {\n      const mode = readPreference.mode || readPreference.preference;\n      if (mode && typeof mode === 'string') {\n        return new ReadPreference(\n          mode as ReadPreferenceMode,\n          readPreference.tags ?? readPreferenceTags,\n          {\n            maxStalenessSeconds: readPreference.maxStalenessSeconds,\n            hedge: options.hedge\n          }\n        );\n      }\n    }\n\n    if (readPreferenceTags) {\n      readPreference.tags = readPreferenceTags;\n    }\n\n    return readPreference as ReadPreference;\n  }\n\n  /**\n   * Replaces options.readPreference with a ReadPreference instance\n   */\n  static translate(options: ReadPreferenceLikeOptions): ReadPreferenceLikeOptions {\n    if (options.readPreference == null) return options;\n    const r = options.readPreference;\n\n    if (typeof r === 'string') {\n      options.readPreference = new ReadPreference(r as ReadPreferenceMode);\n    } else if (r && !(r instanceof ReadPreference) && typeof r === 'object') {\n      const mode = r.mode || r.preference;\n      if (mode && typeof mode === 'string') {\n        options.readPreference = new ReadPreference(mode as ReadPreferenceMode, r.tags, {\n          maxStalenessSeconds: r.maxStalenessSeconds\n        });\n      }\n    } else if (!(r instanceof ReadPreference)) {\n      throw new MongoInvalidArgumentError(`Invalid read preference: ${r}`);\n    }\n\n    return options;\n  }\n\n  /**\n   * Validate if a mode is legal\n   *\n   * @param mode - The string representing the read preference mode.\n   */\n  static isValid(mode: string): boolean {\n    const VALID_MODES = new Set([\n      ReadPreference.PRIMARY,\n      ReadPreference.PRIMARY_PREFERRED,\n      ReadPreference.SECONDARY,\n      ReadPreference.SECONDARY_PREFERRED,\n      ReadPreference.NEAREST,\n      null\n    ]);\n\n    return VALID_MODES.has(mode as ReadPreferenceMode);\n  }\n\n  /**\n   * Validate if a mode is legal\n   *\n   * @param mode - The string representing the read preference mode.\n   */\n  isValid(mode?: string): boolean {\n    return ReadPreference.isValid(typeof mode === 'string' ? mode : this.mode);\n  }\n\n  /**\n   * Indicates that this readPreference needs the \"slaveOk\" bit when sent over the wire\n   *\n   * @see https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#op-query\n   */\n  slaveOk(): boolean {\n    const NEEDS_SLAVEOK = new Set<string>([\n      ReadPreference.PRIMARY_PREFERRED,\n      ReadPreference.SECONDARY,\n      ReadPreference.SECONDARY_PREFERRED,\n      ReadPreference.NEAREST\n    ]);\n\n    return NEEDS_SLAVEOK.has(this.mode);\n  }\n\n  /**\n   * Check if the two ReadPreferences are equivalent\n   *\n   * @param readPreference - The read preference with which to check equality\n   */\n  equals(readPreference: ReadPreference): boolean {\n    return readPreference.mode === this.mode;\n  }\n\n  /** Return JSON representation */\n  toJSON(): Document {\n    const readPreference = { mode: this.mode } as Document;\n    if (Array.isArray(this.tags)) readPreference.tags = this.tags;\n    if (this.maxStalenessSeconds) readPreference.maxStalenessSeconds = this.maxStalenessSeconds;\n    if (this.hedge) readPreference.hedge = this.hedge;\n    return readPreference;\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "export const MIN_SUPPORTED_SERVER_VERSION = '2.6';\nexport const MAX_SUPPORTED_SERVER_VERSION = '5.0';\nexport const MIN_SUPPORTED_WIRE_VERSION = 2;\nexport const MAX_SUPPORTED_WIRE_VERSION = 13;\nexport const OP_REPLY = 1;\nexport const OP_UPDATE = 2001;\nexport const OP_INSERT = 2002;\nexport const OP_QUERY = 2004;\nexport const OP_GETMORE = 2005;\nexport const OP_DELETE = 2006;\nexport const OP_KILL_CURSORS = 2007;\nexport const OP_COMPRESSED = 2012;\nexport const OP_MSG = 2013;\n", "{\n  \"name\": \"mongodb\",\n  \"version\": \"4.1.4\",\n  \"description\": \"The official MongoDB driver for Node.js\",\n  \"main\": \"lib/index.js\",\n  \"files\": [\n    \"lib\",\n    \"src\",\n    \"etc/prepare.js\",\n    \"mongodb.d.ts\",\n    \"mongodb.ts34.d.ts\"\n  ],\n  \"types\": \"mongodb.d.ts\",\n  \"typesVersions\": {\n    \"<=4.0.2\": {\n      \"mongodb.d.ts\": [\n        \"mongodb.ts34.d.ts\"\n      ]\n    }\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:mongodb/node-mongodb-native.git\"\n  },\n  \"keywords\": [\n    \"mongodb\",\n    \"driver\",\n    \"official\"\n  ],\n  \"author\": {\n    \"name\": \"The MongoDB NodeJS Team\",\n    \"email\": \"dbx-node@mongodb.com\"\n  },\n  \"dependencies\": {\n    \"bson\": \"^4.5.4\",\n    \"denque\": \"^2.0.1\",\n    \"mongodb-connection-string-url\": \"^2.1.0\"\n  },\n  \"devDependencies\": {\n    \"@istanbuljs/nyc-config-typescript\": \"^1.0.1\",\n    \"@microsoft/api-extractor\": \"^7.18.14\",\n    \"@microsoft/tsdoc-config\": \"^0.15.2\",\n    \"@types/chai\": \"^4.2.22\",\n    \"@types/chai-subset\": \"^1.3.3\",\n    \"@types/kerberos\": \"^1.1.1\",\n    \"@types/mocha\": \"^9.0.0\",\n    \"@types/node\": \"^16.10.3\",\n    \"@types/saslprep\": \"^1.0.1\",\n    \"@types/semver\": \"^7.3.8\",\n    \"@types/whatwg-url\": \"^8.2.1\",\n    \"@typescript-eslint/eslint-plugin\": \"^4.33.0\",\n    \"@typescript-eslint/parser\": \"^4.33.0\",\n    \"bluebird\": \"^3.7.2\",\n    \"chai\": \"^4.3.4\",\n    \"chai-subset\": \"^1.6.0\",\n    \"chalk\": \"^4.1.2\",\n    \"co\": \"4.6.0\",\n    \"downlevel-dts\": \"^0.7.0\",\n    \"eslint\": \"^7.32.0\",\n    \"eslint-config-prettier\": \"^8.3.0\",\n    \"eslint-plugin-prettier\": \"^4.0.0\",\n    \"eslint-plugin-tsdoc\": \"^0.2.14\",\n    \"js-yaml\": \"^4.1.0\",\n    \"lodash.camelcase\": \"^4.3.0\",\n    \"mocha\": \"^9.1.2\",\n    \"mocha-sinon\": \"^2.1.2\",\n    \"mongodb-mock-server\": \"^2.0.1\",\n    \"nyc\": \"^15.1.0\",\n    \"prettier\": \"^2.4.1\",\n    \"rimraf\": \"^3.0.2\",\n    \"semver\": \"^7.3.5\",\n    \"sinon\": \"^11.1.2\",\n    \"sinon-chai\": \"^3.7.0\",\n    \"source-map-support\": \"^0.5.20\",\n    \"standard-version\": \"^9.3.1\",\n    \"ts-node\": \"^10.2.1\",\n    \"tsd\": \"^0.17.0\",\n    \"typedoc\": \"^0.22.5\",\n    \"typescript\": \"4.4.3\",\n    \"typescript-cached-transpile\": \"^0.0.6\",\n    \"xml2js\": \"^0.4.23\",\n    \"yargs\": \"^17.2.1\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"engines\": {\n    \"node\": \">=12.9.0\"\n  },\n  \"bugs\": {\n    \"url\": \"https://jira.mongodb.org/projects/NODE/issues/\"\n  },\n  \"homepage\": \"https://github.com/mongodb/node-mongodb-native\",\n  \"optionalDependencies\": {\n    \"saslprep\": \"^1.0.3\"\n  },\n  \"scripts\": {\n    \"build:evergreen\": \"node .evergreen/generate_evergreen_tasks.js\",\n    \"build:ts\": \"rimraf lib && ./node_modules/typescript/bin/tsc\",\n    \"build:dts\": \"npm run build:ts && api-extractor run && rimraf 'lib/**/*.d.ts*' && downlevel-dts mongodb.d.ts mongodb.ts34.d.ts\",\n    \"build:docs\": \"typedoc\",\n    \"check:bench\": \"node test/benchmarks/driverBench\",\n    \"check:coverage\": \"nyc npm run test:all\",\n    \"check:lint\": \"npm run build:dts && npm run check:dts && npm run check:eslint && npm run check:tsd\",\n    \"check:eslint\": \"eslint -v && eslint --max-warnings=0 --ext '.js,.ts' src test\",\n    \"check:tsd\": \"tsd --version && tsd\",\n    \"check:dts\": \"./node_modules/typescript/bin/tsc --noEmit mongodb.d.ts && tsd\",\n    \"check:test\": \"mocha --file test/tools/runner --recursive test/functional test/integration\",\n    \"check:unit\": \"mocha --recursive test/unit/\",\n    \"check:ts\": \"./node_modules/typescript/bin/tsc -v && ./node_modules/typescript/bin/tsc --noEmit\",\n    \"check:atlas\": \"mocha --config \\\"test/manual/mocharc.json\\\" test/manual/atlas_connectivity.test.js\",\n    \"check:adl\": \"mocha --file test/tools/runner test/manual/data_lake.test.js\",\n    \"check:aws\": \"mocha --file test/tools/runner test/functional/mongodb_aws.test.js\",\n    \"check:ocsp\": \"mocha --config \\\"test/manual/mocharc.json\\\" test/manual/ocsp_support.test.js\",\n    \"check:kerberos\": \"mocha --config \\\"test/manual/mocharc.json\\\" test/manual/kerberos.test.js\",\n    \"check:tls\": \"mocha --config \\\"test/manual/mocharc.json\\\" test/manual/tls_support.test.js\",\n    \"check:ldap\": \"mocha --config \\\"test/manual/mocharc.json\\\" test/manual/ldap.test.js\",\n    \"check:csfle\": \"mocha --file test/tools/runner test/functional/client_side_encryption\",\n    \"check:snappy\": \"mocha --file test/tools/runner test/functional/unit_snappy.test.js\",\n    \"prepare\": \"node etc/prepare.js\",\n    \"release\": \"standard-version -i HISTORY.md\",\n    \"test\": \"npm run check:lint && npm run test:all\",\n    \"test:all\": \"npm run check:unit && npm run check:test\"\n  },\n  \"tsd\": {\n    \"directory\": \"test/types\",\n    \"compilerOptions\": {\n      \"strict\": true,\n      \"target\": \"esnext\",\n      \"module\": \"commonjs\",\n      \"moduleResolution\": \"node\"\n    }\n  }\n}\n", "import * as os from 'os';\nimport * as crypto from 'crypto';\nimport { PromiseProvider } from './promise_provider';\nimport {\n  AnyError,\n  MongoParseError,\n  MongoRuntimeError,\n  MongoCompatibilityError,\n  MongoNotConnectedError,\n  MongoInvalidArgumentError,\n  MongoExpiredSessionError\n} from './error';\nimport { WriteConcern, WriteConcernOptions, W } from './write_concern';\nimport type { Server } from './sdam/server';\nimport type { Topology } from './sdam/topology';\nimport { ServerType } from './sdam/common';\nimport type { Db } from './db';\nimport type { Collection } from './collection';\nimport type { OperationOptions, Hint } from './operations/operation';\nimport type { ClientSession } from './sessions';\nimport { ReadConcern } from './read_concern';\nimport type { Connection } from './cmap/connection';\nimport { Document, ObjectId, resolveBSONOptions } from './bson';\nimport type { IndexSpecification, IndexDirection } from './operations/indexes';\nimport type { Explain } from './explain';\nimport type { MongoClient } from './mongo_client';\nimport type { CommandOperationOptions, OperationParent } from './operations/command';\nimport { ReadPreference } from './read_preference';\nimport { URL } from 'url';\nimport { MAX_SUPPORTED_WIRE_VERSION } from './cmap/wire_protocol/constants';\n\n/**\n * MongoDB Driver style callback\n * @public\n */\nexport type Callback<T = any> = (error?: AnyError, result?: T) => void;\n/** @public */\nexport type CallbackWithType<E = AnyError, T0 = any> = (error?: E, result?: T0) => void;\n\nexport const MAX_JS_INT = Number.MAX_SAFE_INTEGER + 1;\n\nexport type AnyOptions = Document;\n\n/**\n * Throws if collectionName is not a valid mongodb collection namespace.\n * @internal\n */\nexport function checkCollectionName(collectionName: string): void {\n  if ('string' !== typeof collectionName) {\n    throw new MongoInvalidArgumentError('Collection name must be a String');\n  }\n\n  if (!collectionName || collectionName.indexOf('..') !== -1) {\n    throw new MongoInvalidArgumentError('Collection names cannot be empty');\n  }\n\n  if (\n    collectionName.indexOf('$') !== -1 &&\n    collectionName.match(/((^\\$cmd)|(oplog\\.\\$main))/) == null\n  ) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new MongoInvalidArgumentError(\"Collection names must not contain '$'\");\n  }\n\n  if (collectionName.match(/^\\.|\\.$/) != null) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new MongoInvalidArgumentError(\"Collection names must not start or end with '.'\");\n  }\n\n  // Validate that we are not passing 0x00 in the collection name\n  if (collectionName.indexOf('\\x00') !== -1) {\n    // TODO(NODE-3483): Use MongoNamespace static method\n    throw new MongoInvalidArgumentError('Collection names cannot contain a null character');\n  }\n}\n\n/**\n * Ensure Hint field is in a shape we expect:\n * - object of index names mapping to 1 or -1\n * - just an index name\n * @internal\n */\nexport function normalizeHintField(hint?: Hint): Hint | undefined {\n  let finalHint = undefined;\n\n  if (typeof hint === 'string') {\n    finalHint = hint;\n  } else if (Array.isArray(hint)) {\n    finalHint = {};\n\n    hint.forEach(param => {\n      finalHint[param] = 1;\n    });\n  } else if (hint != null && typeof hint === 'object') {\n    finalHint = {} as Document;\n    for (const name in hint) {\n      finalHint[name] = hint[name];\n    }\n  }\n\n  return finalHint;\n}\n\ninterface IndexOptions {\n  name: string;\n  keys?: string[];\n  fieldHash: Document;\n}\n\n/**\n * Create an index specifier based on\n * @internal\n */\nexport function parseIndexOptions(indexSpec: IndexSpecification): IndexOptions {\n  const fieldHash: { [key: string]: IndexDirection } = {};\n  const indexes = [];\n  let keys;\n\n  // Get all the fields accordingly\n  if ('string' === typeof indexSpec) {\n    // 'type'\n    indexes.push(indexSpec + '_' + 1);\n    fieldHash[indexSpec] = 1;\n  } else if (Array.isArray(indexSpec)) {\n    indexSpec.forEach((f: any) => {\n      if ('string' === typeof f) {\n        // [{location:'2d'}, 'type']\n        indexes.push(f + '_' + 1);\n        fieldHash[f] = 1;\n      } else if (Array.isArray(f)) {\n        // [['location', '2d'],['type', 1]]\n        indexes.push(f[0] + '_' + (f[1] || 1));\n        fieldHash[f[0]] = f[1] || 1;\n      } else if (isObject(f)) {\n        // [{location:'2d'}, {type:1}]\n        keys = Object.keys(f);\n        keys.forEach(k => {\n          indexes.push(k + '_' + (f as AnyOptions)[k]);\n          fieldHash[k] = (f as AnyOptions)[k];\n        });\n      } else {\n        // undefined (ignore)\n      }\n    });\n  } else if (isObject(indexSpec)) {\n    // {location:'2d', type:1}\n    keys = Object.keys(indexSpec);\n    Object.entries(indexSpec).forEach(([key, value]) => {\n      indexes.push(key + '_' + value);\n      fieldHash[key] = value;\n    });\n  }\n\n  return {\n    name: indexes.join('_'),\n    keys: keys,\n    fieldHash: fieldHash\n  };\n}\n\n/**\n * Checks if arg is an Object:\n * - **NOTE**: the check is based on the `[Symbol.toStringTag]() === 'Object'`\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isObject(arg: unknown): arg is object {\n  return '[object Object]' === Object.prototype.toString.call(arg);\n}\n\n/** @internal */\nexport function mergeOptions<T, S>(target: T, source: S): T & S {\n  return { ...target, ...source };\n}\n\n/** @internal */\nexport function filterOptions(options: AnyOptions, names: string[]): AnyOptions {\n  const filterOptions: AnyOptions = {};\n\n  for (const name in options) {\n    if (names.includes(name)) {\n      filterOptions[name] = options[name];\n    }\n  }\n\n  // Filtered options\n  return filterOptions;\n}\n\n/**\n * Executes the given operation with provided arguments.\n *\n * @remarks\n * This method reduces large amounts of duplication in the entire codebase by providing\n * a single point for determining whether callbacks or promises should be used. Additionally\n * it allows for a single point of entry to provide features such as implicit sessions, which\n * are required by the Driver Sessions specification in the event that a ClientSession is\n * not provided\n *\n * @internal\n *\n * @param topology - The topology to execute this operation on\n * @param operation - The operation to execute\n * @param args - Arguments to apply the provided operation\n * @param options - Options that modify the behavior of the method\n */\nexport function executeLegacyOperation(\n  topology: Topology,\n  operation: (...args: any[]) => void | Promise<Document>,\n  args: any[],\n  options?: AnyOptions\n): void | Promise<any> {\n  const Promise = PromiseProvider.get();\n\n  if (!Array.isArray(args)) {\n    // TODO(NODE-3483)\n    throw new MongoRuntimeError('This method requires an array of arguments to apply');\n  }\n\n  options = options ?? {};\n\n  let callback = args[args.length - 1];\n\n  // The driver sessions spec mandates that we implicitly create sessions for operations\n  // that are not explicitly provided with a session.\n  let session: ClientSession;\n  let opOptions: any;\n  let owner: any;\n  if (!options.skipSessions && topology.hasSessionSupport()) {\n    opOptions = args[args.length - 2];\n    if (opOptions == null || opOptions.session == null) {\n      owner = Symbol();\n      session = topology.startSession({ owner });\n      const optionsIndex = args.length - 2;\n      args[optionsIndex] = Object.assign({}, args[optionsIndex], { session: session });\n    } else if (opOptions.session && opOptions.session.hasEnded) {\n      throw new MongoExpiredSessionError();\n    }\n  }\n\n  function makeExecuteCallback(\n    resolve: (value?: Document) => void,\n    reject: (reason?: AnyError) => void\n  ) {\n    return function (err?: AnyError, result?: any) {\n      if (session && session.owner === owner && !options?.returnsCursor) {\n        session.endSession(() => {\n          delete opOptions.session;\n          if (err) return reject(err);\n          resolve(result);\n        });\n      } else {\n        if (err) return reject(err);\n        resolve(result);\n      }\n    };\n  }\n\n  // Execute using callback\n  if (typeof callback === 'function') {\n    callback = args.pop();\n    const handler = makeExecuteCallback(\n      result => callback(undefined, result),\n      err => callback(err, null)\n    );\n    args.push(handler);\n\n    try {\n      return operation(...args);\n    } catch (e) {\n      handler(e);\n      throw e;\n    }\n  }\n\n  // Return a Promise\n  if (args[args.length - 1] != null) {\n    // TODO(NODE-3483)\n    throw new MongoRuntimeError('Final argument to `executeLegacyOperation` must be a callback');\n  }\n\n  return new Promise<any>((resolve, reject) => {\n    const handler = makeExecuteCallback(resolve, reject);\n    args[args.length - 1] = handler;\n\n    try {\n      return operation(...args);\n    } catch (e) {\n      handler(e);\n    }\n  });\n}\n\ninterface HasRetryableWrites {\n  retryWrites?: boolean;\n}\n/**\n * Applies retryWrites: true to a command if retryWrites is set on the command's database.\n * @internal\n *\n * @param target - The target command to which we will apply retryWrites.\n * @param db - The database from which we can inherit a retryWrites value.\n */\nexport function applyRetryableWrites<T extends HasRetryableWrites>(target: T, db?: Db): T {\n  if (db && db.s.options?.retryWrites) {\n    target.retryWrites = true;\n  }\n\n  return target;\n}\n\ninterface HasWriteConcern {\n  writeConcern?: WriteConcernOptions | WriteConcern | W;\n}\n/**\n * Applies a write concern to a command based on well defined inheritance rules, optionally\n * detecting support for the write concern in the first place.\n * @internal\n *\n * @param target - the target command we will be applying the write concern to\n * @param sources - sources where we can inherit default write concerns from\n * @param options - optional settings passed into a command for write concern overrides\n */\nexport function applyWriteConcern<T extends HasWriteConcern>(\n  target: T,\n  sources: { db?: Db; collection?: Collection },\n  options?: OperationOptions & WriteConcernOptions\n): T {\n  options = options ?? {};\n  const db = sources.db;\n  const coll = sources.collection;\n\n  if (options.session && options.session.inTransaction()) {\n    // writeConcern is not allowed within a multi-statement transaction\n    if (target.writeConcern) {\n      delete target.writeConcern;\n    }\n\n    return target;\n  }\n\n  const writeConcern = WriteConcern.fromOptions(options);\n  if (writeConcern) {\n    return Object.assign(target, { writeConcern });\n  }\n\n  if (coll && coll.writeConcern) {\n    return Object.assign(target, { writeConcern: Object.assign({}, coll.writeConcern) });\n  }\n\n  if (db && db.writeConcern) {\n    return Object.assign(target, { writeConcern: Object.assign({}, db.writeConcern) });\n  }\n\n  return target;\n}\n\n/**\n * Checks if a given value is a Promise\n *\n * @typeParam T - The result type of maybePromise\n * @param maybePromise - An object that could be a promise\n * @returns true if the provided value is a Promise\n */\nexport function isPromiseLike<T = any>(\n  maybePromise?: PromiseLike<T> | void\n): maybePromise is Promise<T> {\n  return !!maybePromise && typeof maybePromise.then === 'function';\n}\n\n/**\n * Applies collation to a given command.\n * @internal\n *\n * @param command - the command on which to apply collation\n * @param target - target of command\n * @param options - options containing collation settings\n */\nexport function decorateWithCollation(\n  command: Document,\n  target: MongoClient | Db | Collection,\n  options: AnyOptions\n): void {\n  const capabilities = getTopology(target).capabilities;\n  if (options.collation && typeof options.collation === 'object') {\n    if (capabilities && capabilities.commandsTakeCollation) {\n      command.collation = options.collation;\n    } else {\n      throw new MongoCompatibilityError(`Current topology does not support collation`);\n    }\n  }\n}\n\n/**\n * Applies a read concern to a given command.\n * @internal\n *\n * @param command - the command on which to apply the read concern\n * @param coll - the parent collection of the operation calling this method\n */\nexport function decorateWithReadConcern(\n  command: Document,\n  coll: { s: { readConcern?: ReadConcern } },\n  options?: OperationOptions\n): void {\n  if (options && options.session && options.session.inTransaction()) {\n    return;\n  }\n  const readConcern = Object.assign({}, command.readConcern || {});\n  if (coll.s.readConcern) {\n    Object.assign(readConcern, coll.s.readConcern);\n  }\n\n  if (Object.keys(readConcern).length > 0) {\n    Object.assign(command, { readConcern: readConcern });\n  }\n}\n\n/**\n * Applies an explain to a given command.\n * @internal\n *\n * @param command - the command on which to apply the explain\n * @param options - the options containing the explain verbosity\n */\nexport function decorateWithExplain(command: Document, explain: Explain): Document {\n  if (command.explain) {\n    return command;\n  }\n\n  return { explain: command, verbosity: explain.verbosity };\n}\n\n/**\n * A helper function to get the topology from a given provider. Throws\n * if the topology cannot be found.\n * @internal\n */\nexport function getTopology<T>(provider: MongoClient | Db | Collection<T>): Topology {\n  if (`topology` in provider && provider.topology) {\n    return provider.topology;\n  } else if ('client' in provider.s && provider.s.client.topology) {\n    return provider.s.client.topology;\n  } else if ('db' in provider.s && provider.s.db.s.client.topology) {\n    return provider.s.db.s.client.topology;\n  }\n\n  throw new MongoNotConnectedError('MongoClient must be connected to perform this operation');\n}\n\n/**\n * Default message handler for generating deprecation warnings.\n * @internal\n *\n * @param name - function name\n * @param option - option name\n * @returns warning message\n */\nexport function defaultMsgHandler(name: string, option: string): string {\n  return `${name} option [${option}] is deprecated and will be removed in a later version.`;\n}\n\nexport interface DeprecateOptionsConfig {\n  /** function name */\n  name: string;\n  /** options to deprecate */\n  deprecatedOptions: string[];\n  /** index of options object in function arguments array */\n  optionsIndex: number;\n  /** optional custom message handler to generate warnings */\n  msgHandler?(name: string, option: string): string;\n}\n\n/**\n * Deprecates a given function's options.\n * @internal\n *\n * @param this - the bound class if this is a method\n * @param config - configuration for deprecation\n * @param fn - the target function of deprecation\n * @returns modified function that warns once per deprecated option, and executes original function\n */\nexport function deprecateOptions(\n  this: unknown,\n  config: DeprecateOptionsConfig,\n  fn: (...args: any[]) => any\n): any {\n  if ((process as any).noDeprecation === true) {\n    return fn;\n  }\n\n  const msgHandler = config.msgHandler ? config.msgHandler : defaultMsgHandler;\n\n  const optionsWarned = new Set();\n  function deprecated(this: any, ...args: any[]) {\n    const options = args[config.optionsIndex] as AnyOptions;\n\n    // ensure options is a valid, non-empty object, otherwise short-circuit\n    if (!isObject(options) || Object.keys(options).length === 0) {\n      return fn.bind(this)(...args); // call the function, no change\n    }\n\n    // interrupt the function call with a warning\n    for (const deprecatedOption of config.deprecatedOptions) {\n      if (deprecatedOption in options && !optionsWarned.has(deprecatedOption)) {\n        optionsWarned.add(deprecatedOption);\n        const msg = msgHandler(config.name, deprecatedOption);\n        emitWarning(msg);\n        if (this && 'getLogger' in this) {\n          const logger = this.getLogger();\n          if (logger) {\n            logger.warn(msg);\n          }\n        }\n      }\n    }\n\n    return fn.bind(this)(...args);\n  }\n\n  // These lines copied from https://github.com/nodejs/node/blob/25e5ae41688676a5fd29b2e2e7602168eee4ceb5/lib/internal/util.js#L73-L80\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  Object.setPrototypeOf(deprecated, fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype, as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\n/** @internal */\nexport function ns(ns: string): MongoDBNamespace {\n  return MongoDBNamespace.fromString(ns);\n}\n\n/** @public */\nexport class MongoDBNamespace {\n  db: string;\n  collection?: string;\n  /**\n   * Create a namespace object\n   *\n   * @param db - database name\n   * @param collection - collection name\n   */\n  constructor(db: string, collection?: string) {\n    this.db = db;\n    this.collection = collection;\n  }\n\n  toString(): string {\n    return this.collection ? `${this.db}.${this.collection}` : this.db;\n  }\n\n  withCollection(collection: string): MongoDBNamespace {\n    return new MongoDBNamespace(this.db, collection);\n  }\n\n  static fromString(namespace?: string): MongoDBNamespace {\n    if (!namespace) {\n      // TODO(NODE-3483): Replace with MongoNamespaceError\n      throw new MongoRuntimeError(`Cannot parse namespace from \"${namespace}\"`);\n    }\n\n    const [db, ...collection] = namespace.split('.');\n    return new MongoDBNamespace(db, collection.join('.'));\n  }\n}\n\n/** @internal */\nexport function* makeCounter(seed = 0): Generator<number> {\n  let count = seed;\n  while (true) {\n    const newCount = count;\n    count += 1;\n    yield newCount;\n  }\n}\n\n/**\n * Helper function for either accepting a callback, or returning a promise\n * @internal\n *\n * @param callback - The last function argument in exposed method, controls if a Promise is returned\n * @param wrapper - A function that wraps the callback\n * @returns Returns void if a callback is supplied, else returns a Promise.\n */\nexport function maybePromise<T>(\n  callback: Callback<T> | undefined,\n  wrapper: (fn: Callback<T>) => void\n): Promise<T> | void {\n  const Promise = PromiseProvider.get();\n  let result: Promise<T> | void;\n  if (typeof callback !== 'function') {\n    result = new Promise<any>((resolve, reject) => {\n      callback = (err, res) => {\n        if (err) return reject(err);\n        resolve(res);\n      };\n    });\n  }\n\n  wrapper((err, res) => {\n    if (err != null) {\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        callback!(err);\n      } catch (error) {\n        process.nextTick(() => {\n          throw error;\n        });\n      }\n\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    callback!(err, res);\n  });\n\n  return result;\n}\n\n/** @internal */\nexport function databaseNamespace(ns: string): string {\n  return ns.split('.')[0];\n}\n\n/**\n * Synchronously Generate a UUIDv4\n * @internal\n */\nexport function uuidV4(): Buffer {\n  const result = crypto.randomBytes(16);\n  result[6] = (result[6] & 0x0f) | 0x40;\n  result[8] = (result[8] & 0x3f) | 0x80;\n  return result;\n}\n\n/**\n * A helper function for determining `maxWireVersion` between legacy and new topology instances\n * @internal\n */\nexport function maxWireVersion(topologyOrServer?: Connection | Topology | Server): number {\n  if (topologyOrServer) {\n    if (topologyOrServer.loadBalanced) {\n      // Since we do not have a monitor, we assume the load balanced server is always\n      // pointed at the latest mongodb version. There is a risk that for on-prem\n      // deployments that don't upgrade immediately that this could alert to the\n      // application that a feature is avaiable that is actually not.\n      return MAX_SUPPORTED_WIRE_VERSION;\n    }\n    if (topologyOrServer.ismaster) {\n      return topologyOrServer.ismaster.maxWireVersion;\n    }\n\n    if ('lastIsMaster' in topologyOrServer && typeof topologyOrServer.lastIsMaster === 'function') {\n      const lastIsMaster = topologyOrServer.lastIsMaster();\n      if (lastIsMaster) {\n        return lastIsMaster.maxWireVersion;\n      }\n    }\n\n    if (\n      topologyOrServer.description &&\n      'maxWireVersion' in topologyOrServer.description &&\n      topologyOrServer.description.maxWireVersion != null\n    ) {\n      return topologyOrServer.description.maxWireVersion;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Checks that collation is supported by server.\n * @internal\n *\n * @param server - to check against\n * @param cmd - object where collation may be specified\n */\nexport function collationNotSupported(server: Server, cmd: Document): boolean {\n  return cmd && cmd.collation && maxWireVersion(server) < 5;\n}\n\n/**\n * Applies the function `eachFn` to each item in `arr`, in parallel.\n * @internal\n *\n * @param arr - An array of items to asynchronously iterate over\n * @param eachFn - A function to call on each item of the array. The callback signature is `(item, callback)`, where the callback indicates iteration is complete.\n * @param callback - The callback called after every item has been iterated\n */\nexport function eachAsync<T = Document>(\n  arr: T[],\n  eachFn: (item: T, callback: (err?: AnyError) => void) => void,\n  callback: Callback\n): void {\n  arr = arr || [];\n\n  let idx = 0;\n  let awaiting = 0;\n  for (idx = 0; idx < arr.length; ++idx) {\n    awaiting++;\n    eachFn(arr[idx], eachCallback);\n  }\n\n  if (awaiting === 0) {\n    callback();\n    return;\n  }\n\n  function eachCallback(err?: AnyError) {\n    awaiting--;\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (idx === arr.length && awaiting <= 0) {\n      callback();\n    }\n  }\n}\n\n/** @internal */\nexport function eachAsyncSeries<T = any>(\n  arr: T[],\n  eachFn: (item: T, callback: (err?: AnyError) => void) => void,\n  callback: Callback\n): void {\n  arr = arr || [];\n\n  let idx = 0;\n  let awaiting = arr.length;\n  if (awaiting === 0) {\n    callback();\n    return;\n  }\n\n  function eachCallback(err?: AnyError) {\n    idx++;\n    awaiting--;\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (idx === arr.length && awaiting <= 0) {\n      callback();\n      return;\n    }\n\n    eachFn(arr[idx], eachCallback);\n  }\n\n  eachFn(arr[idx], eachCallback);\n}\n\n/** @internal */\nexport function arrayStrictEqual(arr: unknown[], arr2: unknown[]): boolean {\n  if (!Array.isArray(arr) || !Array.isArray(arr2)) {\n    return false;\n  }\n\n  return arr.length === arr2.length && arr.every((elt, idx) => elt === arr2[idx]);\n}\n\n/** @internal */\nexport function errorStrictEqual(lhs?: AnyError, rhs?: AnyError): boolean {\n  if (lhs === rhs) {\n    return true;\n  }\n\n  if (!lhs || !rhs) {\n    return lhs === rhs;\n  }\n\n  if ((lhs == null && rhs != null) || (lhs != null && rhs == null)) {\n    return false;\n  }\n\n  if (lhs.constructor.name !== rhs.constructor.name) {\n    return false;\n  }\n\n  if (lhs.message !== rhs.message) {\n    return false;\n  }\n\n  return true;\n}\n\ninterface StateTable {\n  [key: string]: string[];\n}\ninterface ObjectWithState {\n  s: { state: string };\n  emit(event: 'stateChanged', state: string, newState: string): void;\n}\ninterface StateTransitionFunction {\n  (target: ObjectWithState, newState: string): void;\n}\n\n/** @public */\nexport type EventEmitterWithState = {\n  /** @internal */\n  stateChanged(previous: string, current: string): void;\n};\n\n/** @internal */\nexport function makeStateMachine(stateTable: StateTable): StateTransitionFunction {\n  return function stateTransition(target, newState) {\n    const legalStates = stateTable[target.s.state];\n    if (legalStates && legalStates.indexOf(newState) < 0) {\n      throw new MongoRuntimeError(\n        `illegal state transition from [${target.s.state}] => [${newState}], allowed: [${legalStates}]`\n      );\n    }\n\n    target.emit('stateChanged', target.s.state, newState);\n    target.s.state = newState;\n  };\n}\n\n/** @public */\nexport interface ClientMetadata {\n  driver: {\n    name: string;\n    version: string;\n  };\n  os: {\n    type: string;\n    name: NodeJS.Platform;\n    architecture: string;\n    version: string;\n  };\n  platform: string;\n  version?: string;\n  application?: {\n    name: string;\n  };\n}\n\n/** @public */\nexport interface ClientMetadataOptions {\n  driverInfo?: {\n    name?: string;\n    version?: string;\n    platform?: string;\n  };\n  appName?: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst NODE_DRIVER_VERSION = require('../package.json').version;\n\nexport function makeClientMetadata(options?: ClientMetadataOptions): ClientMetadata {\n  options = options ?? {};\n\n  const metadata: ClientMetadata = {\n    driver: {\n      name: 'nodejs',\n      version: NODE_DRIVER_VERSION\n    },\n    os: {\n      type: os.type(),\n      name: process.platform,\n      architecture: process.arch,\n      version: os.release()\n    },\n    platform: `Node.js ${process.version}, ${os.endianness()} (unified)`\n  };\n\n  // support optionally provided wrapping driver info\n  if (options.driverInfo) {\n    if (options.driverInfo.name) {\n      metadata.driver.name = `${metadata.driver.name}|${options.driverInfo.name}`;\n    }\n\n    if (options.driverInfo.version) {\n      metadata.version = `${metadata.driver.version}|${options.driverInfo.version}`;\n    }\n\n    if (options.driverInfo.platform) {\n      metadata.platform = `${metadata.platform}|${options.driverInfo.platform}`;\n    }\n  }\n\n  if (options.appName) {\n    // MongoDB requires the appName not exceed a byte length of 128\n    const buffer = Buffer.from(options.appName);\n    metadata.application = {\n      name: buffer.byteLength > 128 ? buffer.slice(0, 128).toString('utf8') : options.appName\n    };\n  }\n\n  return metadata;\n}\n\n/** @internal */\nexport function now(): number {\n  const hrtime = process.hrtime();\n  return Math.floor(hrtime[0] * 1000 + hrtime[1] / 1000000);\n}\n\n/** @internal */\nexport function calculateDurationInMs(started: number): number {\n  if (typeof started !== 'number') {\n    throw new MongoInvalidArgumentError('Numeric value required to calculate duration');\n  }\n\n  const elapsed = now() - started;\n  return elapsed < 0 ? 0 : elapsed;\n}\n\nexport interface InterruptibleAsyncIntervalOptions {\n  /** The interval to execute a method on */\n  interval: number;\n  /** A minimum interval that must elapse before the method is called */\n  minInterval: number;\n  /** Whether the method should be called immediately when the interval is started  */\n  immediate: boolean;\n\n  /**\n   * Only used for testing unreliable timer environments\n   * @internal\n   */\n  clock: () => number;\n}\n\n/** @internal */\nexport interface InterruptibleAsyncInterval {\n  wake(): void;\n  stop(): void;\n}\n\n/**\n * Creates an interval timer which is able to be woken up sooner than\n * the interval. The timer will also debounce multiple calls to wake\n * ensuring that the function is only ever called once within a minimum\n * interval window.\n * @internal\n *\n * @param fn - An async function to run on an interval, must accept a `callback` as its only parameter\n */\nexport function makeInterruptibleAsyncInterval(\n  fn: (callback: Callback) => void,\n  options?: Partial<InterruptibleAsyncIntervalOptions>\n): InterruptibleAsyncInterval {\n  let timerId: NodeJS.Timeout | undefined;\n  let lastCallTime: number;\n  let lastWakeTime: number;\n  let stopped = false;\n\n  options = options ?? {};\n  const interval = options.interval || 1000;\n  const minInterval = options.minInterval || 500;\n  const immediate = typeof options.immediate === 'boolean' ? options.immediate : false;\n  const clock = typeof options.clock === 'function' ? options.clock : now;\n\n  function wake() {\n    const currentTime = clock();\n    const timeSinceLastWake = currentTime - lastWakeTime;\n    const timeSinceLastCall = currentTime - lastCallTime;\n    const timeUntilNextCall = interval - timeSinceLastCall;\n    lastWakeTime = currentTime;\n\n    // For the streaming protocol: there is nothing obviously stopping this\n    // interval from being woken up again while we are waiting \"infinitely\"\n    // for `fn` to be called again`. Since the function effectively\n    // never completes, the `timeUntilNextCall` will continue to grow\n    // negatively unbounded, so it will never trigger a reschedule here.\n\n    // debounce multiple calls to wake within the `minInterval`\n    if (timeSinceLastWake < minInterval) {\n      return;\n    }\n\n    // reschedule a call as soon as possible, ensuring the call never happens\n    // faster than the `minInterval`\n    if (timeUntilNextCall > minInterval) {\n      reschedule(minInterval);\n    }\n\n    // This is possible in virtualized environments like AWS Lambda where our\n    // clock is unreliable. In these cases the timer is \"running\" but never\n    // actually completes, so we want to execute immediately and then attempt\n    // to reschedule.\n    if (timeUntilNextCall < 0) {\n      executeAndReschedule();\n    }\n  }\n\n  function stop() {\n    stopped = true;\n    if (timerId) {\n      clearTimeout(timerId);\n      timerId = undefined;\n    }\n\n    lastCallTime = 0;\n    lastWakeTime = 0;\n  }\n\n  function reschedule(ms?: number) {\n    if (stopped) return;\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n\n    timerId = setTimeout(executeAndReschedule, ms || interval);\n  }\n\n  function executeAndReschedule() {\n    lastWakeTime = 0;\n    lastCallTime = clock();\n\n    fn(err => {\n      if (err) throw err;\n      reschedule(interval);\n    });\n  }\n\n  if (immediate) {\n    executeAndReschedule();\n  } else {\n    lastCallTime = clock();\n    reschedule(undefined);\n  }\n\n  return { wake, stop };\n}\n\n/** @internal */\nexport function hasAtomicOperators(doc: Document | Document[]): boolean {\n  if (Array.isArray(doc)) {\n    for (const document of doc) {\n      if (hasAtomicOperators(document)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const keys = Object.keys(doc);\n  return keys.length > 0 && keys[0][0] === '$';\n}\n\n/**\n * Merge inherited properties from parent into options, prioritizing values from options,\n * then values from parent.\n * @internal\n */\nexport function resolveOptions<T extends CommandOperationOptions>(\n  parent: OperationParent | undefined,\n  options?: T\n): T {\n  const result: T = Object.assign({}, options, resolveBSONOptions(options, parent));\n\n  // Users cannot pass a readConcern/writeConcern to operations in a transaction\n  const session = options?.session;\n  if (!session?.inTransaction()) {\n    const readConcern = ReadConcern.fromOptions(options) ?? parent?.readConcern;\n    if (readConcern) {\n      result.readConcern = readConcern;\n    }\n\n    const writeConcern = WriteConcern.fromOptions(options) ?? parent?.writeConcern;\n    if (writeConcern) {\n      result.writeConcern = writeConcern;\n    }\n  }\n\n  const readPreference = ReadPreference.fromOptions(options) ?? parent?.readPreference;\n  if (readPreference) {\n    result.readPreference = readPreference;\n  }\n\n  return result;\n}\n\nexport function isSuperset(set: Set<any> | any[], subset: Set<any> | any[]): boolean {\n  set = Array.isArray(set) ? new Set(set) : set;\n  subset = Array.isArray(subset) ? new Set(subset) : subset;\n  for (const elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function setDifference(setA: Iterable<any>, setB: Iterable<any>): Set<any> {\n  const difference = new Set(setA);\n  for (const elem of setB) {\n    difference.delete(elem);\n  }\n  return difference;\n}\n\nexport function isRecord<T extends readonly string[]>(\n  value: unknown,\n  requiredKeys: T\n): value is Record<T[number], any>;\nexport function isRecord(value: unknown): value is Record<string, any>;\nexport function isRecord(\n  value: unknown,\n  requiredKeys: string[] | undefined = undefined\n): value is Record<string, any> {\n  const toString = Object.prototype.toString;\n  const hasOwnProperty = Object.prototype.hasOwnProperty;\n  const isObject = (v: unknown) => toString.call(v) === '[object Object]';\n  if (!isObject(value)) {\n    return false;\n  }\n\n  const ctor = (value as any).constructor;\n  if (ctor && ctor.prototype) {\n    if (!isObject(ctor.prototype)) {\n      return false;\n    }\n\n    // Check to see if some method exists from the Object exists\n    if (!hasOwnProperty.call(ctor.prototype, 'isPrototypeOf')) {\n      return false;\n    }\n  }\n\n  if (requiredKeys) {\n    const keys = Object.keys(value as Record<string, any>);\n    return isSuperset(keys, requiredKeys);\n  }\n\n  return true;\n}\n\n/**\n * Make a deep copy of an object\n *\n * NOTE: This is not meant to be the perfect implementation of a deep copy,\n * but instead something that is good enough for the purposes of\n * command monitoring.\n */\nexport function deepCopy<T extends any>(value: T): T {\n  if (value == null) {\n    return value;\n  } else if (Array.isArray(value)) {\n    return value.map(item => deepCopy(item)) as T;\n  } else if (isRecord(value)) {\n    const res = {} as any;\n    for (const key in value) {\n      res[key] = deepCopy(value[key]);\n    }\n    return res;\n  }\n\n  const ctor = (value as any).constructor;\n  if (ctor) {\n    switch (ctor.name.toLowerCase()) {\n      case 'date':\n        return new ctor(Number(value));\n      case 'map':\n        return new Map(value as any) as T;\n      case 'set':\n        return new Set(value as any) as T;\n      case 'buffer':\n        return Buffer.from(value as Buffer) as T;\n    }\n  }\n\n  return value;\n}\n\n/** @internal */\nconst kBuffers = Symbol('buffers');\n/** @internal */\nconst kLength = Symbol('length');\n\n/**\n * A pool of Buffers which allow you to read them as if they were one\n * @internal\n */\nexport class BufferPool {\n  [kBuffers]: Buffer[];\n  [kLength]: number;\n\n  constructor() {\n    this[kBuffers] = [];\n    this[kLength] = 0;\n  }\n\n  get length(): number {\n    return this[kLength];\n  }\n\n  /** Adds a buffer to the internal buffer pool list */\n  append(buffer: Buffer): void {\n    this[kBuffers].push(buffer);\n    this[kLength] += buffer.length;\n  }\n\n  /** Returns the requested number of bytes without consuming them */\n  peek(size: number): Buffer {\n    return this.read(size, false);\n  }\n\n  /** Reads the requested number of bytes, optionally consuming them */\n  read(size: number, consume = true): Buffer {\n    if (typeof size !== 'number' || size < 0) {\n      throw new MongoInvalidArgumentError('Argument \"size\" must be a non-negative number');\n    }\n\n    if (size > this[kLength]) {\n      return Buffer.alloc(0);\n    }\n\n    let result: Buffer;\n\n    // read the whole buffer\n    if (size === this.length) {\n      result = Buffer.concat(this[kBuffers]);\n\n      if (consume) {\n        this[kBuffers] = [];\n        this[kLength] = 0;\n      }\n    }\n\n    // size is within first buffer, no need to concat\n    else if (size <= this[kBuffers][0].length) {\n      result = this[kBuffers][0].slice(0, size);\n      if (consume) {\n        this[kBuffers][0] = this[kBuffers][0].slice(size);\n        this[kLength] -= size;\n      }\n    }\n\n    // size is beyond first buffer, need to track and copy\n    else {\n      result = Buffer.allocUnsafe(size);\n\n      let idx;\n      let offset = 0;\n      let bytesToCopy = size;\n      for (idx = 0; idx < this[kBuffers].length; ++idx) {\n        let bytesCopied;\n        if (bytesToCopy > this[kBuffers][idx].length) {\n          bytesCopied = this[kBuffers][idx].copy(result, offset, 0);\n          offset += bytesCopied;\n        } else {\n          bytesCopied = this[kBuffers][idx].copy(result, offset, 0, bytesToCopy);\n          if (consume) {\n            this[kBuffers][idx] = this[kBuffers][idx].slice(bytesCopied);\n          }\n          offset += bytesCopied;\n          break;\n        }\n\n        bytesToCopy -= bytesCopied;\n      }\n\n      // compact the internal buffer array\n      if (consume) {\n        this[kBuffers] = this[kBuffers].slice(idx);\n        this[kLength] -= size;\n      }\n    }\n\n    return result;\n  }\n}\n\n/** @public */\nexport class HostAddress {\n  host;\n  port;\n  // Driver only works with unix socket path to connect\n  // SDAM operates only on tcp addresses\n  socketPath;\n  isIPv6;\n\n  constructor(hostString: string) {\n    const escapedHost = hostString.split(' ').join('%20'); // escape spaces, for socket path hosts\n    const { hostname, port } = new URL(`mongodb://${escapedHost}`);\n\n    if (hostname.endsWith('.sock')) {\n      // heuristically determine if we're working with a domain socket\n      this.socketPath = decodeURIComponent(hostname);\n    } else if (typeof hostname === 'string') {\n      this.isIPv6 = false;\n\n      let normalized = decodeURIComponent(hostname).toLowerCase();\n      if (normalized.startsWith('[') && normalized.endsWith(']')) {\n        this.isIPv6 = true;\n        normalized = normalized.substring(1, hostname.length - 1);\n      }\n\n      this.host = normalized.toLowerCase();\n\n      if (typeof port === 'number') {\n        this.port = port;\n      } else if (typeof port === 'string' && port !== '') {\n        this.port = Number.parseInt(port, 10);\n      } else {\n        this.port = 27017;\n      }\n\n      if (this.port === 0) {\n        throw new MongoParseError('Invalid port (zero) with hostname');\n      }\n    } else {\n      throw new MongoInvalidArgumentError('Either socketPath or host must be defined.');\n    }\n    Object.freeze(this);\n  }\n\n  /**\n   * @param ipv6Brackets - optionally request ipv6 bracket notation required for connection strings\n   */\n  toString(ipv6Brackets = false): string {\n    if (typeof this.host === 'string') {\n      if (this.isIPv6 && ipv6Brackets) {\n        return `[${this.host}]:${this.port}`;\n      }\n      return `${this.host}:${this.port}`;\n    }\n    return `${this.socketPath}`;\n  }\n\n  static fromString(s: string): HostAddress {\n    return new HostAddress(s);\n  }\n}\n\nexport const DEFAULT_PK_FACTORY = {\n  // We prefer not to rely on ObjectId having a createPk method\n  createPk(): ObjectId {\n    return new ObjectId();\n  }\n};\n\n/**\n * When the driver used emitWarning the code will be equal to this.\n * @public\n *\n * @example\n * ```js\n * process.on('warning', (warning) => {\n *  if (warning.code === MONGODB_WARNING_CODE) console.error('Ah an important warning! :)')\n * })\n * ```\n */\nexport const MONGODB_WARNING_CODE = 'MONGODB DRIVER' as const;\n\n/** @internal */\nexport function emitWarning(message: string): void {\n  return process.emitWarning(message, { code: MONGODB_WARNING_CODE } as any);\n}\n\nconst emittedWarnings = new Set();\n/**\n * Will emit a warning once for the duration of the application.\n * Uses the message to identify if it has already been emitted\n * so using string interpolation can cause multiple emits\n * @internal\n */\nexport function emitWarningOnce(message: string): void {\n  if (!emittedWarnings.has(message)) {\n    emittedWarnings.add(message);\n    return emitWarning(message);\n  }\n}\n\n/**\n * Takes a JS object and joins the values into a string separated by ', '\n */\nexport function enumToString(en: Record<string, unknown>): string {\n  return Object.values(en).join(', ');\n}\n\n/**\n * Determine if a server supports retryable writes.\n *\n * @internal\n */\nexport function supportsRetryableWrites(server: Server): boolean {\n  return (\n    !!server.loadBalanced ||\n    (server.description.maxWireVersion >= 6 &&\n      !!server.description.logicalSessionTimeoutMinutes &&\n      server.description.type !== ServerType.Standalone)\n  );\n}\n\nexport function parsePackageVersion({ version }: { version: string }): {\n  major: number;\n  minor: number;\n  patch: number;\n} {\n  const [major, minor, patch] = version.split('.').map((n: string) => Number.parseInt(n, 10));\n  return { major, minor, patch };\n}\n", "import { ReadPreference } from './read_preference';\nimport { MongoRuntimeError, MongoTransactionError } from './error';\nimport { ReadConcern } from './read_concern';\nimport { WriteConcern } from './write_concern';\nimport type { Server } from './sdam/server';\nimport type { CommandOperationOptions } from './operations/command';\nimport type { Document } from './bson';\n\n/** @internal */\nexport const TxnState = Object.freeze({\n  NO_TRANSACTION: 'NO_TRANSACTION',\n  STARTING_TRANSACTION: 'STARTING_TRANSACTION',\n  TRANSACTION_IN_PROGRESS: 'TRANSACTION_IN_PROGRESS',\n  TRANSACTION_COMMITTED: 'TRANSACTION_COMMITTED',\n  TRANSACTION_COMMITTED_EMPTY: 'TRANSACTION_COMMITTED_EMPTY',\n  TRANSACTION_ABORTED: 'TRANSACTION_ABORTED'\n} as const);\n\n/** @internal */\nexport type TxnState = typeof TxnState[keyof typeof TxnState];\n\nconst stateMachine: { [state in TxnState]: TxnState[] } = {\n  [TxnState.NO_TRANSACTION]: [TxnState.NO_TRANSACTION, TxnState.STARTING_TRANSACTION],\n  [TxnState.STARTING_TRANSACTION]: [\n    TxnState.TRANSACTION_IN_PROGRESS,\n    TxnState.TRANSACTION_COMMITTED,\n    TxnState.TRANSACTION_COMMITTED_EMPTY,\n    TxnState.TRANSACTION_ABORTED\n  ],\n  [TxnState.TRANSACTION_IN_PROGRESS]: [\n    TxnState.TRANSACTION_IN_PROGRESS,\n    TxnState.TRANSACTION_COMMITTED,\n    TxnState.TRANSACTION_ABORTED\n  ],\n  [TxnState.TRANSACTION_COMMITTED]: [\n    TxnState.TRANSACTION_COMMITTED,\n    TxnState.TRANSACTION_COMMITTED_EMPTY,\n    TxnState.STARTING_TRANSACTION,\n    TxnState.NO_TRANSACTION\n  ],\n  [TxnState.TRANSACTION_ABORTED]: [TxnState.STARTING_TRANSACTION, TxnState.NO_TRANSACTION],\n  [TxnState.TRANSACTION_COMMITTED_EMPTY]: [\n    TxnState.TRANSACTION_COMMITTED_EMPTY,\n    TxnState.NO_TRANSACTION\n  ]\n};\n\nconst ACTIVE_STATES: Set<TxnState> = new Set([\n  TxnState.STARTING_TRANSACTION,\n  TxnState.TRANSACTION_IN_PROGRESS\n]);\n\nconst COMMITTED_STATES: Set<TxnState> = new Set([\n  TxnState.TRANSACTION_COMMITTED,\n  TxnState.TRANSACTION_COMMITTED_EMPTY,\n  TxnState.TRANSACTION_ABORTED\n]);\n\n/**\n * Configuration options for a transaction.\n * @public\n */\nexport interface TransactionOptions extends CommandOperationOptions {\n  // TODO(NODE-3344): These options use the proper class forms of these settings, it should accept the basic enum values too\n  /** A default read concern for commands in this transaction */\n  readConcern?: ReadConcern;\n  /** A default writeConcern for commands in this transaction */\n  writeConcern?: WriteConcern;\n  /** A default read preference for commands in this transaction */\n  readPreference?: ReadPreference;\n\n  maxCommitTimeMS?: number;\n}\n\n/**\n * @public\n * A class maintaining state related to a server transaction. Internal Only\n */\nexport class Transaction {\n  /** @internal */\n  state: TxnState;\n  options: TransactionOptions;\n  /** @internal */\n  _pinnedServer?: Server;\n  /** @internal */\n  _recoveryToken?: Document;\n\n  /** Create a transaction @internal */\n  constructor(options?: TransactionOptions) {\n    options = options ?? {};\n    this.state = TxnState.NO_TRANSACTION;\n    this.options = {};\n\n    const writeConcern = WriteConcern.fromOptions(options);\n    if (writeConcern) {\n      if (writeConcern.w === 0) {\n        throw new MongoTransactionError('Transactions do not support unacknowledged write concern');\n      }\n\n      this.options.writeConcern = writeConcern;\n    }\n\n    if (options.readConcern) {\n      this.options.readConcern = ReadConcern.fromOptions(options);\n    }\n\n    if (options.readPreference) {\n      this.options.readPreference = ReadPreference.fromOptions(options);\n    }\n\n    if (options.maxCommitTimeMS) {\n      this.options.maxTimeMS = options.maxCommitTimeMS;\n    }\n\n    // TODO: This isn't technically necessary\n    this._pinnedServer = undefined;\n    this._recoveryToken = undefined;\n  }\n\n  /** @internal */\n  get server(): Server | undefined {\n    return this._pinnedServer;\n  }\n\n  get recoveryToken(): Document | undefined {\n    return this._recoveryToken;\n  }\n\n  get isPinned(): boolean {\n    return !!this.server;\n  }\n\n  /** @returns Whether the transaction has started */\n  get isStarting(): boolean {\n    return this.state === TxnState.STARTING_TRANSACTION;\n  }\n\n  /**\n   * @returns Whether this session is presently in a transaction\n   */\n  get isActive(): boolean {\n    return ACTIVE_STATES.has(this.state);\n  }\n\n  get isCommitted(): boolean {\n    return COMMITTED_STATES.has(this.state);\n  }\n  /**\n   * Transition the transaction in the state machine\n   * @internal\n   * @param nextState - The new state to transition to\n   */\n  transition(nextState: TxnState): void {\n    const nextStates = stateMachine[this.state];\n    if (nextStates && nextStates.includes(nextState)) {\n      this.state = nextState;\n      if (\n        this.state === TxnState.NO_TRANSACTION ||\n        this.state === TxnState.STARTING_TRANSACTION ||\n        this.state === TxnState.TRANSACTION_ABORTED\n      ) {\n        this.unpinServer();\n      }\n      return;\n    }\n\n    throw new MongoRuntimeError(\n      `Attempted illegal state transition from [${this.state}] to [${nextState}]`\n    );\n  }\n\n  /** @internal */\n  pinServer(server: Server): void {\n    if (this.isActive) {\n      this._pinnedServer = server;\n    }\n  }\n\n  /** @internal */\n  unpinServer(): void {\n    this._pinnedServer = undefined;\n  }\n}\n\nexport function isTransactionCommand(command: Document): boolean {\n  return !!(command.commitTransaction || command.abortTransaction);\n}\n", "import { arrayStrictEqual, errorStrictEqual, now, HostAddress } from '../utils';\nimport { ServerType } from './common';\nimport { ObjectId, Long, Document } from '../bson';\nimport type { ClusterTime } from './common';\nimport type { MongoError } from '../error';\n\nconst WRITABLE_SERVER_TYPES = new Set<ServerType>([\n  ServerType.RSPrimary,\n  ServerType.Standalone,\n  ServerType.Mongos,\n  ServerType.LoadBalancer\n]);\n\nconst DATA_BEARING_SERVER_TYPES = new Set<ServerType>([\n  ServerType.RSPrimary,\n  ServerType.RSSecondary,\n  ServerType.Mongos,\n  ServerType.Standalone,\n  ServerType.LoadBalancer\n]);\n\n/** @public */\nexport interface TopologyVersion {\n  processId: ObjectId;\n  counter: Long;\n}\n\n/** @public */\nexport type TagSet = { [key: string]: string };\n\n/** @internal */\nexport interface ServerDescriptionOptions {\n  /** An Error used for better reporting debugging */\n  error?: MongoError;\n\n  /** The round trip time to ping this server (in ms) */\n  roundTripTime?: number;\n\n  /** The topologyVersion */\n  topologyVersion?: TopologyVersion;\n\n  /** If the client is in load balancing mode. */\n  loadBalanced?: boolean;\n}\n\n/**\n * The client's view of a single server, based on the most recent ismaster outcome.\n *\n * Internal type, not meant to be directly instantiated\n * @public\n */\nexport class ServerDescription {\n  private _hostAddress: HostAddress;\n  address: string;\n  type: ServerType;\n  hosts: string[];\n  passives: string[];\n  arbiters: string[];\n  tags: TagSet;\n\n  error?: MongoError;\n  topologyVersion?: TopologyVersion;\n  minWireVersion: number;\n  maxWireVersion: number;\n  roundTripTime: number;\n  lastUpdateTime: number;\n  lastWriteDate: number;\n\n  me?: string;\n  primary?: string;\n  setName?: string;\n  setVersion?: number;\n  electionId?: ObjectId;\n  logicalSessionTimeoutMinutes?: number;\n\n  // NOTE: does this belong here? It seems we should gossip the cluster time at the CMAP level\n  $clusterTime?: ClusterTime;\n\n  /**\n   * Create a ServerDescription\n   * @internal\n   *\n   * @param address - The address of the server\n   * @param ismaster - An optional ismaster response for this server\n   */\n  constructor(\n    address: HostAddress | string,\n    ismaster?: Document,\n    options?: ServerDescriptionOptions\n  ) {\n    if (typeof address === 'string') {\n      this._hostAddress = new HostAddress(address);\n      this.address = this._hostAddress.toString();\n    } else {\n      this._hostAddress = address;\n      this.address = this._hostAddress.toString();\n    }\n    this.type = parseServerType(ismaster, options);\n    this.hosts = ismaster?.hosts?.map((host: string) => host.toLowerCase()) ?? [];\n    this.passives = ismaster?.passives?.map((host: string) => host.toLowerCase()) ?? [];\n    this.arbiters = ismaster?.arbiters?.map((host: string) => host.toLowerCase()) ?? [];\n    this.tags = ismaster?.tags ?? {};\n    this.minWireVersion = ismaster?.minWireVersion ?? 0;\n    this.maxWireVersion = ismaster?.maxWireVersion ?? 0;\n    this.roundTripTime = options?.roundTripTime ?? -1;\n    this.lastUpdateTime = now();\n    this.lastWriteDate = ismaster?.lastWrite?.lastWriteDate ?? 0;\n\n    if (options?.topologyVersion) {\n      this.topologyVersion = options.topologyVersion;\n    } else if (ismaster?.topologyVersion) {\n      this.topologyVersion = ismaster.topologyVersion;\n    }\n\n    if (options?.error) {\n      this.error = options.error;\n    }\n\n    if (ismaster?.primary) {\n      this.primary = ismaster.primary;\n    }\n\n    if (ismaster?.me) {\n      this.me = ismaster.me.toLowerCase();\n    }\n\n    if (ismaster?.setName) {\n      this.setName = ismaster.setName;\n    }\n\n    if (ismaster?.setVersion) {\n      this.setVersion = ismaster.setVersion;\n    }\n\n    if (ismaster?.electionId) {\n      this.electionId = ismaster.electionId;\n    }\n\n    if (ismaster?.logicalSessionTimeoutMinutes) {\n      this.logicalSessionTimeoutMinutes = ismaster.logicalSessionTimeoutMinutes;\n    }\n\n    if (ismaster?.$clusterTime) {\n      this.$clusterTime = ismaster.$clusterTime;\n    }\n  }\n\n  get hostAddress(): HostAddress {\n    if (this._hostAddress) return this._hostAddress;\n    else return new HostAddress(this.address);\n  }\n\n  get allHosts(): string[] {\n    return this.hosts.concat(this.arbiters).concat(this.passives);\n  }\n\n  /** Is this server available for reads*/\n  get isReadable(): boolean {\n    return this.type === ServerType.RSSecondary || this.isWritable;\n  }\n\n  /** Is this server data bearing */\n  get isDataBearing(): boolean {\n    return DATA_BEARING_SERVER_TYPES.has(this.type);\n  }\n\n  /** Is this server available for writes */\n  get isWritable(): boolean {\n    return WRITABLE_SERVER_TYPES.has(this.type);\n  }\n\n  get host(): string {\n    const chopLength = `:${this.port}`.length;\n    return this.address.slice(0, -chopLength);\n  }\n\n  get port(): number {\n    const port = this.address.split(':').pop();\n    return port ? Number.parseInt(port, 10) : 27017;\n  }\n\n  /**\n   * Determines if another `ServerDescription` is equal to this one per the rules defined\n   * in the {@link https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#serverdescription|SDAM spec}\n   */\n  equals(other: ServerDescription): boolean {\n    const topologyVersionsEqual =\n      this.topologyVersion === other.topologyVersion ||\n      compareTopologyVersion(this.topologyVersion, other.topologyVersion) === 0;\n\n    const electionIdsEqual: boolean =\n      this.electionId && other.electionId\n        ? other.electionId && this.electionId.equals(other.electionId)\n        : this.electionId === other.electionId;\n\n    return (\n      other != null &&\n      errorStrictEqual(this.error, other.error) &&\n      this.type === other.type &&\n      this.minWireVersion === other.minWireVersion &&\n      arrayStrictEqual(this.hosts, other.hosts) &&\n      tagsStrictEqual(this.tags, other.tags) &&\n      this.setName === other.setName &&\n      this.setVersion === other.setVersion &&\n      electionIdsEqual &&\n      this.primary === other.primary &&\n      this.logicalSessionTimeoutMinutes === other.logicalSessionTimeoutMinutes &&\n      topologyVersionsEqual\n    );\n  }\n}\n\n// Parses an `ismaster` message and determines the server type\nexport function parseServerType(\n  ismaster?: Document,\n  options?: ServerDescriptionOptions\n): ServerType {\n  if (options?.loadBalanced) {\n    return ServerType.LoadBalancer;\n  }\n\n  if (!ismaster || !ismaster.ok) {\n    return ServerType.Unknown;\n  }\n\n  if (ismaster.isreplicaset) {\n    return ServerType.RSGhost;\n  }\n\n  if (ismaster.msg && ismaster.msg === 'isdbgrid') {\n    return ServerType.Mongos;\n  }\n\n  if (ismaster.setName) {\n    if (ismaster.hidden) {\n      return ServerType.RSOther;\n    } else if (ismaster.ismaster || ismaster.isWritablePrimary) {\n      return ServerType.RSPrimary;\n    } else if (ismaster.secondary) {\n      return ServerType.RSSecondary;\n    } else if (ismaster.arbiterOnly) {\n      return ServerType.RSArbiter;\n    } else {\n      return ServerType.RSOther;\n    }\n  }\n\n  return ServerType.Standalone;\n}\n\nfunction tagsStrictEqual(tags: TagSet, tags2: TagSet): boolean {\n  const tagsKeys = Object.keys(tags);\n  const tags2Keys = Object.keys(tags2);\n\n  return (\n    tagsKeys.length === tags2Keys.length &&\n    tagsKeys.every((key: string) => tags2[key] === tags[key])\n  );\n}\n\n/**\n * Compares two topology versions.\n *\n * @returns A negative number if `lhs` is older than `rhs`; positive if `lhs` is newer than `rhs`; 0 if they are equivalent.\n */\nexport function compareTopologyVersion(lhs?: TopologyVersion, rhs?: TopologyVersion): number {\n  if (lhs == null || rhs == null) {\n    return -1;\n  }\n\n  if (lhs.processId.equals(rhs.processId)) {\n    // tests mock counter as just number, but in a real situation counter should always be a Long\n    const lhsCounter = Long.isLong(lhs.counter) ? lhs.counter : Long.fromNumber(lhs.counter);\n    const rhsCounter = Long.isLong(rhs.counter) ? lhs.counter : Long.fromNumber(rhs.counter);\n    return lhsCounter.compare(rhsCounter);\n  }\n\n  return -1;\n}\n", "import { ServerDescription } from './server_description';\nimport * as WIRE_CONSTANTS from '../cmap/wire_protocol/constants';\nimport { TopologyType, ServerType } from './common';\nimport type { ObjectId, Document } from '../bson';\nimport type { SrvPollingEvent } from './srv_polling';\nimport { MongoError, MongoRuntimeError } from '../error';\n\n// constants related to compatibility checks\nconst MIN_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_SERVER_VERSION;\nconst MAX_SUPPORTED_SERVER_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_SERVER_VERSION;\nconst MIN_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MIN_SUPPORTED_WIRE_VERSION;\nconst MAX_SUPPORTED_WIRE_VERSION = WIRE_CONSTANTS.MAX_SUPPORTED_WIRE_VERSION;\n\nconst MONGOS_OR_UNKNOWN = new Set<ServerType>([ServerType.Mongos, ServerType.Unknown]);\nconst MONGOS_OR_STANDALONE = new Set<ServerType>([ServerType.Mongos, ServerType.Standalone]);\nconst NON_PRIMARY_RS_MEMBERS = new Set<ServerType>([\n  ServerType.RSSecondary,\n  ServerType.RSArbiter,\n  ServerType.RSOther\n]);\n\n/** @public */\nexport interface TopologyDescriptionOptions {\n  heartbeatFrequencyMS?: number;\n  localThresholdMS?: number;\n}\n\n/**\n * Representation of a deployment of servers\n * @public\n */\nexport class TopologyDescription {\n  type: TopologyType;\n  setName?: string;\n  maxSetVersion?: number;\n  maxElectionId?: ObjectId;\n  servers: Map<string, ServerDescription>;\n  stale: boolean;\n  compatible: boolean;\n  compatibilityError?: string;\n  logicalSessionTimeoutMinutes?: number;\n  heartbeatFrequencyMS: number;\n  localThresholdMS: number;\n  commonWireVersion?: number;\n\n  /**\n   * Create a TopologyDescription\n   */\n  constructor(\n    topologyType: TopologyType,\n    serverDescriptions?: Map<string, ServerDescription>,\n    setName?: string,\n    maxSetVersion?: number,\n    maxElectionId?: ObjectId,\n    commonWireVersion?: number,\n    options?: TopologyDescriptionOptions\n  ) {\n    options = options ?? {};\n\n    // TODO: consider assigning all these values to a temporary value `s` which\n    //       we use `Object.freeze` on, ensuring the internal state of this type\n    //       is immutable.\n    this.type = topologyType ?? TopologyType.Unknown;\n    this.servers = serverDescriptions ?? new Map();\n    this.stale = false;\n    this.compatible = true;\n    this.heartbeatFrequencyMS = options.heartbeatFrequencyMS ?? 0;\n    this.localThresholdMS = options.localThresholdMS ?? 0;\n\n    if (setName) {\n      this.setName = setName;\n    }\n\n    if (maxSetVersion) {\n      this.maxSetVersion = maxSetVersion;\n    }\n\n    if (maxElectionId) {\n      this.maxElectionId = maxElectionId;\n    }\n\n    if (commonWireVersion) {\n      this.commonWireVersion = commonWireVersion;\n    }\n\n    // determine server compatibility\n    for (const serverDescription of this.servers.values()) {\n      // Load balancer mode is always compatible.\n      if (\n        serverDescription.type === ServerType.Unknown ||\n        serverDescription.type === ServerType.LoadBalancer\n      ) {\n        continue;\n      }\n\n      if (serverDescription.minWireVersion > MAX_SUPPORTED_WIRE_VERSION) {\n        this.compatible = false;\n        this.compatibilityError = `Server at ${serverDescription.address} requires wire version ${serverDescription.minWireVersion}, but this version of the driver only supports up to ${MAX_SUPPORTED_WIRE_VERSION} (MongoDB ${MAX_SUPPORTED_SERVER_VERSION})`;\n      }\n\n      if (serverDescription.maxWireVersion < MIN_SUPPORTED_WIRE_VERSION) {\n        this.compatible = false;\n        this.compatibilityError = `Server at ${serverDescription.address} reports wire version ${serverDescription.maxWireVersion}, but this version of the driver requires at least ${MIN_SUPPORTED_WIRE_VERSION} (MongoDB ${MIN_SUPPORTED_SERVER_VERSION}).`;\n        break;\n      }\n    }\n\n    // Whenever a client updates the TopologyDescription from an ismaster response, it MUST set\n    // TopologyDescription.logicalSessionTimeoutMinutes to the smallest logicalSessionTimeoutMinutes\n    // value among ServerDescriptions of all data-bearing server types. If any have a null\n    // logicalSessionTimeoutMinutes, then TopologyDescription.logicalSessionTimeoutMinutes MUST be\n    // set to null.\n    this.logicalSessionTimeoutMinutes = undefined;\n    for (const [, server] of this.servers) {\n      if (server.isReadable) {\n        if (server.logicalSessionTimeoutMinutes == null) {\n          // If any of the servers have a null logicalSessionsTimeout, then the whole topology does\n          this.logicalSessionTimeoutMinutes = undefined;\n          break;\n        }\n\n        if (this.logicalSessionTimeoutMinutes == null) {\n          // First server with a non null logicalSessionsTimeout\n          this.logicalSessionTimeoutMinutes = server.logicalSessionTimeoutMinutes;\n          continue;\n        }\n\n        // Always select the smaller of the:\n        // current server logicalSessionsTimeout and the topologies logicalSessionsTimeout\n        this.logicalSessionTimeoutMinutes = Math.min(\n          this.logicalSessionTimeoutMinutes,\n          server.logicalSessionTimeoutMinutes\n        );\n      }\n    }\n  }\n\n  /**\n   * Returns a new TopologyDescription based on the SrvPollingEvent\n   * @internal\n   */\n  updateFromSrvPollingEvent(ev: SrvPollingEvent): TopologyDescription {\n    const newAddresses = ev.addresses();\n    const serverDescriptions = new Map(this.servers);\n    for (const address of this.servers.keys()) {\n      if (newAddresses.has(address)) {\n        newAddresses.delete(address);\n      } else {\n        serverDescriptions.delete(address);\n      }\n    }\n\n    if (serverDescriptions.size === this.servers.size && newAddresses.size === 0) {\n      return this;\n    }\n\n    for (const [address, host] of newAddresses) {\n      serverDescriptions.set(address, new ServerDescription(host));\n    }\n\n    return new TopologyDescription(\n      this.type,\n      serverDescriptions,\n      this.setName,\n      this.maxSetVersion,\n      this.maxElectionId,\n      this.commonWireVersion,\n      { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS }\n    );\n  }\n\n  /**\n   * Returns a copy of this description updated with a given ServerDescription\n   * @internal\n   */\n  update(serverDescription: ServerDescription): TopologyDescription {\n    const address = serverDescription.address;\n\n    // potentially mutated values\n    let { type: topologyType, setName, maxSetVersion, maxElectionId, commonWireVersion } = this;\n\n    if (serverDescription.setName && setName && serverDescription.setName !== setName) {\n      serverDescription = new ServerDescription(address, undefined);\n    }\n\n    const serverType = serverDescription.type;\n    const serverDescriptions = new Map(this.servers);\n\n    // update common wire version\n    if (serverDescription.maxWireVersion !== 0) {\n      if (commonWireVersion == null) {\n        commonWireVersion = serverDescription.maxWireVersion;\n      } else {\n        commonWireVersion = Math.min(commonWireVersion, serverDescription.maxWireVersion);\n      }\n    }\n\n    // update the actual server description\n    serverDescriptions.set(address, serverDescription);\n\n    if (topologyType === TopologyType.Single) {\n      // once we are defined as single, that never changes\n      return new TopologyDescription(\n        TopologyType.Single,\n        serverDescriptions,\n        setName,\n        maxSetVersion,\n        maxElectionId,\n        commonWireVersion,\n        { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS }\n      );\n    }\n\n    if (topologyType === TopologyType.Unknown) {\n      if (serverType === ServerType.Standalone && this.servers.size !== 1) {\n        serverDescriptions.delete(address);\n      } else {\n        topologyType = topologyTypeForServerType(serverType);\n      }\n    }\n\n    if (topologyType === TopologyType.Sharded) {\n      if (!MONGOS_OR_UNKNOWN.has(serverType)) {\n        serverDescriptions.delete(address);\n      }\n    }\n\n    if (topologyType === TopologyType.ReplicaSetNoPrimary) {\n      if (MONGOS_OR_STANDALONE.has(serverType)) {\n        serverDescriptions.delete(address);\n      }\n\n      if (serverType === ServerType.RSPrimary) {\n        const result = updateRsFromPrimary(\n          serverDescriptions,\n          serverDescription,\n          setName,\n          maxSetVersion,\n          maxElectionId\n        );\n\n        topologyType = result[0];\n        setName = result[1];\n        maxSetVersion = result[2];\n        maxElectionId = result[3];\n      } else if (NON_PRIMARY_RS_MEMBERS.has(serverType)) {\n        const result = updateRsNoPrimaryFromMember(serverDescriptions, serverDescription, setName);\n        topologyType = result[0];\n        setName = result[1];\n      }\n    }\n\n    if (topologyType === TopologyType.ReplicaSetWithPrimary) {\n      if (MONGOS_OR_STANDALONE.has(serverType)) {\n        serverDescriptions.delete(address);\n        topologyType = checkHasPrimary(serverDescriptions);\n      } else if (serverType === ServerType.RSPrimary) {\n        const result = updateRsFromPrimary(\n          serverDescriptions,\n          serverDescription,\n          setName,\n          maxSetVersion,\n          maxElectionId\n        );\n\n        topologyType = result[0];\n        setName = result[1];\n        maxSetVersion = result[2];\n        maxElectionId = result[3];\n      } else if (NON_PRIMARY_RS_MEMBERS.has(serverType)) {\n        topologyType = updateRsWithPrimaryFromMember(\n          serverDescriptions,\n          serverDescription,\n          setName\n        );\n      } else {\n        topologyType = checkHasPrimary(serverDescriptions);\n      }\n    }\n\n    return new TopologyDescription(\n      topologyType,\n      serverDescriptions,\n      setName,\n      maxSetVersion,\n      maxElectionId,\n      commonWireVersion,\n      { heartbeatFrequencyMS: this.heartbeatFrequencyMS, localThresholdMS: this.localThresholdMS }\n    );\n  }\n\n  get error(): MongoError | undefined {\n    const descriptionsWithError = Array.from(this.servers.values()).filter(\n      (sd: ServerDescription) => sd.error\n    );\n\n    if (descriptionsWithError.length > 0) {\n      return descriptionsWithError[0].error;\n    }\n  }\n\n  /**\n   * Determines if the topology description has any known servers\n   */\n  get hasKnownServers(): boolean {\n    return Array.from(this.servers.values()).some(\n      (sd: ServerDescription) => sd.type !== ServerType.Unknown\n    );\n  }\n\n  /**\n   * Determines if this topology description has a data-bearing server available.\n   */\n  get hasDataBearingServers(): boolean {\n    return Array.from(this.servers.values()).some((sd: ServerDescription) => sd.isDataBearing);\n  }\n\n  /**\n   * Determines if the topology has a definition for the provided address\n   * @internal\n   */\n  hasServer(address: string): boolean {\n    return this.servers.has(address);\n  }\n}\n\nfunction topologyTypeForServerType(serverType: ServerType): TopologyType {\n  switch (serverType) {\n    case ServerType.Standalone:\n      return TopologyType.Single;\n    case ServerType.Mongos:\n      return TopologyType.Sharded;\n    case ServerType.RSPrimary:\n      return TopologyType.ReplicaSetWithPrimary;\n    case ServerType.RSOther:\n    case ServerType.RSSecondary:\n      return TopologyType.ReplicaSetNoPrimary;\n    default:\n      return TopologyType.Unknown;\n  }\n}\n\n// TODO: improve these docs when ObjectId is properly typed\nfunction compareObjectId(oid1: Document, oid2: Document): number {\n  if (oid1 == null) {\n    return -1;\n  }\n\n  if (oid2 == null) {\n    return 1;\n  }\n\n  if (oid1.id instanceof Buffer && oid2.id instanceof Buffer) {\n    const oid1Buffer = oid1.id;\n    const oid2Buffer = oid2.id;\n    return oid1Buffer.compare(oid2Buffer);\n  }\n\n  const oid1String = oid1.toString();\n  const oid2String = oid2.toString();\n  return oid1String.localeCompare(oid2String);\n}\n\nfunction updateRsFromPrimary(\n  serverDescriptions: Map<string, ServerDescription>,\n  serverDescription: ServerDescription,\n  setName?: string,\n  maxSetVersion?: number,\n  maxElectionId?: ObjectId\n): [TopologyType, string?, number?, ObjectId?] {\n  setName = setName || serverDescription.setName;\n  if (setName !== serverDescription.setName) {\n    serverDescriptions.delete(serverDescription.address);\n    return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n  }\n\n  const electionId = serverDescription.electionId ? serverDescription.electionId : null;\n  if (serverDescription.setVersion && electionId) {\n    if (maxSetVersion && maxElectionId) {\n      if (\n        maxSetVersion > serverDescription.setVersion ||\n        compareObjectId(maxElectionId, electionId) > 0\n      ) {\n        // this primary is stale, we must remove it\n        serverDescriptions.set(\n          serverDescription.address,\n          new ServerDescription(serverDescription.address)\n        );\n\n        return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n      }\n    }\n\n    maxElectionId = serverDescription.electionId;\n  }\n\n  if (\n    serverDescription.setVersion != null &&\n    (maxSetVersion == null || serverDescription.setVersion > maxSetVersion)\n  ) {\n    maxSetVersion = serverDescription.setVersion;\n  }\n\n  // We've heard from the primary. Is it the same primary as before?\n  for (const [address, server] of serverDescriptions) {\n    if (server.type === ServerType.RSPrimary && server.address !== serverDescription.address) {\n      // Reset old primary's type to Unknown.\n      serverDescriptions.set(address, new ServerDescription(server.address));\n\n      // There can only be one primary\n      break;\n    }\n  }\n\n  // Discover new hosts from this primary's response.\n  serverDescription.allHosts.forEach((address: string) => {\n    if (!serverDescriptions.has(address)) {\n      serverDescriptions.set(address, new ServerDescription(address));\n    }\n  });\n\n  // Remove hosts not in the response.\n  const currentAddresses = Array.from(serverDescriptions.keys());\n  const responseAddresses = serverDescription.allHosts;\n  currentAddresses\n    .filter((addr: string) => responseAddresses.indexOf(addr) === -1)\n    .forEach((address: string) => {\n      serverDescriptions.delete(address);\n    });\n\n  return [checkHasPrimary(serverDescriptions), setName, maxSetVersion, maxElectionId];\n}\n\nfunction updateRsWithPrimaryFromMember(\n  serverDescriptions: Map<string, ServerDescription>,\n  serverDescription: ServerDescription,\n  setName?: string\n): TopologyType {\n  if (setName == null) {\n    // TODO(NODE-3483): should be an appropriate runtime error\n    throw new MongoRuntimeError('Argument \"setName\" is required if connected to a replica set');\n  }\n\n  if (\n    setName !== serverDescription.setName ||\n    (serverDescription.me && serverDescription.address !== serverDescription.me)\n  ) {\n    serverDescriptions.delete(serverDescription.address);\n  }\n\n  return checkHasPrimary(serverDescriptions);\n}\n\nfunction updateRsNoPrimaryFromMember(\n  serverDescriptions: Map<string, ServerDescription>,\n  serverDescription: ServerDescription,\n  setName?: string\n): [TopologyType, string?] {\n  const topologyType = TopologyType.ReplicaSetNoPrimary;\n  setName = setName || serverDescription.setName;\n  if (setName !== serverDescription.setName) {\n    serverDescriptions.delete(serverDescription.address);\n    return [topologyType, setName];\n  }\n\n  serverDescription.allHosts.forEach((address: string) => {\n    if (!serverDescriptions.has(address)) {\n      serverDescriptions.set(address, new ServerDescription(address));\n    }\n  });\n\n  if (serverDescription.me && serverDescription.address !== serverDescription.me) {\n    serverDescriptions.delete(serverDescription.address);\n  }\n\n  return [topologyType, setName];\n}\n\nfunction checkHasPrimary(serverDescriptions: Map<string, ServerDescription>): TopologyType {\n  for (const serverDescription of serverDescriptions.values()) {\n    if (serverDescription.type === ServerType.RSPrimary) {\n      return TopologyType.ReplicaSetWithPrimary;\n    }\n  }\n\n  return TopologyType.ReplicaSetNoPrimary;\n}\n", "import { ServerType } from '../../sdam/common';\nimport { TopologyDescription } from '../../sdam/topology_description';\nimport { MongoInvalidArgumentError } from '../../error';\nimport { ReadPreference } from '../../read_preference';\nimport type { Document } from '../../bson';\nimport type { OpQueryOptions } from '../commands';\nimport type { Topology } from '../../sdam/topology';\nimport type { Server } from '../../sdam/server';\nimport type { ServerDescription } from '../../sdam/server_description';\nimport type { ReadPreferenceLike } from '../../read_preference';\nimport type { CommandOptions } from '../connection';\nimport type { Connection } from '../connection';\n\nexport interface ReadPreferenceOption {\n  readPreference?: ReadPreferenceLike;\n}\n\nexport function getReadPreference(cmd: Document, options?: ReadPreferenceOption): ReadPreference {\n  // Default to command version of the readPreference\n  let readPreference = cmd.readPreference || ReadPreference.primary;\n  // If we have an option readPreference override the command one\n  if (options?.readPreference) {\n    readPreference = options.readPreference;\n  }\n\n  if (typeof readPreference === 'string') {\n    readPreference = ReadPreference.fromString(readPreference);\n  }\n\n  if (!(readPreference instanceof ReadPreference)) {\n    throw new MongoInvalidArgumentError(\n      'Option \"readPreference\" must be a ReadPreference instance'\n    );\n  }\n\n  return readPreference;\n}\n\nexport function applyCommonQueryOptions(\n  queryOptions: OpQueryOptions,\n  options: CommandOptions\n): CommandOptions {\n  Object.assign(queryOptions, {\n    raw: typeof options.raw === 'boolean' ? options.raw : false,\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n    bsonRegExp: typeof options.bsonRegExp === 'boolean' ? options.bsonRegExp : false\n  });\n\n  if (options.session) {\n    queryOptions.session = options.session;\n  }\n\n  return queryOptions;\n}\n\nexport function isSharded(topologyOrServer: Topology | Server | Connection): boolean {\n  if (topologyOrServer.description && topologyOrServer.description.type === ServerType.Mongos) {\n    return true;\n  }\n\n  // NOTE: This is incredibly inefficient, and should be removed once command construction\n  //       happens based on `Server` not `Topology`.\n  if (topologyOrServer.description && topologyOrServer.description instanceof TopologyDescription) {\n    const servers: ServerDescription[] = Array.from(topologyOrServer.description.servers.values());\n    return servers.some((server: ServerDescription) => server.type === ServerType.Mongos);\n  }\n\n  return false;\n}\n", "import { ReadPreference, ReadPreferenceLike } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport { Document, BSONSerializeOptions, resolveBSONOptions } from '../bson';\nimport type { MongoDBNamespace, Callback } from '../utils';\nimport type { Server } from '../sdam/server';\n\nexport const Aspect = {\n  READ_OPERATION: Symbol('READ_OPERATION'),\n  WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n  RETRYABLE: Symbol('RETRYABLE'),\n  EXPLAINABLE: Symbol('EXPLAINABLE'),\n  SKIP_COLLATION: Symbol('SKIP_COLLATION'),\n  CURSOR_CREATING: Symbol('CURSOR_CREATING')\n} as const;\n\n/** @public */\nexport type Hint = string | Document;\n\nexport interface OperationConstructor extends Function {\n  aspects?: Set<symbol>;\n}\n\n/** @public */\nexport interface OperationOptions extends BSONSerializeOptions {\n  /** Specify ClientSession for this command */\n  session?: ClientSession;\n  willRetryWrites?: boolean;\n\n  /** The preferred read preference (ReadPreference.primary, ReadPreference.primary_preferred, ReadPreference.secondary, ReadPreference.secondary_preferred, ReadPreference.nearest). */\n  readPreference?: ReadPreferenceLike;\n\n  /** @internal Hints to `executeOperation` that this operation should not unpin on an ended transaction */\n  bypassPinningCheck?: boolean;\n}\n\n/** @internal */\nconst kSession = Symbol('session');\n\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n * @internal\n */\nexport abstract class AbstractOperation<TResult = any> {\n  ns!: MongoDBNamespace;\n  cmd!: Document;\n  readPreference: ReadPreference;\n  server!: Server;\n  bypassPinningCheck: boolean;\n\n  // BSON serialization options\n  bsonOptions?: BSONSerializeOptions;\n\n  // TODO: Each operation defines its own options, there should be better typing here\n  options: Document;\n\n  [kSession]: ClientSession;\n\n  constructor(options: OperationOptions = {}) {\n    this.readPreference = this.hasAspect(Aspect.WRITE_OPERATION)\n      ? ReadPreference.primary\n      : ReadPreference.fromOptions(options) ?? ReadPreference.primary;\n\n    // Pull the BSON serialize options from the already-resolved options\n    this.bsonOptions = resolveBSONOptions(options);\n\n    if (options.session) {\n      this[kSession] = options.session;\n    }\n\n    this.options = options;\n    this.bypassPinningCheck = !!options.bypassPinningCheck;\n  }\n\n  abstract execute(server: Server, session: ClientSession, callback: Callback<TResult>): void;\n\n  hasAspect(aspect: symbol): boolean {\n    const ctor = this.constructor as OperationConstructor;\n    if (ctor.aspects == null) {\n      return false;\n    }\n\n    return ctor.aspects.has(aspect);\n  }\n\n  get session(): ClientSession {\n    return this[kSession];\n  }\n\n  get canRetryRead(): boolean {\n    return true;\n  }\n\n  get canRetryWrite(): boolean {\n    return true;\n  }\n}\n\nexport function defineAspects(\n  operation: OperationConstructor,\n  aspects: symbol | symbol[] | Set<symbol>\n): Set<symbol> {\n  if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n    aspects = [aspects];\n  }\n\n  aspects = new Set(aspects);\n  Object.defineProperty(operation, 'aspects', {\n    value: aspects,\n    writable: false\n  });\n\n  return aspects;\n}\n", "import { ReadPreference } from '../read_preference';\nimport {\n  MongoError,\n  isRetryableError,\n  MONGODB_ERROR_CODES,\n  MongoRuntimeError,\n  MongoNetworkError,\n  MongoCompatibilityError,\n  MongoServerError,\n  MongoExpiredSessionError,\n  MongoTransactionError\n} from '../error';\nimport { Aspect, AbstractOperation } from './operation';\nimport { maxWireVersion, maybePromise, Callback } from '../utils';\nimport type { Server } from '../sdam/server';\nimport type { Topology } from '../sdam/topology';\nimport type { ClientSession } from '../sessions';\nimport type { Document } from '../bson';\nimport { supportsRetryableWrites } from '../utils';\n\nconst MMAPv1_RETRY_WRITES_ERROR_CODE = MONGODB_ERROR_CODES.IllegalOperation;\nconst MMAPv1_RETRY_WRITES_ERROR_MESSAGE =\n  'This MongoDB deployment does not support retryable writes. Please add retryWrites=false to your connection string.';\n\ntype ResultTypeFromOperation<TOperation> = TOperation extends AbstractOperation<infer K>\n  ? K\n  : never;\n\n/** @internal */\nexport interface ExecutionResult {\n  /** The server selected for the operation */\n  server: Server;\n  /** The session used for this operation, may be implicitly created */\n  session?: ClientSession;\n  /** The raw server response for the operation */\n  response: Document;\n}\n\n/**\n * Executes the given operation with provided arguments.\n * @internal\n *\n * @remarks\n * This method reduces large amounts of duplication in the entire codebase by providing\n * a single point for determining whether callbacks or promises should be used. Additionally\n * it allows for a single point of entry to provide features such as implicit sessions, which\n * are required by the Driver Sessions specification in the event that a ClientSession is\n * not provided\n *\n * @param topology - The topology to execute this operation on\n * @param operation - The operation to execute\n * @param callback - The command result callback\n */\nexport function executeOperation<\n  T extends AbstractOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(topology: Topology, operation: T): Promise<TResult>;\nexport function executeOperation<\n  T extends AbstractOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(topology: Topology, operation: T, callback: Callback<TResult>): void;\nexport function executeOperation<\n  T extends AbstractOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(topology: Topology, operation: T, callback?: Callback<TResult>): Promise<TResult> | void;\nexport function executeOperation<\n  T extends AbstractOperation<TResult>,\n  TResult = ResultTypeFromOperation<T>\n>(topology: Topology, operation: T, callback?: Callback<TResult>): Promise<TResult> | void {\n  if (!(operation instanceof AbstractOperation)) {\n    // TODO(NODE-3483)\n    throw new MongoRuntimeError('This method requires a valid operation instance');\n  }\n\n  return maybePromise(callback, cb => {\n    if (topology.shouldCheckForSessionSupport()) {\n      return topology.selectServer(ReadPreference.primaryPreferred, err => {\n        if (err) return cb(err);\n\n        executeOperation<T, TResult>(topology, operation, cb);\n      });\n    }\n\n    // The driver sessions spec mandates that we implicitly create sessions for operations\n    // that are not explicitly provided with a session.\n    let session: ClientSession | undefined = operation.session;\n    let owner: symbol | undefined;\n    if (topology.hasSessionSupport()) {\n      if (session == null) {\n        owner = Symbol();\n        session = topology.startSession({ owner, explicit: false });\n      } else if (session.hasEnded) {\n        return cb(new MongoExpiredSessionError('Use of expired sessions is not permitted'));\n      } else if (session.snapshotEnabled && !topology.capabilities.supportsSnapshotReads) {\n        return cb(new MongoCompatibilityError('Snapshot reads require MongoDB 5.0 or later'));\n      }\n    } else if (session) {\n      // If the user passed an explicit session and we are still, after server selection,\n      // trying to run against a topology that doesn't support sessions we error out.\n      return cb(new MongoCompatibilityError('Current topology does not support sessions'));\n    }\n\n    try {\n      executeWithServerSelection(topology, session, operation, (err, result) => {\n        if (session && session.owner && session.owner === owner) {\n          return session.endSession(err2 => cb(err2 || err, result));\n        }\n\n        cb(err, result);\n      });\n    } catch (e) {\n      if (session && session.owner && session.owner === owner) {\n        session.endSession();\n      }\n\n      throw e;\n    }\n  });\n}\n\nfunction supportsRetryableReads(server: Server) {\n  return maxWireVersion(server) >= 6;\n}\n\nfunction executeWithServerSelection(\n  topology: Topology,\n  session: ClientSession,\n  operation: AbstractOperation,\n  callback: Callback\n) {\n  const readPreference = operation.readPreference || ReadPreference.primary;\n  const inTransaction = session && session.inTransaction();\n\n  if (inTransaction && !readPreference.equals(ReadPreference.primary)) {\n    callback(\n      new MongoTransactionError(\n        `Read preference in a transaction must be primary, not: ${readPreference.mode}`\n      )\n    );\n\n    return;\n  }\n\n  if (\n    session &&\n    session.isPinned &&\n    session.transaction.isCommitted &&\n    !operation.bypassPinningCheck\n  ) {\n    session.unpin();\n  }\n\n  const serverSelectionOptions = { session };\n  function callbackWithRetry(err?: any, result?: any) {\n    if (err == null) {\n      return callback(undefined, result);\n    }\n\n    const hasReadAspect = operation.hasAspect(Aspect.READ_OPERATION);\n    const hasWriteAspect = operation.hasAspect(Aspect.WRITE_OPERATION);\n    const itShouldRetryWrite = shouldRetryWrite(err);\n\n    if ((hasReadAspect && !isRetryableError(err)) || (hasWriteAspect && !itShouldRetryWrite)) {\n      return callback(err);\n    }\n\n    if (\n      hasWriteAspect &&\n      itShouldRetryWrite &&\n      err.code === MMAPv1_RETRY_WRITES_ERROR_CODE &&\n      err.errmsg.match(/Transaction numbers/)\n    ) {\n      callback(\n        new MongoServerError({\n          message: MMAPv1_RETRY_WRITES_ERROR_MESSAGE,\n          errmsg: MMAPv1_RETRY_WRITES_ERROR_MESSAGE,\n          originalError: err\n        })\n      );\n\n      return;\n    }\n\n    // select a new server, and attempt to retry the operation\n    topology.selectServer(readPreference, serverSelectionOptions, (e?: any, server?: any) => {\n      if (\n        e ||\n        (operation.hasAspect(Aspect.READ_OPERATION) && !supportsRetryableReads(server)) ||\n        (operation.hasAspect(Aspect.WRITE_OPERATION) && !supportsRetryableWrites(server))\n      ) {\n        callback(e);\n        return;\n      }\n\n      // If we have a cursor and the initial command fails with a network error,\n      // we can retry it on another connection. So we need to check it back in, clear the\n      // pool for the service id, and retry again.\n      if (\n        err &&\n        err instanceof MongoNetworkError &&\n        server.loadBalanced &&\n        session &&\n        session.isPinned &&\n        !session.inTransaction() &&\n        operation.hasAspect(Aspect.CURSOR_CREATING)\n      ) {\n        session.unpin({ force: true, forceClear: true });\n      }\n\n      operation.execute(server, session, callback);\n    });\n  }\n\n  if (\n    readPreference &&\n    !readPreference.equals(ReadPreference.primary) &&\n    session &&\n    session.inTransaction()\n  ) {\n    callback(\n      new MongoTransactionError(\n        `Read preference in a transaction must be primary, not: ${readPreference.mode}`\n      )\n    );\n\n    return;\n  }\n\n  // select a server, and execute the operation against it\n  topology.selectServer(readPreference, serverSelectionOptions, (err?: any, server?: any) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (session && operation.hasAspect(Aspect.RETRYABLE)) {\n      const willRetryRead =\n        topology.s.options.retryReads !== false &&\n        !inTransaction &&\n        supportsRetryableReads(server) &&\n        operation.canRetryRead;\n\n      const willRetryWrite =\n        topology.s.options.retryWrites === true &&\n        !inTransaction &&\n        supportsRetryableWrites(server) &&\n        operation.canRetryWrite;\n\n      const hasReadAspect = operation.hasAspect(Aspect.READ_OPERATION);\n      const hasWriteAspect = operation.hasAspect(Aspect.WRITE_OPERATION);\n\n      if ((hasReadAspect && willRetryRead) || (hasWriteAspect && willRetryWrite)) {\n        if (hasWriteAspect && willRetryWrite) {\n          operation.options.willRetryWrite = true;\n          session.incrementTransactionNumber();\n        }\n\n        operation.execute(server, session, callbackWithRetry);\n        return;\n      }\n    }\n\n    operation.execute(server, session, callback);\n  });\n}\n\nfunction shouldRetryWrite(err: any) {\n  return err instanceof MongoError && err.hasErrorLabel('RetryableWriteError');\n}\n", "import { MongoInvalidArgumentError } from './error';\n\n/** @public */\nexport const ExplainVerbosity = Object.freeze({\n  queryPlanner: 'queryPlanner',\n  queryPlannerExtended: 'queryPlannerExtended',\n  executionStats: 'executionStats',\n  allPlansExecution: 'allPlansExecution'\n} as const);\n\n/** @public */\nexport type ExplainVerbosity = string;\n\n/**\n * For backwards compatibility, true is interpreted as \"allPlansExecution\"\n * and false as \"queryPlanner\". Prior to server version 3.6, aggregate()\n * ignores the verbosity parameter and executes in \"queryPlanner\".\n * @public\n */\nexport type ExplainVerbosityLike = ExplainVerbosity | boolean;\n\n/** @public */\nexport interface ExplainOptions {\n  /** Specifies the verbosity mode for the explain output. */\n  explain?: ExplainVerbosityLike;\n}\n\n/** @internal */\nexport class Explain {\n  verbosity: ExplainVerbosity;\n\n  constructor(verbosity: ExplainVerbosityLike) {\n    if (typeof verbosity === 'boolean') {\n      this.verbosity = verbosity\n        ? ExplainVerbosity.allPlansExecution\n        : ExplainVerbosity.queryPlanner;\n    } else {\n      this.verbosity = verbosity;\n    }\n  }\n\n  static fromOptions(options?: ExplainOptions): Explain | undefined {\n    if (options?.explain == null) return;\n\n    const explain = options.explain;\n    if (typeof explain === 'boolean' || typeof explain === 'string') {\n      return new Explain(explain);\n    }\n\n    throw new MongoInvalidArgumentError('Field \"explain\" must be a string or a boolean');\n  }\n}\n", "import { Aspect, AbstractOperation, OperationOptions } from './operation';\nimport { ReadConcern } from '../read_concern';\nimport { WriteConcern, WriteConcernOptions } from '../write_concern';\nimport { maxWireVersion, MongoDBNamespace, Callback, decorateWithExplain } from '../utils';\nimport type { ReadPreference } from '../read_preference';\nimport { ClientSession, commandSupportsReadConcern } from '../sessions';\nimport { MongoInvalidArgumentError, MongoCompatibilityError } from '../error';\nimport type { Logger } from '../logger';\nimport type { Server } from '../sdam/server';\nimport type { BSONSerializeOptions, Document } from '../bson';\nimport type { ReadConcernLike } from './../read_concern';\nimport { Explain, ExplainOptions } from '../explain';\n\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n\n/** @public */\nexport interface CollationOptions {\n  locale: string;\n  caseLevel?: boolean;\n  caseFirst?: string;\n  strength?: number;\n  numericOrdering?: boolean;\n  alternate?: string;\n  maxVariable?: string;\n  backwards?: boolean;\n  normalization?: boolean;\n}\n\n/** @public */\nexport interface CommandOperationOptions\n  extends OperationOptions,\n    WriteConcernOptions,\n    ExplainOptions {\n  /** @deprecated This option does nothing */\n  fullResponse?: boolean;\n  /** Specify a read concern and level for the collection. (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcernLike;\n  /** Collation */\n  collation?: CollationOptions;\n  maxTimeMS?: number;\n  /** A user-provided comment to attach to this command */\n  comment?: string | Document;\n  /** Should retry failed writes */\n  retryWrites?: boolean;\n\n  // Admin command overrides.\n  dbName?: string;\n  authdb?: string;\n  noResponse?: boolean;\n}\n\n/** @internal */\nexport interface OperationParent {\n  s: { namespace: MongoDBNamespace };\n  readConcern?: ReadConcern;\n  writeConcern?: WriteConcern;\n  readPreference?: ReadPreference;\n  logger?: Logger;\n  bsonOptions?: BSONSerializeOptions;\n}\n\n/** @internal */\nexport abstract class CommandOperation<T> extends AbstractOperation<T> {\n  options: CommandOperationOptions;\n  ns: MongoDBNamespace;\n  readConcern?: ReadConcern;\n  writeConcern?: WriteConcern;\n  explain?: Explain;\n  logger?: Logger;\n\n  constructor(parent?: OperationParent, options?: CommandOperationOptions) {\n    super(options);\n    this.options = options ?? {};\n\n    // NOTE: this was explicitly added for the add/remove user operations, it's likely\n    //       something we'd want to reconsider. Perhaps those commands can use `Admin`\n    //       as a parent?\n    const dbNameOverride = options?.dbName || options?.authdb;\n    if (dbNameOverride) {\n      this.ns = new MongoDBNamespace(dbNameOverride, '$cmd');\n    } else {\n      this.ns = parent\n        ? parent.s.namespace.withCollection('$cmd')\n        : new MongoDBNamespace('admin', '$cmd');\n    }\n\n    this.readConcern = ReadConcern.fromOptions(options);\n    this.writeConcern = WriteConcern.fromOptions(options);\n\n    // TODO(NODE-2056): make logger another \"inheritable\" property\n    if (parent && parent.logger) {\n      this.logger = parent.logger;\n    }\n\n    if (this.hasAspect(Aspect.EXPLAINABLE)) {\n      this.explain = Explain.fromOptions(options);\n    } else if (options?.explain != null) {\n      throw new MongoInvalidArgumentError(`Option \"explain\" is not supported on this command`);\n    }\n  }\n\n  get canRetryWrite(): boolean {\n    if (this.hasAspect(Aspect.EXPLAINABLE)) {\n      return this.explain == null;\n    }\n    return true;\n  }\n\n  abstract execute(server: Server, session: ClientSession, callback: Callback<T>): void;\n\n  executeCommand(server: Server, session: ClientSession, cmd: Document, callback: Callback): void {\n    // TODO: consider making this a non-enumerable property\n    this.server = server;\n\n    const options = {\n      ...this.options,\n      ...this.bsonOptions,\n      readPreference: this.readPreference,\n      session\n    };\n\n    const serverWireVersion = maxWireVersion(server);\n    const inTransaction = this.session && this.session.inTransaction();\n\n    if (this.readConcern && commandSupportsReadConcern(cmd) && !inTransaction) {\n      Object.assign(cmd, { readConcern: this.readConcern });\n    }\n\n    if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      callback(\n        new MongoCompatibilityError(\n          `Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`\n        )\n      );\n      return;\n    }\n\n    if (this.writeConcern && this.hasAspect(Aspect.WRITE_OPERATION) && !inTransaction) {\n      Object.assign(cmd, { writeConcern: this.writeConcern });\n    }\n\n    if (serverWireVersion >= SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      if (\n        options.collation &&\n        typeof options.collation === 'object' &&\n        !this.hasAspect(Aspect.SKIP_COLLATION)\n      ) {\n        Object.assign(cmd, { collation: options.collation });\n      }\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    if (typeof options.comment === 'string') {\n      cmd.comment = options.comment;\n    }\n\n    if (this.hasAspect(Aspect.EXPLAINABLE) && this.explain) {\n      if (serverWireVersion < 6 && cmd.aggregate) {\n        // Prior to 3.6, with aggregate, verbosity is ignored, and we must pass in \"explain: true\"\n        cmd.explain = true;\n      } else {\n        cmd = decorateWithExplain(cmd, this.explain);\n      }\n    }\n\n    server.command(this.ns, cmd, options, callback);\n  }\n}\n", "import { CommandOperation, CommandOperationOptions, OperationParent } from './command';\nimport { MongoDBNamespace, Callback } from '../utils';\nimport type { Server } from '../sdam/server';\nimport type { Document } from '../bson';\nimport type { ClientSession } from '../sessions';\n\n/** @public */\nexport type RunCommandOptions = CommandOperationOptions;\n\n/** @internal */\nexport class RunCommandOperation<T = Document> extends CommandOperation<T> {\n  options: RunCommandOptions;\n  command: Document;\n\n  constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions) {\n    super(parent, options);\n    this.options = options ?? {};\n    this.command = command;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback): void {\n    const command = this.command;\n    this.executeCommand(server, session, command, callback);\n  }\n}\n\nexport class RunAdminCommandOperation<T = Document> extends RunCommandOperation<T> {\n  constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions) {\n    super(parent, command, options);\n    this.ns = new MongoDBNamespace('admin');\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"stream\" has been externalized for browser compatibility. Cannot access \"stream.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "import { ReadPreference } from '../read_preference';\nimport * as BSON from '../bson';\nimport { databaseNamespace } from '../utils';\nimport { OP_QUERY, OP_GETMORE, OP_KILL_CURSORS, OP_MSG } from './wire_protocol/constants';\nimport type { Long, Document, BSONSerializeOptions } from '../bson';\nimport type { ClientSession } from '../sessions';\nimport type { CommandOptions } from './connection';\nimport { MongoRuntimeError, MongoInvalidArgumentError } from '../error';\n\n// Incrementing request id\nlet _requestId = 0;\n\n// Query flags\nconst OPTS_TAILABLE_CURSOR = 2;\nconst OPTS_SLAVE = 4;\nconst OPTS_OPLOG_REPLAY = 8;\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\nconst OPTS_AWAIT_DATA = 32;\nconst OPTS_EXHAUST = 64;\nconst OPTS_PARTIAL = 128;\n\n// Response flags\nconst CURSOR_NOT_FOUND = 1;\nconst QUERY_FAILURE = 2;\nconst SHARD_CONFIG_STALE = 4;\nconst AWAIT_CAPABLE = 8;\n\n/** @internal */\nexport type WriteProtocolMessageType = Query | Msg | GetMore | KillCursor;\n\n/** @internal */\nexport interface OpQueryOptions extends CommandOptions {\n  socketTimeoutMS?: number;\n  session?: ClientSession;\n  documentsReturnedIn?: string;\n  numberToSkip?: number;\n  numberToReturn?: number;\n  returnFieldSelector?: Document;\n  pre32Limit?: number;\n  serializeFunctions?: boolean;\n  ignoreUndefined?: boolean;\n  maxBsonSize?: number;\n  checkKeys?: boolean;\n  slaveOk?: boolean;\n\n  requestId?: number;\n  moreToCome?: boolean;\n  exhaustAllowed?: boolean;\n  readPreference?: ReadPreference;\n}\n\n/**************************************************************\n * QUERY\n **************************************************************/\n/** @internal */\nexport class Query {\n  ns: string;\n  query: Document;\n  numberToSkip: number;\n  numberToReturn: number;\n  returnFieldSelector?: Document;\n  requestId: number;\n  pre32Limit?: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  maxBsonSize: number;\n  checkKeys: boolean;\n  batchSize: number;\n  tailable: boolean;\n  slaveOk: boolean;\n  oplogReplay: boolean;\n  noCursorTimeout: boolean;\n  awaitData: boolean;\n  exhaust: boolean;\n  partial: boolean;\n  documentsReturnedIn?: string;\n\n  constructor(ns: string, query: Document, options: OpQueryOptions) {\n    // Basic options needed to be passed in\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (ns == null) throw new MongoRuntimeError('Namespace must be specified for query');\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (query == null) throw new MongoRuntimeError('A query document must be specified for query');\n\n    // Validate that we are not passing 0x00 in the collection name\n    if (ns.indexOf('\\x00') !== -1) {\n      // TODO(NODE-3483): Use MongoNamespace static method\n      throw new MongoRuntimeError('Namespace cannot contain a null character');\n    }\n\n    // Basic options\n    this.ns = ns;\n    this.query = query;\n\n    // Additional options\n    this.numberToSkip = options.numberToSkip || 0;\n    this.numberToReturn = options.numberToReturn || 0;\n    this.returnFieldSelector = options.returnFieldSelector || undefined;\n    this.requestId = Query.getRequestId();\n\n    // special case for pre-3.2 find commands, delete ASAP\n    this.pre32Limit = options.pre32Limit;\n\n    // Serialization option\n    this.serializeFunctions =\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined =\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.batchSize = this.numberToReturn;\n\n    // Flags\n    this.tailable = false;\n    this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n    this.oplogReplay = false;\n    this.noCursorTimeout = false;\n    this.awaitData = false;\n    this.exhaust = false;\n    this.partial = false;\n  }\n\n  /** Assign next request Id. */\n  incRequestId(): void {\n    this.requestId = _requestId++;\n  }\n\n  /** Peek next request Id. */\n  nextRequestId(): number {\n    return _requestId + 1;\n  }\n\n  /** Increment then return next request Id. */\n  static getRequestId(): number {\n    return ++_requestId;\n  }\n\n  // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n  toBin(): Buffer[] {\n    const buffers = [];\n    let projection = null;\n\n    // Set up the flags\n    let flags = 0;\n    if (this.tailable) {\n      flags |= OPTS_TAILABLE_CURSOR;\n    }\n\n    if (this.slaveOk) {\n      flags |= OPTS_SLAVE;\n    }\n\n    if (this.oplogReplay) {\n      flags |= OPTS_OPLOG_REPLAY;\n    }\n\n    if (this.noCursorTimeout) {\n      flags |= OPTS_NO_CURSOR_TIMEOUT;\n    }\n\n    if (this.awaitData) {\n      flags |= OPTS_AWAIT_DATA;\n    }\n\n    if (this.exhaust) {\n      flags |= OPTS_EXHAUST;\n    }\n\n    if (this.partial) {\n      flags |= OPTS_PARTIAL;\n    }\n\n    // If batchSize is different to this.numberToReturn\n    if (this.batchSize !== this.numberToReturn) this.numberToReturn = this.batchSize;\n\n    // Allocate write protocol header buffer\n    const header = Buffer.alloc(\n      4 * 4 + // Header\n        4 + // Flags\n        Buffer.byteLength(this.ns) +\n        1 + // namespace\n        4 + // numberToSkip\n        4 // numberToReturn\n    );\n\n    // Add header to buffers\n    buffers.push(header);\n\n    // Serialize the query\n    const query = BSON.serialize(this.query, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n\n    // Add query document\n    buffers.push(query);\n\n    if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n      // Serialize the projection document\n      projection = BSON.serialize(this.returnFieldSelector, {\n        checkKeys: this.checkKeys,\n        serializeFunctions: this.serializeFunctions,\n        ignoreUndefined: this.ignoreUndefined\n      });\n      // Add projection document\n      buffers.push(projection);\n    }\n\n    // Total message size\n    const totalLength = header.length + query.length + (projection ? projection.length : 0);\n\n    // Set up the index\n    let index = 4;\n\n    // Write total document length\n    header[3] = (totalLength >> 24) & 0xff;\n    header[2] = (totalLength >> 16) & 0xff;\n    header[1] = (totalLength >> 8) & 0xff;\n    header[0] = totalLength & 0xff;\n\n    // Write header information requestId\n    header[index + 3] = (this.requestId >> 24) & 0xff;\n    header[index + 2] = (this.requestId >> 16) & 0xff;\n    header[index + 1] = (this.requestId >> 8) & 0xff;\n    header[index] = this.requestId & 0xff;\n    index = index + 4;\n\n    // Write header information responseTo\n    header[index + 3] = (0 >> 24) & 0xff;\n    header[index + 2] = (0 >> 16) & 0xff;\n    header[index + 1] = (0 >> 8) & 0xff;\n    header[index] = 0 & 0xff;\n    index = index + 4;\n\n    // Write header information OP_QUERY\n    header[index + 3] = (OP_QUERY >> 24) & 0xff;\n    header[index + 2] = (OP_QUERY >> 16) & 0xff;\n    header[index + 1] = (OP_QUERY >> 8) & 0xff;\n    header[index] = OP_QUERY & 0xff;\n    index = index + 4;\n\n    // Write header information flags\n    header[index + 3] = (flags >> 24) & 0xff;\n    header[index + 2] = (flags >> 16) & 0xff;\n    header[index + 1] = (flags >> 8) & 0xff;\n    header[index] = flags & 0xff;\n    index = index + 4;\n\n    // Write collection name\n    index = index + header.write(this.ns, index, 'utf8') + 1;\n    header[index - 1] = 0;\n\n    // Write header information flags numberToSkip\n    header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n    header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n    header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n    header[index] = this.numberToSkip & 0xff;\n    index = index + 4;\n\n    // Write header information flags numberToReturn\n    header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n    header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n    header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n    header[index] = this.numberToReturn & 0xff;\n    index = index + 4;\n\n    // Return the buffers\n    return buffers;\n  }\n}\n\n/** @internal */\nexport interface OpGetMoreOptions {\n  numberToReturn?: number;\n}\n\n/**************************************************************\n * GETMORE\n **************************************************************/\n/** @internal */\nexport class GetMore {\n  numberToReturn: number;\n  requestId: number;\n  ns: string;\n  cursorId: Long;\n\n  constructor(ns: string, cursorId: Long, opts: OpGetMoreOptions = {}) {\n    this.numberToReturn = opts.numberToReturn || 0;\n    this.requestId = _requestId++;\n    this.ns = ns;\n    this.cursorId = cursorId;\n  }\n\n  // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n  toBin(): Buffer[] {\n    const length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4;\n    // Create command buffer\n    let index = 0;\n    // Allocate buffer\n    const _buffer = Buffer.alloc(length);\n\n    // Write header information\n    // index = write32bit(index, _buffer, length);\n    _buffer[index + 3] = (length >> 24) & 0xff;\n    _buffer[index + 2] = (length >> 16) & 0xff;\n    _buffer[index + 1] = (length >> 8) & 0xff;\n    _buffer[index] = length & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, requestId);\n    _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n    _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n    _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n    _buffer[index] = this.requestId & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, 0);\n    _buffer[index + 3] = (0 >> 24) & 0xff;\n    _buffer[index + 2] = (0 >> 16) & 0xff;\n    _buffer[index + 1] = (0 >> 8) & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, OP_GETMORE);\n    _buffer[index + 3] = (OP_GETMORE >> 24) & 0xff;\n    _buffer[index + 2] = (OP_GETMORE >> 16) & 0xff;\n    _buffer[index + 1] = (OP_GETMORE >> 8) & 0xff;\n    _buffer[index] = OP_GETMORE & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, 0);\n    _buffer[index + 3] = (0 >> 24) & 0xff;\n    _buffer[index + 2] = (0 >> 16) & 0xff;\n    _buffer[index + 1] = (0 >> 8) & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4;\n\n    // Write collection name\n    index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n    _buffer[index - 1] = 0;\n\n    // Write batch size\n    // index = write32bit(index, _buffer, numberToReturn);\n    _buffer[index + 3] = (this.numberToReturn >> 24) & 0xff;\n    _buffer[index + 2] = (this.numberToReturn >> 16) & 0xff;\n    _buffer[index + 1] = (this.numberToReturn >> 8) & 0xff;\n    _buffer[index] = this.numberToReturn & 0xff;\n    index = index + 4;\n\n    // Write cursor id\n    // index = write32bit(index, _buffer, cursorId.getLowBits());\n    _buffer[index + 3] = (this.cursorId.getLowBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorId.getLowBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorId.getLowBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorId.getLowBits() & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, cursorId.getHighBits());\n    _buffer[index + 3] = (this.cursorId.getHighBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorId.getHighBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorId.getHighBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorId.getHighBits() & 0xff;\n    index = index + 4;\n\n    // Return buffer\n    return [_buffer];\n  }\n}\n\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\n/** @internal */\nexport class KillCursor {\n  ns: string;\n  requestId: number;\n  cursorIds: Long[];\n\n  constructor(ns: string, cursorIds: Long[]) {\n    this.ns = ns;\n    this.requestId = _requestId++;\n    this.cursorIds = cursorIds;\n  }\n\n  // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n  toBin(): Buffer[] {\n    const length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8;\n\n    // Create command buffer\n    let index = 0;\n    const _buffer = Buffer.alloc(length);\n\n    // Write header information\n    // index = write32bit(index, _buffer, length);\n    _buffer[index + 3] = (length >> 24) & 0xff;\n    _buffer[index + 2] = (length >> 16) & 0xff;\n    _buffer[index + 1] = (length >> 8) & 0xff;\n    _buffer[index] = length & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, requestId);\n    _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n    _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n    _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n    _buffer[index] = this.requestId & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, 0);\n    _buffer[index + 3] = (0 >> 24) & 0xff;\n    _buffer[index + 2] = (0 >> 16) & 0xff;\n    _buffer[index + 1] = (0 >> 8) & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n    _buffer[index + 3] = (OP_KILL_CURSORS >> 24) & 0xff;\n    _buffer[index + 2] = (OP_KILL_CURSORS >> 16) & 0xff;\n    _buffer[index + 1] = (OP_KILL_CURSORS >> 8) & 0xff;\n    _buffer[index] = OP_KILL_CURSORS & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, 0);\n    _buffer[index + 3] = (0 >> 24) & 0xff;\n    _buffer[index + 2] = (0 >> 16) & 0xff;\n    _buffer[index + 1] = (0 >> 8) & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4;\n\n    // Write batch size\n    // index = write32bit(index, _buffer, this.cursorIds.length);\n    _buffer[index + 3] = (this.cursorIds.length >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds.length >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds.length >> 8) & 0xff;\n    _buffer[index] = this.cursorIds.length & 0xff;\n    index = index + 4;\n\n    // Write all the cursor ids into the array\n    for (let i = 0; i < this.cursorIds.length; i++) {\n      // Write cursor id\n      // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n      _buffer[index + 3] = (this.cursorIds[i].getLowBits() >> 24) & 0xff;\n      _buffer[index + 2] = (this.cursorIds[i].getLowBits() >> 16) & 0xff;\n      _buffer[index + 1] = (this.cursorIds[i].getLowBits() >> 8) & 0xff;\n      _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n      index = index + 4;\n\n      // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n      _buffer[index + 3] = (this.cursorIds[i].getHighBits() >> 24) & 0xff;\n      _buffer[index + 2] = (this.cursorIds[i].getHighBits() >> 16) & 0xff;\n      _buffer[index + 1] = (this.cursorIds[i].getHighBits() >> 8) & 0xff;\n      _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n      index = index + 4;\n    }\n\n    // Return buffer\n    return [_buffer];\n  }\n}\n\nexport interface MessageHeader {\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n}\n\nexport interface OpResponseOptions extends BSONSerializeOptions {\n  raw?: boolean;\n  documentsReturnedIn?: string | null;\n}\n\n/** @internal */\nexport class Response {\n  parsed: boolean;\n  raw: Buffer;\n  data: Buffer;\n  opts: OpResponseOptions;\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n  responseFlags: number;\n  cursorId: Long;\n  startingFrom: number;\n  numberReturned: number;\n  documents: (Document | Buffer)[];\n  cursorNotFound: boolean;\n  queryFailure: boolean;\n  shardConfigStale: boolean;\n  awaitCapable: boolean;\n  promoteLongs: boolean;\n  promoteValues: boolean;\n  promoteBuffers: boolean;\n  bsonRegExp?: boolean;\n  index?: number;\n\n  constructor(\n    message: Buffer,\n    msgHeader: MessageHeader,\n    msgBody: Buffer,\n    opts?: OpResponseOptions\n  ) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts ?? {\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    };\n\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n\n    // Read the message body\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.cursorId = new BSON.Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n    this.startingFrom = msgBody.readInt32LE(12);\n    this.numberReturned = msgBody.readInt32LE(16);\n\n    // Preallocate document array\n    this.documents = new Array(this.numberReturned);\n\n    // Flag values\n    this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n    this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n    this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n    this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues =\n      typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers =\n      typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n  }\n\n  isParsed(): boolean {\n    return this.parsed;\n  }\n\n  parse(options: OpResponseOptions): void {\n    // Don't parse again if not needed\n    if (this.parsed) return;\n    options = options ?? {};\n\n    // Allow the return of raw documents instead of parsing\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const promoteLongs = options.promoteLongs ?? this.opts.promoteLongs;\n    const promoteValues = options.promoteValues ?? this.opts.promoteValues;\n    const promoteBuffers = options.promoteBuffers ?? this.opts.promoteBuffers;\n    const bsonRegExp = options.bsonRegExp ?? this.opts.bsonRegExp;\n    let bsonSize;\n\n    // Set up the options\n    const _options: BSONSerializeOptions = {\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp\n    };\n\n    // Position within OP_REPLY at which documents start\n    // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n    this.index = 20;\n\n    // Parse Body\n    for (let i = 0; i < this.numberReturned; i++) {\n      bsonSize =\n        this.data[this.index] |\n        (this.data[this.index + 1] << 8) |\n        (this.data[this.index + 2] << 16) |\n        (this.data[this.index + 3] << 24);\n\n      // If we have raw results specified slice the return document\n      if (raw) {\n        this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n      } else {\n        this.documents[i] = BSON.deserialize(\n          this.data.slice(this.index, this.index + bsonSize),\n          _options\n        );\n      }\n\n      // Adjust the index\n      this.index = this.index + bsonSize;\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw: Document = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      _options.fieldsAsRaw = fieldsAsRaw;\n\n      const doc = BSON.deserialize(this.documents[0] as Buffer, _options);\n      this.documents = [doc];\n    }\n\n    // Set parsed\n    this.parsed = true;\n  }\n}\n\n// Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n\n// Msg Flags\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n\nexport interface OpMsgOptions {\n  requestId: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  checkKeys: boolean;\n  maxBsonSize: number;\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n  readPreference: ReadPreference;\n}\n\n/** @internal */\nexport class Msg {\n  ns: string;\n  command: Document;\n  options: OpQueryOptions;\n  requestId: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  checkKeys: boolean;\n  maxBsonSize: number;\n  checksumPresent: boolean;\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n\n  constructor(ns: string, command: Document, options: OpQueryOptions) {\n    // Basic options needed to be passed in\n    if (command == null)\n      throw new MongoInvalidArgumentError('Query document must be specified for query');\n\n    // Basic options\n    this.ns = ns;\n    this.command = command;\n    this.command.$db = databaseNamespace(ns);\n\n    if (options.readPreference && options.readPreference.mode !== ReadPreference.PRIMARY) {\n      this.command.$readPreference = options.readPreference.toJSON();\n    }\n\n    // Ensure empty options\n    this.options = options ?? {};\n\n    // Additional options\n    this.requestId = options.requestId ? options.requestId : Msg.getRequestId();\n\n    // Serialization option\n    this.serializeFunctions =\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined =\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n\n    // flags\n    this.checksumPresent = false;\n    this.moreToCome = options.moreToCome || false;\n    this.exhaustAllowed =\n      typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n  }\n\n  toBin(): Buffer[] {\n    const buffers: Buffer[] = [];\n    let flags = 0;\n\n    if (this.checksumPresent) {\n      flags |= OPTS_CHECKSUM_PRESENT;\n    }\n\n    if (this.moreToCome) {\n      flags |= OPTS_MORE_TO_COME;\n    }\n\n    if (this.exhaustAllowed) {\n      flags |= OPTS_EXHAUST_ALLOWED;\n    }\n\n    const header = Buffer.alloc(\n      4 * 4 + // Header\n        4 // Flags\n    );\n\n    buffers.push(header);\n\n    let totalLength = header.length;\n    const command = this.command;\n    totalLength += this.makeDocumentSegment(buffers, command);\n\n    header.writeInt32LE(totalLength, 0); // messageLength\n    header.writeInt32LE(this.requestId, 4); // requestID\n    header.writeInt32LE(0, 8); // responseTo\n    header.writeInt32LE(OP_MSG, 12); // opCode\n    header.writeUInt32LE(flags, 16); // flags\n    return buffers;\n  }\n\n  makeDocumentSegment(buffers: Buffer[], document: Document): number {\n    const payloadTypeBuffer = Buffer.alloc(1);\n    payloadTypeBuffer[0] = 0;\n\n    const documentBuffer = this.serializeBson(document);\n    buffers.push(payloadTypeBuffer);\n    buffers.push(documentBuffer);\n\n    return payloadTypeBuffer.length + documentBuffer.length;\n  }\n\n  serializeBson(document: Document): Buffer {\n    return BSON.serialize(document, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n  }\n\n  static getRequestId(): number {\n    _requestId = (_requestId + 1) & 0x7fffffff;\n    return _requestId;\n  }\n}\n\n/** @internal */\nexport class BinMsg {\n  parsed: boolean;\n  raw: Buffer;\n  data: Buffer;\n  opts: OpResponseOptions;\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n  responseFlags: number;\n  checksumPresent: boolean;\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n  promoteLongs: boolean;\n  promoteValues: boolean;\n  promoteBuffers: boolean;\n  bsonRegExp: boolean;\n  documents: (Document | Buffer)[];\n  index?: number;\n\n  constructor(\n    message: Buffer,\n    msgHeader: MessageHeader,\n    msgBody: Buffer,\n    opts?: OpResponseOptions\n  ) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts ?? {\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    };\n\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n\n    // Read response flags\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n    this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n    this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues =\n      typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers =\n      typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n\n    this.documents = [];\n  }\n\n  isParsed(): boolean {\n    return this.parsed;\n  }\n\n  parse(options: OpResponseOptions): void {\n    // Don't parse again if not needed\n    if (this.parsed) return;\n    options = options ?? {};\n\n    this.index = 4;\n    // Allow the return of raw documents instead of parsing\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const promoteLongs = options.promoteLongs ?? this.opts.promoteLongs;\n    const promoteValues = options.promoteValues ?? this.opts.promoteValues;\n    const promoteBuffers = options.promoteBuffers ?? this.opts.promoteBuffers;\n    const bsonRegExp = options.bsonRegExp ?? this.opts.bsonRegExp;\n\n    // Set up the options\n    const _options: BSONSerializeOptions = {\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp\n    };\n\n    while (this.index < this.data.length) {\n      const payloadType = this.data.readUInt8(this.index++);\n      if (payloadType === 0) {\n        const bsonSize = this.data.readUInt32LE(this.index);\n        const bin = this.data.slice(this.index, this.index + bsonSize);\n        this.documents.push(raw ? bin : BSON.deserialize(bin, _options));\n\n        this.index += bsonSize;\n      } else if (payloadType === 1) {\n        // It was decided that no driver makes use of payload type 1\n\n        // TODO(NODE-3483): Replace with MongoDeprecationError\n        throw new MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n      }\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw: Document = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      _options.fieldsAsRaw = fieldsAsRaw;\n\n      const doc = BSON.deserialize(this.documents[0] as Buffer, _options);\n      this.documents = [doc];\n    }\n\n    this.parsed = true;\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Pager\n\nfunction Pager (pageSize, opts) {\n  if (!(this instanceof Pager)) return new Pager(pageSize, opts)\n\n  this.length = 0\n  this.updates = []\n  this.path = new Uint16Array(4)\n  this.pages = new Array(32768)\n  this.maxPages = this.pages.length\n  this.level = 0\n  this.pageSize = pageSize || 1024\n  this.deduplicate = opts ? opts.deduplicate : null\n  this.zeros = this.deduplicate ? alloc(this.deduplicate.length) : null\n}\n\nPager.prototype.updated = function (page) {\n  while (this.deduplicate && page.buffer[page.deduplicate] === this.deduplicate[page.deduplicate]) {\n    page.deduplicate++\n    if (page.deduplicate === this.deduplicate.length) {\n      page.deduplicate = 0\n      if (page.buffer.equals && page.buffer.equals(this.deduplicate)) page.buffer = this.deduplicate\n      break\n    }\n  }\n  if (page.updated || !this.updates) return\n  page.updated = true\n  this.updates.push(page)\n}\n\nPager.prototype.lastUpdate = function () {\n  if (!this.updates || !this.updates.length) return null\n  var page = this.updates.pop()\n  page.updated = false\n  return page\n}\n\nPager.prototype._array = function (i, noAllocate) {\n  if (i >= this.maxPages) {\n    if (noAllocate) return\n    grow(this, i)\n  }\n\n  factor(i, this.path)\n\n  var arr = this.pages\n\n  for (var j = this.level; j > 0; j--) {\n    var p = this.path[j]\n    var next = arr[p]\n\n    if (!next) {\n      if (noAllocate) return\n      next = arr[p] = new Array(32768)\n    }\n\n    arr = next\n  }\n\n  return arr\n}\n\nPager.prototype.get = function (i, noAllocate) {\n  var arr = this._array(i, noAllocate)\n  var first = this.path[0]\n  var page = arr && arr[first]\n\n  if (!page && !noAllocate) {\n    page = arr[first] = new Page(i, alloc(this.pageSize))\n    if (i >= this.length) this.length = i + 1\n  }\n\n  if (page && page.buffer === this.deduplicate && this.deduplicate && !noAllocate) {\n    page.buffer = copy(page.buffer)\n    page.deduplicate = 0\n  }\n\n  return page\n}\n\nPager.prototype.set = function (i, buf) {\n  var arr = this._array(i, false)\n  var first = this.path[0]\n\n  if (i >= this.length) this.length = i + 1\n\n  if (!buf || (this.zeros && buf.equals && buf.equals(this.zeros))) {\n    arr[first] = undefined\n    return\n  }\n\n  if (this.deduplicate && buf.equals && buf.equals(this.deduplicate)) {\n    buf = this.deduplicate\n  }\n\n  var page = arr[first]\n  var b = truncate(buf, this.pageSize)\n\n  if (page) page.buffer = b\n  else arr[first] = new Page(i, b)\n}\n\nPager.prototype.toBuffer = function () {\n  var list = new Array(this.length)\n  var empty = alloc(this.pageSize)\n  var ptr = 0\n\n  while (ptr < list.length) {\n    var arr = this._array(ptr, true)\n    for (var i = 0; i < 32768 && ptr < list.length; i++) {\n      list[ptr++] = (arr && arr[i]) ? arr[i].buffer : empty\n    }\n  }\n\n  return Buffer.concat(list)\n}\n\nfunction grow (pager, index) {\n  while (pager.maxPages < index) {\n    var old = pager.pages\n    pager.pages = new Array(32768)\n    pager.pages[0] = old\n    pager.level++\n    pager.maxPages *= 32768\n  }\n}\n\nfunction truncate (buf, len) {\n  if (buf.length === len) return buf\n  if (buf.length > len) return buf.slice(0, len)\n  var cpy = alloc(len)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction alloc (size) {\n  if (Buffer.alloc) return Buffer.alloc(size)\n  var buf = new Buffer(size)\n  buf.fill(0)\n  return buf\n}\n\nfunction copy (buf) {\n  var cpy = Buffer.allocUnsafe ? Buffer.allocUnsafe(buf.length) : new Buffer(buf.length)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction Page (i, buf) {\n  this.offset = i * buf.length\n  this.buffer = buf\n  this.updated = false\n  this.deduplicate = 0\n}\n\nfunction factor (n, out) {\n  n = (n - (out[0] = (n & 32767))) / 32768\n  n = (n - (out[1] = (n & 32767))) / 32768\n  out[3] = ((n - (out[2] = (n & 32767))) / 32768) & 32767\n}\n", "var pager = require('memory-pager')\n\nmodule.exports = Bitfield\n\nfunction Bitfield (opts) {\n  if (!(this instanceof Bitfield)) return new Bitfield(opts)\n  if (!opts) opts = {}\n  if (Buffer.isBuffer(opts)) opts = {buffer: opts}\n\n  this.pageOffset = opts.pageOffset || 0\n  this.pageSize = opts.pageSize || 1024\n  this.pages = opts.pages || pager(this.pageSize)\n\n  this.byteLength = this.pages.length * this.pageSize\n  this.length = 8 * this.byteLength\n\n  if (!powerOfTwo(this.pageSize)) throw new Error('The page size should be a power of two')\n\n  this._trackUpdates = !!opts.trackUpdates\n  this._pageMask = this.pageSize - 1\n\n  if (opts.buffer) {\n    for (var i = 0; i < opts.buffer.length; i += this.pageSize) {\n      this.pages.set(i / this.pageSize, opts.buffer.slice(i, i + this.pageSize))\n    }\n    this.byteLength = opts.buffer.length\n    this.length = 8 * this.byteLength\n  }\n}\n\nBitfield.prototype.get = function (i) {\n  var o = i & 7\n  var j = (i - o) / 8\n\n  return !!(this.getByte(j) & (128 >> o))\n}\n\nBitfield.prototype.getByte = function (i) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, true)\n\n  return page ? page.buffer[o + this.pageOffset] : 0\n}\n\nBitfield.prototype.set = function (i, v) {\n  var o = i & 7\n  var j = (i - o) / 8\n  var b = this.getByte(j)\n\n  return this.setByte(j, v ? b | (128 >> o) : b & (255 ^ (128 >> o)))\n}\n\nBitfield.prototype.toBuffer = function () {\n  var all = alloc(this.pages.length * this.pageSize)\n\n  for (var i = 0; i < this.pages.length; i++) {\n    var next = this.pages.get(i, true)\n    var allOffset = i * this.pageSize\n    if (next) next.buffer.copy(all, allOffset, this.pageOffset, this.pageOffset + this.pageSize)\n  }\n\n  return all\n}\n\nBitfield.prototype.setByte = function (i, b) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, false)\n\n  o += this.pageOffset\n\n  if (page.buffer[o] === b) return false\n  page.buffer[o] = b\n\n  if (i >= this.byteLength) {\n    this.byteLength = i + 1\n    this.length = this.byteLength * 8\n  }\n\n  if (this._trackUpdates) this.pages.updated(page)\n\n  return true\n}\n\nfunction alloc (n) {\n  if (Buffer.alloc) return Buffer.alloc(n)\n  var b = new Buffer(n)\n  b.fill(0)\n  return b\n}\n\nfunction powerOfTwo (x) {\n  return !(x & (x - 1))\n}\n", "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst bitfield = require('sparse-bitfield');\n\n/* eslint-disable-next-line security/detect-non-literal-fs-filename */\nconst memory = fs.readFileSync(path.resolve(__dirname, '../code-points.mem'));\nlet offset = 0;\n\n/**\n * Loads each code points sequence from buffer.\n * @returns {bitfield}\n */\nfunction read() {\n  const size = memory.readUInt32BE(offset);\n  offset += 4;\n\n  const codepoints = memory.slice(offset, offset + size);\n  offset += size;\n\n  return bitfield({ buffer: codepoints });\n}\n\nconst unassigned_code_points = read();\nconst commonly_mapped_to_nothing = read();\nconst non_ASCII_space_characters = read();\nconst prohibited_characters = read();\nconst bidirectional_r_al = read();\nconst bidirectional_l = read();\n\nmodule.exports = {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n};\n", "'use strict';\n\nconst {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n} = require('./lib/memory-code-points');\n\nmodule.exports = saslprep;\n\n// 2.1.  Mapping\n\n/**\n * non-ASCII space characters [StringPrep, C.1.2] that can be\n * mapped to SPACE (U+0020)\n */\nconst mapping2space = non_ASCII_space_characters;\n\n/**\n * the \"commonly mapped to nothing\" characters [StringPrep, B.1]\n * that can be mapped to nothing.\n */\nconst mapping2nothing = commonly_mapped_to_nothing;\n\n// utils\nconst getCodePoint = character => character.codePointAt(0);\nconst first = x => x[0];\nconst last = x => x[x.length - 1];\n\n/**\n * Convert provided string into an array of Unicode Code Points.\n * Based on https://stackoverflow.com/a/21409165/1556249\n * and https://www.npmjs.com/package/code-point-at.\n * @param {string} input\n * @returns {number[]}\n */\nfunction toCodePoints(input) {\n  const codepoints = [];\n  const size = input.length;\n\n  for (let i = 0; i < size; i += 1) {\n    const before = input.charCodeAt(i);\n\n    if (before >= 0xd800 && before <= 0xdbff && size > i + 1) {\n      const next = input.charCodeAt(i + 1);\n\n      if (next >= 0xdc00 && next <= 0xdfff) {\n        codepoints.push((before - 0xd800) * 0x400 + next - 0xdc00 + 0x10000);\n        i += 1;\n        continue;\n      }\n    }\n\n    codepoints.push(before);\n  }\n\n  return codepoints;\n}\n\n/**\n * SASLprep.\n * @param {string} input\n * @param {Object} opts\n * @param {boolean} opts.allowUnassigned\n * @returns {string}\n */\nfunction saslprep(input, opts = {}) {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected string.');\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  // 1. Map\n  const mapped_input = toCodePoints(input)\n    // 1.1 mapping to space\n    .map(character => (mapping2space.get(character) ? 0x20 : character))\n    // 1.2 mapping to nothing\n    .filter(character => !mapping2nothing.get(character));\n\n  // 2. Normalize\n  const normalized_input = String.fromCodePoint\n    .apply(null, mapped_input)\n    .normalize('NFKC');\n\n  const normalized_map = toCodePoints(normalized_input);\n\n  // 3. Prohibit\n  const hasProhibited = normalized_map.some(character =>\n    prohibited_characters.get(character)\n  );\n\n  if (hasProhibited) {\n    throw new Error(\n      'Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3'\n    );\n  }\n\n  // Unassigned Code Points\n  if (opts.allowUnassigned !== true) {\n    const hasUnassigned = normalized_map.some(character =>\n      unassigned_code_points.get(character)\n    );\n\n    if (hasUnassigned) {\n      throw new Error(\n        'Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5'\n      );\n    }\n  }\n\n  // 4. check bidi\n\n  const hasBidiRAL = normalized_map.some(character =>\n    bidirectional_r_al.get(character)\n  );\n\n  const hasBidiL = normalized_map.some(character =>\n    bidirectional_l.get(character)\n  );\n\n  // 4.1 If a string contains any RandALCat character, the string MUST NOT\n  // contain any LCat character.\n  if (hasBidiRAL && hasBidiL) {\n    throw new Error(\n      'String must not contain RandALCat and LCat at the same time,' +\n        ' see https://tools.ietf.org/html/rfc3454#section-6'\n    );\n  }\n\n  /**\n   * 4.2 If a string contains any RandALCat character, a RandALCat\n   * character MUST be the first character of the string, and a\n   * RandALCat character MUST be the last character of the string.\n   */\n\n  const isFirstBidiRAL = bidirectional_r_al.get(\n    getCodePoint(first(normalized_input))\n  );\n  const isLastBidiRAL = bidirectional_r_al.get(\n    getCodePoint(last(normalized_input))\n  );\n\n  if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n    throw new Error(\n      'Bidirectional RandALCat character must be the first and the last' +\n        ' character of the string, see https://tools.ietf.org/html/rfc3454#section-6'\n    );\n  }\n\n  return normalized_input;\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires */\nimport { MongoMissingDependencyError } from './error';\nimport type { MongoClient } from './mongo_client';\nimport type { deserialize, Document, serialize } from './bson';\nimport { Callback, parsePackageVersion } from './utils';\n\nexport const PKG_VERSION = Symbol('kPkgVersion');\n\nfunction makeErrorModule(error: any) {\n  const props = error ? { kModuleError: error } : {};\n  return new Proxy(props, {\n    get: (_: any, key: any) => {\n      if (key === 'kModuleError') {\n        return error;\n      }\n      throw error;\n    },\n    set: () => {\n      throw error;\n    }\n  });\n}\n\nexport let Kerberos: typeof import('kerberos') | { kModuleError: MongoMissingDependencyError } =\n  makeErrorModule(\n    new MongoMissingDependencyError(\n      'Optional module `kerberos` not found. Please install it to enable kerberos authentication'\n    )\n  );\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  Kerberos = require('kerberos');\n} catch {} // eslint-disable-line\n\nexport interface KerberosClient {\n  step: (challenge: string, callback?: Callback<string>) => Promise<string> | void;\n  wrap: (\n    challenge: string,\n    options?: { user: string },\n    callback?: Callback<string>\n  ) => Promise<string> | void;\n  unwrap: (challenge: string, callback?: Callback<string>) => Promise<string> | void;\n}\n\ntype SnappyLib = {\n  [PKG_VERSION]: { major: number; minor: number; patch: number };\n\n  /**\n   * - Snappy 6.x takes a callback and returns void\n   * - Snappy 7.x returns a promise\n   *\n   * In order to support both we must check the return value of the function\n   * @param buf - Buffer to be compressed\n   * @param callback - ONLY USED IN SNAPPY 6.x\n   */\n  compress(buf: Buffer): Promise<Buffer>;\n  compress(buf: Buffer, callback: (error?: Error, buffer?: Buffer) => void): Promise<Buffer> | void;\n  compress(\n    buf: Buffer,\n    callback?: (error?: Error, buffer?: Buffer) => void\n  ): Promise<Buffer> | void;\n\n  /**\n   * - Snappy 6.x takes a callback and returns void\n   * - Snappy 7.x returns a promise\n   *\n   * In order to support both we must check the return value of the function\n   * @param buf - Buffer to be compressed\n   * @param callback - ONLY USED IN SNAPPY 6.x\n   */\n  uncompress(buf: Buffer, opt: { asBuffer: true }): Promise<Buffer>;\n  uncompress(\n    buf: Buffer,\n    opt: { asBuffer: true },\n    callback: (error?: Error, buffer?: Buffer) => void\n  ): Promise<Buffer> | void;\n  uncompress(\n    buf: Buffer,\n    opt: { asBuffer: true },\n    callback?: (error?: Error, buffer?: Buffer) => void\n  ): Promise<Buffer> | void;\n};\n\nexport let Snappy: SnappyLib | { kModuleError: MongoMissingDependencyError } = makeErrorModule(\n  new MongoMissingDependencyError(\n    'Optional module `snappy` not found. Please install it to enable snappy compression'\n  )\n);\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  Snappy = require('snappy');\n  try {\n    (Snappy as any)[PKG_VERSION] = parsePackageVersion(require('snappy/package.json'));\n  } catch {} // eslint-disable-line\n} catch {} // eslint-disable-line\n\nexport let saslprep: typeof import('saslprep') | { kModuleError: MongoMissingDependencyError } =\n  makeErrorModule(\n    new MongoMissingDependencyError(\n      'Optional module `saslprep` not found.' +\n        ' Please install it to enable Stringprep Profile for User Names and Passwords'\n    )\n  );\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  saslprep = require('saslprep');\n} catch {} // eslint-disable-line\n\ninterface AWS4 {\n  /**\n   * Created these inline types to better assert future usage of this API\n   * @param options - options for request\n   * @param credentials - AWS credential details, sessionToken should be omitted entirely if its false-y\n   */\n  sign(\n    options: {\n      path: '/';\n      body: string;\n      host: string;\n      method: 'POST';\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded';\n        'Content-Length': number;\n        'X-MongoDB-Server-Nonce': string;\n        'X-MongoDB-GS2-CB-Flag': 'n';\n      };\n      service: string;\n      region: string;\n    },\n    credentials:\n      | {\n          accessKeyId: string;\n          secretAccessKey: string;\n          sessionToken: string;\n        }\n      | {\n          accessKeyId: string;\n          secretAccessKey: string;\n        }\n      | undefined\n  ): {\n    headers: {\n      Authorization: string;\n      'X-Amz-Date': string;\n    };\n  };\n}\n\nexport let aws4: AWS4 | { kModuleError: MongoMissingDependencyError } = makeErrorModule(\n  new MongoMissingDependencyError(\n    'Optional module `aws4` not found. Please install it to enable AWS authentication'\n  )\n);\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  aws4 = require('aws4');\n} catch {} // eslint-disable-line\n\n/** @public */\nexport const AutoEncryptionLoggerLevel = Object.freeze({\n  FatalError: 0,\n  Error: 1,\n  Warning: 2,\n  Info: 3,\n  Trace: 4\n} as const);\n\n/** @public */\nexport type AutoEncryptionLoggerLevel =\n  typeof AutoEncryptionLoggerLevel[keyof typeof AutoEncryptionLoggerLevel];\n\n/** @public */\nexport interface AutoEncryptionOptions {\n  /** @internal */\n  bson?: { serialize: typeof serialize; deserialize: typeof deserialize };\n  /** @internal client for metadata lookups */\n  metadataClient?: MongoClient;\n  /** A `MongoClient` used to fetch keys from a key vault */\n  keyVaultClient?: MongoClient;\n  /** The namespace where keys are stored in the key vault */\n  keyVaultNamespace?: string;\n  /** Configuration options that are used by specific KMS providers during key generation, encryption, and decryption. */\n  kmsProviders?: {\n    /** Configuration options for using 'aws' as your KMS provider */\n    aws?: {\n      /** The access key used for the AWS KMS provider */\n      accessKeyId: string;\n      /** The secret access key used for the AWS KMS provider */\n      secretAccessKey: string;\n      /**\n       * An optional AWS session token that will be used as the\n       * X-Amz-Security-Token header for AWS requests.\n       */\n      sessionToken?: string;\n    };\n    /** Configuration options for using 'local' as your KMS provider */\n    local?: {\n      /**\n       * The master key used to encrypt/decrypt data keys.\n       * A 96-byte long Buffer or base64 encoded string.\n       */\n      key: Buffer | string;\n    };\n    /** Configuration options for using 'azure' as your KMS provider */\n    azure?: {\n      /** The tenant ID identifies the organization for the account */\n      tenantId: string;\n      /** The client ID to authenticate a registered application */\n      clientId: string;\n      /** The client secret to authenticate a registered application */\n      clientSecret: string;\n      /**\n       * If present, a host with optional port. E.g. \"example.com\" or \"example.com:443\".\n       * This is optional, and only needed if customer is using a non-commercial Azure instance\n       * (e.g. a government or China account, which use different URLs).\n       * Defaults to \"login.microsoftonline.com\"\n       */\n      identityPlatformEndpoint?: string | undefined;\n    };\n    /** Configuration options for using 'gcp' as your KMS provider */\n    gcp?: {\n      /** The service account email to authenticate */\n      email: string;\n      /** A PKCS#8 encrypted key. This can either be a base64 string or a binary representation */\n      privateKey: string | Buffer;\n      /**\n       * If present, a host with optional port. E.g. \"example.com\" or \"example.com:443\".\n       * Defaults to \"oauth2.googleapis.com\"\n       */\n      endpoint?: string | undefined;\n    };\n  };\n  /**\n   * A map of namespaces to a local JSON schema for encryption\n   *\n   * **NOTE**: Supplying options.schemaMap provides more security than relying on JSON Schemas obtained from the server.\n   * It protects against a malicious server advertising a false JSON Schema, which could trick the client into sending decrypted data that should be encrypted.\n   * Schemas supplied in the schemaMap only apply to configuring automatic encryption for client side encryption.\n   * Other validation rules in the JSON schema will not be enforced by the driver and will result in an error.\n   */\n  schemaMap?: Document;\n  /** Allows the user to bypass auto encryption, maintaining implicit decryption */\n  bypassAutoEncryption?: boolean;\n  options?: {\n    /** An optional hook to catch logging messages from the underlying encryption engine */\n    logger?: (level: AutoEncryptionLoggerLevel, message: string) => void;\n  };\n  extraOptions?: {\n    /**\n     * A local process the driver communicates with to determine how to encrypt values in a command.\n     * Defaults to \"mongodb://%2Fvar%2Fmongocryptd.sock\" if domain sockets are available or \"mongodb://localhost:27020\" otherwise\n     */\n    mongocryptdURI?: string;\n    /** If true, autoEncryption will not attempt to spawn a mongocryptd before connecting  */\n    mongocryptdBypassSpawn?: boolean;\n    /** The path to the mongocryptd executable on the system */\n    mongocryptdSpawnPath?: string;\n    /** Command line arguments to use when auto-spawning a mongocryptd */\n    mongocryptdSpawnArgs?: string[];\n  };\n}\n\n/** @public */\nexport interface AutoEncrypter {\n  // eslint-disable-next-line @typescript-eslint/no-misused-new\n  new (client: MongoClient, options: AutoEncryptionOptions): AutoEncrypter;\n  init(cb: Callback): void;\n  teardown(force: boolean, callback: Callback): void;\n  encrypt(ns: string, cmd: Document, options: any, callback: Callback<Document>): void;\n  decrypt(cmd: Document, options: any, callback: Callback<Document>): void;\n}\n", "import * as zlib from 'zlib';\nimport type { Callback } from '../../utils';\nimport type { OperationDescription } from '../message_stream';\n\nimport { PKG_VERSION, Snappy } from '../../deps';\nimport { MongoDecompressionError, MongoInvalidArgumentError } from '../../error';\n\n/** @public */\nexport const Compressor = Object.freeze({\n  none: 0,\n  snappy: 1,\n  zlib: 2\n} as const);\n\n/** @public */\nexport type Compressor = typeof Compressor[CompressorName];\n\n/** @public */\nexport type CompressorName = keyof typeof Compressor;\n\nexport const uncompressibleCommands = new Set([\n  'ismaster',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'authenticate',\n  'createUser',\n  'updateUser',\n  'copydbSaslStart',\n  'copydbgetnonce',\n  'copydb'\n]);\n\n// Facilitate compressing a message using an agreed compressor\nexport function compress(\n  self: { options: OperationDescription & zlib.ZlibOptions },\n  dataToBeCompressed: Buffer,\n  callback: Callback<Buffer>\n): void {\n  const zlibOptions = {} as zlib.ZlibOptions;\n  switch (self.options.agreedCompressor) {\n    case 'snappy': {\n      if ('kModuleError' in Snappy) {\n        return callback(Snappy['kModuleError']);\n      }\n\n      if (Snappy[PKG_VERSION].major <= 6) {\n        Snappy.compress(dataToBeCompressed, callback);\n      } else {\n        Snappy.compress(dataToBeCompressed)\n          .then(buffer => callback(undefined, buffer))\n          .catch(error => callback(error));\n      }\n      break;\n    }\n    case 'zlib':\n      // Determine zlibCompressionLevel\n      if (self.options.zlibCompressionLevel) {\n        zlibOptions.level = self.options.zlibCompressionLevel;\n      }\n      zlib.deflate(dataToBeCompressed, zlibOptions, callback as zlib.CompressCallback);\n      break;\n    default:\n      throw new MongoInvalidArgumentError(\n        `Unknown compressor ${self.options.agreedCompressor} failed to compress`\n      );\n  }\n}\n\n// Decompress a message using the given compressor\nexport function decompress(\n  compressorID: Compressor,\n  compressedData: Buffer,\n  callback: Callback<Buffer>\n): void {\n  if (compressorID < 0 || compressorID > Math.max(2)) {\n    throw new MongoDecompressionError(\n      `Server sent message compressed using an unsupported compressor. (Received compressor ID ${compressorID})`\n    );\n  }\n\n  switch (compressorID) {\n    case Compressor.snappy: {\n      if ('kModuleError' in Snappy) {\n        return callback(Snappy['kModuleError']);\n      }\n\n      if (Snappy[PKG_VERSION].major <= 6) {\n        Snappy.uncompress(compressedData, { asBuffer: true }, callback);\n      } else {\n        Snappy.uncompress(compressedData, { asBuffer: true })\n          .then(buffer => callback(undefined, buffer))\n          .catch(error => callback(error));\n      }\n      break;\n    }\n    case Compressor.zlib:\n      zlib.inflate(compressedData, callback as zlib.CompressCallback);\n      break;\n    default:\n      callback(undefined, compressedData);\n  }\n}\n", "import { Duplex, DuplexOptions } from 'stream';\nimport { Response, Msg, BinMsg, Query, WriteProtocolMessageType, MessageHeader } from './commands';\nimport { MongoDecompressionError, MongoParseError } from '../error';\nimport { OP_COMPRESSED, OP_MSG } from './wire_protocol/constants';\nimport {\n  compress,\n  decompress,\n  uncompressibleCommands,\n  Compressor,\n  CompressorName\n} from './wire_protocol/compression';\nimport type { Document, BSONSerializeOptions } from '../bson';\nimport { BufferPool, Callback } from '../utils';\nimport type { ClientSession } from '../sessions';\n\nconst MESSAGE_HEADER_SIZE = 16;\nconst COMPRESSION_DETAILS_SIZE = 9; // originalOpcode + uncompressedSize, compressorID\n\nconst kDefaultMaxBsonMessageSize = 1024 * 1024 * 16 * 4;\n/** @internal */\nconst kBuffer = Symbol('buffer');\n\n/** @internal */\nexport interface MessageStreamOptions extends DuplexOptions {\n  maxBsonMessageSize?: number;\n}\n\n/** @internal */\nexport interface OperationDescription extends BSONSerializeOptions {\n  started: number;\n  cb: Callback<Document>;\n  command: boolean;\n  documentsReturnedIn?: string;\n  fullResult: boolean;\n  noResponse: boolean;\n  raw: boolean;\n  requestId: number;\n  session?: ClientSession;\n  socketTimeoutOverride?: boolean;\n  agreedCompressor?: CompressorName;\n  zlibCompressionLevel?: number;\n  $clusterTime?: Document;\n}\n\n/**\n * A duplex stream that is capable of reading and writing raw wire protocol messages, with\n * support for optional compression\n * @internal\n */\nexport class MessageStream extends Duplex {\n  /** @internal */\n  maxBsonMessageSize: number;\n  /** @internal */\n  [kBuffer]: BufferPool;\n\n  constructor(options: MessageStreamOptions = {}) {\n    super(options);\n    this.maxBsonMessageSize = options.maxBsonMessageSize || kDefaultMaxBsonMessageSize;\n    this[kBuffer] = new BufferPool();\n  }\n\n  _write(chunk: Buffer, _: unknown, callback: Callback<Buffer>): void {\n    this[kBuffer].append(chunk);\n    processIncomingData(this, callback);\n  }\n\n  _read(/* size */): void {\n    // NOTE: This implementation is empty because we explicitly push data to be read\n    //       when `writeMessage` is called.\n    return;\n  }\n\n  writeCommand(\n    command: WriteProtocolMessageType,\n    operationDescription: OperationDescription\n  ): void {\n    // TODO: agreed compressor should live in `StreamDescription`\n    const compressorName: CompressorName =\n      operationDescription && operationDescription.agreedCompressor\n        ? operationDescription.agreedCompressor\n        : 'none';\n    if (compressorName === 'none' || !canCompress(command)) {\n      const data = command.toBin();\n      this.push(Array.isArray(data) ? Buffer.concat(data) : data);\n      return;\n    }\n    // otherwise, compress the message\n    const concatenatedOriginalCommandBuffer = Buffer.concat(command.toBin());\n    const messageToBeCompressed = concatenatedOriginalCommandBuffer.slice(MESSAGE_HEADER_SIZE);\n\n    // Extract information needed for OP_COMPRESSED from the uncompressed message\n    const originalCommandOpCode = concatenatedOriginalCommandBuffer.readInt32LE(12);\n\n    // Compress the message body\n    compress({ options: operationDescription }, messageToBeCompressed, (err, compressedMessage) => {\n      if (err || !compressedMessage) {\n        operationDescription.cb(err);\n        return;\n      }\n\n      // Create the msgHeader of OP_COMPRESSED\n      const msgHeader = Buffer.alloc(MESSAGE_HEADER_SIZE);\n      msgHeader.writeInt32LE(\n        MESSAGE_HEADER_SIZE + COMPRESSION_DETAILS_SIZE + compressedMessage.length,\n        0\n      ); // messageLength\n      msgHeader.writeInt32LE(command.requestId, 4); // requestID\n      msgHeader.writeInt32LE(0, 8); // responseTo (zero)\n      msgHeader.writeInt32LE(OP_COMPRESSED, 12); // opCode\n\n      // Create the compression details of OP_COMPRESSED\n      const compressionDetails = Buffer.alloc(COMPRESSION_DETAILS_SIZE);\n      compressionDetails.writeInt32LE(originalCommandOpCode, 0); // originalOpcode\n      compressionDetails.writeInt32LE(messageToBeCompressed.length, 4); // Size of the uncompressed compressedMessage, excluding the MsgHeader\n      compressionDetails.writeUInt8(Compressor[compressorName], 8); // compressorID\n      this.push(Buffer.concat([msgHeader, compressionDetails, compressedMessage]));\n    });\n  }\n}\n\n// Return whether a command contains an uncompressible command term\n// Will return true if command contains no uncompressible command terms\nfunction canCompress(command: WriteProtocolMessageType) {\n  const commandDoc = command instanceof Msg ? command.command : (command as Query).query;\n  const commandName = Object.keys(commandDoc)[0];\n  return !uncompressibleCommands.has(commandName);\n}\n\nfunction processIncomingData(stream: MessageStream, callback: Callback<Buffer>) {\n  const buffer = stream[kBuffer];\n  if (buffer.length < 4) {\n    callback();\n    return;\n  }\n\n  const sizeOfMessage = buffer.peek(4).readInt32LE();\n  if (sizeOfMessage < 0) {\n    callback(new MongoParseError(`Invalid message size: ${sizeOfMessage}`));\n    return;\n  }\n\n  if (sizeOfMessage > stream.maxBsonMessageSize) {\n    callback(\n      new MongoParseError(\n        `Invalid message size: ${sizeOfMessage}, max allowed: ${stream.maxBsonMessageSize}`\n      )\n    );\n    return;\n  }\n\n  if (sizeOfMessage > buffer.length) {\n    callback();\n    return;\n  }\n\n  const message = buffer.read(sizeOfMessage);\n  const messageHeader: MessageHeader = {\n    length: message.readInt32LE(0),\n    requestId: message.readInt32LE(4),\n    responseTo: message.readInt32LE(8),\n    opCode: message.readInt32LE(12)\n  };\n\n  let ResponseType = messageHeader.opCode === OP_MSG ? BinMsg : Response;\n  if (messageHeader.opCode !== OP_COMPRESSED) {\n    const messageBody = message.slice(MESSAGE_HEADER_SIZE);\n    stream.emit('message', new ResponseType(message, messageHeader, messageBody));\n\n    if (buffer.length >= 4) {\n      processIncomingData(stream, callback);\n    } else {\n      callback();\n    }\n\n    return;\n  }\n\n  messageHeader.fromCompressed = true;\n  messageHeader.opCode = message.readInt32LE(MESSAGE_HEADER_SIZE);\n  messageHeader.length = message.readInt32LE(MESSAGE_HEADER_SIZE + 4);\n  const compressorID: Compressor = message[MESSAGE_HEADER_SIZE + 8] as Compressor;\n  const compressedBuffer = message.slice(MESSAGE_HEADER_SIZE + 9);\n\n  // recalculate based on wrapped opcode\n  ResponseType = messageHeader.opCode === OP_MSG ? BinMsg : Response;\n  decompress(compressorID, compressedBuffer, (err, messageBody) => {\n    if (err || !messageBody) {\n      callback(err);\n      return;\n    }\n\n    if (messageBody.length !== messageHeader.length) {\n      callback(\n        new MongoDecompressionError('Message body and message header must be the same length')\n      );\n\n      return;\n    }\n\n    stream.emit('message', new ResponseType(message, messageHeader, messageBody));\n\n    if (buffer.length >= 4) {\n      processIncomingData(stream, callback);\n    } else {\n      callback();\n    }\n  });\n}\n", "import { parseServerType } from '../sdam/server_description';\nimport type { Document } from '../bson';\nimport type { CompressorName } from './wire_protocol/compression';\nimport { ServerType } from '../sdam/common';\n\nconst RESPONSE_FIELDS = [\n  'minWireVersion',\n  'maxWireVersion',\n  'maxBsonObjectSize',\n  'maxMessageSizeBytes',\n  'maxWriteBatchSize',\n  'logicalSessionTimeoutMinutes'\n] as const;\n\n/** @public */\nexport interface StreamDescriptionOptions {\n  compressors?: CompressorName[];\n  logicalSessionTimeoutMinutes?: number;\n  loadBalanced: boolean;\n}\n\n/** @public */\nexport class StreamDescription {\n  address: string;\n  type: string;\n  minWireVersion?: number;\n  maxWireVersion?: number;\n  maxBsonObjectSize: number;\n  maxMessageSizeBytes: number;\n  maxWriteBatchSize: number;\n  compressors: CompressorName[];\n  compressor?: CompressorName;\n  logicalSessionTimeoutMinutes?: number;\n  loadBalanced: boolean;\n\n  __nodejs_mock_server__?: boolean;\n\n  zlibCompressionLevel?: number;\n\n  constructor(address: string, options?: StreamDescriptionOptions) {\n    this.address = address;\n    this.type = ServerType.Unknown;\n    this.minWireVersion = undefined;\n    this.maxWireVersion = undefined;\n    this.maxBsonObjectSize = 16777216;\n    this.maxMessageSizeBytes = 48000000;\n    this.maxWriteBatchSize = 100000;\n    this.logicalSessionTimeoutMinutes = options?.logicalSessionTimeoutMinutes;\n    this.loadBalanced = !!options?.loadBalanced;\n    this.compressors =\n      options && options.compressors && Array.isArray(options.compressors)\n        ? options.compressors\n        : [];\n  }\n\n  receiveResponse(response: Document): void {\n    this.type = parseServerType(response);\n    RESPONSE_FIELDS.forEach(field => {\n      if (typeof response[field] != null) {\n        this[field] = response[field];\n      }\n\n      // testing case\n      if ('__nodejs_mock_server__' in response) {\n        this.__nodejs_mock_server__ = response['__nodejs_mock_server__'];\n      }\n    });\n\n    if (response.compression) {\n      this.compressor = this.compressors.filter(c => response.compression?.includes(c))[0];\n    }\n  }\n}\n", "import { GetMore, KillCursor, Msg, WriteProtocolMessageType } from './commands';\nimport { calculateDurationInMs, deepCopy } from '../utils';\nimport type { Connection } from './connection';\nimport type { Document, ObjectId } from '../bson';\n\n/**\n * An event indicating the start of a given\n * @public\n * @category Event\n */\nexport class CommandStartedEvent {\n  commandObj?: Document;\n  requestId: number;\n  databaseName: string;\n  commandName: string;\n  command: Document;\n  address: string;\n  connectionId?: string | number;\n  serviceId?: ObjectId;\n\n  /**\n   * Create a started event\n   *\n   * @internal\n   * @param pool - the pool that originated the command\n   * @param command - the command\n   */\n  constructor(connection: Connection, command: WriteProtocolMessageType) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n\n    // TODO: remove in major revision, this is not spec behavior\n    if (SENSITIVE_COMMANDS.has(commandName)) {\n      this.commandObj = {};\n      this.commandObj[commandName] = true;\n    }\n\n    this.address = address;\n    this.connectionId = connectionId;\n    this.serviceId = serviceId;\n    this.requestId = command.requestId;\n    this.databaseName = databaseName(command);\n    this.commandName = commandName;\n    this.command = maybeRedact(commandName, cmd, cmd);\n  }\n\n  /* @internal */\n  get hasServiceId(): boolean {\n    return !!this.serviceId;\n  }\n}\n\n/**\n * An event indicating the success of a given command\n * @public\n * @category Event\n */\nexport class CommandSucceededEvent {\n  address: string;\n  connectionId?: string | number;\n  requestId: number;\n  duration: number;\n  commandName: string;\n  reply: unknown;\n  serviceId?: ObjectId;\n\n  /**\n   * Create a succeeded event\n   *\n   * @internal\n   * @param pool - the pool that originated the command\n   * @param command - the command\n   * @param reply - the reply for this command from the server\n   * @param started - a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(\n    connection: Connection,\n    command: WriteProtocolMessageType,\n    reply: Document | undefined,\n    started: number\n  ) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n\n    this.address = address;\n    this.connectionId = connectionId;\n    this.serviceId = serviceId;\n    this.requestId = command.requestId;\n    this.commandName = commandName;\n    this.duration = calculateDurationInMs(started);\n    this.reply = maybeRedact(commandName, cmd, extractReply(command, reply));\n  }\n\n  /* @internal */\n  get hasServiceId(): boolean {\n    return !!this.serviceId;\n  }\n}\n\n/**\n * An event indicating the failure of a given command\n * @public\n * @category Event\n */\nexport class CommandFailedEvent {\n  address: string;\n  connectionId?: string | number;\n  requestId: number;\n  duration: number;\n  commandName: string;\n  failure: Error;\n  serviceId?: ObjectId;\n\n  /**\n   * Create a failure event\n   *\n   * @internal\n   * @param pool - the pool that originated the command\n   * @param command - the command\n   * @param error - the generated error or a server error response\n   * @param started - a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(\n    connection: Connection,\n    command: WriteProtocolMessageType,\n    error: Error | Document,\n    started: number\n  ) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n    const { address, connectionId, serviceId } = extractConnectionDetails(connection);\n\n    this.address = address;\n    this.connectionId = connectionId;\n    this.serviceId = serviceId;\n\n    this.requestId = command.requestId;\n    this.commandName = commandName;\n    this.duration = calculateDurationInMs(started);\n    this.failure = maybeRedact(commandName, cmd, error) as Error;\n  }\n\n  /* @internal */\n  get hasServiceId(): boolean {\n    return !!this.serviceId;\n  }\n}\n\n/** Commands that we want to redact because of the sensitive nature of their contents */\nconst SENSITIVE_COMMANDS = new Set([\n  'authenticate',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'createUser',\n  'updateUser',\n  'copydbgetnonce',\n  'copydbsaslstart',\n  'copydb'\n]);\n\nconst HELLO_COMMANDS = new Set(['hello', 'ismaster', 'isMaster']);\n\n// helper methods\nconst extractCommandName = (commandDoc: Document) => Object.keys(commandDoc)[0];\nconst namespace = (command: WriteProtocolMessageType) => command.ns;\nconst databaseName = (command: WriteProtocolMessageType) => command.ns.split('.')[0];\nconst collectionName = (command: WriteProtocolMessageType) => command.ns.split('.')[1];\nconst maybeRedact = (commandName: string, commandDoc: Document, result: Error | Document) =>\n  SENSITIVE_COMMANDS.has(commandName) ||\n  (HELLO_COMMANDS.has(commandName) && commandDoc.speculativeAuthenticate)\n    ? {}\n    : result;\n\nconst LEGACY_FIND_QUERY_MAP: { [key: string]: string } = {\n  $query: 'filter',\n  $orderby: 'sort',\n  $hint: 'hint',\n  $comment: 'comment',\n  $maxScan: 'maxScan',\n  $max: 'max',\n  $min: 'min',\n  $returnKey: 'returnKey',\n  $showDiskLoc: 'showRecordId',\n  $maxTimeMS: 'maxTimeMS',\n  $snapshot: 'snapshot'\n};\n\nconst LEGACY_FIND_OPTIONS_MAP = {\n  numberToSkip: 'skip',\n  numberToReturn: 'batchSize',\n  returnFieldSelector: 'projection'\n} as const;\n\nconst OP_QUERY_KEYS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'partial',\n  'exhaust'\n] as const;\n\n/** Extract the actual command from the query, possibly up-converting if it's a legacy format */\nfunction extractCommand(command: WriteProtocolMessageType): Document {\n  if (command instanceof GetMore) {\n    return {\n      getMore: deepCopy(command.cursorId),\n      collection: collectionName(command),\n      batchSize: command.numberToReturn\n    };\n  }\n\n  if (command instanceof KillCursor) {\n    return {\n      killCursors: collectionName(command),\n      cursors: deepCopy(command.cursorIds)\n    };\n  }\n\n  if (command instanceof Msg) {\n    return deepCopy(command.command);\n  }\n\n  if (command.query?.$query) {\n    let result: Document;\n    if (command.ns === 'admin.$cmd') {\n      // up-convert legacy command\n      result = Object.assign({}, command.query.$query);\n    } else {\n      // up-convert legacy find command\n      result = { find: collectionName(command) };\n      Object.keys(LEGACY_FIND_QUERY_MAP).forEach(key => {\n        if (command.query[key] != null) {\n          result[LEGACY_FIND_QUERY_MAP[key]] = deepCopy(command.query[key]);\n        }\n      });\n    }\n\n    Object.keys(LEGACY_FIND_OPTIONS_MAP).forEach(key => {\n      const legacyKey = key as keyof typeof LEGACY_FIND_OPTIONS_MAP;\n      if (command[legacyKey] != null) {\n        result[LEGACY_FIND_OPTIONS_MAP[legacyKey]] = deepCopy(command[legacyKey]);\n      }\n    });\n\n    OP_QUERY_KEYS.forEach(key => {\n      const opKey = key as typeof OP_QUERY_KEYS[number];\n      if (command[opKey]) {\n        result[opKey] = command[opKey];\n      }\n    });\n\n    if (command.pre32Limit != null) {\n      result.limit = command.pre32Limit;\n    }\n\n    if (command.query.$explain) {\n      return { explain: result };\n    }\n    return result;\n  }\n\n  const clonedQuery: Record<string, unknown> = {};\n  const clonedCommand: Record<string, unknown> = {};\n  if (command.query) {\n    for (const k in command.query) {\n      clonedQuery[k] = deepCopy(command.query[k]);\n    }\n    clonedCommand.query = clonedQuery;\n  }\n\n  for (const k in command) {\n    if (k === 'query') continue;\n    clonedCommand[k] = deepCopy((command as unknown as Record<string, unknown>)[k]);\n  }\n  return command.query ? clonedQuery : clonedCommand;\n}\n\nfunction extractReply(command: WriteProtocolMessageType, reply?: Document) {\n  if (command instanceof KillCursor) {\n    return {\n      ok: 1,\n      cursorsUnknown: command.cursorIds\n    };\n  }\n\n  if (!reply) {\n    return reply;\n  }\n\n  if (command instanceof GetMore) {\n    return {\n      ok: 1,\n      cursor: {\n        id: deepCopy(reply.cursorId),\n        ns: namespace(command),\n        nextBatch: deepCopy(reply.documents)\n      }\n    };\n  }\n\n  if (command instanceof Msg) {\n    return deepCopy(reply.result ? reply.result : reply);\n  }\n\n  // is this a legacy find command?\n  if (command.query && command.query.$query != null) {\n    return {\n      ok: 1,\n      cursor: {\n        id: deepCopy(reply.cursorId),\n        ns: namespace(command),\n        firstBatch: deepCopy(reply.documents)\n      }\n    };\n  }\n\n  return deepCopy(reply.result ? reply.result : reply);\n}\n\nfunction extractConnectionDetails(connection: Connection) {\n  let connectionId;\n  if ('id' in connection) {\n    connectionId = connection.id;\n  }\n  return {\n    address: connection.address,\n    serviceId: connection.serviceId,\n    connectionId\n  };\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"events\" has been externalized for browser compatibility. Cannot access \"events.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "import type {\n  Binary,\n  Document,\n  ObjectId,\n  BSONRegExp,\n  Timestamp,\n  Decimal128,\n  Double,\n  Int32,\n  Long\n} from './bson';\nimport { EventEmitter } from 'events';\nimport type { Sort } from './sort';\n\n/** @internal */\nexport type TODO_NODE_3286 = any;\n\n/** Given an object shaped type, return the type of the _id field or default to ObjectId @public */\nexport type InferIdType<TSchema> = TSchema extends { _id: infer IdType } // user has defined a type for _id\n  ? // eslint-disable-next-line @typescript-eslint/ban-types\n    {} extends IdType // TODO(NODE-3285): Improve type readability\n    ? // eslint-disable-next-line @typescript-eslint/ban-types\n      Exclude<IdType, {}>\n    : unknown extends IdType\n    ? ObjectId\n    : IdType\n  : ObjectId; // user has not defined _id on schema\n\n/** Add an _id field to an object shaped type @public */\nexport type WithId<TSchema> = EnhancedOmit<TSchema, '_id'> & { _id: InferIdType<TSchema> };\n\n/**\n * Add an optional _id field to an object shaped type\n * @public\n *\n * @privateRemarks\n * `ObjectId extends TSchema['_id']` is a confusing ordering at first glance. Rather than ask\n * `TSchema['_id'] extends ObjectId` which translated to \"Is the _id property ObjectId?\"\n * we instead ask \"Does ObjectId look like (have the same shape) as the _id?\"\n */\nexport type OptionalId<TSchema> = TSchema extends { _id?: any }\n  ? ObjectId extends TSchema['_id'] // a Schema with ObjectId _id type or \"any\" or \"indexed type\" provided\n    ? EnhancedOmit<TSchema, '_id'> & { _id?: InferIdType<TSchema> } // a Schema provided but _id type is not ObjectId\n    : WithId<TSchema>\n  : EnhancedOmit<TSchema, '_id'> & { _id?: InferIdType<TSchema> }; // TODO(NODE-3285): Improve type readability\n\n/** TypeScript Omit (Exclude to be specific) does not work for objects with an \"any\" indexed type, and breaks discriminated unions @public */\nexport type EnhancedOmit<TRecordOrUnion, KeyUnion> = string extends keyof TRecordOrUnion\n  ? TRecordOrUnion // TRecordOrUnion has indexed type e.g. { _id: string; [k: string]: any; } or it is \"any\"\n  : TRecordOrUnion extends any\n  ? Pick<TRecordOrUnion, Exclude<keyof TRecordOrUnion, KeyUnion>> // discriminated unions\n  : never;\n\n/** Remove the _id field from an object shaped type @public */\nexport type WithoutId<TSchema> = Omit<TSchema, '_id'>;\n\n/** A MongoDB filter can be some portion of the schema or a set of operators @public */\nexport type Filter<TSchema> = {\n  [P in keyof TSchema]?: Condition<TSchema[P]>;\n} & RootFilterOperators<TSchema>;\n\n/** @public */\nexport type Condition<T> = AlternativeType<T> | FilterOperators<AlternativeType<T>>;\n\n/**\n * It is possible to search using alternative types in mongodb e.g.\n * string types can be searched using a regex in mongo\n * array types can be searched using their element type\n * @public\n */\nexport type AlternativeType<T> = T extends ReadonlyArray<infer U>\n  ? T | RegExpOrString<U>\n  : RegExpOrString<T>;\n\n/** @public */\nexport type RegExpOrString<T> = T extends string ? BSONRegExp | RegExp | T : T;\n\n/** @public */\nexport interface RootFilterOperators<TSchema> extends Document {\n  $and?: Filter<TSchema>[];\n  $nor?: Filter<TSchema>[];\n  $or?: Filter<TSchema>[];\n  $text?: {\n    $search: string;\n    $language?: string;\n    $caseSensitive?: boolean;\n    $diacriticSensitive?: boolean;\n  };\n  $where?: string | ((this: TSchema) => boolean);\n  $comment?: string | Document;\n}\n\n/** @public */\nexport interface FilterOperators<TValue> extends Document {\n  // Comparison\n  $eq?: TValue;\n  $gt?: TValue;\n  $gte?: TValue;\n  $in?: ReadonlyArray<TValue>;\n  $lt?: TValue;\n  $lte?: TValue;\n  $ne?: TValue;\n  $nin?: ReadonlyArray<TValue>;\n  // Logical\n  $not?: TValue extends string ? FilterOperators<TValue> | RegExp : FilterOperators<TValue>;\n  // Element\n  /**\n   * When `true`, `$exists` matches the documents that contain the field,\n   * including documents where the field value is null.\n   */\n  $exists?: boolean;\n  $type?: BSONType | BSONTypeAlias;\n  // Evaluation\n  $expr?: Record<string, any>;\n  $jsonSchema?: Record<string, any>;\n  $mod?: TValue extends number ? [number, number] : never;\n  $regex?: TValue extends string ? RegExp | BSONRegExp | string : never;\n  $options?: TValue extends string ? string : never;\n  // Geospatial\n  $geoIntersects?: { $geometry: Document };\n  $geoWithin?: Document;\n  $near?: Document;\n  $nearSphere?: Document;\n  $maxDistance?: number;\n  // Array\n  $all?: ReadonlyArray<any>;\n  $elemMatch?: Document;\n  $size?: TValue extends ReadonlyArray<any> ? number : never;\n  // Bitwise\n  $bitsAllClear?: BitwiseFilter;\n  $bitsAllSet?: BitwiseFilter;\n  $bitsAnyClear?: BitwiseFilter;\n  $bitsAnySet?: BitwiseFilter;\n  $rand?: Record<string, never>;\n}\n\n/** @public */\nexport type BitwiseFilter =\n  | number /** numeric bit mask */\n  | Binary /** BinData bit mask */\n  | ReadonlyArray<number>; /** `[ <position1>, <position2>, ... ]` */\n\n/** @public */\nexport const BSONType = Object.freeze({\n  double: 1,\n  string: 2,\n  object: 3,\n  array: 4,\n  binData: 5,\n  undefined: 6,\n  objectId: 7,\n  bool: 8,\n  date: 9,\n  null: 10,\n  regex: 11,\n  dbPointer: 12,\n  javascript: 13,\n  symbol: 14,\n  javascriptWithScope: 15,\n  int: 16,\n  timestamp: 17,\n  long: 18,\n  decimal: 19,\n  minKey: -1,\n  maxKey: 127\n} as const);\n\n/** @public */\nexport type BSONType = typeof BSONType[keyof typeof BSONType];\n/** @public */\nexport type BSONTypeAlias = keyof typeof BSONType;\n\n/**\n * @public\n * Projection is flexible to permit the wide array of aggregation operators\n * @deprecated since v4.1.0: Since projections support all aggregation operations we have no plans to narrow this type further\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type Projection<TSchema extends Document = Document> = Document;\n\n/**\n * @public\n * @deprecated since v4.1.0: Since projections support all aggregation operations we have no plans to narrow this type further\n */\nexport type ProjectionOperators = Document;\n\n/** @public */\nexport type IsAny<Type, ResultIfAny, ResultIfNotAny> = true extends false & Type\n  ? ResultIfAny\n  : ResultIfNotAny;\n\n/** @public */\nexport type Flatten<Type> = Type extends ReadonlyArray<infer Item> ? Item : Type;\n\n/** @public */\nexport type SchemaMember<T, V> = { [P in keyof T]?: V } | { [key: string]: V };\n\n/** @public */\nexport type IntegerType = number | Int32 | Long;\n\n/** @public */\nexport type NumericType = IntegerType | Decimal128 | Double;\n\n/** @public */\nexport type FilterOperations<T> = T extends Record<string, any>\n  ? { [key in keyof T]?: FilterOperators<T[key]> }\n  : FilterOperators<T>;\n\n/** @public */\nexport type KeysOfAType<TSchema, Type> = {\n  [key in keyof TSchema]: NonNullable<TSchema[key]> extends Type ? key : never;\n}[keyof TSchema];\n\n/** @public */\nexport type KeysOfOtherType<TSchema, Type> = {\n  [key in keyof TSchema]: NonNullable<TSchema[key]> extends Type ? never : key;\n}[keyof TSchema];\n\n/** @public */\nexport type AcceptedFields<TSchema, FieldType, AssignableType> = {\n  readonly [key in KeysOfAType<TSchema, FieldType>]?: AssignableType;\n};\n\n/** It avoids using fields with not acceptable types @public */\nexport type NotAcceptedFields<TSchema, FieldType> = {\n  readonly [key in KeysOfOtherType<TSchema, FieldType>]?: never;\n};\n\n/** @public */\nexport type OnlyFieldsOfType<TSchema, FieldType = any, AssignableType = FieldType> = IsAny<\n  TSchema[keyof TSchema],\n  Record<string, FieldType>,\n  AcceptedFields<TSchema, FieldType, AssignableType> &\n    NotAcceptedFields<TSchema, FieldType> &\n    Record<string, AssignableType>\n>;\n\n/** @public */\nexport type MatchKeysAndValues<TSchema> = Readonly<Partial<TSchema>> & Record<string, any>;\n\n/** @public */\nexport type AddToSetOperators<Type> = {\n  $each?: Array<Flatten<Type>>;\n};\n\n/** @public */\nexport type ArrayOperator<Type> = {\n  $each?: Array<Flatten<Type>>;\n  $slice?: number;\n  $position?: number;\n  $sort?: Sort;\n};\n\n/** @public */\nexport type SetFields<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any> | undefined>]?:\n    | OptionalId<Flatten<TSchema[key]>>\n    | AddToSetOperators<Array<OptionalId<Flatten<TSchema[key]>>>>;\n} & NotAcceptedFields<TSchema, ReadonlyArray<any> | undefined>) & {\n  readonly [key: string]: AddToSetOperators<any> | any;\n};\n\n/** @public */\nexport type PushOperator<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any>>]?:\n    | Flatten<TSchema[key]>\n    | ArrayOperator<Array<Flatten<TSchema[key]>>>;\n} & NotAcceptedFields<TSchema, ReadonlyArray<any>>) & {\n  readonly [key: string]: ArrayOperator<any> | any;\n};\n\n/** @public */\nexport type PullOperator<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any>>]?:\n    | Partial<Flatten<TSchema[key]>>\n    | FilterOperations<Flatten<TSchema[key]>>;\n} & NotAcceptedFields<TSchema, ReadonlyArray<any>>) & {\n  readonly [key: string]: FilterOperators<any> | any;\n};\n\n/** @public */\nexport type PullAllOperator<TSchema> = ({\n  readonly [key in KeysOfAType<TSchema, ReadonlyArray<any>>]?: TSchema[key];\n} & NotAcceptedFields<TSchema, ReadonlyArray<any>>) & {\n  readonly [key: string]: ReadonlyArray<any>;\n};\n\n/** @public */\nexport type UpdateFilter<TSchema> = {\n  $currentDate?: OnlyFieldsOfType<\n    TSchema,\n    Date | Timestamp,\n    true | { $type: 'date' | 'timestamp' }\n  >;\n  $inc?: OnlyFieldsOfType<TSchema, NumericType | undefined>;\n  $min?: MatchKeysAndValues<TSchema>;\n  $max?: MatchKeysAndValues<TSchema>;\n  $mul?: OnlyFieldsOfType<TSchema, NumericType | undefined>;\n  $rename?: Record<string, string>;\n  $set?: MatchKeysAndValues<TSchema>;\n  $setOnInsert?: MatchKeysAndValues<TSchema>;\n  $unset?: OnlyFieldsOfType<TSchema, any, '' | true | 1>;\n  $addToSet?: SetFields<TSchema>;\n  $pop?: OnlyFieldsOfType<TSchema, ReadonlyArray<any>, 1 | -1>;\n  $pull?: PullOperator<TSchema>;\n  $push?: PushOperator<TSchema>;\n  $pullAll?: PullAllOperator<TSchema>;\n  $bit?: OnlyFieldsOfType<\n    TSchema,\n    NumericType | undefined,\n    { and: IntegerType } | { or: IntegerType } | { xor: IntegerType }\n  >;\n} & Document;\n\n/** @public */\nexport type Nullable<AnyType> = AnyType | null | undefined;\n\n/** @public */\nexport type OneOrMore<T> = T | ReadonlyArray<T>;\n\n/** @public */\nexport type GenericListener = (...args: any[]) => void;\n\n/**\n * Event description type\n * @public\n */\nexport type EventsDescription = Record<string, GenericListener>;\n\n/** @public */\nexport type CommonEvents = 'newListener' | 'removeListener';\n\n/**\n * Typescript type safe event emitter\n * @public\n */\nexport declare interface TypedEventEmitter<Events extends EventsDescription> extends EventEmitter {\n  addListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  addListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  addListener(event: string | symbol, listener: GenericListener): this;\n\n  on<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  on(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  on(event: string | symbol, listener: GenericListener): this;\n\n  once<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  once(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  once(event: string | symbol, listener: GenericListener): this;\n\n  removeListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  removeListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  removeListener(event: string | symbol, listener: GenericListener): this;\n\n  off<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  off(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  off(event: string | symbol, listener: GenericListener): this;\n\n  removeAllListeners<EventKey extends keyof Events>(\n    event?: EventKey | CommonEvents | symbol | string\n  ): this;\n\n  listeners<EventKey extends keyof Events>(\n    event: EventKey | CommonEvents | symbol | string\n  ): Events[EventKey][];\n\n  rawListeners<EventKey extends keyof Events>(\n    event: EventKey | CommonEvents | symbol | string\n  ): Events[EventKey][];\n\n  emit<EventKey extends keyof Events>(\n    event: EventKey | symbol,\n    ...args: Parameters<Events[EventKey]>\n  ): boolean;\n\n  listenerCount<EventKey extends keyof Events>(\n    type: EventKey | CommonEvents | symbol | string\n  ): number;\n\n  prependListener<EventKey extends keyof Events>(event: EventKey, listener: Events[EventKey]): this;\n  prependListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  prependListener(event: string | symbol, listener: GenericListener): this;\n\n  prependOnceListener<EventKey extends keyof Events>(\n    event: EventKey,\n    listener: Events[EventKey]\n  ): this;\n  prependOnceListener(\n    event: CommonEvents,\n    listener: (eventName: string | symbol, listener: GenericListener) => void\n  ): this;\n  prependOnceListener(event: string | symbol, listener: GenericListener): this;\n\n  eventNames(): string[];\n  getMaxListeners(): number;\n  setMaxListeners(n: number): this;\n}\n\n/**\n * Typescript type safe event emitter\n * @public\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport class TypedEventEmitter<Events extends EventsDescription> extends EventEmitter {}\n\n/** @public */\nexport class CancellationToken extends TypedEventEmitter<{ cancel(): void }> {}\n", "import { MessageStream, OperationDescription } from './message_stream';\nimport { StreamDescription, StreamDescriptionOptions } from './stream_description';\nimport {\n  CommandStartedEvent,\n  CommandFailedEvent,\n  CommandSucceededEvent\n} from './command_monitoring_events';\nimport { applySession, ClientSession, updateSessionFromResponse } from '../sessions';\nimport {\n  uuidV4,\n  ClientMetadata,\n  now,\n  calculateDurationInMs,\n  Callback,\n  MongoDBNamespace,\n  maxWireVersion,\n  HostAddress\n} from '../utils';\nimport {\n  MongoRuntimeError,\n  MongoMissingDependencyError,\n  MongoCompatibilityError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoServerError,\n  MongoWriteConcernError\n} from '../error';\nimport {\n  BinMsg,\n  WriteProtocolMessageType,\n  Response,\n  KillCursor,\n  GetMore,\n  Query,\n  OpQueryOptions,\n  Msg\n} from './commands';\nimport { BSONSerializeOptions, Document, Long, pluckBSONSerializeOptions, ObjectId } from '../bson';\nimport type { AutoEncrypter } from '../deps';\nimport type { MongoCredentials } from './auth/mongo_credentials';\nimport type { Stream } from './connect';\nimport { applyCommonQueryOptions, getReadPreference, isSharded } from './wire_protocol/shared';\nimport { ReadPreference, ReadPreferenceLike } from '../read_preference';\nimport type { W, WriteConcern, WriteConcernOptions } from '../write_concern';\nimport type { ServerApi, SupportedNodeConnectionOptions } from '../mongo_client';\nimport { CancellationToken, TypedEventEmitter } from '../mongo_types';\n\n/** @internal */\nconst kStream = Symbol('stream');\n/** @internal */\nconst kQueue = Symbol('queue');\n/** @internal */\nconst kMessageStream = Symbol('messageStream');\n/** @internal */\nconst kGeneration = Symbol('generation');\n/** @internal */\nconst kLastUseTime = Symbol('lastUseTime');\n/** @internal */\nconst kClusterTime = Symbol('clusterTime');\n/** @internal */\nconst kDescription = Symbol('description');\n/** @internal */\nconst kIsMaster = Symbol('ismaster');\n/** @internal */\nconst kAutoEncrypter = Symbol('autoEncrypter');\n/** @internal */\nconst kFullResult = Symbol('fullResult');\n\n/** @internal */\nexport interface QueryOptions extends BSONSerializeOptions {\n  readPreference: ReadPreference;\n  documentsReturnedIn?: string;\n  batchSize?: number;\n  limit?: number;\n  skip?: number;\n  projection?: Document;\n  tailable?: boolean;\n  awaitData?: boolean;\n  noCursorTimeout?: boolean;\n  /** @deprecated use `noCursorTimeout` instead */\n  timeout?: boolean;\n  partial?: boolean;\n  oplogReplay?: boolean;\n}\n\n/** @internal */\nexport interface CommandOptions extends BSONSerializeOptions {\n  command?: boolean;\n  slaveOk?: boolean;\n  /** Specify read preference if command supports it */\n  readPreference?: ReadPreferenceLike;\n  raw?: boolean;\n  monitoring?: boolean;\n  [kFullResult]?: boolean;\n  socketTimeoutMS?: number;\n  /** Session to use for the operation */\n  session?: ClientSession;\n  documentsReturnedIn?: string;\n  noResponse?: boolean;\n\n  // FIXME: NODE-2802\n  willRetryWrite?: boolean;\n\n  // FIXME: NODE-2781\n  writeConcern?: WriteConcernOptions | WriteConcern | W;\n}\n\n/** @internal */\nexport interface GetMoreOptions extends CommandOptions {\n  batchSize?: number;\n  maxTimeMS?: number;\n  maxAwaitTimeMS?: number;\n  comment?: Document | string;\n}\n\n/** @public */\nexport interface ConnectionOptions\n  extends SupportedNodeConnectionOptions,\n    StreamDescriptionOptions {\n  // Internal creation info\n  id: number | '<monitor>';\n  generation: number;\n  hostAddress: HostAddress;\n  // Settings\n  autoEncrypter?: AutoEncrypter;\n  serverApi?: ServerApi;\n  monitorCommands: boolean;\n  /** @internal */\n  connectionType?: typeof Connection;\n  credentials?: MongoCredentials;\n  connectTimeoutMS?: number;\n  tls: boolean;\n  keepAlive?: boolean;\n  keepAliveInitialDelay?: number;\n  noDelay?: boolean;\n  socketTimeoutMS?: number;\n  cancellationToken?: CancellationToken;\n\n  metadata: ClientMetadata;\n}\n\n/** @public */\nexport interface DestroyOptions {\n  /** Force the destruction. */\n  force?: boolean;\n}\n\n/** @public */\nexport type ConnectionEvents = {\n  commandStarted(event: CommandStartedEvent): void;\n  commandSucceeded(event: CommandSucceededEvent): void;\n  commandFailed(event: CommandFailedEvent): void;\n  clusterTimeReceived(clusterTime: Document): void;\n  close(): void;\n  message(message: any): void;\n  pinned(pinType: string): void;\n  unpinned(pinType: string): void;\n};\n\n/** @internal */\nexport class Connection extends TypedEventEmitter<ConnectionEvents> {\n  id: number | '<monitor>';\n  address: string;\n  socketTimeoutMS: number;\n  monitorCommands: boolean;\n  closed: boolean;\n  destroyed: boolean;\n  lastIsMasterMS?: number;\n  serverApi?: ServerApi;\n  helloOk?: boolean;\n  /** @internal */\n  [kDescription]: StreamDescription;\n  /** @internal */\n  [kGeneration]: number;\n  /** @internal */\n  [kLastUseTime]: number;\n  /** @internal */\n  [kQueue]: Map<number, OperationDescription>;\n  /** @internal */\n  [kMessageStream]: MessageStream;\n  /** @internal */\n  [kStream]: Stream;\n  /** @internal */\n  [kIsMaster]: Document;\n  /** @internal */\n  [kClusterTime]: Document;\n\n  /** @event */\n  static readonly COMMAND_STARTED = 'commandStarted' as const;\n  /** @event */\n  static readonly COMMAND_SUCCEEDED = 'commandSucceeded' as const;\n  /** @event */\n  static readonly COMMAND_FAILED = 'commandFailed' as const;\n  /** @event */\n  static readonly CLUSTER_TIME_RECEIVED = 'clusterTimeReceived' as const;\n  /** @event */\n  static readonly CLOSE = 'close' as const;\n  /** @event */\n  static readonly MESSAGE = 'message' as const;\n  /** @event */\n  static readonly PINNED = 'pinned' as const;\n  /** @event */\n  static readonly UNPINNED = 'unpinned' as const;\n\n  constructor(stream: Stream, options: ConnectionOptions) {\n    super();\n    this.id = options.id;\n    this.address = streamIdentifier(stream);\n    this.socketTimeoutMS = options.socketTimeoutMS ?? 0;\n    this.monitorCommands = options.monitorCommands;\n    this.serverApi = options.serverApi;\n    this.closed = false;\n    this.destroyed = false;\n\n    this[kDescription] = new StreamDescription(this.address, options);\n    this[kGeneration] = options.generation;\n    this[kLastUseTime] = now();\n\n    // setup parser stream and message handling\n    this[kQueue] = new Map();\n    this[kMessageStream] = new MessageStream({\n      ...options,\n      maxBsonMessageSize: this.ismaster?.maxBsonMessageSize\n    });\n    this[kMessageStream].on('message', messageHandler(this));\n    this[kStream] = stream;\n    stream.on('error', () => {\n      /* ignore errors, listen to `close` instead */\n    });\n\n    this[kMessageStream].on('error', error => this.handleIssue({ destroy: error }));\n    stream.on('close', () => this.handleIssue({ isClose: true }));\n    stream.on('timeout', () => this.handleIssue({ isTimeout: true, destroy: true }));\n\n    // hook the message stream up to the passed in stream\n    stream.pipe(this[kMessageStream]);\n    this[kMessageStream].pipe(stream);\n  }\n\n  get description(): StreamDescription {\n    return this[kDescription];\n  }\n\n  get ismaster(): Document {\n    return this[kIsMaster];\n  }\n\n  // the `connect` method stores the result of the handshake ismaster on the connection\n  set ismaster(response: Document) {\n    this[kDescription].receiveResponse(response);\n    this[kDescription] = Object.freeze(this[kDescription]);\n\n    // TODO: remove this, and only use the `StreamDescription` in the future\n    this[kIsMaster] = response;\n  }\n\n  get serviceId(): ObjectId | undefined {\n    return this.ismaster?.serviceId;\n  }\n\n  get loadBalanced(): boolean {\n    return this.description.loadBalanced;\n  }\n\n  get generation(): number {\n    return this[kGeneration] || 0;\n  }\n\n  set generation(generation: number) {\n    this[kGeneration] = generation;\n  }\n\n  get idleTime(): number {\n    return calculateDurationInMs(this[kLastUseTime]);\n  }\n\n  get clusterTime(): Document {\n    return this[kClusterTime];\n  }\n\n  get stream(): Stream {\n    return this[kStream];\n  }\n\n  markAvailable(): void {\n    this[kLastUseTime] = now();\n  }\n\n  handleIssue(issue: { isTimeout?: boolean; isClose?: boolean; destroy?: boolean | Error }): void {\n    if (this.closed) {\n      return;\n    }\n\n    if (issue.destroy) {\n      this[kStream].destroy(typeof issue.destroy === 'boolean' ? undefined : issue.destroy);\n    }\n\n    this.closed = true;\n\n    for (const [, op] of this[kQueue]) {\n      if (issue.isTimeout) {\n        op.cb(\n          new MongoNetworkTimeoutError(`connection ${this.id} to ${this.address} timed out`, {\n            beforeHandshake: this.ismaster == null\n          })\n        );\n      } else if (issue.isClose) {\n        op.cb(new MongoNetworkError(`connection ${this.id} to ${this.address} closed`));\n      } else {\n        op.cb(typeof issue.destroy === 'boolean' ? undefined : issue.destroy);\n      }\n    }\n\n    this[kQueue].clear();\n    this.emit(Connection.CLOSE);\n  }\n\n  destroy(): void;\n  destroy(callback: Callback): void;\n  destroy(options: DestroyOptions): void;\n  destroy(options: DestroyOptions, callback: Callback): void;\n  destroy(options?: DestroyOptions | Callback, callback?: Callback): void {\n    if (typeof options === 'function') {\n      callback = options;\n      options = { force: false };\n    }\n\n    this.removeAllListeners(Connection.PINNED);\n    this.removeAllListeners(Connection.UNPINNED);\n\n    options = Object.assign({ force: false }, options);\n    if (this[kStream] == null || this.destroyed) {\n      this.destroyed = true;\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    if (options.force) {\n      this[kStream].destroy();\n      this.destroyed = true;\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    this[kStream].end(() => {\n      this.destroyed = true;\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n  }\n\n  /** @internal */\n  command(\n    ns: MongoDBNamespace,\n    cmd: Document,\n    options: CommandOptions | undefined,\n    callback: Callback\n  ): void {\n    if (!(ns instanceof MongoDBNamespace)) {\n      // TODO(NODE-3483): Replace this with a MongoCommandError\n      throw new MongoRuntimeError('Must provide a MongoDBNamespace instance');\n    }\n\n    const readPreference = getReadPreference(cmd, options);\n    const shouldUseOpMsg = supportsOpMsg(this);\n    const session = options?.session;\n\n    let clusterTime = this.clusterTime;\n    let finalCmd = Object.assign({}, cmd);\n\n    if (this.serverApi) {\n      const { version, strict, deprecationErrors } = this.serverApi;\n      finalCmd.apiVersion = version;\n      if (strict != null) finalCmd.apiStrict = strict;\n      if (deprecationErrors != null) finalCmd.apiDeprecationErrors = deprecationErrors;\n    }\n\n    if (hasSessionSupport(this) && session) {\n      if (\n        session.clusterTime &&\n        clusterTime &&\n        session.clusterTime.clusterTime.greaterThan(clusterTime.clusterTime)\n      ) {\n        clusterTime = session.clusterTime;\n      }\n\n      const err = applySession(session, finalCmd, options as CommandOptions);\n      if (err) {\n        return callback(err);\n      }\n    }\n\n    // if we have a known cluster time, gossip it\n    if (clusterTime) {\n      finalCmd.$clusterTime = clusterTime;\n    }\n\n    if (isSharded(this) && !shouldUseOpMsg && readPreference && readPreference.mode !== 'primary') {\n      finalCmd = {\n        $query: finalCmd,\n        $readPreference: readPreference.toJSON()\n      };\n    }\n\n    const commandOptions: Document = Object.assign(\n      {\n        command: true,\n        numberToSkip: 0,\n        numberToReturn: -1,\n        checkKeys: false,\n        // This value is not overridable\n        slaveOk: readPreference.slaveOk()\n      },\n      options\n    );\n\n    const cmdNs = `${ns.db}.$cmd`;\n    const message = shouldUseOpMsg\n      ? new Msg(cmdNs, finalCmd, commandOptions)\n      : new Query(cmdNs, finalCmd, commandOptions);\n\n    try {\n      write(this, message, commandOptions, callback);\n    } catch (err) {\n      callback(err);\n    }\n  }\n\n  /** @internal */\n  query(ns: MongoDBNamespace, cmd: Document, options: QueryOptions, callback: Callback): void {\n    const isExplain = cmd.$explain != null;\n    const readPreference = options.readPreference ?? ReadPreference.primary;\n    const batchSize = options.batchSize || 0;\n    const limit = options.limit;\n    const numberToSkip = options.skip || 0;\n    let numberToReturn = 0;\n    if (\n      limit &&\n      (limit < 0 || (limit !== 0 && limit < batchSize) || (limit > 0 && batchSize === 0))\n    ) {\n      numberToReturn = limit;\n    } else {\n      numberToReturn = batchSize;\n    }\n\n    if (isExplain) {\n      // nToReturn must be 0 (match all) or negative (match N and close cursor)\n      // nToReturn > 0 will give explain results equivalent to limit(0)\n      numberToReturn = -Math.abs(limit || 0);\n    }\n\n    const queryOptions: OpQueryOptions = {\n      numberToSkip,\n      numberToReturn,\n      pre32Limit: typeof limit === 'number' ? limit : undefined,\n      checkKeys: false,\n      slaveOk: readPreference.slaveOk()\n    };\n\n    if (options.projection) {\n      queryOptions.returnFieldSelector = options.projection;\n    }\n\n    const query = new Query(ns.toString(), cmd, queryOptions);\n    if (typeof options.tailable === 'boolean') {\n      query.tailable = options.tailable;\n    }\n\n    if (typeof options.oplogReplay === 'boolean') {\n      query.oplogReplay = options.oplogReplay;\n    }\n\n    if (typeof options.timeout === 'boolean') {\n      query.noCursorTimeout = !options.timeout;\n    } else if (typeof options.noCursorTimeout === 'boolean') {\n      query.noCursorTimeout = options.noCursorTimeout;\n    }\n\n    if (typeof options.awaitData === 'boolean') {\n      query.awaitData = options.awaitData;\n    }\n\n    if (typeof options.partial === 'boolean') {\n      query.partial = options.partial;\n    }\n\n    write(\n      this,\n      query,\n      { [kFullResult]: true, ...pluckBSONSerializeOptions(options) },\n      (err, result) => {\n        if (err || !result) return callback(err, result);\n        if (isExplain && result.documents && result.documents[0]) {\n          return callback(undefined, result.documents[0]);\n        }\n\n        callback(undefined, result);\n      }\n    );\n  }\n\n  /** @internal */\n  getMore(\n    ns: MongoDBNamespace,\n    cursorId: Long,\n    options: GetMoreOptions,\n    callback: Callback<Document>\n  ): void {\n    const fullResult = !!options[kFullResult];\n    const wireVersion = maxWireVersion(this);\n    if (!cursorId) {\n      // TODO(NODE-3483): Replace this with a MongoCommandError\n      callback(new MongoRuntimeError('Invalid internal cursor state, no known cursor id'));\n      return;\n    }\n\n    if (wireVersion < 4) {\n      const getMoreOp = new GetMore(ns.toString(), cursorId, { numberToReturn: options.batchSize });\n      const queryOptions = applyCommonQueryOptions(\n        {},\n        Object.assign(options, { ...pluckBSONSerializeOptions(options) })\n      );\n\n      queryOptions[kFullResult] = true;\n      queryOptions.command = true;\n      write(this, getMoreOp, queryOptions, (err, response) => {\n        if (fullResult) return callback(err, response);\n        if (err) return callback(err);\n        callback(undefined, { cursor: { id: response.cursorId, nextBatch: response.documents } });\n      });\n\n      return;\n    }\n\n    const getMoreCmd: Document = {\n      getMore: cursorId,\n      collection: ns.collection\n    };\n\n    if (typeof options.batchSize === 'number') {\n      getMoreCmd.batchSize = Math.abs(options.batchSize);\n    }\n\n    if (typeof options.maxAwaitTimeMS === 'number') {\n      getMoreCmd.maxTimeMS = options.maxAwaitTimeMS;\n    }\n\n    const commandOptions = Object.assign(\n      {\n        returnFieldSelector: null,\n        documentsReturnedIn: 'nextBatch'\n      },\n      options\n    );\n\n    this.command(ns, getMoreCmd, commandOptions, callback);\n  }\n\n  /** @internal */\n  killCursors(\n    ns: MongoDBNamespace,\n    cursorIds: Long[],\n    options: CommandOptions,\n    callback: Callback\n  ): void {\n    if (!cursorIds || !Array.isArray(cursorIds)) {\n      // TODO(NODE-3483): Replace this with a MongoCommandError\n      throw new MongoRuntimeError(`Invalid list of cursor ids provided: ${cursorIds}`);\n    }\n\n    if (maxWireVersion(this) < 4) {\n      try {\n        write(\n          this,\n          new KillCursor(ns.toString(), cursorIds),\n          { noResponse: true, ...options },\n          callback\n        );\n      } catch (err) {\n        callback(err);\n      }\n\n      return;\n    }\n\n    this.command(\n      ns,\n      { killCursors: ns.collection, cursors: cursorIds },\n      { [kFullResult]: true, ...options },\n      (err, response) => {\n        if (err || !response) return callback(err);\n        if (response.cursorNotFound) {\n          return callback(new MongoNetworkError('cursor killed or timed out'), null);\n        }\n\n        if (!Array.isArray(response.documents) || response.documents.length === 0) {\n          return callback(\n            // TODO(NODE-3483)\n            new MongoRuntimeError(\n              `invalid killCursors result returned for cursor id ${cursorIds[0]}`\n            )\n          );\n        }\n\n        callback(undefined, response.documents[0]);\n      }\n    );\n  }\n}\n\n/** @public */\nexport const APM_EVENTS = [\n  Connection.COMMAND_STARTED,\n  Connection.COMMAND_SUCCEEDED,\n  Connection.COMMAND_FAILED\n];\n\n/** @internal */\nexport class CryptoConnection extends Connection {\n  /** @internal */\n  [kAutoEncrypter]?: AutoEncrypter;\n\n  constructor(stream: Stream, options: ConnectionOptions) {\n    super(stream, options);\n    this[kAutoEncrypter] = options.autoEncrypter;\n  }\n\n  /** @internal @override */\n  command(ns: MongoDBNamespace, cmd: Document, options: CommandOptions, callback: Callback): void {\n    const autoEncrypter = this[kAutoEncrypter];\n    if (!autoEncrypter) {\n      return callback(new MongoMissingDependencyError('No AutoEncrypter available for encryption'));\n    }\n\n    const serverWireVersion = maxWireVersion(this);\n    if (serverWireVersion === 0) {\n      // This means the initial handshake hasn't happened yet\n      return super.command(ns, cmd, options, callback);\n    }\n\n    if (serverWireVersion < 8) {\n      callback(\n        new MongoCompatibilityError('Auto-encryption requires a minimum MongoDB version of 4.2')\n      );\n      return;\n    }\n\n    autoEncrypter.encrypt(ns.toString(), cmd, options, (err, encrypted) => {\n      if (err || encrypted == null) {\n        callback(err, null);\n        return;\n      }\n\n      super.command(ns, encrypted, options, (err, response) => {\n        if (err || response == null) {\n          callback(err, response);\n          return;\n        }\n\n        autoEncrypter.decrypt(response, options, callback);\n      });\n    });\n  }\n}\n\n/** @internal */\nexport function hasSessionSupport(conn: Connection): boolean {\n  const description = conn.description;\n  return description.logicalSessionTimeoutMinutes != null || !!description.loadBalanced;\n}\n\nfunction supportsOpMsg(conn: Connection) {\n  const description = conn.description;\n  if (description == null) {\n    return false;\n  }\n\n  return maxWireVersion(conn) >= 6 && !description.__nodejs_mock_server__;\n}\n\nfunction messageHandler(conn: Connection) {\n  return function messageHandler(message: BinMsg | Response) {\n    // always emit the message, in case we are streaming\n    conn.emit('message', message);\n    const operationDescription = conn[kQueue].get(message.responseTo);\n    if (!operationDescription) {\n      return;\n    }\n\n    const callback = operationDescription.cb;\n\n    // SERVER-45775: For exhaust responses we should be able to use the same requestId to\n    // track response, however the server currently synthetically produces remote requests\n    // making the `responseTo` change on each response\n    conn[kQueue].delete(message.responseTo);\n    if ('moreToCome' in message && message.moreToCome) {\n      // requeue the callback for next synthetic request\n      conn[kQueue].set(message.requestId, operationDescription);\n    } else if (operationDescription.socketTimeoutOverride) {\n      conn[kStream].setTimeout(conn.socketTimeoutMS);\n    }\n\n    try {\n      // Pass in the entire description because it has BSON parsing options\n      message.parse(operationDescription);\n    } catch (err) {\n      // If this error is generated by our own code, it will already have the correct class applied\n      // if it is not, then it is coming from a catastrophic data parse failure or the BSON library\n      // in either case, it should not be wrapped\n      callback(err);\n      return;\n    }\n\n    if (message.documents[0]) {\n      const document: Document = message.documents[0];\n      const session = operationDescription.session;\n      if (session) {\n        updateSessionFromResponse(session, document);\n      }\n\n      if (document.$clusterTime) {\n        conn[kClusterTime] = document.$clusterTime;\n        conn.emit(Connection.CLUSTER_TIME_RECEIVED, document.$clusterTime);\n      }\n\n      if (operationDescription.command) {\n        if (document.writeConcernError) {\n          callback(new MongoWriteConcernError(document.writeConcernError, document));\n          return;\n        }\n\n        if (document.ok === 0 || document.$err || document.errmsg || document.code) {\n          callback(new MongoServerError(document));\n          return;\n        }\n      } else {\n        // Pre 3.2 support\n        if (document.ok === 0 || document.$err || document.errmsg) {\n          callback(new MongoServerError(document));\n          return;\n        }\n      }\n    }\n\n    callback(undefined, operationDescription.fullResult ? message : message.documents[0]);\n  };\n}\n\nfunction streamIdentifier(stream: Stream) {\n  if (typeof stream.address === 'function') {\n    return `${stream.remoteAddress}:${stream.remotePort}`;\n  }\n\n  return uuidV4().toString('hex');\n}\n\nfunction write(\n  conn: Connection,\n  command: WriteProtocolMessageType,\n  options: CommandOptions,\n  callback: Callback\n) {\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  options = options ?? {};\n  const operationDescription: OperationDescription = {\n    requestId: command.requestId,\n    cb: callback,\n    session: options.session,\n    fullResult: !!options[kFullResult],\n    noResponse: typeof options.noResponse === 'boolean' ? options.noResponse : false,\n    documentsReturnedIn: options.documentsReturnedIn,\n    command: !!options.command,\n\n    // for BSON parsing\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n    bsonRegExp: typeof options.bsonRegExp === 'boolean' ? options.bsonRegExp : false,\n    raw: typeof options.raw === 'boolean' ? options.raw : false,\n    started: 0\n  };\n\n  if (conn[kDescription] && conn[kDescription].compressor) {\n    operationDescription.agreedCompressor = conn[kDescription].compressor;\n\n    if (conn[kDescription].zlibCompressionLevel) {\n      operationDescription.zlibCompressionLevel = conn[kDescription].zlibCompressionLevel;\n    }\n  }\n\n  if (typeof options.socketTimeoutMS === 'number') {\n    operationDescription.socketTimeoutOverride = true;\n    conn[kStream].setTimeout(options.socketTimeoutMS);\n  }\n\n  // if command monitoring is enabled we need to modify the callback here\n  if (conn.monitorCommands) {\n    conn.emit(Connection.COMMAND_STARTED, new CommandStartedEvent(conn, command));\n\n    operationDescription.started = now();\n    operationDescription.cb = (err, reply) => {\n      if (err) {\n        conn.emit(\n          Connection.COMMAND_FAILED,\n          new CommandFailedEvent(conn, command, err, operationDescription.started)\n        );\n      } else {\n        if (reply && (reply.ok === 0 || reply.$err)) {\n          conn.emit(\n            Connection.COMMAND_FAILED,\n            new CommandFailedEvent(conn, command, reply, operationDescription.started)\n          );\n        } else {\n          conn.emit(\n            Connection.COMMAND_SUCCEEDED,\n            new CommandSucceededEvent(conn, command, reply, operationDescription.started)\n          );\n        }\n      }\n\n      if (typeof callback === 'function') {\n        callback(err, reply);\n      }\n    };\n  }\n\n  if (!operationDescription.noResponse) {\n    conn[kQueue].set(operationDescription.requestId, operationDescription);\n  }\n\n  try {\n    conn[kMessageStream].writeCommand(command, operationDescription);\n  } catch (e) {\n    if (!operationDescription.noResponse) {\n      conn[kQueue].delete(operationDescription.requestId);\n      operationDescription.cb(e);\n      return;\n    }\n  }\n\n  if (operationDescription.noResponse) {\n    operationDescription.cb();\n  }\n}\n", "/** @internal */\nexport class ConnectionPoolMetrics {\n  static readonly TXN = 'txn' as const;\n  static readonly CURSOR = 'cursor' as const;\n  static readonly OTHER = 'other' as const;\n\n  txnConnections = 0;\n  cursorConnections = 0;\n  otherConnections = 0;\n\n  /**\n   * Mark a connection as pinned for a specific operation.\n   */\n  markPinned(pinType: string): void {\n    if (pinType === ConnectionPoolMetrics.TXN) {\n      this.txnConnections += 1;\n    } else if (pinType === ConnectionPoolMetrics.CURSOR) {\n      this.cursorConnections += 1;\n    } else {\n      this.otherConnections += 1;\n    }\n  }\n\n  /**\n   * Unmark a connection as pinned for an operation.\n   */\n  markUnpinned(pinType: string): void {\n    if (pinType === ConnectionPoolMetrics.TXN) {\n      this.txnConnections -= 1;\n    } else if (pinType === ConnectionPoolMetrics.CURSOR) {\n      this.cursorConnections -= 1;\n    } else {\n      this.otherConnections -= 1;\n    }\n  }\n\n  /**\n   * Return information about the cmap metrics as a string.\n   */\n  info(maxPoolSize: number): string {\n    return (\n      'Timed out while checking out a connection from connection pool: ' +\n      `maxPoolSize: ${maxPoolSize}, ` +\n      `connections in use by cursors: ${this.cursorConnections}, ` +\n      `connections in use by transactions: ${this.txnConnections}, ` +\n      `connections in use by other operations: ${this.otherConnections}`\n    );\n  }\n\n  /**\n   * Reset the metrics to the initial values.\n   */\n  reset(): void {\n    this.txnConnections = 0;\n    this.cursorConnections = 0;\n    this.otherConnections = 0;\n  }\n}\n", "import { PromiseProvider } from './promise_provider';\nimport { Binary, Long, Timestamp, Document } from './bson';\nimport { ReadPreference } from './read_preference';\nimport { isTransactionCommand, TxnState, Transaction, TransactionOptions } from './transactions';\nimport { _advanceClusterTime, ClusterTime, TopologyType } from './sdam/common';\nimport { isSharded } from './cmap/wire_protocol/shared';\nimport {\n  MongoError,\n  MongoInvalidArgumentError,\n  isRetryableError,\n  MongoCompatibilityError,\n  MongoNetworkError,\n  MongoWriteConcernError,\n  MONGODB_ERROR_CODES,\n  MongoServerError,\n  MongoDriverError,\n  MongoAPIError,\n  AnyError,\n  MongoExpiredSessionError,\n  MongoTransactionError,\n  MongoRuntimeError\n} from './error';\nimport {\n  now,\n  calculateDurationInMs,\n  Callback,\n  isPromiseLike,\n  uuidV4,\n  maxWireVersion,\n  maybePromise\n} from './utils';\nimport type { Topology } from './sdam/topology';\nimport type { MongoOptions } from './mongo_client';\nimport { executeOperation } from './operations/execute_operation';\nimport { RunAdminCommandOperation } from './operations/run_command';\nimport type { AbstractCursor } from './cursor/abstract_cursor';\nimport type { CommandOptions } from './cmap/connection';\nimport { Connection } from './cmap/connection';\nimport { ConnectionPoolMetrics } from './cmap/metrics';\nimport type { WriteConcern } from './write_concern';\nimport { TypedEventEmitter } from './mongo_types';\nimport { ReadConcernLevel } from './read_concern';\n\nconst minWireVersionForShardedTransactions = 8;\n\nfunction assertAlive(session: ClientSession, callback?: Callback): boolean {\n  if (session.serverSession == null) {\n    const error = new MongoExpiredSessionError();\n    if (typeof callback === 'function') {\n      callback(error);\n      return false;\n    }\n\n    throw error;\n  }\n\n  return true;\n}\n\n/** @public */\nexport interface ClientSessionOptions {\n  /** Whether causal consistency should be enabled on this session */\n  causalConsistency?: boolean;\n  /** Whether all read operations should be read from the same snapshot for this session (NOTE: not compatible with `causalConsistency=true`) */\n  snapshot?: boolean;\n  /** The default TransactionOptions to use for transactions started on this session. */\n  defaultTransactionOptions?: TransactionOptions;\n\n  /** @internal */\n  owner?: symbol | AbstractCursor;\n  /** @internal */\n  explicit?: boolean;\n  /** @internal */\n  initialClusterTime?: ClusterTime;\n}\n\n/** @public */\nexport type WithTransactionCallback<T = void> = (session: ClientSession) => Promise<T>;\n\n/** @public */\nexport type ClientSessionEvents = {\n  ended(session: ClientSession): void;\n};\n\n/** @internal */\nconst kServerSession = Symbol('serverSession');\n/** @internal */\nconst kSnapshotTime = Symbol('snapshotTime');\n/** @internal */\nconst kSnapshotEnabled = Symbol('snapshotEnabled');\n/** @internal */\nconst kPinnedConnection = Symbol('pinnedConnection');\n\n/** @public */\nexport interface EndSessionOptions {\n  /**\n   * An optional error which caused the call to end this session\n   * @internal\n   */\n  error?: AnyError;\n  force?: boolean;\n  forceClear?: boolean;\n}\n\n/**\n * A class representing a client session on the server\n *\n * NOTE: not meant to be instantiated directly.\n * @public\n */\nexport class ClientSession extends TypedEventEmitter<ClientSessionEvents> {\n  /** @internal */\n  topology: Topology;\n  /** @internal */\n  sessionPool: ServerSessionPool;\n  hasEnded: boolean;\n  clientOptions?: MongoOptions;\n  supports: { causalConsistency: boolean };\n  clusterTime?: ClusterTime;\n  operationTime?: Timestamp;\n  explicit: boolean;\n  /** @internal */\n  owner?: symbol | AbstractCursor;\n  defaultTransactionOptions: TransactionOptions;\n  transaction: Transaction;\n  /** @internal */\n  [kServerSession]?: ServerSession;\n  /** @internal */\n  [kSnapshotTime]?: Timestamp;\n  /** @internal */\n  [kSnapshotEnabled] = false;\n  /** @internal */\n  [kPinnedConnection]?: Connection;\n\n  /**\n   * Create a client session.\n   * @internal\n   * @param topology - The current client's topology (Internal Class)\n   * @param sessionPool - The server session pool (Internal Class)\n   * @param options - Optional settings\n   * @param clientOptions - Optional settings provided when creating a MongoClient\n   */\n  constructor(\n    topology: Topology,\n    sessionPool: ServerSessionPool,\n    options: ClientSessionOptions,\n    clientOptions?: MongoOptions\n  ) {\n    super();\n\n    if (topology == null) {\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError('ClientSession requires a topology');\n    }\n\n    if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n      // TODO(NODE-3483)\n      throw new MongoRuntimeError('ClientSession requires a ServerSessionPool');\n    }\n\n    options = options ?? {};\n\n    if (options.snapshot === true) {\n      this[kSnapshotEnabled] = true;\n      if (options.causalConsistency === true) {\n        throw new MongoInvalidArgumentError(\n          'Properties \"causalConsistency\" and \"snapshot\" are mutually exclusive'\n        );\n      }\n    }\n\n    this.topology = topology;\n    this.sessionPool = sessionPool;\n    this.hasEnded = false;\n    this.clientOptions = clientOptions;\n    this[kServerSession] = undefined;\n\n    this.supports = {\n      causalConsistency: options.snapshot !== true && options.causalConsistency !== false\n    };\n\n    this.clusterTime = options.initialClusterTime;\n\n    this.operationTime = undefined;\n    this.explicit = !!options.explicit;\n    this.owner = options.owner;\n    this.defaultTransactionOptions = Object.assign({}, options.defaultTransactionOptions);\n    this.transaction = new Transaction();\n  }\n\n  /** The server id associated with this session */\n  get id(): ServerSessionId | undefined {\n    return this.serverSession?.id;\n  }\n\n  get serverSession(): ServerSession {\n    if (this[kServerSession] == null) {\n      this[kServerSession] = this.sessionPool.acquire();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this[kServerSession]!;\n  }\n\n  /** Whether or not this session is configured for snapshot reads */\n  get snapshotEnabled(): boolean {\n    return this[kSnapshotEnabled];\n  }\n\n  get loadBalanced(): boolean {\n    return this.topology.description.type === TopologyType.LoadBalanced;\n  }\n\n  /** @internal */\n  get pinnedConnection(): Connection | undefined {\n    return this[kPinnedConnection];\n  }\n\n  /** @internal */\n  pin(conn: Connection): void {\n    if (this[kPinnedConnection]) {\n      throw TypeError('Cannot pin multiple connections to the same session');\n    }\n\n    this[kPinnedConnection] = conn;\n    conn.emit(\n      Connection.PINNED,\n      this.inTransaction() ? ConnectionPoolMetrics.TXN : ConnectionPoolMetrics.CURSOR\n    );\n  }\n\n  /** @internal */\n  unpin(options?: { force?: boolean; forceClear?: boolean; error?: AnyError }): void {\n    if (this.loadBalanced) {\n      return maybeClearPinnedConnection(this, options);\n    }\n\n    this.transaction.unpinServer();\n  }\n\n  get isPinned(): boolean {\n    return this.loadBalanced ? !!this[kPinnedConnection] : this.transaction.isPinned;\n  }\n\n  /**\n   * Ends this session on the server\n   *\n   * @param options - Optional settings. Currently reserved for future use\n   * @param callback - Optional callback for completion of this operation\n   */\n  endSession(): Promise<void>;\n  endSession(callback: Callback<void>): void;\n  endSession(options: EndSessionOptions): Promise<void>;\n  endSession(options: EndSessionOptions, callback: Callback<void>): void;\n  endSession(\n    options?: EndSessionOptions | Callback<void>,\n    callback?: Callback<void>\n  ): void | Promise<void> {\n    if (typeof options === 'function') (callback = options), (options = {});\n    const finalOptions = { force: true, ...options };\n\n    return maybePromise(callback, done => {\n      if (this.hasEnded) {\n        maybeClearPinnedConnection(this, finalOptions);\n        return done();\n      }\n\n      const completeEndSession = () => {\n        maybeClearPinnedConnection(this, finalOptions);\n\n        // release the server session back to the pool\n        this.sessionPool.release(this.serverSession);\n        this[kServerSession] = undefined;\n\n        // mark the session as ended, and emit a signal\n        this.hasEnded = true;\n        this.emit('ended', this);\n\n        // spec indicates that we should ignore all errors for `endSessions`\n        done();\n      };\n\n      if (this.serverSession && this.inTransaction()) {\n        this.abortTransaction(err => {\n          if (err) return done(err);\n          completeEndSession();\n        });\n\n        return;\n      }\n\n      completeEndSession();\n    });\n  }\n\n  /**\n   * Advances the operationTime for a ClientSession.\n   *\n   * @param operationTime - the `BSON.Timestamp` of the operation type it is desired to advance to\n   */\n  advanceOperationTime(operationTime: Timestamp): void {\n    if (this.operationTime == null) {\n      this.operationTime = operationTime;\n      return;\n    }\n\n    if (operationTime.greaterThan(this.operationTime)) {\n      this.operationTime = operationTime;\n    }\n  }\n\n  /**\n   * Advances the clusterTime for a ClientSession to the provided clusterTime of another ClientSession\n   *\n   * @param clusterTime - the $clusterTime returned by the server from another session in the form of a document containing the `BSON.Timestamp` clusterTime and signature\n   */\n  advanceClusterTime(clusterTime: ClusterTime): void {\n    if (!clusterTime || typeof clusterTime !== 'object') {\n      throw new MongoInvalidArgumentError('input cluster time must be an object');\n    }\n    if (!clusterTime.clusterTime || clusterTime.clusterTime._bsontype !== 'Timestamp') {\n      throw new MongoInvalidArgumentError(\n        'input cluster time \"clusterTime\" property must be a valid BSON Timestamp'\n      );\n    }\n    if (\n      !clusterTime.signature ||\n      clusterTime.signature.hash?._bsontype !== 'Binary' ||\n      (typeof clusterTime.signature.keyId !== 'number' &&\n        clusterTime.signature.keyId?._bsontype !== 'Long') // apparently we decode the key to number?\n    ) {\n      throw new MongoInvalidArgumentError(\n        'input cluster time must have a valid \"signature\" property with BSON Binary hash and BSON Long keyId'\n      );\n    }\n\n    _advanceClusterTime(this, clusterTime);\n  }\n\n  /**\n   * Used to determine if this session equals another\n   *\n   * @param session - The session to compare to\n   */\n  equals(session: ClientSession): boolean {\n    if (!(session instanceof ClientSession)) {\n      return false;\n    }\n\n    if (this.id == null || session.id == null) {\n      return false;\n    }\n\n    return this.id.id.buffer.equals(session.id.id.buffer);\n  }\n\n  /** Increment the transaction number on the internal ServerSession */\n  incrementTransactionNumber(): void {\n    if (this.serverSession) {\n      this.serverSession.txnNumber =\n        typeof this.serverSession.txnNumber === 'number' ? this.serverSession.txnNumber + 1 : 0;\n    }\n  }\n\n  /** @returns whether this session is currently in a transaction or not */\n  inTransaction(): boolean {\n    return this.transaction.isActive;\n  }\n\n  /**\n   * Starts a new transaction with the given options.\n   *\n   * @param options - Options for the transaction\n   */\n  startTransaction(options?: TransactionOptions): void {\n    if (this[kSnapshotEnabled]) {\n      throw new MongoCompatibilityError('Transactions are not allowed with snapshot sessions');\n    }\n\n    assertAlive(this);\n    if (this.inTransaction()) {\n      throw new MongoTransactionError('Transaction already in progress');\n    }\n\n    if (this.isPinned && this.transaction.isCommitted) {\n      this.unpin();\n    }\n\n    const topologyMaxWireVersion = maxWireVersion(this.topology);\n    if (\n      isSharded(this.topology) &&\n      topologyMaxWireVersion != null &&\n      topologyMaxWireVersion < minWireVersionForShardedTransactions\n    ) {\n      throw new MongoCompatibilityError(\n        'Transactions are not supported on sharded clusters in MongoDB < 4.2.'\n      );\n    }\n\n    // increment txnNumber\n    this.incrementTransactionNumber();\n    // create transaction state\n    this.transaction = new Transaction({\n      readConcern:\n        options?.readConcern ??\n        this.defaultTransactionOptions.readConcern ??\n        this.clientOptions?.readConcern,\n      writeConcern:\n        options?.writeConcern ??\n        this.defaultTransactionOptions.writeConcern ??\n        this.clientOptions?.writeConcern,\n      readPreference:\n        options?.readPreference ??\n        this.defaultTransactionOptions.readPreference ??\n        this.clientOptions?.readPreference,\n      maxCommitTimeMS: options?.maxCommitTimeMS ?? this.defaultTransactionOptions.maxCommitTimeMS\n    });\n\n    this.transaction.transition(TxnState.STARTING_TRANSACTION);\n  }\n\n  /**\n   * Commits the currently active transaction in this session.\n   *\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  commitTransaction(): Promise<Document>;\n  commitTransaction(callback: Callback<Document>): void;\n  commitTransaction(callback?: Callback<Document>): Promise<Document> | void {\n    return maybePromise(callback, cb => endTransaction(this, 'commitTransaction', cb));\n  }\n\n  /**\n   * Aborts the currently active transaction in this session.\n   *\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  abortTransaction(): Promise<Document>;\n  abortTransaction(callback: Callback<Document>): void;\n  abortTransaction(callback?: Callback<Document>): Promise<Document> | void {\n    return maybePromise(callback, cb => endTransaction(this, 'abortTransaction', cb));\n  }\n\n  /**\n   * This is here to ensure that ClientSession is never serialized to BSON.\n   */\n  toBSON(): never {\n    throw new MongoRuntimeError('ClientSession cannot be serialized to BSON.');\n  }\n\n  /**\n   * Runs a provided lambda within a transaction, retrying either the commit operation\n   * or entire transaction as needed (and when the error permits) to better ensure that\n   * the transaction can complete successfully.\n   *\n   * IMPORTANT: This method requires the user to return a Promise, all lambdas that do not\n   * return a Promise will result in undefined behavior.\n   *\n   * @param fn - A lambda to run within a transaction\n   * @param options - Optional settings for the transaction\n   */\n  withTransaction<T = void>(\n    fn: WithTransactionCallback<T>,\n    options?: TransactionOptions\n  ): ReturnType<typeof fn> {\n    const startTime = now();\n    return attemptTransaction(this, startTime, fn, options);\n  }\n}\n\nconst MAX_WITH_TRANSACTION_TIMEOUT = 120000;\nconst NON_DETERMINISTIC_WRITE_CONCERN_ERRORS = new Set([\n  'CannotSatisfyWriteConcern',\n  'UnknownReplWriteConcern',\n  'UnsatisfiableWriteConcern'\n]);\n\nfunction hasNotTimedOut(startTime: number, max: number) {\n  return calculateDurationInMs(startTime) < max;\n}\n\nfunction isUnknownTransactionCommitResult(err: MongoError) {\n  const isNonDeterministicWriteConcernError =\n    err instanceof MongoServerError &&\n    err.codeName &&\n    NON_DETERMINISTIC_WRITE_CONCERN_ERRORS.has(err.codeName);\n\n  return (\n    isMaxTimeMSExpiredError(err) ||\n    (!isNonDeterministicWriteConcernError &&\n      err.code !== MONGODB_ERROR_CODES.UnsatisfiableWriteConcern &&\n      err.code !== MONGODB_ERROR_CODES.UnknownReplWriteConcern)\n  );\n}\n\nexport function maybeClearPinnedConnection(\n  session: ClientSession,\n  options?: EndSessionOptions\n): void {\n  // unpin a connection if it has been pinned\n  const conn = session[kPinnedConnection];\n  const error = options?.error;\n\n  if (\n    session.inTransaction() &&\n    error &&\n    error instanceof MongoError &&\n    error.hasErrorLabel('TransientTransactionError')\n  ) {\n    return;\n  }\n\n  // NOTE: the spec talks about what to do on a network error only, but the tests seem to\n  //       to validate that we don't unpin on _all_ errors?\n  if (conn) {\n    const servers = Array.from(session.topology.s.servers.values());\n    const loadBalancer = servers[0];\n\n    if (options?.error == null || options?.force) {\n      loadBalancer.s.pool.checkIn(conn);\n      conn.emit(\n        Connection.UNPINNED,\n        session.transaction.state !== TxnState.NO_TRANSACTION\n          ? ConnectionPoolMetrics.TXN\n          : ConnectionPoolMetrics.CURSOR\n      );\n\n      if (options?.forceClear) {\n        loadBalancer.s.pool.clear(conn.serviceId);\n      }\n    }\n\n    session[kPinnedConnection] = undefined;\n  }\n}\n\nfunction isMaxTimeMSExpiredError(err: MongoError) {\n  if (err == null || !(err instanceof MongoServerError)) {\n    return false;\n  }\n\n  return (\n    err.code === MONGODB_ERROR_CODES.MaxTimeMSExpired ||\n    (err.writeConcernError && err.writeConcernError.code === MONGODB_ERROR_CODES.MaxTimeMSExpired)\n  );\n}\n\nfunction attemptTransactionCommit<T>(\n  session: ClientSession,\n  startTime: number,\n  fn: WithTransactionCallback<T>,\n  options?: TransactionOptions\n): Promise<T> {\n  return session.commitTransaction().catch((err: MongoError) => {\n    if (\n      err instanceof MongoError &&\n      hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT) &&\n      !isMaxTimeMSExpiredError(err)\n    ) {\n      if (err.hasErrorLabel('UnknownTransactionCommitResult')) {\n        return attemptTransactionCommit(session, startTime, fn, options);\n      }\n\n      if (err.hasErrorLabel('TransientTransactionError')) {\n        return attemptTransaction(session, startTime, fn, options);\n      }\n    }\n\n    throw err;\n  });\n}\n\nconst USER_EXPLICIT_TXN_END_STATES = new Set<TxnState>([\n  TxnState.NO_TRANSACTION,\n  TxnState.TRANSACTION_COMMITTED,\n  TxnState.TRANSACTION_ABORTED\n]);\n\nfunction userExplicitlyEndedTransaction(session: ClientSession) {\n  return USER_EXPLICIT_TXN_END_STATES.has(session.transaction.state);\n}\n\nfunction attemptTransaction<TSchema>(\n  session: ClientSession,\n  startTime: number,\n  fn: WithTransactionCallback<TSchema>,\n  options?: TransactionOptions\n): Promise<any> {\n  const Promise = PromiseProvider.get();\n  session.startTransaction(options);\n\n  let promise;\n  try {\n    promise = fn(session);\n  } catch (err) {\n    promise = Promise.reject(err);\n  }\n\n  if (!isPromiseLike(promise)) {\n    session.abortTransaction();\n    throw new MongoInvalidArgumentError(\n      'Function provided to `withTransaction` must return a Promise'\n    );\n  }\n\n  return promise.then(\n    () => {\n      if (userExplicitlyEndedTransaction(session)) {\n        return;\n      }\n\n      return attemptTransactionCommit(session, startTime, fn, options);\n    },\n    err => {\n      function maybeRetryOrThrow(err: MongoError): Promise<any> {\n        if (\n          err instanceof MongoError &&\n          err.hasErrorLabel('TransientTransactionError') &&\n          hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT)\n        ) {\n          return attemptTransaction(session, startTime, fn, options);\n        }\n\n        if (isMaxTimeMSExpiredError(err)) {\n          err.addErrorLabel('UnknownTransactionCommitResult');\n        }\n\n        throw err;\n      }\n\n      if (session.transaction.isActive) {\n        return session.abortTransaction().then(() => maybeRetryOrThrow(err));\n      }\n\n      return maybeRetryOrThrow(err);\n    }\n  );\n}\n\nfunction endTransaction(session: ClientSession, commandName: string, callback: Callback<Document>) {\n  if (!assertAlive(session, callback)) {\n    // checking result in case callback was called\n    return;\n  }\n\n  // handle any initial problematic cases\n  const txnState = session.transaction.state;\n\n  if (txnState === TxnState.NO_TRANSACTION) {\n    callback(new MongoTransactionError('No transaction started'));\n    return;\n  }\n\n  if (commandName === 'commitTransaction') {\n    if (\n      txnState === TxnState.STARTING_TRANSACTION ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED_EMPTY);\n      callback();\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(\n        new MongoTransactionError('Cannot call commitTransaction after calling abortTransaction')\n      );\n      return;\n    }\n  } else {\n    if (txnState === TxnState.STARTING_TRANSACTION) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      callback();\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoTransactionError('Cannot call abortTransaction twice'));\n      return;\n    }\n\n    if (\n      txnState === TxnState.TRANSACTION_COMMITTED ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      callback(\n        new MongoTransactionError('Cannot call abortTransaction after calling commitTransaction')\n      );\n      return;\n    }\n  }\n\n  // construct and send the command\n  const command: Document = { [commandName]: 1 };\n\n  // apply a writeConcern if specified\n  let writeConcern;\n  if (session.transaction.options.writeConcern) {\n    writeConcern = Object.assign({}, session.transaction.options.writeConcern);\n  } else if (session.clientOptions && session.clientOptions.writeConcern) {\n    writeConcern = { w: session.clientOptions.writeConcern.w };\n  }\n\n  if (txnState === TxnState.TRANSACTION_COMMITTED) {\n    writeConcern = Object.assign({ wtimeout: 10000 }, writeConcern, { w: 'majority' });\n  }\n\n  if (writeConcern) {\n    Object.assign(command, { writeConcern });\n  }\n\n  if (commandName === 'commitTransaction' && session.transaction.options.maxTimeMS) {\n    Object.assign(command, { maxTimeMS: session.transaction.options.maxTimeMS });\n  }\n\n  function commandHandler(e?: MongoError, r?: Document) {\n    if (commandName !== 'commitTransaction') {\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      if (session.loadBalanced) {\n        maybeClearPinnedConnection(session, { force: false });\n      }\n\n      // The spec indicates that we should ignore all errors on `abortTransaction`\n      return callback();\n    }\n\n    session.transaction.transition(TxnState.TRANSACTION_COMMITTED);\n    if (e) {\n      if (\n        e instanceof MongoNetworkError ||\n        e instanceof MongoWriteConcernError ||\n        isRetryableError(e) ||\n        isMaxTimeMSExpiredError(e)\n      ) {\n        if (isUnknownTransactionCommitResult(e)) {\n          e.addErrorLabel('UnknownTransactionCommitResult');\n\n          // per txns spec, must unpin session in this case\n          session.unpin({ error: e });\n        }\n      } else if (e.hasErrorLabel('TransientTransactionError')) {\n        session.unpin({ error: e });\n      }\n    }\n\n    callback(e, r);\n  }\n\n  // Assumption here that commandName is \"commitTransaction\" or \"abortTransaction\"\n  if (session.transaction.recoveryToken) {\n    command.recoveryToken = session.transaction.recoveryToken;\n  }\n\n  // send the command\n  executeOperation(\n    session.topology,\n    new RunAdminCommandOperation(undefined, command, {\n      session,\n      readPreference: ReadPreference.primary,\n      bypassPinningCheck: true\n    }),\n    (err, reply) => {\n      if (command.abortTransaction) {\n        // always unpin on abort regardless of command outcome\n        session.unpin();\n      }\n\n      if (err && isRetryableError(err as MongoError)) {\n        // SPEC-1185: apply majority write concern when retrying commitTransaction\n        if (command.commitTransaction) {\n          // per txns spec, must unpin session in this case\n          session.unpin({ force: true });\n\n          command.writeConcern = Object.assign({ wtimeout: 10000 }, command.writeConcern, {\n            w: 'majority'\n          });\n        }\n\n        return executeOperation(\n          session.topology,\n          new RunAdminCommandOperation(undefined, command, {\n            session,\n            readPreference: ReadPreference.primary,\n            bypassPinningCheck: true\n          }),\n          (_err, _reply) => commandHandler(_err as MongoError, _reply)\n        );\n      }\n\n      commandHandler(err as MongoError, reply);\n    }\n  );\n}\n\n/** @public */\nexport type ServerSessionId = { id: Binary };\n\n/**\n * Reflects the existence of a session on the server. Can be reused by the session pool.\n * WARNING: not meant to be instantiated directly. For internal use only.\n * @public\n */\nexport class ServerSession {\n  id: ServerSessionId;\n  lastUse: number;\n  txnNumber: number;\n  isDirty: boolean;\n\n  /** @internal */\n  constructor() {\n    this.id = { id: new Binary(uuidV4(), Binary.SUBTYPE_UUID) };\n    this.lastUse = now();\n    this.txnNumber = 0;\n    this.isDirty = false;\n  }\n\n  /**\n   * Determines if the server session has timed out.\n   *\n   * @param sessionTimeoutMinutes - The server's \"logicalSessionTimeoutMinutes\"\n   */\n  hasTimedOut(sessionTimeoutMinutes: number): boolean {\n    // Take the difference of the lastUse timestamp and now, which will result in a value in\n    // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n    const idleTimeMinutes = Math.round(\n      ((calculateDurationInMs(this.lastUse) % 86400000) % 3600000) / 60000\n    );\n\n    return idleTimeMinutes > sessionTimeoutMinutes - 1;\n  }\n}\n\n/**\n * Maintains a pool of Server Sessions.\n * For internal use only\n * @internal\n */\nexport class ServerSessionPool {\n  topology: Topology;\n  sessions: ServerSession[];\n\n  constructor(topology: Topology) {\n    if (topology == null) {\n      throw new MongoRuntimeError('ServerSessionPool requires a topology');\n    }\n\n    this.topology = topology;\n    this.sessions = [];\n  }\n\n  /** Ends all sessions in the session pool */\n  endAllPooledSessions(callback?: Callback<void>): void {\n    if (this.sessions.length) {\n      this.topology.endSessions(\n        this.sessions.map((session: ServerSession) => session.id),\n        () => {\n          this.sessions = [];\n          if (typeof callback === 'function') {\n            callback();\n          }\n        }\n      );\n\n      return;\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n  }\n\n  /**\n   * Acquire a Server Session from the pool.\n   * Iterates through each session in the pool, removing any stale sessions\n   * along the way. The first non-stale session found is removed from the\n   * pool and returned. If no non-stale session is found, a new ServerSession is created.\n   */\n  acquire(): ServerSession {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes || 10;\n\n    while (this.sessions.length) {\n      const session = this.sessions.shift();\n      if (session && (this.topology.loadBalanced || !session.hasTimedOut(sessionTimeoutMinutes))) {\n        return session;\n      }\n    }\n\n    return new ServerSession();\n  }\n\n  /**\n   * Release a session to the session pool\n   * Adds the session back to the session pool if the session has not timed out yet.\n   * This method also removes any stale sessions from the pool.\n   *\n   * @param session - The session to release to the pool\n   */\n  release(session: ServerSession): void {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n\n    if (this.topology.loadBalanced && !sessionTimeoutMinutes) {\n      this.sessions.unshift(session);\n    }\n\n    if (!sessionTimeoutMinutes) {\n      return;\n    }\n\n    while (this.sessions.length) {\n      const pooledSession = this.sessions[this.sessions.length - 1];\n      if (pooledSession.hasTimedOut(sessionTimeoutMinutes)) {\n        this.sessions.pop();\n      } else {\n        break;\n      }\n    }\n\n    if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n      if (session.isDirty) {\n        return;\n      }\n\n      // otherwise, readd this session to the session pool\n      this.sessions.unshift(session);\n    }\n  }\n}\n\n// TODO: this should be codified in command construction\n// @see https://github.com/mongodb/specifications/blob/master/source/read-write-concern/read-write-concern.rst#read-concern\nexport function commandSupportsReadConcern(command: Document, options?: Document): boolean {\n  if (command.aggregate || command.count || command.distinct || command.find || command.geoNear) {\n    return true;\n  }\n\n  if (\n    command.mapReduce &&\n    options &&\n    options.out &&\n    (options.out.inline === 1 || options.out === 'inline')\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Optionally decorate a command with sessions specific keys\n *\n * @param session - the session tracking transaction state\n * @param command - the command to decorate\n * @param options - Optional settings passed to calling operation\n */\nexport function applySession(\n  session: ClientSession,\n  command: Document,\n  options?: CommandOptions\n): MongoDriverError | undefined {\n  // TODO: merge this with `assertAlive`, did not want to throw a try/catch here\n  if (session.hasEnded) {\n    return new MongoExpiredSessionError();\n  }\n\n  const serverSession = session.serverSession;\n  if (serverSession == null) {\n    return new MongoRuntimeError('Unable to acquire server session');\n  }\n\n  // SPEC-1019: silently ignore explicit session with unacknowledged write for backwards compatibility\n  // FIXME: NODE-2781, this check for write concern shouldn't be happening here, but instead during command construction\n  if (options && options.writeConcern && (options.writeConcern as WriteConcern).w === 0) {\n    if (session && session.explicit) {\n      return new MongoAPIError('Cannot have explicit session with unacknowledged writes');\n    }\n    return;\n  }\n\n  // mark the last use of this session, and apply the `lsid`\n  serverSession.lastUse = now();\n  command.lsid = serverSession.id;\n\n  // first apply non-transaction-specific sessions data\n  const inTransaction = session.inTransaction() || isTransactionCommand(command);\n  const isRetryableWrite = options?.willRetryWrite || false;\n\n  if (serverSession.txnNumber && (isRetryableWrite || inTransaction)) {\n    command.txnNumber = Long.fromNumber(serverSession.txnNumber);\n  }\n\n  if (!inTransaction) {\n    if (session.transaction.state !== TxnState.NO_TRANSACTION) {\n      session.transaction.transition(TxnState.NO_TRANSACTION);\n    }\n\n    if (\n      session.supports.causalConsistency &&\n      session.operationTime &&\n      commandSupportsReadConcern(command, options)\n    ) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    } else if (session[kSnapshotEnabled]) {\n      command.readConcern = command.readConcern || { level: ReadConcernLevel.snapshot };\n      if (session[kSnapshotTime] != null) {\n        Object.assign(command.readConcern, { atClusterTime: session[kSnapshotTime] });\n      }\n    }\n\n    return;\n  }\n\n  // now attempt to apply transaction-specific sessions data\n\n  // `autocommit` must always be false to differentiate from retryable writes\n  command.autocommit = false;\n\n  if (session.transaction.state === TxnState.STARTING_TRANSACTION) {\n    session.transaction.transition(TxnState.TRANSACTION_IN_PROGRESS);\n    command.startTransaction = true;\n\n    const readConcern =\n      session.transaction.options.readConcern || session?.clientOptions?.readConcern;\n    if (readConcern) {\n      command.readConcern = readConcern;\n    }\n\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n  }\n}\n\nexport function updateSessionFromResponse(session: ClientSession, document: Document): void {\n  if (document.$clusterTime) {\n    _advanceClusterTime(session, document.$clusterTime);\n  }\n\n  if (document.operationTime && session && session.supports.causalConsistency) {\n    session.advanceOperationTime(document.operationTime);\n  }\n\n  if (document.recoveryToken && session && session.inTransaction()) {\n    session.transaction._recoveryToken = document.recoveryToken;\n  }\n\n  if (session?.[kSnapshotEnabled] && session[kSnapshotTime] == null) {\n    // find and aggregate commands return atClusterTime on the cursor\n    // distinct includes it in the response body\n    const atClusterTime = document.cursor?.atClusterTime || document.atClusterTime;\n    if (atClusterTime) {\n      session[kSnapshotTime] = atClusterTime;\n    }\n  }\n}\n", "import { Callback, maybePromise, MongoDBNamespace, ns } from '../utils';\nimport { Long, Document, BSONSerializeOptions, pluckBSONSerializeOptions } from '../bson';\nimport { ClientSession, maybeClearPinnedConnection } from '../sessions';\nimport {\n  AnyError,\n  MongoRuntimeError,\n  MongoNetworkError,\n  MongoInvalidArgumentError,\n  MongoCursorExhaustedError,\n  MongoTailableCursorError,\n  MongoCursorInUseError\n} from '../error';\nimport { ReadPreference, ReadPreferenceLike } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { Topology } from '../sdam/topology';\nimport { Readable, Transform } from 'stream';\nimport type { ExecutionResult } from '../operations/execute_operation';\nimport { ReadConcern, ReadConcernLike } from '../read_concern';\nimport { TODO_NODE_3286, TypedEventEmitter } from '../mongo_types';\n\n/** @internal */\nconst kId = Symbol('id');\n/** @internal */\nconst kDocuments = Symbol('documents');\n/** @internal */\nconst kServer = Symbol('server');\n/** @internal */\nconst kNamespace = Symbol('namespace');\n/** @internal */\nconst kTopology = Symbol('topology');\n/** @internal */\nconst kSession = Symbol('session');\n/** @internal */\nconst kOptions = Symbol('options');\n/** @internal */\nconst kTransform = Symbol('transform');\n/** @internal */\nconst kInitialized = Symbol('initialized');\n/** @internal */\nconst kClosed = Symbol('closed');\n/** @internal */\nconst kKilled = Symbol('killed');\n\n/** @public */\nexport const CURSOR_FLAGS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'exhaust',\n  'partial'\n] as const;\n\n/** @public\n * @deprecated This interface is deprecated */\nexport interface CursorCloseOptions {\n  /** Bypass calling killCursors when closing the cursor. */\n  /** @deprecated  the skipKillCursors option is deprecated */\n  skipKillCursors?: boolean;\n}\n\n/** @public */\nexport interface CursorStreamOptions {\n  /** A transformation method applied to each document emitted by the stream */\n  transform?(doc: Document): Document;\n}\n\n/** @public */\nexport type CursorFlag = typeof CURSOR_FLAGS[number];\n\n/** @public */\nexport interface AbstractCursorOptions extends BSONSerializeOptions {\n  session?: ClientSession;\n  readPreference?: ReadPreferenceLike;\n  readConcern?: ReadConcernLike;\n  batchSize?: number;\n  maxTimeMS?: number;\n  comment?: Document | string;\n  tailable?: boolean;\n  awaitData?: boolean;\n  noCursorTimeout?: boolean;\n}\n\n/** @internal */\nexport type InternalAbstractCursorOptions = Omit<AbstractCursorOptions, 'readPreference'> & {\n  // resolved\n  readPreference: ReadPreference;\n  readConcern?: ReadConcern;\n\n  // cursor flags, some are deprecated\n  oplogReplay?: boolean;\n  exhaust?: boolean;\n  partial?: boolean;\n};\n\n/** @public */\nexport type AbstractCursorEvents = {\n  [AbstractCursor.CLOSE](): void;\n};\n\n/** @public */\nexport abstract class AbstractCursor<\n  TSchema = any,\n  CursorEvents extends AbstractCursorEvents = AbstractCursorEvents\n> extends TypedEventEmitter<CursorEvents> {\n  /** @internal */\n  [kId]?: Long;\n  /** @internal */\n  [kSession]?: ClientSession;\n  /** @internal */\n  [kServer]?: Server;\n  /** @internal */\n  [kNamespace]: MongoDBNamespace;\n  /** @internal */\n  [kDocuments]: TSchema[];\n  /** @internal */\n  [kTopology]: Topology;\n  /** @internal */\n  [kTransform]?: (doc: TSchema) => Document;\n  /** @internal */\n  [kInitialized]: boolean;\n  /** @internal */\n  [kClosed]: boolean;\n  /** @internal */\n  [kKilled]: boolean;\n  /** @internal */\n  [kOptions]: InternalAbstractCursorOptions;\n\n  /** @event */\n  static readonly CLOSE = 'close' as const;\n\n  /** @internal */\n  constructor(\n    topology: Topology,\n    namespace: MongoDBNamespace,\n    options: AbstractCursorOptions = {}\n  ) {\n    super();\n\n    this[kTopology] = topology;\n    this[kNamespace] = namespace;\n    this[kDocuments] = []; // TODO: https://github.com/microsoft/TypeScript/issues/36230\n    this[kInitialized] = false;\n    this[kClosed] = false;\n    this[kKilled] = false;\n    this[kOptions] = {\n      readPreference:\n        options.readPreference && options.readPreference instanceof ReadPreference\n          ? options.readPreference\n          : ReadPreference.primary,\n      ...pluckBSONSerializeOptions(options)\n    };\n\n    const readConcern = ReadConcern.fromOptions(options);\n    if (readConcern) {\n      this[kOptions].readConcern = readConcern;\n    }\n\n    if (typeof options.batchSize === 'number') {\n      this[kOptions].batchSize = options.batchSize;\n    }\n\n    if (options.comment != null) {\n      this[kOptions].comment = options.comment;\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      this[kOptions].maxTimeMS = options.maxTimeMS;\n    }\n\n    if (options.session instanceof ClientSession) {\n      this[kSession] = options.session;\n    }\n  }\n\n  get id(): Long | undefined {\n    return this[kId];\n  }\n\n  /** @internal */\n  get topology(): Topology {\n    return this[kTopology];\n  }\n\n  /** @internal */\n  get server(): Server | undefined {\n    return this[kServer];\n  }\n\n  get namespace(): MongoDBNamespace {\n    return this[kNamespace];\n  }\n\n  get readPreference(): ReadPreference {\n    return this[kOptions].readPreference;\n  }\n\n  get readConcern(): ReadConcern | undefined {\n    return this[kOptions].readConcern;\n  }\n\n  /** @internal */\n  get session(): ClientSession | undefined {\n    return this[kSession];\n  }\n\n  set session(clientSession: ClientSession | undefined) {\n    this[kSession] = clientSession;\n  }\n\n  /** @internal */\n  get cursorOptions(): InternalAbstractCursorOptions {\n    return this[kOptions];\n  }\n\n  get closed(): boolean {\n    return this[kClosed];\n  }\n\n  get killed(): boolean {\n    return this[kKilled];\n  }\n\n  get loadBalanced(): boolean {\n    return this[kTopology].loadBalanced;\n  }\n\n  /** Returns current buffered documents length */\n  bufferedCount(): number {\n    return this[kDocuments].length;\n  }\n\n  /** Returns current buffered documents */\n  readBufferedDocuments(number?: number): TSchema[] {\n    return this[kDocuments].splice(0, number ?? this[kDocuments].length);\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<TSchema, void> {\n    return {\n      next: () =>\n        this.next().then(value =>\n          value != null ? { value, done: false } : { value: undefined, done: true }\n        )\n    };\n  }\n\n  stream(options?: CursorStreamOptions): Readable {\n    if (options?.transform) {\n      const transform = options.transform;\n      const readable = makeCursorStream(this);\n\n      return readable.pipe(\n        new Transform({\n          objectMode: true,\n          highWaterMark: 1,\n          transform(chunk, _, callback) {\n            try {\n              const transformed = transform(chunk);\n              callback(undefined, transformed);\n            } catch (err) {\n              callback(err);\n            }\n          }\n        })\n      );\n    }\n\n    return makeCursorStream(this);\n  }\n\n  hasNext(): Promise<boolean>;\n  hasNext(callback: Callback<boolean>): void;\n  hasNext(callback?: Callback<boolean>): Promise<boolean> | void {\n    return maybePromise(callback, done => {\n      if (this[kId] === Long.ZERO) {\n        return done(undefined, false);\n      }\n\n      if (this[kDocuments].length) {\n        return done(undefined, true);\n      }\n\n      next<TSchema>(this, true, (err, doc) => {\n        if (err) return done(err);\n\n        if (doc) {\n          this[kDocuments].unshift(doc);\n          done(undefined, true);\n          return;\n        }\n\n        done(undefined, false);\n      });\n    });\n  }\n\n  /** Get the next available document from the cursor, returns null if no more documents are available. */\n  next(): Promise<TSchema | null>;\n  next(callback: Callback<TSchema | null>): void;\n  next(callback?: Callback<TSchema | null>): Promise<TSchema | null> | void;\n  next(callback?: Callback<TSchema | null>): Promise<TSchema | null> | void {\n    return maybePromise(callback, done => {\n      if (this[kId] === Long.ZERO) {\n        return done(new MongoCursorExhaustedError());\n      }\n\n      next(this, true, done);\n    });\n  }\n\n  /**\n   * Try to get the next available document from the cursor or `null` if an empty batch is returned\n   */\n  tryNext(): Promise<TSchema | null>;\n  tryNext(callback: Callback<TSchema | null>): void;\n  tryNext(callback?: Callback<TSchema | null>): Promise<TSchema | null> | void {\n    return maybePromise(callback, done => {\n      if (this[kId] === Long.ZERO) {\n        return done(new MongoCursorExhaustedError());\n      }\n\n      next(this, false, done);\n    });\n  }\n\n  /**\n   * Iterates over all the documents for this cursor using the iterator, callback pattern.\n   *\n   * @param iterator - The iteration callback.\n   * @param callback - The end callback.\n   */\n  forEach(iterator: (doc: TSchema) => boolean | void): Promise<void>;\n  forEach(iterator: (doc: TSchema) => boolean | void, callback: Callback<void>): void;\n  forEach(\n    iterator: (doc: TSchema) => boolean | void,\n    callback?: Callback<void>\n  ): Promise<void> | void {\n    if (typeof iterator !== 'function') {\n      throw new MongoInvalidArgumentError('Argument \"iterator\" must be a function');\n    }\n    return maybePromise(callback, done => {\n      const transform = this[kTransform];\n      const fetchDocs = () => {\n        next<TSchema>(this, true, (err, doc) => {\n          if (err || doc == null) return done(err);\n          let result;\n          // NOTE: no need to transform because `next` will do this automatically\n          try {\n            result = iterator(doc); // TODO(NODE-3283): Improve transform typing\n          } catch (error) {\n            return done(error);\n          }\n\n          if (result === false) return done();\n\n          // these do need to be transformed since they are copying the rest of the batch\n          const internalDocs = this[kDocuments].splice(0, this[kDocuments].length);\n          for (let i = 0; i < internalDocs.length; ++i) {\n            try {\n              result = iterator(\n                (transform ? transform(internalDocs[i]) : internalDocs[i]) as TSchema // TODO(NODE-3283): Improve transform typing\n              );\n            } catch (error) {\n              return done(error);\n            }\n            if (result === false) return done();\n          }\n\n          fetchDocs();\n        });\n      };\n\n      fetchDocs();\n    });\n  }\n\n  close(): void;\n  close(callback: Callback): void;\n  /**\n   * @deprecated options argument is deprecated\n   */\n  close(options: CursorCloseOptions): Promise<void>;\n  /**\n   * @deprecated options argument is deprecated\n   */\n  close(options: CursorCloseOptions, callback: Callback): void;\n  close(options?: CursorCloseOptions | Callback, callback?: Callback): Promise<void> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n\n    const needsToEmitClosed = !this[kClosed];\n    this[kClosed] = true;\n\n    return maybePromise(callback, done => cleanupCursor(this, { needsToEmitClosed }, done));\n  }\n\n  /**\n   * Returns an array of documents. The caller is responsible for making sure that there\n   * is enough memory to store the results. Note that the array only contains partial\n   * results when this cursor had been previously accessed. In that case,\n   * cursor.rewind() can be used to reset the cursor.\n   *\n   * @param callback - The result callback.\n   */\n  toArray(): Promise<TSchema[]>;\n  toArray(callback: Callback<TSchema[]>): void;\n  toArray(callback?: Callback<TSchema[]>): Promise<TSchema[]> | void {\n    return maybePromise(callback, done => {\n      const docs: TSchema[] = [];\n      const transform = this[kTransform];\n      const fetchDocs = () => {\n        // NOTE: if we add a `nextBatch` then we should use it here\n        next<TSchema>(this, true, (err, doc) => {\n          if (err) return done(err);\n          if (doc == null) return done(undefined, docs);\n\n          // NOTE: no need to transform because `next` will do this automatically\n          docs.push(doc);\n\n          // these do need to be transformed since they are copying the rest of the batch\n          const internalDocs = (\n            transform\n              ? this[kDocuments].splice(0, this[kDocuments].length).map(transform)\n              : this[kDocuments].splice(0, this[kDocuments].length)\n          ) as TSchema[]; // TODO(NODE-3283): Improve transform typing\n\n          if (internalDocs) {\n            docs.push(...internalDocs);\n          }\n\n          fetchDocs();\n        });\n      };\n\n      fetchDocs();\n    });\n  }\n\n  /**\n   * Add a cursor flag to the cursor\n   *\n   * @param flag - The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial' -.\n   * @param value - The flag boolean value.\n   */\n  addCursorFlag(flag: CursorFlag, value: boolean): this {\n    assertUninitialized(this);\n    if (!CURSOR_FLAGS.includes(flag)) {\n      throw new MongoInvalidArgumentError(`Flag ${flag} is not one of ${CURSOR_FLAGS}`);\n    }\n\n    if (typeof value !== 'boolean') {\n      throw new MongoInvalidArgumentError(`Flag ${flag} must be a boolean value`);\n    }\n\n    this[kOptions][flag] = value;\n    return this;\n  }\n\n  /**\n   * Map all documents using the provided function\n   * If there is a transform set on the cursor, that will be called first and the result passed to\n   * this function's transform.\n   *\n   * @remarks\n   * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n   * it **does not** return a new instance of a cursor. This means when calling map,\n   * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n   * Take note of the following example:\n   *\n   * @example\n   * ```typescript\n   * const cursor: FindCursor<Document> = coll.find();\n   * const mappedCursor: FindCursor<number> = cursor.map(doc => Object.keys(doc).length);\n   * const keyCounts: number[] = await mappedCursor.toArray(); // cursor.toArray() still returns Document[]\n   * ```\n   * @param transform - The mapping transformation method.\n   */\n  map<T = any>(transform: (doc: TSchema) => T): AbstractCursor<T> {\n    assertUninitialized(this);\n    const oldTransform = this[kTransform] as (doc: TSchema) => TSchema; // TODO(NODE-3283): Improve transform typing\n    if (oldTransform) {\n      this[kTransform] = doc => {\n        return transform(oldTransform(doc));\n      };\n    } else {\n      this[kTransform] = transform;\n    }\n\n    return this as unknown as AbstractCursor<T>;\n  }\n\n  /**\n   * Set the ReadPreference for the cursor.\n   *\n   * @param readPreference - The new read preference for the cursor.\n   */\n  withReadPreference(readPreference: ReadPreferenceLike): this {\n    assertUninitialized(this);\n    if (readPreference instanceof ReadPreference) {\n      this[kOptions].readPreference = readPreference;\n    } else if (typeof readPreference === 'string') {\n      this[kOptions].readPreference = ReadPreference.fromString(readPreference);\n    } else {\n      throw new MongoInvalidArgumentError(`Invalid read preference: ${readPreference}`);\n    }\n\n    return this;\n  }\n\n  /**\n   * Set the ReadPreference for the cursor.\n   *\n   * @param readPreference - The new read preference for the cursor.\n   */\n  withReadConcern(readConcern: ReadConcernLike): this {\n    assertUninitialized(this);\n    const resolvedReadConcern = ReadConcern.fromOptions({ readConcern });\n    if (resolvedReadConcern) {\n      this[kOptions].readConcern = resolvedReadConcern;\n    }\n\n    return this;\n  }\n\n  /**\n   * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n   *\n   * @param value - Number of milliseconds to wait before aborting the query.\n   */\n  maxTimeMS(value: number): this {\n    assertUninitialized(this);\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Argument for maxTimeMS must be a number');\n    }\n\n    this[kOptions].maxTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Set the batch size for the cursor.\n   *\n   * @param value - The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/find/|find command documentation}.\n   */\n  batchSize(value: number): this {\n    assertUninitialized(this);\n    if (this[kOptions].tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support batchSize');\n    }\n\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Operation \"batchSize\" requires an integer');\n    }\n\n    this[kOptions].batchSize = value;\n    return this;\n  }\n\n  /**\n   * Rewind this cursor to its uninitialized state. Any options that are present on the cursor will\n   * remain in effect. Iterating this cursor will cause new queries to be sent to the server, even\n   * if the resultant data has already been retrieved by this cursor.\n   */\n  rewind(): void {\n    if (!this[kInitialized]) {\n      return;\n    }\n\n    this[kId] = undefined;\n    this[kDocuments] = [];\n    this[kClosed] = false;\n    this[kKilled] = false;\n    this[kInitialized] = false;\n\n    const session = this[kSession];\n    if (session) {\n      // We only want to end this session if we created it, and it hasn't ended yet\n      if (session.explicit === false && !session.hasEnded) {\n        session.endSession();\n      }\n\n      this[kSession] = undefined;\n    }\n  }\n\n  /**\n   * Returns a new uninitialized copy of this cursor, with options matching those that have been set on the current instance\n   */\n  abstract clone(): AbstractCursor<TSchema>;\n\n  /** @internal */\n  abstract _initialize(\n    session: ClientSession | undefined,\n    callback: Callback<ExecutionResult>\n  ): void;\n\n  /** @internal */\n  _getMore(batchSize: number, callback: Callback<Document>): void {\n    const cursorId = this[kId];\n    const cursorNs = this[kNamespace];\n    const server = this[kServer];\n\n    if (cursorId == null) {\n      callback(new MongoRuntimeError('Unable to iterate cursor with no id'));\n      return;\n    }\n\n    if (server == null) {\n      callback(new MongoRuntimeError('Unable to iterate cursor without selected server'));\n      return;\n    }\n\n    server.getMore(\n      cursorNs,\n      cursorId,\n      {\n        ...this[kOptions],\n        session: this[kSession],\n        batchSize\n      },\n      callback\n    );\n  }\n}\n\nfunction nextDocument<T>(cursor: AbstractCursor): T | null | undefined {\n  if (cursor[kDocuments] == null || !cursor[kDocuments].length) {\n    return null;\n  }\n\n  const doc = cursor[kDocuments].shift();\n  if (doc) {\n    const transform = cursor[kTransform];\n    if (transform) {\n      return transform(doc) as T;\n    }\n\n    return doc;\n  }\n\n  return null;\n}\n\nfunction next<T>(cursor: AbstractCursor, blocking: boolean, callback: Callback<T | null>): void {\n  const cursorId = cursor[kId];\n  if (cursor.closed) {\n    return callback(undefined, null);\n  }\n\n  if (cursor[kDocuments] && cursor[kDocuments].length) {\n    callback(undefined, nextDocument(cursor));\n    return;\n  }\n\n  if (cursorId == null) {\n    // All cursors must operate within a session, one must be made implicitly if not explicitly provided\n    if (cursor[kSession] == null && cursor[kTopology].hasSessionSupport()) {\n      cursor[kSession] = cursor[kTopology].startSession({ owner: cursor, explicit: false });\n    }\n\n    cursor._initialize(cursor[kSession], (err, state) => {\n      if (state) {\n        const response = state.response;\n        cursor[kServer] = state.server;\n        cursor[kSession] = state.session;\n\n        if (response.cursor) {\n          cursor[kId] =\n            typeof response.cursor.id === 'number'\n              ? Long.fromNumber(response.cursor.id)\n              : response.cursor.id;\n\n          if (response.cursor.ns) {\n            cursor[kNamespace] = ns(response.cursor.ns);\n          }\n\n          cursor[kDocuments] = response.cursor.firstBatch;\n        } else {\n          // NOTE: This is for support of older servers (<3.2) which do not use commands\n          cursor[kId] =\n            typeof response.cursorId === 'number'\n              ? Long.fromNumber(response.cursorId)\n              : response.cursorId;\n          cursor[kDocuments] = response.documents;\n        }\n\n        // When server responses return without a cursor document, we close this cursor\n        // and return the raw server response. This is often the case for explain commands\n        // for example\n        if (cursor[kId] == null) {\n          cursor[kId] = Long.ZERO;\n          // TODO(NODE-3286): ExecutionResult needs to accept a generic parameter\n          cursor[kDocuments] = [state.response as TODO_NODE_3286];\n        }\n      }\n\n      // the cursor is now initialized, even if an error occurred or it is dead\n      cursor[kInitialized] = true;\n\n      if (err || cursorIsDead(cursor)) {\n        return cleanupCursor(cursor, { error: err }, () => callback(err, nextDocument(cursor)));\n      }\n\n      next(cursor, blocking, callback);\n    });\n\n    return;\n  }\n\n  if (cursorIsDead(cursor)) {\n    return cleanupCursor(cursor, undefined, () => callback(undefined, null));\n  }\n\n  // otherwise need to call getMore\n  const batchSize = cursor[kOptions].batchSize || 1000;\n  cursor._getMore(batchSize, (err, response) => {\n    if (response) {\n      const cursorId =\n        typeof response.cursor.id === 'number'\n          ? Long.fromNumber(response.cursor.id)\n          : response.cursor.id;\n\n      cursor[kDocuments] = response.cursor.nextBatch;\n      cursor[kId] = cursorId;\n    }\n\n    if (err || cursorIsDead(cursor)) {\n      return cleanupCursor(cursor, { error: err }, () => callback(err, nextDocument(cursor)));\n    }\n\n    if (cursor[kDocuments].length === 0 && blocking === false) {\n      return callback(undefined, null);\n    }\n\n    next(cursor, blocking, callback);\n  });\n}\n\nfunction cursorIsDead(cursor: AbstractCursor): boolean {\n  const cursorId = cursor[kId];\n  return !!cursorId && cursorId.isZero();\n}\n\nfunction cleanupCursor(\n  cursor: AbstractCursor,\n  options: { error?: AnyError | undefined; needsToEmitClosed?: boolean } | undefined,\n  callback: Callback\n): void {\n  const cursorId = cursor[kId];\n  const cursorNs = cursor[kNamespace];\n  const server = cursor[kServer];\n  const session = cursor[kSession];\n  const error = options?.error;\n  const needsToEmitClosed = options?.needsToEmitClosed ?? cursor[kDocuments].length === 0;\n\n  if (error) {\n    if (cursor.loadBalanced && error instanceof MongoNetworkError) {\n      return completeCleanup();\n    }\n  }\n\n  if (cursorId == null || server == null || cursorId.isZero() || cursorNs == null) {\n    if (needsToEmitClosed) {\n      cursor[kClosed] = true;\n      cursor[kId] = Long.ZERO;\n      cursor.emit(AbstractCursor.CLOSE);\n    }\n\n    if (session) {\n      if (session.owner === cursor) {\n        return session.endSession({ error }, callback);\n      }\n\n      if (!session.inTransaction()) {\n        maybeClearPinnedConnection(session, { error });\n      }\n    }\n\n    return callback();\n  }\n\n  function completeCleanup() {\n    if (session) {\n      if (session.owner === cursor) {\n        return session.endSession({ error }, () => {\n          cursor.emit(AbstractCursor.CLOSE);\n          callback();\n        });\n      }\n\n      if (!session.inTransaction()) {\n        maybeClearPinnedConnection(session, { error });\n      }\n    }\n\n    cursor.emit(AbstractCursor.CLOSE);\n    return callback();\n  }\n\n  cursor[kKilled] = true;\n  server.killCursors(\n    cursorNs,\n    [cursorId],\n    { ...pluckBSONSerializeOptions(cursor[kOptions]), session },\n    () => completeCleanup()\n  );\n}\n\n/** @internal */\nexport function assertUninitialized(cursor: AbstractCursor): void {\n  if (cursor[kInitialized]) {\n    throw new MongoCursorInUseError();\n  }\n}\n\nfunction makeCursorStream<TSchema extends Document>(cursor: AbstractCursor<TSchema>) {\n  const readable = new Readable({\n    objectMode: true,\n    autoDestroy: false,\n    highWaterMark: 1\n  });\n\n  let initialized = false;\n  let reading = false;\n  let needToClose = true; // NOTE: we must close the cursor if we never read from it, use `_construct` in future node versions\n\n  readable._read = function () {\n    if (initialized === false) {\n      needToClose = false;\n      initialized = true;\n    }\n\n    if (!reading) {\n      reading = true;\n      readNext();\n    }\n  };\n\n  readable._destroy = function (error, cb) {\n    if (needToClose) {\n      cursor.close(err => process.nextTick(cb, err || error));\n    } else {\n      cb(error);\n    }\n  };\n\n  function readNext() {\n    needToClose = false;\n    next(cursor, true, (err, result) => {\n      needToClose = err ? !cursor.closed : result != null;\n\n      if (err) {\n        // NOTE: This is questionable, but we have a test backing the behavior. It seems the\n        //       desired behavior is that a stream ends cleanly when a user explicitly closes\n        //       a client during iteration. Alternatively, we could do the \"right\" thing and\n        //       propagate the error message by removing this special case.\n        if (err.message.match(/server is closed/)) {\n          cursor.close();\n          return readable.push(null);\n        }\n\n        // NOTE: This is also perhaps questionable. The rationale here is that these errors tend\n        //       to be \"operation interrupted\", where a cursor has been closed but there is an\n        //       active getMore in-flight. This used to check if the cursor was killed but once\n        //       that changed to happen in cleanup legitimate errors would not destroy the\n        //       stream. There are change streams test specifically test these cases.\n        if (err.message.match(/interrupted/)) {\n          return readable.push(null);\n        }\n\n        return readable.destroy(err);\n      }\n\n      if (result == null) {\n        readable.push(null);\n      } else if (readable.destroyed) {\n        cursor.close();\n      } else {\n        if (readable.push(result)) {\n          return readNext();\n        }\n\n        reading = false;\n      }\n    });\n  }\n\n  return readable;\n}\n", "import { CommandOperation, CommandOperationOptions, CollationOptions } from './command';\nimport { ReadPreference } from '../read_preference';\nimport { MongoInvalidArgumentError } from '../error';\nimport { maxWireVersion, MongoDBNamespace } from '../utils';\nimport { Aspect, defineAspects, Hint } from './operation';\nimport type { Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\n\n/** @internal */\nexport const DB_AGGREGATE_COLLECTION = 1 as const;\nconst MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT = 8 as const;\n\n/** @public */\nexport interface AggregateOptions extends CommandOperationOptions {\n  /** allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 \\>). */\n  allowDiskUse?: boolean;\n  /** The number of documents to return per batch. See [aggregation documentation](https://docs.mongodb.com/manual/reference/command/aggregate). */\n  batchSize?: number;\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n  /** Return the query as cursor, on 2.6 \\> it returns as a real cursor on pre 2.6 it returns as an emulated cursor. */\n  cursor?: Document;\n  /** specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point. */\n  maxTimeMS?: number;\n  /** The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query. */\n  maxAwaitTimeMS?: number;\n  /** Specify collation. */\n  collation?: CollationOptions;\n  /** Add an index selection hint to an aggregation command */\n  hint?: Hint;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n  out?: string;\n}\n\n/** @internal */\nexport class AggregateOperation<T = Document> extends CommandOperation<T> {\n  options: AggregateOptions;\n  target: string | typeof DB_AGGREGATE_COLLECTION;\n  pipeline: Document[];\n  hasWriteStage: boolean;\n\n  constructor(ns: MongoDBNamespace, pipeline: Document[], options?: AggregateOptions) {\n    super(undefined, { ...options, dbName: ns.db });\n\n    this.options = options ?? {};\n\n    // Covers when ns.collection is null, undefined or the empty string, use DB_AGGREGATE_COLLECTION\n    this.target = ns.collection || DB_AGGREGATE_COLLECTION;\n\n    this.pipeline = pipeline;\n\n    // determine if we have a write stage, override read preference if so\n    this.hasWriteStage = false;\n    if (typeof options?.out === 'string') {\n      this.pipeline = this.pipeline.concat({ $out: options.out });\n      this.hasWriteStage = true;\n    } else if (pipeline.length > 0) {\n      const finalStage = pipeline[pipeline.length - 1];\n      if (finalStage.$out || finalStage.$merge) {\n        this.hasWriteStage = true;\n      }\n    }\n\n    if (this.hasWriteStage) {\n      this.readPreference = ReadPreference.primary;\n    }\n\n    if (this.explain && this.writeConcern) {\n      throw new MongoInvalidArgumentError(\n        'Option \"explain\" cannot be used on an aggregate call with writeConcern'\n      );\n    }\n\n    if (options?.cursor != null && typeof options.cursor !== 'object') {\n      throw new MongoInvalidArgumentError('Cursor options must be an object');\n    }\n  }\n\n  get canRetryRead(): boolean {\n    return !this.hasWriteStage;\n  }\n\n  addToPipeline(stage: Document): void {\n    this.pipeline.push(stage);\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<T>): void {\n    const options: AggregateOptions = this.options;\n    const serverWireVersion = maxWireVersion(server);\n    const command: Document = { aggregate: this.target, pipeline: this.pipeline };\n\n    if (this.hasWriteStage && serverWireVersion < MIN_WIRE_VERSION_$OUT_READ_CONCERN_SUPPORT) {\n      this.readConcern = undefined;\n    }\n\n    if (serverWireVersion >= 5) {\n      if (this.hasWriteStage && this.writeConcern) {\n        Object.assign(command, { writeConcern: this.writeConcern });\n      }\n    }\n\n    if (options.bypassDocumentValidation === true) {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (typeof options.allowDiskUse === 'boolean') {\n      command.allowDiskUse = options.allowDiskUse;\n    }\n\n    if (options.hint) {\n      command.hint = options.hint;\n    }\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    command.cursor = options.cursor || {};\n    if (options.batchSize && !this.hasWriteStage) {\n      command.cursor.batchSize = options.batchSize;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\ndefineAspects(AggregateOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXPLAINABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import { AggregateOperation, AggregateOptions } from '../operations/aggregate';\nimport { AbstractCursor, assertUninitialized } from './abstract_cursor';\nimport { executeOperation, ExecutionResult } from '../operations/execute_operation';\nimport { mergeOptions } from '../utils';\nimport type { Document } from '../bson';\nimport type { Sort } from '../sort';\nimport type { Topology } from '../sdam/topology';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport type { ClientSession } from '../sessions';\nimport type { AbstractCursorOptions } from './abstract_cursor';\nimport type { ExplainVerbosityLike } from '../explain';\n\n/** @public */\nexport interface AggregationCursorOptions extends AbstractCursorOptions, AggregateOptions {}\n\n/** @internal */\nconst kPipeline = Symbol('pipeline');\n/** @internal */\nconst kOptions = Symbol('options');\n\n/**\n * The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n * @public\n */\nexport class AggregationCursor<TSchema = Document> extends AbstractCursor<TSchema> {\n  /** @internal */\n  [kPipeline]: Document[];\n  /** @internal */\n  [kOptions]: AggregateOptions;\n\n  /** @internal */\n  constructor(\n    topology: Topology,\n    namespace: MongoDBNamespace,\n    pipeline: Document[] = [],\n    options: AggregateOptions = {}\n  ) {\n    super(topology, namespace, options);\n\n    this[kPipeline] = pipeline;\n    this[kOptions] = options;\n  }\n\n  get pipeline(): Document[] {\n    return this[kPipeline];\n  }\n\n  clone(): AggregationCursor<TSchema> {\n    const clonedOptions = mergeOptions({}, this[kOptions]);\n    delete clonedOptions.session;\n    return new AggregationCursor(this.topology, this.namespace, this[kPipeline], {\n      ...clonedOptions\n    });\n  }\n\n  map<T>(transform: (doc: TSchema) => T): AggregationCursor<T> {\n    return super.map(transform) as AggregationCursor<T>;\n  }\n\n  /** @internal */\n  _initialize(session: ClientSession | undefined, callback: Callback<ExecutionResult>): void {\n    const aggregateOperation = new AggregateOperation(this.namespace, this[kPipeline], {\n      ...this[kOptions],\n      ...this.cursorOptions,\n      session\n    });\n\n    executeOperation(this.topology, aggregateOperation, (err, response) => {\n      if (err || response == null) return callback(err);\n\n      // TODO: NODE-2882\n      callback(undefined, { server: aggregateOperation.server, session, response });\n    });\n  }\n\n  /** Execute the explain for the cursor */\n  explain(): Promise<Document>;\n  explain(callback: Callback): void;\n  explain(verbosity: ExplainVerbosityLike): Promise<Document>;\n  explain(\n    verbosity?: ExplainVerbosityLike | Callback,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof verbosity === 'function') (callback = verbosity), (verbosity = true);\n    if (verbosity == null) verbosity = true;\n\n    return executeOperation(\n      this.topology,\n      new AggregateOperation(this.namespace, this[kPipeline], {\n        ...this[kOptions], // NOTE: order matters here, we may need to refine this\n        ...this.cursorOptions,\n        explain: verbosity\n      }),\n      callback\n    );\n  }\n\n  /** Add a group stage to the aggregation pipeline */\n  group<T = TSchema>($group: Document): AggregationCursor<T>;\n  group($group: Document): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $group });\n    return this;\n  }\n\n  /** Add a limit stage to the aggregation pipeline */\n  limit($limit: number): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $limit });\n    return this;\n  }\n\n  /** Add a match stage to the aggregation pipeline */\n  match($match: Document): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $match });\n    return this;\n  }\n\n  /** Add an out stage to the aggregation pipeline */\n  out($out: { db: string; coll: string } | string): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $out });\n    return this;\n  }\n\n  /**\n   * Add a project stage to the aggregation pipeline\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * By default chaining a projection to your cursor changes the returned type to the generic {@link Document} type.\n   * You should specify a parameterized type to have assertions on your final results.\n   *\n   * @example\n   * ```typescript\n   * // Best way\n   * const docs: AggregationCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * // Flexible way\n   * const docs: AggregationCursor<Document> = cursor.project({ _id: 0, a: true });\n   * ```\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n   * it **does not** return a new instance of a cursor. This means when calling project,\n   * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n   * Take note of the following example:\n   *\n   * @example\n   * ```typescript\n   * const cursor: AggregationCursor<{ a: number; b: string }> = coll.aggregate([]);\n   * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n   *\n   * // or always use chaining and save the final cursor\n   *\n   * const cursor = coll.aggregate().project<{ a: string }>({\n   *   _id: 0,\n   *   a: { $convert: { input: '$a', to: 'string' }\n   * }});\n   * ```\n   */\n  project<T extends Document = Document>($project: Document): AggregationCursor<T> {\n    assertUninitialized(this);\n    this[kPipeline].push({ $project });\n    return this as unknown as AggregationCursor<T>;\n  }\n\n  /** Add a lookup stage to the aggregation pipeline */\n  lookup($lookup: Document): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $lookup });\n    return this;\n  }\n\n  /** Add a redact stage to the aggregation pipeline */\n  redact($redact: Document): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $redact });\n    return this;\n  }\n\n  /** Add a skip stage to the aggregation pipeline */\n  skip($skip: number): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $skip });\n    return this;\n  }\n\n  /** Add a sort stage to the aggregation pipeline */\n  sort($sort: Sort): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $sort });\n    return this;\n  }\n\n  /** Add a unwind stage to the aggregation pipeline */\n  unwind($unwind: Document | string): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $unwind });\n    return this;\n  }\n\n  // deprecated methods\n  /** @deprecated Add a geoNear stage to the aggregation pipeline */\n  geoNear($geoNear: Document): this {\n    assertUninitialized(this);\n    this[kPipeline].push({ $geoNear });\n    return this;\n  }\n}\n", "import { Aspect, defineAspects } from './operation';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport type { ClientSession } from '../sessions';\n\n/** @public */\nexport interface CountOptions extends CommandOperationOptions {\n  /** The number of documents to skip. */\n  skip?: number;\n  /** The maximum amounts to count before aborting. */\n  limit?: number;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n  /** An index name hint for the query. */\n  hint?: string | Document;\n}\n\n/** @internal */\nexport class CountOperation extends CommandOperation<number> {\n  options: CountOptions;\n  collectionName?: string;\n  query: Document;\n\n  constructor(namespace: MongoDBNamespace, filter: Document, options: CountOptions) {\n    super({ s: { namespace: namespace } } as unknown as Collection, options);\n\n    this.options = options;\n    this.collectionName = namespace.collection;\n    this.query = filter;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<number>): void {\n    const options = this.options;\n    const cmd: Document = {\n      count: this.collectionName,\n      query: this.query\n    };\n\n    if (typeof options.limit === 'number') {\n      cmd.limit = options.limit;\n    }\n\n    if (typeof options.skip === 'number') {\n      cmd.skip = options.skip;\n    }\n\n    if (options.hint != null) {\n      cmd.hint = options.hint;\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    super.executeCommand(server, session, cmd, (err, result) => {\n      callback(err, result ? result.n : 0);\n    });\n  }\n}\n\ndefineAspects(CountOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE]);\n", "import { MongoInvalidArgumentError } from './error';\n\n/** @public */\nexport type SortDirection =\n  | 1\n  | -1\n  | 'asc'\n  | 'desc'\n  | 'ascending'\n  | 'descending'\n  | { $meta: string };\n\n/** @public */\nexport type Sort =\n  | string\n  | Exclude<SortDirection, { $meta: string }>\n  | string[]\n  | { [key: string]: SortDirection }\n  | Map<string, SortDirection>\n  | [string, SortDirection][]\n  | [string, SortDirection];\n\n/** Below stricter types were created for sort that correspond with type that the cmd takes  */\n\n/** @internal */\nexport type SortDirectionForCmd = 1 | -1 | { $meta: string };\n\n/** @internal */\nexport type SortForCmd = Map<string, SortDirectionForCmd>;\n\n/** @internal */\ntype SortPairForCmd = [string, SortDirectionForCmd];\n\n/** @internal */\nfunction prepareDirection(direction: any = 1): SortDirectionForCmd {\n  const value = `${direction}`.toLowerCase();\n  if (isMeta(direction)) return direction;\n  switch (value) {\n    case 'ascending':\n    case 'asc':\n    case '1':\n      return 1;\n    case 'descending':\n    case 'desc':\n    case '-1':\n      return -1;\n    default:\n      throw new MongoInvalidArgumentError(`Invalid sort direction: ${JSON.stringify(direction)}`);\n  }\n}\n\n/** @internal */\nfunction isMeta(t: SortDirection): t is { $meta: string } {\n  return typeof t === 'object' && t != null && '$meta' in t && typeof t.$meta === 'string';\n}\n\n/** @internal */\nfunction isPair(t: Sort): t is [string, SortDirection] {\n  if (Array.isArray(t) && t.length === 2) {\n    try {\n      prepareDirection(t[1]);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  return false;\n}\n\nfunction isDeep(t: Sort): t is [string, SortDirection][] {\n  return Array.isArray(t) && Array.isArray(t[0]);\n}\n\nfunction isMap(t: Sort): t is Map<string, SortDirection> {\n  return t instanceof Map && t.size > 0;\n}\n\n/** @internal */\nfunction pairToMap(v: [string, SortDirection]): SortForCmd {\n  return new Map([[`${v[0]}`, prepareDirection([v[1]])]]);\n}\n\n/** @internal */\nfunction deepToMap(t: [string, SortDirection][]): SortForCmd {\n  const sortEntries: SortPairForCmd[] = t.map(([k, v]) => [`${k}`, prepareDirection(v)]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction stringsToMap(t: string[]): SortForCmd {\n  const sortEntries: SortPairForCmd[] = t.map(key => [`${key}`, 1]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction objectToMap(t: { [key: string]: SortDirection }): SortForCmd {\n  const sortEntries: SortPairForCmd[] = Object.entries(t).map(([k, v]) => [\n    `${k}`,\n    prepareDirection(v)\n  ]);\n  return new Map(sortEntries);\n}\n\n/** @internal */\nfunction mapToMap(t: Map<string, SortDirection>): SortForCmd {\n  const sortEntries: SortPairForCmd[] = Array.from(t).map(([k, v]) => [\n    `${k}`,\n    prepareDirection(v)\n  ]);\n  return new Map(sortEntries);\n}\n\n/** converts a Sort type into a type that is valid for the server (SortForCmd) */\nexport function formatSort(\n  sort: Sort | undefined,\n  direction?: SortDirection\n): SortForCmd | undefined {\n  if (sort == null) return undefined;\n  if (typeof sort === 'string') return new Map([[sort, prepareDirection(direction)]]);\n  if (typeof sort !== 'object') {\n    throw new MongoInvalidArgumentError(\n      `Invalid sort format: ${JSON.stringify(sort)} Sort must be a valid object`\n    );\n  }\n  if (!Array.isArray(sort)) {\n    return isMap(sort) ? mapToMap(sort) : Object.keys(sort).length ? objectToMap(sort) : undefined;\n  }\n  if (!sort.length) return undefined;\n  if (isDeep(sort)) return deepToMap(sort);\n  if (isPair(sort)) return pairToMap(sort);\n  return stringsToMap(sort);\n}\n", "import { Aspect, defineAspects, Hint } from './operation';\nimport {\n  maxWireVersion,\n  MongoDBNamespace,\n  Callback,\n  normalizeHintField,\n  decorateWithExplain\n} from '../utils';\nimport { MongoInvalidArgumentError, MongoCompatibilityError } from '../error';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport { CommandOperation, CommandOperationOptions, CollationOptions } from './command';\nimport { Sort, formatSort } from '../sort';\nimport { isSharded } from '../cmap/wire_protocol/shared';\nimport { ReadConcern } from '../read_concern';\nimport type { ClientSession } from '../sessions';\n\n/**\n * @public\n * @typeParam TSchema - Unused schema definition, deprecated usage, only specify `FindOptions` with no generic\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface FindOptions<TSchema extends Document = Document> extends CommandOperationOptions {\n  /** Sets the limit of documents returned in the query. */\n  limit?: number;\n  /** Set to sort the documents coming back from the query. Array of indexes, `[['a', 1]]` etc. */\n  sort?: Sort;\n  /** The fields to return in the query. Object of fields to either include or exclude (one of, not both), `{'a':1, 'b': 1}` **or** `{'a': 0, 'b': 0}` */\n  projection?: Document;\n  /** Set to skip N documents ahead in your query (useful for pagination). */\n  skip?: number;\n  /** Tell the query to use specific indexes in the query. Object of indexes to use, `{'_id':1}` */\n  hint?: Hint;\n  /** Specify if the cursor can timeout. */\n  timeout?: boolean;\n  /** Specify if the cursor is tailable. */\n  tailable?: boolean;\n  /** Specify if the cursor is a a tailable-await cursor. Requires `tailable` to be true */\n  awaitData?: boolean;\n  /** Set the batchSize for the getMoreCommand when iterating over the query results. */\n  batchSize?: number;\n  /** If true, returns only the index keys in the resulting documents. */\n  returnKey?: boolean;\n  /** The inclusive lower bound for a specific index */\n  min?: Document;\n  /** The exclusive upper bound for a specific index */\n  max?: Document;\n  /** You can put a $comment field on a query to make looking in the profiler logs simpler. */\n  comment?: string | Document;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n  /** The maximum amount of time for the server to wait on new documents to satisfy a tailable cursor query. Requires `tailable` and `awaitData` to be true */\n  maxAwaitTimeMS?: number;\n  /** The server normally times out idle cursors after an inactivity period (10 minutes) to prevent excess memory use. Set this option to prevent that. */\n  noCursorTimeout?: boolean;\n  /** Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields). */\n  collation?: CollationOptions;\n  /** Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher) */\n  allowDiskUse?: boolean;\n  /** Determines whether to close the cursor after the first batch. Defaults to false. */\n  singleBatch?: boolean;\n  /** For queries against a sharded collection, allows the command (or subsequent getMore commands) to return partial results, rather than an error, if one or more queried shards are unavailable. */\n  allowPartialResults?: boolean;\n  /** Determines whether to return the record identifier for each document. If true, adds a field $recordId to the returned documents. */\n  showRecordId?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n\n/** @internal */\nexport class FindOperation extends CommandOperation<Document> {\n  options: FindOptions;\n  filter: Document;\n\n  constructor(\n    collection: Collection | undefined,\n    ns: MongoDBNamespace,\n    filter: Document = {},\n    options: FindOptions = {}\n  ) {\n    super(collection, options);\n\n    this.options = options;\n    this.ns = ns;\n\n    if (typeof filter !== 'object' || Array.isArray(filter)) {\n      throw new MongoInvalidArgumentError('Query filter must be a plain object or ObjectId');\n    }\n\n    // If the filter is a buffer, validate that is a valid BSON document\n    if (Buffer.isBuffer(filter)) {\n      const objectSize = filter[0] | (filter[1] << 8) | (filter[2] << 16) | (filter[3] << 24);\n      if (objectSize !== filter.length) {\n        throw new MongoInvalidArgumentError(\n          `Query filter raw message size does not match message header size [${filter.length}] != [${objectSize}]`\n        );\n      }\n    }\n\n    // special case passing in an ObjectId as a filter\n    this.filter = filter != null && filter._bsontype === 'ObjectID' ? { _id: filter } : filter;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    this.server = server;\n\n    const serverWireVersion = maxWireVersion(server);\n    const options = this.options;\n    if (options.allowDiskUse != null && serverWireVersion < 4) {\n      callback(\n        new MongoCompatibilityError('Option \"allowDiskUse\" is not supported on MongoDB < 3.2')\n      );\n      return;\n    }\n\n    if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      callback(\n        new MongoCompatibilityError(\n          `Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`\n        )\n      );\n\n      return;\n    }\n\n    if (serverWireVersion < 4) {\n      if (this.readConcern && this.readConcern.level !== 'local') {\n        callback(\n          new MongoCompatibilityError(\n            `Server find command does not support a readConcern level of ${this.readConcern.level}`\n          )\n        );\n\n        return;\n      }\n\n      const findCommand = makeLegacyFindCommand(this.ns, this.filter, options);\n      if (isSharded(server) && this.readPreference) {\n        findCommand.$readPreference = this.readPreference.toJSON();\n      }\n\n      server.query(\n        this.ns,\n        findCommand,\n        {\n          ...this.options,\n          ...this.bsonOptions,\n          documentsReturnedIn: 'firstBatch',\n          readPreference: this.readPreference\n        },\n        callback\n      );\n\n      return;\n    }\n\n    let findCommand = makeFindCommand(this.ns, this.filter, options);\n    if (this.explain) {\n      findCommand = decorateWithExplain(findCommand, this.explain);\n    }\n\n    server.command(\n      this.ns,\n      findCommand,\n      {\n        ...this.options,\n        ...this.bsonOptions,\n        documentsReturnedIn: 'firstBatch',\n        session\n      },\n      callback\n    );\n  }\n}\n\nfunction makeFindCommand(ns: MongoDBNamespace, filter: Document, options: FindOptions): Document {\n  const findCommand: Document = {\n    find: ns.collection,\n    filter\n  };\n\n  if (options.sort) {\n    findCommand.sort = formatSort(options.sort);\n  }\n\n  if (options.projection) {\n    let projection = options.projection;\n    if (projection && Array.isArray(projection)) {\n      projection = projection.length\n        ? projection.reduce((result, field) => {\n            result[field] = 1;\n            return result;\n          }, {})\n        : { _id: 1 };\n    }\n\n    findCommand.projection = projection;\n  }\n\n  if (options.hint) {\n    findCommand.hint = normalizeHintField(options.hint);\n  }\n\n  if (typeof options.skip === 'number') {\n    findCommand.skip = options.skip;\n  }\n\n  if (typeof options.limit === 'number') {\n    if (options.limit < 0) {\n      findCommand.limit = -options.limit;\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.limit = options.limit;\n    }\n  }\n\n  if (typeof options.batchSize === 'number') {\n    if (options.batchSize < 0) {\n      if (\n        options.limit &&\n        options.limit !== 0 &&\n        Math.abs(options.batchSize) < Math.abs(options.limit)\n      ) {\n        findCommand.limit = -options.batchSize;\n      }\n\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.batchSize = options.batchSize;\n    }\n  }\n\n  if (typeof options.singleBatch === 'boolean') {\n    findCommand.singleBatch = options.singleBatch;\n  }\n\n  if (options.comment) {\n    findCommand.comment = options.comment;\n  }\n\n  if (typeof options.maxTimeMS === 'number') {\n    findCommand.maxTimeMS = options.maxTimeMS;\n  }\n\n  const readConcern = ReadConcern.fromOptions(options);\n  if (readConcern) {\n    findCommand.readConcern = readConcern.toJSON();\n  }\n\n  if (options.max) {\n    findCommand.max = options.max;\n  }\n\n  if (options.min) {\n    findCommand.min = options.min;\n  }\n\n  if (typeof options.returnKey === 'boolean') {\n    findCommand.returnKey = options.returnKey;\n  }\n\n  if (typeof options.showRecordId === 'boolean') {\n    findCommand.showRecordId = options.showRecordId;\n  }\n\n  if (typeof options.tailable === 'boolean') {\n    findCommand.tailable = options.tailable;\n  }\n\n  if (typeof options.timeout === 'boolean') {\n    findCommand.noCursorTimeout = !options.timeout;\n  } else if (typeof options.noCursorTimeout === 'boolean') {\n    findCommand.noCursorTimeout = options.noCursorTimeout;\n  }\n\n  if (typeof options.awaitData === 'boolean') {\n    findCommand.awaitData = options.awaitData;\n  }\n\n  if (typeof options.allowPartialResults === 'boolean') {\n    findCommand.allowPartialResults = options.allowPartialResults;\n  }\n\n  if (options.collation) {\n    findCommand.collation = options.collation;\n  }\n\n  if (typeof options.allowDiskUse === 'boolean') {\n    findCommand.allowDiskUse = options.allowDiskUse;\n  }\n\n  if (options.let) {\n    findCommand.let = options.let;\n  }\n\n  return findCommand;\n}\n\nfunction makeLegacyFindCommand(\n  ns: MongoDBNamespace,\n  filter: Document,\n  options: FindOptions\n): Document {\n  const findCommand: Document = {\n    $query: filter\n  };\n\n  if (options.sort) {\n    findCommand.$orderby = formatSort(options.sort);\n  }\n\n  if (options.hint) {\n    findCommand.$hint = normalizeHintField(options.hint);\n  }\n\n  if (typeof options.returnKey === 'boolean') {\n    findCommand.$returnKey = options.returnKey;\n  }\n\n  if (options.max) {\n    findCommand.$max = options.max;\n  }\n\n  if (options.min) {\n    findCommand.$min = options.min;\n  }\n\n  if (typeof options.showRecordId === 'boolean') {\n    findCommand.$showDiskLoc = options.showRecordId;\n  }\n\n  if (options.comment) {\n    findCommand.$comment = options.comment;\n  }\n\n  if (typeof options.maxTimeMS === 'number') {\n    findCommand.$maxTimeMS = options.maxTimeMS;\n  }\n\n  if (options.explain != null) {\n    findCommand.$explain = true;\n  }\n\n  return findCommand;\n}\n\ndefineAspects(FindOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXPLAINABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import type { Document } from '../bson';\nimport { MongoInvalidArgumentError, MongoTailableCursorError } from '../error';\nimport type { ExplainVerbosityLike } from '../explain';\nimport { CountOperation, CountOptions } from '../operations/count';\nimport { executeOperation, ExecutionResult } from '../operations/execute_operation';\nimport { FindOperation, FindOptions } from '../operations/find';\nimport { mergeOptions } from '../utils';\nimport type { Hint } from '../operations/operation';\nimport type { CollationOptions } from '../operations/command';\nimport type { Topology } from '../sdam/topology';\nimport type { ClientSession } from '../sessions';\nimport { formatSort, Sort, SortDirection } from '../sort';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport { AbstractCursor, assertUninitialized } from './abstract_cursor';\n\n/** @internal */\nconst kFilter = Symbol('filter');\n/** @internal */\nconst kNumReturned = Symbol('numReturned');\n/** @internal */\nconst kBuiltOptions = Symbol('builtOptions');\n\n/** @public Flags allowed for cursor */\nexport const FLAGS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'exhaust',\n  'partial'\n] as const;\n\n/** @public */\nexport class FindCursor<TSchema = Document> extends AbstractCursor<TSchema> {\n  /** @internal */\n  [kFilter]: Document;\n  /** @internal */\n  [kNumReturned]?: number;\n  /** @internal */\n  [kBuiltOptions]: FindOptions;\n\n  /** @internal */\n  constructor(\n    topology: Topology,\n    namespace: MongoDBNamespace,\n    filter: Document | undefined,\n    options: FindOptions = {}\n  ) {\n    super(topology, namespace, options);\n\n    this[kFilter] = filter || {};\n    this[kBuiltOptions] = options;\n\n    if (options.sort != null) {\n      this[kBuiltOptions].sort = formatSort(options.sort);\n    }\n  }\n\n  clone(): FindCursor<TSchema> {\n    const clonedOptions = mergeOptions({}, this[kBuiltOptions]);\n    delete clonedOptions.session;\n    return new FindCursor(this.topology, this.namespace, this[kFilter], {\n      ...clonedOptions\n    });\n  }\n\n  map<T>(transform: (doc: TSchema) => T): FindCursor<T> {\n    return super.map(transform) as FindCursor<T>;\n  }\n\n  /** @internal */\n  _initialize(session: ClientSession | undefined, callback: Callback<ExecutionResult>): void {\n    const findOperation = new FindOperation(undefined, this.namespace, this[kFilter], {\n      ...this[kBuiltOptions], // NOTE: order matters here, we may need to refine this\n      ...this.cursorOptions,\n      session\n    });\n\n    executeOperation(this.topology, findOperation, (err, response) => {\n      if (err || response == null) return callback(err);\n\n      // TODO: We only need this for legacy queries that do not support `limit`, maybe\n      //       the value should only be saved in those cases.\n      if (response.cursor) {\n        this[kNumReturned] = response.cursor.firstBatch.length;\n      } else {\n        this[kNumReturned] = response.documents ? response.documents.length : 0;\n      }\n\n      // TODO: NODE-2882\n      callback(undefined, { server: findOperation.server, session, response });\n    });\n  }\n\n  /** @internal */\n  _getMore(batchSize: number, callback: Callback<Document>): void {\n    // NOTE: this is to support client provided limits in pre-command servers\n    const numReturned = this[kNumReturned];\n    if (numReturned) {\n      const limit = this[kBuiltOptions].limit;\n      batchSize =\n        limit && limit > 0 && numReturned + batchSize > limit ? limit - numReturned : batchSize;\n\n      if (batchSize <= 0) {\n        return this.close(callback);\n      }\n    }\n\n    super._getMore(batchSize, (err, response) => {\n      if (err) return callback(err);\n\n      // TODO: wrap this in some logic to prevent it from happening if we don't need this support\n      if (response) {\n        this[kNumReturned] = this[kNumReturned] + response.cursor.nextBatch.length;\n      }\n\n      callback(undefined, response);\n    });\n  }\n\n  /** Get the count of documents for this cursor */\n  count(): Promise<number>;\n  count(callback: Callback<number>): void;\n  count(options: CountOptions): Promise<number>;\n  count(options: CountOptions, callback: Callback<number>): void;\n  count(\n    options?: CountOptions | Callback<number>,\n    callback?: Callback<number>\n  ): Promise<number> | void {\n    if (typeof options === 'boolean') {\n      throw new MongoInvalidArgumentError('Invalid first parameter to count');\n    }\n\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n\n    return executeOperation(\n      this.topology,\n      new CountOperation(this.namespace, this[kFilter], {\n        ...this[kBuiltOptions], // NOTE: order matters here, we may need to refine this\n        ...this.cursorOptions,\n        ...options\n      }),\n      callback\n    );\n  }\n\n  /** Execute the explain for the cursor */\n  explain(): Promise<Document>;\n  explain(callback: Callback): void;\n  explain(verbosity?: ExplainVerbosityLike): Promise<Document>;\n  explain(\n    verbosity?: ExplainVerbosityLike | Callback,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof verbosity === 'function') (callback = verbosity), (verbosity = true);\n    if (verbosity == null) verbosity = true;\n\n    return executeOperation(\n      this.topology,\n      new FindOperation(undefined, this.namespace, this[kFilter], {\n        ...this[kBuiltOptions], // NOTE: order matters here, we may need to refine this\n        ...this.cursorOptions,\n        explain: verbosity\n      }),\n      callback\n    );\n  }\n\n  /** Set the cursor query */\n  filter(filter: Document): this {\n    assertUninitialized(this);\n    this[kFilter] = filter;\n    return this;\n  }\n\n  /**\n   * Set the cursor hint\n   *\n   * @param hint - If specified, then the query system will only consider plans using the hinted index.\n   */\n  hint(hint: Hint): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].hint = hint;\n    return this;\n  }\n\n  /**\n   * Set the cursor min\n   *\n   * @param min - Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n   */\n  min(min: Document): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].min = min;\n    return this;\n  }\n\n  /**\n   * Set the cursor max\n   *\n   * @param max - Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n   */\n  max(max: Document): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].max = max;\n    return this;\n  }\n\n  /**\n   * Set the cursor returnKey.\n   * If set to true, modifies the cursor to only return the index field or fields for the results of the query, rather than documents.\n   * If set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields.\n   *\n   * @param value - the returnKey value.\n   */\n  returnKey(value: boolean): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].returnKey = value;\n    return this;\n  }\n\n  /**\n   * Modifies the output of a query by adding a field $recordId to matching documents. $recordId is the internal key which uniquely identifies a document in a collection.\n   *\n   * @param value - The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n   */\n  showRecordId(value: boolean): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].showRecordId = value;\n    return this;\n  }\n\n  /**\n   * Add a query modifier to the cursor query\n   *\n   * @param name - The query modifier (must start with $, such as $orderby etc)\n   * @param value - The modifier value.\n   */\n  addQueryModifier(name: string, value: string | boolean | number | Document): this {\n    assertUninitialized(this);\n    if (name[0] !== '$') {\n      throw new MongoInvalidArgumentError(`${name} is not a valid query modifier`);\n    }\n\n    // Strip of the $\n    const field = name.substr(1);\n\n    // NOTE: consider some TS magic for this\n    switch (field) {\n      case 'comment':\n        this[kBuiltOptions].comment = value as string | Document;\n        break;\n\n      case 'explain':\n        this[kBuiltOptions].explain = value as boolean;\n        break;\n\n      case 'hint':\n        this[kBuiltOptions].hint = value as string | Document;\n        break;\n\n      case 'max':\n        this[kBuiltOptions].max = value as Document;\n        break;\n\n      case 'maxTimeMS':\n        this[kBuiltOptions].maxTimeMS = value as number;\n        break;\n\n      case 'min':\n        this[kBuiltOptions].min = value as Document;\n        break;\n\n      case 'orderby':\n        this[kBuiltOptions].sort = formatSort(value as string | Document);\n        break;\n\n      case 'query':\n        this[kFilter] = value as Document;\n        break;\n\n      case 'returnKey':\n        this[kBuiltOptions].returnKey = value as boolean;\n        break;\n\n      case 'showDiskLoc':\n        this[kBuiltOptions].showRecordId = value as boolean;\n        break;\n\n      default:\n        throw new MongoInvalidArgumentError(`Invalid query modifier: ${name}`);\n    }\n\n    return this;\n  }\n\n  /**\n   * Add a comment to the cursor query allowing for tracking the comment in the log.\n   *\n   * @param value - The comment attached to this query.\n   */\n  comment(value: string): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].comment = value;\n    return this;\n  }\n\n  /**\n   * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)\n   *\n   * @param value - Number of milliseconds to wait before aborting the tailed query.\n   */\n  maxAwaitTimeMS(value: number): this {\n    assertUninitialized(this);\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Argument for maxAwaitTimeMS must be a number');\n    }\n\n    this[kBuiltOptions].maxAwaitTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n   *\n   * @param value - Number of milliseconds to wait before aborting the query.\n   */\n  maxTimeMS(value: number): this {\n    assertUninitialized(this);\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Argument for maxTimeMS must be a number');\n    }\n\n    this[kBuiltOptions].maxTimeMS = value;\n    return this;\n  }\n\n  /**\n   * Add a project stage to the aggregation pipeline\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * By default chaining a projection to your cursor changes the returned type to the generic\n   * {@link Document} type.\n   * You should specify a parameterized type to have assertions on your final results.\n   *\n   * @example\n   * ```typescript\n   * // Best way\n   * const docs: FindCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * // Flexible way\n   * const docs: FindCursor<Document> = cursor.project({ _id: 0, a: true });\n   * ```\n   *\n   * @remarks\n   *\n   * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n   * it **does not** return a new instance of a cursor. This means when calling project,\n   * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n   * Take note of the following example:\n   *\n   * @example\n   * ```typescript\n   * const cursor: FindCursor<{ a: number; b: string }> = coll.find();\n   * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n   *\n   * // or always use chaining and save the final cursor\n   *\n   * const cursor = coll.find().project<{ a: string }>({\n   *   _id: 0,\n   *   a: { $convert: { input: '$a', to: 'string' }\n   * }});\n   * ```\n   */\n  project<T extends Document = Document>(value: Document): FindCursor<T> {\n    assertUninitialized(this);\n    this[kBuiltOptions].projection = value;\n    return this as unknown as FindCursor<T>;\n  }\n\n  /**\n   * Sets the sort order of the cursor query.\n   *\n   * @param sort - The key or keys set for the sort.\n   * @param direction - The direction of the sorting (1 or -1).\n   */\n  sort(sort: Sort | string, direction?: SortDirection): this {\n    assertUninitialized(this);\n    if (this[kBuiltOptions].tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support sorting');\n    }\n\n    this[kBuiltOptions].sort = formatSort(sort, direction);\n    return this;\n  }\n\n  /**\n   * Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher)\n   *\n   * @remarks\n   * {@link https://docs.mongodb.com/manual/reference/command/find/#find-cmd-allowdiskuse | find command allowDiskUse documentation}\n   */\n  allowDiskUse(): this {\n    assertUninitialized(this);\n    if (!this[kBuiltOptions].sort) {\n      throw new MongoInvalidArgumentError('Option \"allowDiskUse\" requires a sort specification');\n    }\n    this[kBuiltOptions].allowDiskUse = true;\n    return this;\n  }\n\n  /**\n   * Set the collation options for the cursor.\n   *\n   * @param value - The cursor collation options (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n   */\n  collation(value: CollationOptions): this {\n    assertUninitialized(this);\n    this[kBuiltOptions].collation = value;\n    return this;\n  }\n\n  /**\n   * Set the limit for the cursor.\n   *\n   * @param value - The limit for the cursor query.\n   */\n  limit(value: number): this {\n    assertUninitialized(this);\n    if (this[kBuiltOptions].tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support limit');\n    }\n\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Operation \"limit\" requires an integer');\n    }\n\n    this[kBuiltOptions].limit = value;\n    return this;\n  }\n\n  /**\n   * Set the skip for the cursor.\n   *\n   * @param value - The skip for the cursor query.\n   */\n  skip(value: number): this {\n    assertUninitialized(this);\n    if (this[kBuiltOptions].tailable) {\n      throw new MongoTailableCursorError('Tailable cursor does not support skip');\n    }\n\n    if (typeof value !== 'number') {\n      throw new MongoInvalidArgumentError('Operation \"skip\" requires an integer');\n    }\n\n    this[kBuiltOptions].skip = value;\n    return this;\n  }\n}\n", "import { MongoTopologyClosedError } from '../error';\nimport { Callback, getTopology } from '../utils';\nimport type { Document } from '../bson';\nimport type { Db } from '../db';\nimport type { ClientSession } from '../sessions';\nimport type { ReadPreference } from '../read_preference';\nimport type { Collection } from '../collection';\n\n/** @public */\nexport interface IndexInformationOptions {\n  full?: boolean;\n  readPreference?: ReadPreference;\n  session?: ClientSession;\n}\n/**\n * Retrieves this collections index info.\n *\n * @param db - The Db instance on which to retrieve the index info.\n * @param name - The name of the collection.\n */\nexport function indexInformation(db: Db, name: string, callback: Callback): void;\nexport function indexInformation(\n  db: Db,\n  name: string,\n  options: IndexInformationOptions,\n  callback?: Callback\n): void;\nexport function indexInformation(\n  db: Db,\n  name: string,\n  _optionsOrCallback: IndexInformationOptions | Callback,\n  _callback?: Callback\n): void {\n  let options = _optionsOrCallback as IndexInformationOptions;\n  let callback = _callback as Callback;\n  if ('function' === typeof _optionsOrCallback) {\n    callback = _optionsOrCallback as Callback;\n    options = {};\n  }\n  // If we specified full information\n  const full = options.full == null ? false : options.full;\n\n  // Did the user destroy the topology\n  if (getTopology(db).isDestroyed()) return callback(new MongoTopologyClosedError());\n  // Process all the results from the index command and collection\n  function processResults(indexes: any) {\n    // Contains all the information\n    const info: any = {};\n    // Process all the indexes\n    for (let i = 0; i < indexes.length; i++) {\n      const index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for (const name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  }\n\n  // Get the list of indexes of the specified collection\n  db.collection(name)\n    .listIndexes(options)\n    .toArray((err, indexes) => {\n      if (err) return callback(err);\n      if (!Array.isArray(indexes)) return callback(undefined, []);\n      if (full) return callback(undefined, indexes);\n      callback(undefined, processResults(indexes));\n    });\n}\n\nexport function prepareDocs(\n  coll: Collection,\n  docs: Document[],\n  options: { forceServerObjectId?: boolean }\n): Document[] {\n  const forceServerObjectId =\n    typeof options.forceServerObjectId === 'boolean'\n      ? options.forceServerObjectId\n      : coll.s.db.options?.forceServerObjectId;\n\n  // no need to modify the docs if server sets the ObjectId\n  if (forceServerObjectId === true) {\n    return docs;\n  }\n\n  return docs.map(doc => {\n    if (doc._id == null) {\n      doc._id = coll.s.pkFactory.createPk();\n    }\n\n    return doc;\n  });\n}\n", "import { indexInformation, IndexInformationOptions } from './common_functions';\nimport { AbstractOperation, Aspect, defineAspects } from './operation';\nimport { MONGODB_ERROR_CODES, MongoServerError, MongoCompatibilityError } from '../error';\nimport {\n  maxWireVersion,\n  parseIndexOptions,\n  MongoDBNamespace,\n  Callback,\n  getTopology\n} from '../utils';\nimport {\n  CommandOperation,\n  CommandOperationOptions,\n  OperationParent,\n  CollationOptions\n} from './command';\nimport { ReadPreference } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Db } from '../db';\nimport { AbstractCursor } from '../cursor/abstract_cursor';\nimport type { ClientSession } from '../sessions';\nimport { executeOperation, ExecutionResult } from './execute_operation';\nimport type { OneOrMore } from '../mongo_types';\n\nconst LIST_INDEXES_WIRE_VERSION = 3;\nconst VALID_INDEX_OPTIONS = new Set([\n  'background',\n  'unique',\n  'name',\n  'partialFilterExpression',\n  'sparse',\n  'hidden',\n  'expireAfterSeconds',\n  'storageEngine',\n  'collation',\n  'version',\n\n  // text indexes\n  'weights',\n  'default_language',\n  'language_override',\n  'textIndexVersion',\n\n  // 2d-sphere indexes\n  '2dsphereIndexVersion',\n\n  // 2d indexes\n  'bits',\n  'min',\n  'max',\n\n  // geoHaystack Indexes\n  'bucketSize',\n\n  // wildcard indexes\n  'wildcardProjection'\n]);\n\n/** @public */\nexport type IndexDirection = -1 | 1 | '2d' | '2dsphere' | 'text' | 'geoHaystack' | number;\n\n/** @public */\nexport type IndexSpecification = OneOrMore<\n  | string\n  | [string, IndexDirection]\n  | { [key: string]: IndexDirection }\n  | [string, IndexDirection][]\n  | { [key: string]: IndexDirection }[]\n>;\n\n/** @public */\nexport interface IndexDescription\n  extends Pick<\n    CreateIndexesOptions,\n    | 'background'\n    | 'unique'\n    | 'partialFilterExpression'\n    | 'sparse'\n    | 'hidden'\n    | 'expireAfterSeconds'\n    | 'storageEngine'\n    | 'version'\n    | 'weights'\n    | 'default_language'\n    | 'language_override'\n    | 'textIndexVersion'\n    | '2dsphereIndexVersion'\n    | 'bits'\n    | 'min'\n    | 'max'\n    | 'bucketSize'\n    | 'wildcardProjection'\n  > {\n  collation?: CollationOptions;\n  name?: string;\n  key: Document;\n}\n\n/** @public */\nexport interface CreateIndexesOptions extends CommandOperationOptions {\n  /** Creates the index in the background, yielding whenever possible. */\n  background?: boolean;\n  /** Creates an unique index. */\n  unique?: boolean;\n  /** Override the autogenerated index name (useful if the resulting name is larger than 128 bytes) */\n  name?: string;\n  /** Creates a partial index based on the given filter object (MongoDB 3.2 or higher) */\n  partialFilterExpression?: Document;\n  /** Creates a sparse index. */\n  sparse?: boolean;\n  /** Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher) */\n  expireAfterSeconds?: number;\n  /** Allows users to configure the storage engine on a per-index basis when creating an index. (MongoDB 3.0 or higher) */\n  storageEngine?: Document;\n  /** (MongoDB 4.4. or higher) Specifies how many data-bearing members of a replica set, including the primary, must complete the index builds successfully before the primary marks the indexes as ready. This option accepts the same values for the \"w\" field in a write concern plus \"votingMembers\", which indicates all voting data-bearing nodes. */\n  commitQuorum?: number | string;\n  /** Specifies the index version number, either 0 or 1. */\n  version?: number;\n  // text indexes\n  weights?: Document;\n  default_language?: string;\n  language_override?: string;\n  textIndexVersion?: number;\n  // 2d-sphere indexes\n  '2dsphereIndexVersion'?: number;\n  // 2d indexes\n  bits?: number;\n  /** For geospatial indexes set the lower bound for the co-ordinates. */\n  min?: number;\n  /** For geospatial indexes set the high bound for the co-ordinates. */\n  max?: number;\n  // geoHaystack Indexes\n  bucketSize?: number;\n  // wildcard indexes\n  wildcardProjection?: Document;\n  /** Specifies that the index should exist on the target collection but should not be used by the query planner when executing operations. (MongoDB 4.4 or higher) */\n  hidden?: boolean;\n}\n\nfunction makeIndexSpec(indexSpec: IndexSpecification, options: any): IndexDescription {\n  const indexParameters = parseIndexOptions(indexSpec);\n\n  // Generate the index name\n  const name = typeof options.name === 'string' ? options.name : indexParameters.name;\n\n  // Set up the index\n  const finalIndexSpec: Document = { name, key: indexParameters.fieldHash };\n\n  // merge valid index options into the index spec\n  for (const optionName in options) {\n    if (VALID_INDEX_OPTIONS.has(optionName)) {\n      finalIndexSpec[optionName] = options[optionName];\n    }\n  }\n\n  return finalIndexSpec as IndexDescription;\n}\n\n/** @internal */\nexport class IndexesOperation extends AbstractOperation<Document[]> {\n  options: IndexInformationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: IndexInformationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document[]>): void {\n    const coll = this.collection;\n    const options = this.options;\n\n    indexInformation(\n      coll.s.db,\n      coll.collectionName,\n      { full: true, ...options, readPreference: this.readPreference, session },\n      callback\n    );\n  }\n}\n\n/** @internal */\nexport class CreateIndexesOperation<\n  T extends string | string[] = string[]\n> extends CommandOperation<T> {\n  options: CreateIndexesOptions;\n  collectionName: string;\n  indexes: IndexDescription[];\n\n  constructor(\n    parent: OperationParent,\n    collectionName: string,\n    indexes: IndexDescription[],\n    options?: CreateIndexesOptions\n  ) {\n    super(parent, options);\n\n    this.options = options ?? {};\n    this.collectionName = collectionName;\n\n    this.indexes = indexes;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<T>): void {\n    const options = this.options;\n    const indexes = this.indexes;\n\n    const serverWireVersion = maxWireVersion(server);\n\n    // Ensure we generate the correct name if the parameter is not set\n    for (let i = 0; i < indexes.length; i++) {\n      // Did the user pass in a collation, check if our write server supports it\n      if (indexes[i].collation && serverWireVersion < 5) {\n        callback(\n          new MongoCompatibilityError(\n            `Server ${server.name}, which reports wire version ${serverWireVersion}, ` +\n              'does not support collation'\n          )\n        );\n        return;\n      }\n\n      if (indexes[i].name == null) {\n        const keys = [];\n\n        for (const name in indexes[i].key) {\n          keys.push(`${name}_${indexes[i].key[name]}`);\n        }\n\n        // Set the name\n        indexes[i].name = keys.join('_');\n      }\n    }\n\n    const cmd: Document = { createIndexes: this.collectionName, indexes };\n\n    if (options.commitQuorum != null) {\n      if (serverWireVersion < 9) {\n        callback(\n          new MongoCompatibilityError(\n            'Option `commitQuorum` for `createIndexes` not supported on servers < 4.4'\n          )\n        );\n        return;\n      }\n      cmd.commitQuorum = options.commitQuorum;\n    }\n\n    // collation is set on each index, it should not be defined at the root\n    this.options.collation = undefined;\n\n    super.executeCommand(server, session, cmd, err => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      const indexNames = indexes.map(index => index.name || '');\n      callback(undefined, indexNames as T);\n    });\n  }\n}\n\n/** @internal */\nexport class CreateIndexOperation extends CreateIndexesOperation<string> {\n  constructor(\n    parent: OperationParent,\n    collectionName: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ) {\n    // createIndex can be called with a variety of styles:\n    //   coll.createIndex('a');\n    //   coll.createIndex({ a: 1 });\n    //   coll.createIndex([['a', 1]]);\n    // createIndexes is always called with an array of index spec objects\n\n    super(parent, collectionName, [makeIndexSpec(indexSpec, options)], options);\n  }\n  execute(server: Server, session: ClientSession, callback: Callback<string>): void {\n    super.execute(server, session, (err, indexNames) => {\n      if (err || !indexNames) return callback(err);\n      return callback(undefined, indexNames[0]);\n    });\n  }\n}\n\n/** @internal */\nexport class EnsureIndexOperation extends CreateIndexOperation {\n  db: Db;\n  collectionName: string;\n\n  constructor(\n    db: Db,\n    collectionName: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ) {\n    super(db, collectionName, indexSpec, options);\n\n    this.readPreference = ReadPreference.primary;\n    this.db = db;\n    this.collectionName = collectionName;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback): void {\n    const indexName = this.indexes[0].name;\n    const cursor = this.db.collection(this.collectionName).listIndexes({ session });\n    cursor.toArray((err, indexes) => {\n      /// ignore \"NamespaceNotFound\" errors\n      if (err && (err as MongoServerError).code !== MONGODB_ERROR_CODES.NamespaceNotFound) {\n        return callback(err);\n      }\n\n      if (indexes) {\n        indexes = Array.isArray(indexes) ? indexes : [indexes];\n        if (indexes.some(index => index.name === indexName)) {\n          callback(undefined, indexName);\n          return;\n        }\n      }\n\n      super.execute(server, session, callback);\n    });\n  }\n}\n\n/** @public */\nexport type DropIndexesOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropIndexOperation extends CommandOperation<Document> {\n  options: DropIndexesOptions;\n  collection: Collection;\n  indexName: string;\n\n  constructor(collection: Collection, indexName: string, options?: DropIndexesOptions) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collection = collection;\n    this.indexName = indexName;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const cmd = { dropIndexes: this.collection.collectionName, index: this.indexName };\n    super.executeCommand(server, session, cmd, callback);\n  }\n}\n\n/** @internal */\nexport class DropIndexesOperation extends DropIndexOperation {\n  constructor(collection: Collection, options: DropIndexesOptions) {\n    super(collection, '*', options);\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback): void {\n    super.execute(server, session, err => {\n      if (err) return callback(err, false);\n      callback(undefined, true);\n    });\n  }\n}\n\n/** @public */\nexport interface ListIndexesOptions extends CommandOperationOptions {\n  /** The batchSize for the returned command cursor or if pre 2.8 the systems batch collection */\n  batchSize?: number;\n}\n\n/** @internal */\nexport class ListIndexesOperation extends CommandOperation<Document> {\n  options: ListIndexesOptions;\n  collectionNamespace: MongoDBNamespace;\n\n  constructor(collection: Collection, options?: ListIndexesOptions) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collectionNamespace = collection.s.namespace;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const serverWireVersion = maxWireVersion(server);\n    if (serverWireVersion < LIST_INDEXES_WIRE_VERSION) {\n      const systemIndexesNS = this.collectionNamespace.withCollection('system.indexes');\n      const collectionNS = this.collectionNamespace.toString();\n\n      server.query(\n        systemIndexesNS,\n        { query: { ns: collectionNS } },\n        { ...this.options, readPreference: this.readPreference },\n        callback\n      );\n      return;\n    }\n\n    const cursor = this.options.batchSize ? { batchSize: this.options.batchSize } : {};\n    super.executeCommand(\n      server,\n      session,\n      { listIndexes: this.collectionNamespace.collection, cursor },\n      callback\n    );\n  }\n}\n\n/** @public */\nexport class ListIndexesCursor extends AbstractCursor {\n  parent: Collection;\n  options?: ListIndexesOptions;\n\n  constructor(collection: Collection, options?: ListIndexesOptions) {\n    super(getTopology(collection), collection.s.namespace, options);\n    this.parent = collection;\n    this.options = options;\n  }\n\n  clone(): ListIndexesCursor {\n    return new ListIndexesCursor(this.parent, {\n      ...this.options,\n      ...this.cursorOptions\n    });\n  }\n\n  /** @internal */\n  _initialize(session: ClientSession | undefined, callback: Callback<ExecutionResult>): void {\n    const operation = new ListIndexesOperation(this.parent, {\n      ...this.cursorOptions,\n      ...this.options,\n      session\n    });\n\n    executeOperation(getTopology(this.parent), operation, (err, response) => {\n      if (err || response == null) return callback(err);\n\n      // TODO: NODE-2882\n      callback(undefined, { server: operation.server, session, response });\n    });\n  }\n}\n\n/** @internal */\nexport class IndexExistsOperation extends AbstractOperation<boolean> {\n  options: IndexInformationOptions;\n  collection: Collection;\n  indexes: string | string[];\n\n  constructor(\n    collection: Collection,\n    indexes: string | string[],\n    options: IndexInformationOptions\n  ) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n    this.indexes = indexes;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<boolean>): void {\n    const coll = this.collection;\n    const indexes = this.indexes;\n\n    indexInformation(\n      coll.s.db,\n      coll.collectionName,\n      { ...this.options, readPreference: this.readPreference, session },\n      (err, indexInformation) => {\n        // If we have an error return\n        if (err != null) return callback(err);\n        // Let's check for the index names\n        if (!Array.isArray(indexes)) return callback(undefined, indexInformation[indexes] != null);\n        // Check in list of indexes\n        for (let i = 0; i < indexes.length; i++) {\n          if (indexInformation[indexes[i]] == null) {\n            return callback(undefined, false);\n          }\n        }\n\n        // All keys found return true\n        return callback(undefined, true);\n      }\n    );\n  }\n}\n\n/** @internal */\nexport class IndexInformationOperation extends AbstractOperation<Document> {\n  options: IndexInformationOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options?: IndexInformationOptions) {\n    super(options);\n    this.options = options ?? {};\n    this.db = db;\n    this.name = name;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const db = this.db;\n    const name = this.name;\n\n    indexInformation(\n      db,\n      name,\n      { ...this.options, readPreference: this.readPreference, session },\n      callback\n    );\n  }\n}\n\ndefineAspects(ListIndexesOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\ndefineAspects(CreateIndexesOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(CreateIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(EnsureIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropIndexesOperation, [Aspect.WRITE_OPERATION]);\n", "export const SYSTEM_NAMESPACE_COLLECTION = 'system.namespaces';\nexport const SYSTEM_INDEX_COLLECTION = 'system.indexes';\nexport const SYSTEM_PROFILE_COLLECTION = 'system.profile';\nexport const SYSTEM_USER_COLLECTION = 'system.users';\nexport const SYSTEM_COMMAND_COLLECTION = '$cmd';\nexport const SYSTEM_JS_COLLECTION = 'system.js';\n", "import { CommandOperation, CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\nimport { maxWireVersion, Callback, getTopology, MongoDBNamespace } from '../utils';\nimport * as CONSTANTS from '../constants';\nimport type { Binary, Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Db } from '../db';\nimport { AbstractCursor } from '../cursor/abstract_cursor';\nimport type { ClientSession } from '../sessions';\nimport { executeOperation, ExecutionResult } from './execute_operation';\n\nconst LIST_COLLECTIONS_WIRE_VERSION = 3;\n\n/** @public */\nexport interface ListCollectionsOptions extends CommandOperationOptions {\n  /** Since 4.0: If true, will only return the collection name in the response, and will omit additional info */\n  nameOnly?: boolean;\n  /** The batchSize for the returned command cursor or if pre 2.8 the systems batch collection */\n  batchSize?: number;\n}\n\n/** @internal */\nexport class ListCollectionsOperation extends CommandOperation<string[]> {\n  options: ListCollectionsOptions;\n  db: Db;\n  filter: Document;\n  nameOnly: boolean;\n  batchSize?: number;\n\n  constructor(db: Db, filter: Document, options?: ListCollectionsOptions) {\n    super(db, options);\n\n    this.options = options ?? {};\n    this.db = db;\n    this.filter = filter;\n    this.nameOnly = !!this.options.nameOnly;\n\n    if (typeof this.options.batchSize === 'number') {\n      this.batchSize = this.options.batchSize;\n    }\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<string[]>): void {\n    if (maxWireVersion(server) < LIST_COLLECTIONS_WIRE_VERSION) {\n      let filter = this.filter;\n      const databaseName = this.db.s.namespace.db;\n\n      // If we have legacy mode and have not provided a full db name filter it\n      if (typeof filter.name === 'string' && !new RegExp(`^${databaseName}\\\\.`).test(filter.name)) {\n        filter = Object.assign({}, filter);\n        filter.name = this.db.s.namespace.withCollection(filter.name).toString();\n      }\n\n      // No filter, filter by current database\n      if (filter == null) {\n        filter = { name: `/${databaseName}/` };\n      }\n\n      // Rewrite the filter to use $and to filter out indexes\n      if (filter.name) {\n        filter = { $and: [{ name: filter.name }, { name: /^((?!\\$).)*$/ }] };\n      } else {\n        filter = { name: /^((?!\\$).)*$/ };\n      }\n\n      const documentTransform = (doc: Document) => {\n        const matching = `${databaseName}.`;\n        const index = doc.name.indexOf(matching);\n        // Remove database name if available\n        if (doc.name && index === 0) {\n          doc.name = doc.name.substr(index + matching.length);\n        }\n\n        return doc;\n      };\n\n      server.query(\n        new MongoDBNamespace(databaseName, CONSTANTS.SYSTEM_NAMESPACE_COLLECTION),\n        { query: filter },\n        { batchSize: this.batchSize || 1000, readPreference: this.readPreference },\n        (err, result) => {\n          if (result && result.documents && Array.isArray(result.documents)) {\n            result.documents = result.documents.map(documentTransform);\n          }\n\n          callback(err, result);\n        }\n      );\n\n      return;\n    }\n\n    const command = {\n      listCollections: 1,\n      filter: this.filter,\n      cursor: this.batchSize ? { batchSize: this.batchSize } : {},\n      nameOnly: this.nameOnly\n    };\n\n    return super.executeCommand(server, session, command, callback);\n  }\n}\n\n/** @public */\nexport interface CollectionInfo extends Document {\n  name: string;\n  type?: string;\n  options?: Document;\n  info?: {\n    readOnly?: false;\n    uuid?: Binary;\n  };\n  idIndex?: Document;\n}\n\n/** @public */\nexport class ListCollectionsCursor<\n  T extends Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo =\n    | Pick<CollectionInfo, 'name' | 'type'>\n    | CollectionInfo\n> extends AbstractCursor<T> {\n  parent: Db;\n  filter: Document;\n  options?: ListCollectionsOptions;\n\n  constructor(db: Db, filter: Document, options?: ListCollectionsOptions) {\n    super(getTopology(db), db.s.namespace, options);\n    this.parent = db;\n    this.filter = filter;\n    this.options = options;\n  }\n\n  clone(): ListCollectionsCursor<T> {\n    return new ListCollectionsCursor(this.parent, this.filter, {\n      ...this.options,\n      ...this.cursorOptions\n    });\n  }\n\n  /** @internal */\n  _initialize(session: ClientSession | undefined, callback: Callback<ExecutionResult>): void {\n    const operation = new ListCollectionsOperation(this.parent, this.filter, {\n      ...this.cursorOptions,\n      ...this.options,\n      session\n    });\n\n    executeOperation(getTopology(this.parent), operation, (err, response) => {\n      if (err || response == null) return callback(err);\n\n      // TODO: NODE-2882\n      callback(undefined, { server: operation.server, session, response });\n    });\n  }\n}\n\ndefineAspects(ListCollectionsOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import * as crypto from 'crypto';\nimport { Aspect, defineAspects } from './operation';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport { MongoInvalidArgumentError } from '../error';\nimport { Callback, emitWarningOnce, getTopology } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Db } from '../db';\nimport type { ClientSession } from '../sessions';\n\n/** @public */\nexport interface RoleSpecification {\n  /**\n   * A role grants privileges to perform sets of actions on defined resources.\n   * A given role applies to the database on which it is defined and can grant access down to a collection level of granularity.\n   */\n  role: string;\n  /** The database this user's role should effect. */\n  db: string;\n}\n\n/** @public */\nexport interface AddUserOptions extends CommandOperationOptions {\n  /** @deprecated Please use db.command('createUser', ...) instead for this option */\n  digestPassword?: null;\n  /** Roles associated with the created user */\n  roles?: string | string[] | RoleSpecification | RoleSpecification[];\n  /** Custom data associated with the user (only Mongodb 2.6 or higher) */\n  customData?: Document;\n}\n\n/** @internal */\nexport class AddUserOperation extends CommandOperation<Document> {\n  options: AddUserOptions;\n  db: Db;\n  username: string;\n  password?: string;\n\n  constructor(db: Db, username: string, password: string | undefined, options?: AddUserOptions) {\n    super(db, options);\n\n    this.db = db;\n    this.username = username;\n    this.password = password;\n    this.options = options ?? {};\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const db = this.db;\n    const username = this.username;\n    const password = this.password;\n    const options = this.options;\n\n    // Error out if digestPassword set\n    if (options.digestPassword != null) {\n      return callback(\n        new MongoInvalidArgumentError(\n          'Option \"digestPassword\" not supported via addUser, use db.command(...) instead'\n        )\n      );\n    }\n\n    let roles;\n    if (!options.roles || (Array.isArray(options.roles) && options.roles.length === 0)) {\n      emitWarningOnce(\n        'Creating a user without roles is deprecated. Defaults to \"root\" if db is \"admin\" or \"dbOwner\" otherwise'\n      );\n      if (db.databaseName.toLowerCase() === 'admin') {\n        roles = ['root'];\n      } else {\n        roles = ['dbOwner'];\n      }\n    } else {\n      roles = Array.isArray(options.roles) ? options.roles : [options.roles];\n    }\n\n    const digestPassword = getTopology(db).lastIsMaster().maxWireVersion >= 7;\n\n    let userPassword = password;\n\n    if (!digestPassword) {\n      // Use node md5 generator\n      const md5 = crypto.createHash('md5');\n      // Generate keys used for authentication\n      md5.update(`${username}:mongo:${password}`);\n      userPassword = md5.digest('hex');\n    }\n\n    // Build the command to execute\n    const command: Document = {\n      createUser: username,\n      customData: options.customData || {},\n      roles: roles,\n      digestPassword\n    };\n\n    // No password\n    if (typeof password === 'string') {\n      command.pwd = userPassword;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\ndefineAspects(AddUserOperation, [Aspect.WRITE_OPERATION]);\n", "import { Aspect, defineAspects } from './operation';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport type { Callback } from '../utils';\nimport type { Server } from '../sdam/server';\nimport type { Db } from '../db';\nimport type { ClientSession } from '../sessions';\n\n/** @public */\nexport type RemoveUserOptions = CommandOperationOptions;\n\n/** @internal */\nexport class RemoveUserOperation extends CommandOperation<boolean> {\n  options: RemoveUserOptions;\n  username: string;\n\n  constructor(db: Db, username: string, options: RemoveUserOptions) {\n    super(db, options);\n    this.options = options;\n    this.username = username;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<boolean>): void {\n    super.executeCommand(server, session, { dropUser: this.username }, err => {\n      callback(err, err ? false : true);\n    });\n  }\n}\n\ndefineAspects(RemoveUserOperation, [Aspect.WRITE_OPERATION]);\n", "import { CommandOperation, CommandOperationOptions } from './command';\nimport type { Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Admin } from '../admin';\nimport type { ClientSession } from '../sessions';\nimport { MongoRuntimeError } from '../error';\n\n/** @public */\nexport interface ValidateCollectionOptions extends CommandOperationOptions {\n  /** Validates a collection in the background, without interrupting read or write traffic (only in MongoDB 4.4+) */\n  background?: boolean;\n}\n\n/** @internal */\nexport class ValidateCollectionOperation extends CommandOperation<Document> {\n  options: ValidateCollectionOptions;\n  collectionName: string;\n  command: Document;\n\n  constructor(admin: Admin, collectionName: string, options: ValidateCollectionOptions) {\n    // Decorate command with extra options\n    const command: Document = { validate: collectionName };\n    const keys = Object.keys(options);\n    for (let i = 0; i < keys.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(options, keys[i]) && keys[i] !== 'session') {\n        command[keys[i]] = (options as Document)[keys[i]];\n      }\n    }\n\n    super(admin.s.db, options);\n    this.options = options;\n    this.command = command;\n    this.collectionName = collectionName;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const collectionName = this.collectionName;\n\n    super.executeCommand(server, session, this.command, (err, doc) => {\n      if (err != null) return callback(err);\n\n      // TODO(NODE-3483): Replace these with MongoUnexpectedServerResponseError\n      if (doc.ok === 0) return callback(new MongoRuntimeError('Error with validate command'));\n      if (doc.result != null && typeof doc.result !== 'string')\n        return callback(new MongoRuntimeError('Error with validation data'));\n      if (doc.result != null && doc.result.match(/exception|corrupt/) != null)\n        return callback(new MongoRuntimeError(`Invalid collection ${collectionName}`));\n      if (doc.valid != null && !doc.valid)\n        return callback(new MongoRuntimeError(`Invalid collection ${collectionName}`));\n\n      return callback(undefined, doc);\n    });\n  }\n}\n", "import { CommandOperation, CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\nimport { MongoDBNamespace, Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Db } from '../db';\nimport type { ClientSession } from '../sessions';\n\n/** @public */\nexport interface ListDatabasesResult {\n  databases: ({ name: string; sizeOnDisk?: number; empty?: boolean } & Document)[];\n  totalSize?: number;\n  totalSizeMb?: number;\n  ok: 1 | 0;\n}\n\n/** @public */\nexport interface ListDatabasesOptions extends CommandOperationOptions {\n  /** A query predicate that determines which databases are listed */\n  filter?: Document;\n  /** A flag to indicate whether the command should return just the database names, or return both database names and size information */\n  nameOnly?: boolean;\n  /** A flag that determines which databases are returned based on the user privileges when access control is enabled */\n  authorizedDatabases?: boolean;\n}\n\n/** @internal */\nexport class ListDatabasesOperation extends CommandOperation<ListDatabasesResult> {\n  options: ListDatabasesOptions;\n\n  constructor(db: Db, options?: ListDatabasesOptions) {\n    super(db, options);\n    this.options = options ?? {};\n    this.ns = new MongoDBNamespace('admin', '$cmd');\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<ListDatabasesResult>): void {\n    const cmd: Document = { listDatabases: 1 };\n    if (this.options.nameOnly) {\n      cmd.nameOnly = Number(cmd.nameOnly);\n    }\n\n    if (this.options.filter) {\n      cmd.filter = this.options.filter;\n    }\n\n    if (typeof this.options.authorizedDatabases === 'boolean') {\n      cmd.authorizedDatabases = this.options.authorizedDatabases;\n    }\n\n    super.executeCommand(server, session, cmd, callback);\n  }\n}\n\ndefineAspects(ListDatabasesOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE]);\n", "import { AddUserOperation, AddUserOptions } from './operations/add_user';\nimport { RemoveUserOperation, RemoveUserOptions } from './operations/remove_user';\nimport {\n  ValidateCollectionOperation,\n  ValidateCollectionOptions\n} from './operations/validate_collection';\nimport {\n  ListDatabasesOperation,\n  ListDatabasesOptions,\n  ListDatabasesResult\n} from './operations/list_databases';\nimport { executeOperation } from './operations/execute_operation';\nimport { RunCommandOperation, RunCommandOptions } from './operations/run_command';\nimport { Callback, getTopology } from './utils';\nimport type { Document } from './bson';\nimport type { CommandOperationOptions } from './operations/command';\nimport type { Db } from './db';\n\n/** @internal */\nexport interface AdminPrivate {\n  db: Db;\n}\n\n/**\n * The **Admin** class is an internal class that allows convenient access to\n * the admin functionality and commands for MongoDB.\n *\n * **ADMIN Cannot directly be instantiated**\n * @public\n *\n * @example\n * ```js\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n *\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Use the admin database for the operation\n *   const adminDb = client.db(dbName).admin();\n *\n *   // List all the available databases\n *   adminDb.listDatabases(function(err, dbs) {\n *     expect(err).to.not.exist;\n *     test.ok(dbs.databases.length > 0);\n *     client.close();\n *   });\n * });\n * ```\n */\nexport class Admin {\n  /** @internal */\n  s: AdminPrivate;\n\n  /**\n   * Create a new Admin instance\n   * @internal\n   */\n  constructor(db: Db) {\n    this.s = { db };\n  }\n\n  /**\n   * Execute a command\n   *\n   * @param command - The command to execute\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  command(command: Document): Promise<Document>;\n  command(command: Document, callback: Callback<Document>): void;\n  command(command: Document, options: RunCommandOptions): Promise<Document>;\n  command(command: Document, options: RunCommandOptions, callback: Callback<Document>): void;\n  command(\n    command: Document,\n    options?: RunCommandOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = Object.assign({ dbName: 'admin' }, options);\n\n    return executeOperation(\n      getTopology(this.s.db),\n      new RunCommandOperation(this.s.db, command, options),\n      callback\n    );\n  }\n\n  /**\n   * Retrieve the server build information\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  buildInfo(): Promise<Document>;\n  buildInfo(callback: Callback<Document>): void;\n  buildInfo(options: CommandOperationOptions): Promise<Document>;\n  buildInfo(options: CommandOperationOptions, callback: Callback<Document>): void;\n  buildInfo(\n    options?: CommandOperationOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n    return this.command({ buildinfo: 1 }, options, callback as Callback<Document>);\n  }\n\n  /**\n   * Retrieve the server build information\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  serverInfo(): Promise<Document>;\n  serverInfo(callback: Callback<Document>): void;\n  serverInfo(options: CommandOperationOptions): Promise<Document>;\n  serverInfo(options: CommandOperationOptions, callback: Callback<Document>): void;\n  serverInfo(\n    options?: CommandOperationOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n    return this.command({ buildinfo: 1 }, options, callback as Callback<Document>);\n  }\n\n  /**\n   * Retrieve this db's server status.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  serverStatus(): Promise<Document>;\n  serverStatus(callback: Callback<Document>): void;\n  serverStatus(options: CommandOperationOptions): Promise<Document>;\n  serverStatus(options: CommandOperationOptions, callback: Callback<Document>): void;\n  serverStatus(\n    options?: CommandOperationOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n    return this.command({ serverStatus: 1 }, options, callback as Callback<Document>);\n  }\n\n  /**\n   * Ping the MongoDB server and retrieve results\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  ping(): Promise<Document>;\n  ping(callback: Callback<Document>): void;\n  ping(options: CommandOperationOptions): Promise<Document>;\n  ping(options: CommandOperationOptions, callback: Callback<Document>): void;\n  ping(\n    options?: CommandOperationOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n    return this.command({ ping: 1 }, options, callback as Callback<Document>);\n  }\n\n  /**\n   * Add a user to the database\n   *\n   * @param username - The username for the new user\n   * @param password - An optional password for the new user\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  addUser(username: string): Promise<Document>;\n  addUser(username: string, callback: Callback<Document>): void;\n  addUser(username: string, password: string): Promise<Document>;\n  addUser(username: string, password: string, callback: Callback<Document>): void;\n  addUser(username: string, options: AddUserOptions): Promise<Document>;\n  addUser(username: string, options: AddUserOptions, callback: Callback<Document>): void;\n  addUser(username: string, password: string, options: AddUserOptions): Promise<Document>;\n  addUser(\n    username: string,\n    password: string,\n    options: AddUserOptions,\n    callback: Callback<Document>\n  ): void;\n  addUser(\n    username: string,\n    password?: string | AddUserOptions | Callback<Document>,\n    options?: AddUserOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof password === 'function') {\n      (callback = password), (password = undefined), (options = {});\n    } else if (typeof password !== 'string') {\n      if (typeof options === 'function') {\n        (callback = options), (options = password), (password = undefined);\n      } else {\n        (options = password), (callback = undefined), (password = undefined);\n      }\n    } else {\n      if (typeof options === 'function') (callback = options), (options = {});\n    }\n\n    options = Object.assign({ dbName: 'admin' }, options);\n\n    return executeOperation(\n      getTopology(this.s.db),\n      new AddUserOperation(this.s.db, username, password, options),\n      callback\n    );\n  }\n\n  /**\n   * Remove a user from a database\n   *\n   * @param username - The username to remove\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  removeUser(username: string): Promise<boolean>;\n  removeUser(username: string, callback: Callback<boolean>): void;\n  removeUser(username: string, options: RemoveUserOptions): Promise<boolean>;\n  removeUser(username: string, options: RemoveUserOptions, callback: Callback<boolean>): void;\n  removeUser(\n    username: string,\n    options?: RemoveUserOptions | Callback<boolean>,\n    callback?: Callback<boolean>\n  ): Promise<boolean> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = Object.assign({ dbName: 'admin' }, options);\n\n    return executeOperation(\n      getTopology(this.s.db),\n      new RemoveUserOperation(this.s.db, username, options),\n      callback\n    );\n  }\n\n  /**\n   * Validate an existing collection\n   *\n   * @param collectionName - The name of the collection to validate.\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  validateCollection(collectionName: string): Promise<Document>;\n  validateCollection(collectionName: string, callback: Callback<Document>): void;\n  validateCollection(collectionName: string, options: ValidateCollectionOptions): Promise<Document>;\n  validateCollection(\n    collectionName: string,\n    options: ValidateCollectionOptions,\n    callback: Callback<Document>\n  ): void;\n  validateCollection(\n    collectionName: string,\n    options?: ValidateCollectionOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n\n    return executeOperation(\n      getTopology(this.s.db),\n      new ValidateCollectionOperation(this, collectionName, options),\n      callback\n    );\n  }\n\n  /**\n   * List the available databases\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  listDatabases(): Promise<ListDatabasesResult>;\n  listDatabases(callback: Callback<ListDatabasesResult>): void;\n  listDatabases(options: ListDatabasesOptions): Promise<ListDatabasesResult>;\n  listDatabases(options: ListDatabasesOptions, callback: Callback<ListDatabasesResult>): void;\n  listDatabases(\n    options?: ListDatabasesOptions | Callback<ListDatabasesResult>,\n    callback?: Callback<ListDatabasesResult>\n  ): Promise<ListDatabasesResult> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n\n    return executeOperation(\n      getTopology(this.s.db),\n      new ListDatabasesOperation(this.s.db, options),\n      callback\n    );\n  }\n\n  /**\n   * Get ReplicaSet status\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  replSetGetStatus(): Promise<Document>;\n  replSetGetStatus(callback: Callback<Document>): void;\n  replSetGetStatus(options: CommandOperationOptions): Promise<Document>;\n  replSetGetStatus(options: CommandOperationOptions, callback: Callback<Document>): void;\n  replSetGetStatus(\n    options?: CommandOperationOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n    return this.command({ replSetGetStatus: 1 }, options, callback as Callback<Document>);\n  }\n}\n", "import { Aspect, defineAspects, AbstractOperation } from './operation';\nimport type { Callback } from '../utils';\nimport type { Collection } from '../collection';\nimport type {\n  BulkOperationBase,\n  BulkWriteResult,\n  BulkWriteOptions,\n  AnyBulkWriteOperation\n} from '../bulk/common';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\n\n/** @internal */\nexport class BulkWriteOperation extends AbstractOperation<BulkWriteResult> {\n  options: BulkWriteOptions;\n  collection: Collection;\n  operations: AnyBulkWriteOperation[];\n\n  constructor(\n    collection: Collection,\n    operations: AnyBulkWriteOperation[],\n    options: BulkWriteOptions\n  ) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n    this.operations = operations;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<BulkWriteResult>): void {\n    const coll = this.collection;\n    const operations = this.operations;\n    const options = { ...this.options, ...this.bsonOptions, readPreference: this.readPreference };\n\n    // Create the bulk operation\n    const bulk: BulkOperationBase =\n      options.ordered === false\n        ? coll.initializeUnorderedBulkOp(options)\n        : coll.initializeOrderedBulkOp(options);\n\n    // for each op go through and add to the bulk\n    try {\n      for (let i = 0; i < operations.length; i++) {\n        bulk.raw(operations[i]);\n      }\n    } catch (err) {\n      return callback(err);\n    }\n\n    // Execute the bulk\n    bulk.execute({ ...options, session }, (err, r) => {\n      // We have connection level error\n      if (!r && err) {\n        return callback(err);\n      }\n\n      // Return the results\n      callback(undefined, r);\n    });\n  }\n}\n\ndefineAspects(BulkWriteOperation, [Aspect.WRITE_OPERATION]);\n", "import { MongoServerError, MongoInvalidArgumentError } from '../error';\nimport { defineAspects, Aspect, AbstractOperation } from './operation';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport { prepareDocs } from './common_functions';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport type { Document } from '../bson';\nimport type { BulkWriteOptions } from '../bulk/common';\nimport { WriteConcern } from '../write_concern';\nimport type { ClientSession } from '../sessions';\nimport { BulkWriteOperation } from './bulk_write';\nimport type { InferIdType } from '../mongo_types';\n\n/** @internal */\nexport class InsertOperation extends CommandOperation<Document> {\n  options: BulkWriteOptions;\n  documents: Document[];\n\n  constructor(ns: MongoDBNamespace, documents: Document[], options: BulkWriteOptions) {\n    super(undefined, options);\n    this.options = { ...options, checkKeys: options.checkKeys ?? false };\n    this.ns = ns;\n    this.documents = documents;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      insert: this.ns.collection,\n      documents: this.documents,\n      ordered\n    };\n\n    if (typeof options.bypassDocumentValidation === 'boolean') {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (options.comment != null) {\n      command.comment = options.comment;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\n/** @public */\nexport interface InsertOneOptions extends CommandOperationOptions {\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n  /** Force server to assign _id values instead of driver. */\n  forceServerObjectId?: boolean;\n}\n\n/** @public */\nexport interface InsertOneResult<TSchema = Document> {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined */\n  acknowledged: boolean;\n  /** The identifier that was inserted. If the server generated the identifier, this value will be null as the driver does not have access to that data */\n  insertedId: InferIdType<TSchema>;\n}\n\nexport class InsertOneOperation extends InsertOperation {\n  constructor(collection: Collection, doc: Document, options: InsertOneOptions) {\n    super(collection.s.namespace, prepareDocs(collection, [doc], options), options);\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<InsertOneResult>): void {\n    super.execute(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) {\n        // This should be a WriteError but we can't change it now because of error hierarchy\n        return callback(new MongoServerError(res.writeErrors[0]));\n      }\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        insertedId: this.documents[0]._id\n      });\n    });\n  }\n}\n\n/** @public */\nexport interface InsertManyResult<TSchema = Document> {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined */\n  acknowledged: boolean;\n  /** The number of inserted documents for this operations */\n  insertedCount: number;\n  /** Map of the index of the inserted document to the id of the inserted document */\n  insertedIds: { [key: number]: InferIdType<TSchema> };\n}\n\n/** @internal */\nexport class InsertManyOperation extends AbstractOperation<InsertManyResult> {\n  options: BulkWriteOptions;\n  collection: Collection;\n  docs: Document[];\n\n  constructor(collection: Collection, docs: Document[], options: BulkWriteOptions) {\n    super(options);\n\n    if (!Array.isArray(docs)) {\n      throw new MongoInvalidArgumentError('Argument \"docs\" must be an array of documents');\n    }\n\n    this.options = options;\n    this.collection = collection;\n    this.docs = docs;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<InsertManyResult>): void {\n    const coll = this.collection;\n    const options = { ...this.options, ...this.bsonOptions, readPreference: this.readPreference };\n    const writeConcern = WriteConcern.fromOptions(options);\n    const bulkWriteOperation = new BulkWriteOperation(\n      coll,\n      prepareDocs(coll, this.docs, options).map(document => ({ insertOne: { document } })),\n      options\n    );\n\n    bulkWriteOperation.execute(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      callback(undefined, {\n        acknowledged: writeConcern?.w !== 0 ?? true,\n        insertedCount: res.insertedCount,\n        insertedIds: res.insertedIds\n      });\n    });\n  }\n}\n\ndefineAspects(InsertOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(InsertOneOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(InsertManyOperation, [Aspect.WRITE_OPERATION]);\n", "import { defineAspects, Aspect, Hint } from './operation';\nimport {\n  hasAtomicOperators,\n  MongoDBNamespace,\n  Callback,\n  collationNotSupported,\n  maxWireVersion\n} from '../utils';\nimport { CommandOperation, CommandOperationOptions, CollationOptions } from './command';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport type { ObjectId, Document } from '../bson';\nimport type { ClientSession } from '../sessions';\nimport { MongoServerError, MongoInvalidArgumentError, MongoCompatibilityError } from '../error';\n\n/** @public */\nexport interface UpdateOptions extends CommandOperationOptions {\n  /** A set of filters specifying to which array elements an update should apply */\n  arrayFilters?: Document[];\n  /** If true, allows the write to opt-out of document level validation */\n  bypassDocumentValidation?: boolean;\n  /** Specifies a collation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: string | Document;\n  /** When true, creates a new document if no document matches the query */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/** @public */\nexport interface UpdateResult {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined */\n  acknowledged: boolean;\n  /** The number of documents that matched the filter */\n  matchedCount: number;\n  /** The number of documents that were modified */\n  modifiedCount: number;\n  /** The number of documents that were upserted */\n  upsertedCount: number;\n  /** The identifier of the inserted document if an upsert took place */\n  upsertedId: ObjectId;\n}\n\n/** @public */\nexport interface UpdateStatement {\n  /** The query that matches documents to update. */\n  q: Document;\n  /** The modifications to apply. */\n  u: Document | Document[];\n  /**  If true, perform an insert if no documents match the query. */\n  upsert?: boolean;\n  /** If true, updates all documents that meet the query criteria. */\n  multi?: boolean;\n  /** Specifies the collation to use for the operation. */\n  collation?: CollationOptions;\n  /** An array of filter documents that determines which array elements to modify for an update operation on an array field. */\n  arrayFilters?: Document[];\n  /** A document or string that specifies the index to use to support the query predicate. */\n  hint?: Hint;\n}\n\n/** @internal */\nexport class UpdateOperation extends CommandOperation<Document> {\n  options: UpdateOptions & { ordered?: boolean };\n  statements: UpdateStatement[];\n\n  constructor(\n    ns: MongoDBNamespace,\n    statements: UpdateStatement[],\n    options: UpdateOptions & { ordered?: boolean }\n  ) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n\n    this.statements = statements;\n  }\n\n  get canRetryWrite(): boolean {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n\n    return this.statements.every(op => op.multi == null || op.multi === false);\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      update: this.ns.collection,\n      updates: this.statements,\n      ordered\n    };\n\n    if (typeof options.bypassDocumentValidation === 'boolean') {\n      command.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    const statementWithCollation = this.statements.find(statement => !!statement.collation);\n    if (\n      collationNotSupported(server, options) ||\n      (statementWithCollation && collationNotSupported(server, statementWithCollation))\n    ) {\n      callback(new MongoCompatibilityError(`Server ${server.name} does not support collation`));\n      return;\n    }\n\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n    if (unacknowledgedWrite || maxWireVersion(server) < 5) {\n      if (this.statements.find((o: Document) => o.hint)) {\n        callback(new MongoCompatibilityError(`Servers < 3.4 do not support hint on update`));\n        return;\n      }\n    }\n\n    if (this.explain && maxWireVersion(server) < 3) {\n      callback(\n        new MongoCompatibilityError(`Server ${server.name} does not support explain on update`)\n      );\n      return;\n    }\n\n    if (this.statements.some(statement => !!statement.arrayFilters) && maxWireVersion(server) < 6) {\n      callback(\n        new MongoCompatibilityError('Option \"arrayFilters\" is only supported on MongoDB 3.6+')\n      );\n      return;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\n/** @internal */\nexport class UpdateOneOperation extends UpdateOperation {\n  constructor(collection: Collection, filter: Document, update: Document, options: UpdateOptions) {\n    super(\n      collection.s.namespace,\n      [makeUpdateStatement(filter, update, { ...options, multi: false })],\n      options\n    );\n\n    if (!hasAtomicOperators(update)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n  }\n\n  execute(\n    server: Server,\n    session: ClientSession,\n    callback: Callback<UpdateResult | Document>\n  ): void {\n    super.execute(server, session, (err, res) => {\n      if (err || !res) return callback(err);\n      if (this.explain != null) return callback(undefined, res);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        modifiedCount: res.nModified != null ? res.nModified : res.n,\n        upsertedId:\n          Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n        upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n        matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n      });\n    });\n  }\n}\n\n/** @internal */\nexport class UpdateManyOperation extends UpdateOperation {\n  constructor(collection: Collection, filter: Document, update: Document, options: UpdateOptions) {\n    super(\n      collection.s.namespace,\n      [makeUpdateStatement(filter, update, { ...options, multi: true })],\n      options\n    );\n\n    if (!hasAtomicOperators(update)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n  }\n\n  execute(\n    server: Server,\n    session: ClientSession,\n    callback: Callback<UpdateResult | Document>\n  ): void {\n    super.execute(server, session, (err, res) => {\n      if (err || !res) return callback(err);\n      if (this.explain != null) return callback(undefined, res);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        modifiedCount: res.nModified != null ? res.nModified : res.n,\n        upsertedId:\n          Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n        upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n        matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n      });\n    });\n  }\n}\n\n/** @public */\nexport interface ReplaceOptions extends CommandOperationOptions {\n  /** If true, allows the write to opt-out of document level validation */\n  bypassDocumentValidation?: boolean;\n  /** Specifies a collation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: string | Document;\n  /** When true, creates a new document if no document matches the query */\n  upsert?: boolean;\n}\n\n/** @internal */\nexport class ReplaceOneOperation extends UpdateOperation {\n  constructor(\n    collection: Collection,\n    filter: Document,\n    replacement: Document,\n    options: ReplaceOptions\n  ) {\n    super(\n      collection.s.namespace,\n      [makeUpdateStatement(filter, replacement, { ...options, multi: false })],\n      options\n    );\n\n    if (hasAtomicOperators(replacement)) {\n      throw new MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n    }\n  }\n\n  execute(\n    server: Server,\n    session: ClientSession,\n    callback: Callback<UpdateResult | Document>\n  ): void {\n    super.execute(server, session, (err, res) => {\n      if (err || !res) return callback(err);\n      if (this.explain != null) return callback(undefined, res);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        modifiedCount: res.nModified != null ? res.nModified : res.n,\n        upsertedId:\n          Array.isArray(res.upserted) && res.upserted.length > 0 ? res.upserted[0]._id : null,\n        upsertedCount: Array.isArray(res.upserted) && res.upserted.length ? res.upserted.length : 0,\n        matchedCount: Array.isArray(res.upserted) && res.upserted.length > 0 ? 0 : res.n\n      });\n    });\n  }\n}\n\nexport function makeUpdateStatement(\n  filter: Document,\n  update: Document,\n  options: UpdateOptions & { multi?: boolean }\n): UpdateStatement {\n  if (filter == null || typeof filter !== 'object') {\n    throw new MongoInvalidArgumentError('Selector must be a valid JavaScript object');\n  }\n\n  if (update == null || typeof update !== 'object') {\n    throw new MongoInvalidArgumentError('Document must be a valid JavaScript object');\n  }\n\n  const op: UpdateStatement = { q: filter, u: update };\n  if (typeof options.upsert === 'boolean') {\n    op.upsert = options.upsert;\n  }\n\n  if (options.multi) {\n    op.multi = options.multi;\n  }\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  if (options.arrayFilters) {\n    op.arrayFilters = options.arrayFilters;\n  }\n\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n\n  return op;\n}\n\ndefineAspects(UpdateOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION, Aspect.SKIP_COLLATION]);\ndefineAspects(UpdateOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(UpdateManyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(ReplaceOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.SKIP_COLLATION\n]);\n", "import { defineAspects, Aspect, Hint } from './operation';\nimport { CommandOperation, CommandOperationOptions, CollationOptions } from './command';\nimport { Callback, maxWireVersion, MongoDBNamespace, collationNotSupported } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport type { ClientSession } from '../sessions';\nimport { MongoServerError, MongoCompatibilityError } from '../error';\nimport type { WriteConcernOptions } from '../write_concern';\n\n/** @public */\nexport interface DeleteOptions extends CommandOperationOptions, WriteConcernOptions {\n  /** If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails. */\n  ordered?: boolean;\n  /** A user-provided comment to attach to this command */\n  comment?: string | Document;\n  /** Specifies the collation to use for the operation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: string | Document;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n\n  /** @deprecated use `removeOne` or `removeMany` to implicitly specify the limit */\n  single?: boolean;\n}\n\n/** @public */\nexport interface DeleteResult {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined. */\n  acknowledged: boolean;\n  /** The number of documents that were deleted */\n  deletedCount: number;\n}\n\n/** @public */\nexport interface DeleteStatement {\n  /** The query that matches documents to delete. */\n  q: Document;\n  /** The number of matching documents to delete. */\n  limit: number;\n  /** Specifies the collation to use for the operation. */\n  collation?: CollationOptions;\n  /** A document or string that specifies the index to use to support the query predicate. */\n  hint?: Hint;\n  /** A user-provided comment to attach to this command */\n  comment?: string | Document;\n}\n\n/** @internal */\nexport class DeleteOperation extends CommandOperation<Document> {\n  options: DeleteOptions;\n  statements: DeleteStatement[];\n\n  constructor(ns: MongoDBNamespace, statements: DeleteStatement[], options: DeleteOptions) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n    this.statements = statements;\n  }\n\n  get canRetryWrite(): boolean {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n\n    return this.statements.every(op => (op.limit != null ? op.limit > 0 : true));\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback): void {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      delete: this.ns.collection,\n      deletes: this.statements,\n      ordered\n    };\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    if (options.explain != null && maxWireVersion(server) < 3) {\n      return callback\n        ? callback(\n            new MongoCompatibilityError(`Server ${server.name} does not support explain on delete`)\n          )\n        : undefined;\n    }\n\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n    if (unacknowledgedWrite || maxWireVersion(server) < 5) {\n      if (this.statements.find((o: Document) => o.hint)) {\n        callback(new MongoCompatibilityError(`Servers < 3.4 do not support hint on delete`));\n        return;\n      }\n    }\n\n    const statementWithCollation = this.statements.find(statement => !!statement.collation);\n    if (statementWithCollation && collationNotSupported(server, statementWithCollation)) {\n      callback(new MongoCompatibilityError(`Server ${server.name} does not support collation`));\n      return;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\nexport class DeleteOneOperation extends DeleteOperation {\n  constructor(collection: Collection, filter: Document, options: DeleteOptions) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, { ...options, limit: 1 })], options);\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<DeleteResult>): void {\n    super.execute(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        deletedCount: res.n\n      });\n    });\n  }\n}\n\nexport class DeleteManyOperation extends DeleteOperation {\n  constructor(collection: Collection, filter: Document, options: DeleteOptions) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, options)], options);\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<DeleteResult>): void {\n    super.execute(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        deletedCount: res.n\n      });\n    });\n  }\n}\n\nexport function makeDeleteStatement(\n  filter: Document,\n  options: DeleteOptions & { limit?: number }\n): DeleteStatement {\n  const op: DeleteStatement = {\n    q: filter,\n    limit: typeof options.limit === 'number' ? options.limit : 0\n  };\n\n  if (options.single === true) {\n    op.limit = 1;\n  }\n\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  if (options.comment) {\n    op.comment = options.comment;\n  }\n\n  return op;\n}\n\ndefineAspects(DeleteOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(DeleteOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(DeleteManyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\n", "import { PromiseProvider } from '../promise_provider';\nimport {\n  Long,\n  ObjectId,\n  Document,\n  BSONSerializeOptions,\n  resolveBSONOptions,\n  Timestamp\n} from '../bson';\nimport {\n  MongoWriteConcernError,\n  AnyError,\n  MONGODB_ERROR_CODES,\n  MongoServerError,\n  MongoInvalidArgumentError,\n  MongoBatchReExecutionError\n} from '../error';\nimport {\n  applyRetryableWrites,\n  executeLegacyOperation,\n  hasAtomicOperators,\n  Callback,\n  MongoDBNamespace,\n  getTopology,\n  resolveOptions\n} from '../utils';\nimport { executeOperation } from '../operations/execute_operation';\nimport { InsertOperation } from '../operations/insert';\nimport { UpdateOperation, UpdateStatement, makeUpdateStatement } from '../operations/update';\nimport { DeleteOperation, DeleteStatement, makeDeleteStatement } from '../operations/delete';\nimport { WriteConcern } from '../write_concern';\nimport type { Collection } from '../collection';\nimport type { Topology } from '../sdam/topology';\nimport type { CommandOperationOptions, CollationOptions } from '../operations/command';\nimport type { Hint } from '../operations/operation';\nimport type { Filter, OneOrMore, OptionalId, UpdateFilter } from '../mongo_types';\n\n/** @internal */\nconst kServerError = Symbol('serverError');\n\n/** @public */\nexport const BatchType = Object.freeze({\n  INSERT: 1,\n  UPDATE: 2,\n  DELETE: 3\n} as const);\n\n/** @public */\nexport type BatchType = typeof BatchType[keyof typeof BatchType];\n\n/** @public */\nexport interface InsertOneModel<TSchema extends Document = Document> {\n  /** The document to insert. */\n  document: OptionalId<TSchema>;\n}\n\n/** @public */\nexport interface DeleteOneModel<TSchema extends Document = Document> {\n  /** The filter to limit the deleted documents. */\n  filter: Filter<TSchema>;\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n}\n\n/** @public */\nexport interface DeleteManyModel<TSchema extends Document = Document> {\n  /** The filter to limit the deleted documents. */\n  filter: Filter<TSchema>;\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n}\n\n/** @public */\nexport interface ReplaceOneModel<TSchema extends Document = Document> {\n  /** The filter to limit the replaced document. */\n  filter: Filter<TSchema>;\n  /** The document with which to replace the matched document. */\n  replacement: TSchema;\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query. */\n  upsert?: boolean;\n}\n\n/** @public */\nexport interface UpdateOneModel<TSchema extends Document = Document> {\n  /** The filter to limit the updated documents. */\n  filter: Filter<TSchema>;\n  /** A document or pipeline containing update operators. */\n  update: UpdateFilter<TSchema> | UpdateFilter<TSchema>[];\n  /** A set of filters specifying to which array elements an update should apply. */\n  arrayFilters?: Document[];\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query. */\n  upsert?: boolean;\n}\n\n/** @public */\nexport interface UpdateManyModel<TSchema extends Document = Document> {\n  /** The filter to limit the updated documents. */\n  filter: Filter<TSchema>;\n  /** A document or pipeline containing update operators. */\n  update: UpdateFilter<TSchema> | UpdateFilter<TSchema>[];\n  /** A set of filters specifying to which array elements an update should apply. */\n  arrayFilters?: Document[];\n  /** Specifies a collation. */\n  collation?: CollationOptions;\n  /** The index to use. If specified, then the query system will only consider plans using the hinted index. */\n  hint?: Hint;\n  /** When true, creates a new document if no document matches the query. */\n  upsert?: boolean;\n}\n\n/** @public */\nexport type AnyBulkWriteOperation<TSchema extends Document = Document> =\n  | { insertOne: InsertOneModel<TSchema> }\n  | { replaceOne: ReplaceOneModel<TSchema> }\n  | { updateOne: UpdateOneModel<TSchema> }\n  | { updateMany: UpdateManyModel<TSchema> }\n  | { deleteOne: DeleteOneModel<TSchema> }\n  | { deleteMany: DeleteManyModel<TSchema> };\n\n/** @public */\nexport interface BulkResult {\n  ok: number;\n  writeErrors: WriteError[];\n  writeConcernErrors: WriteConcernError[];\n  insertedIds: Document[];\n  nInserted: number;\n  nUpserted: number;\n  nMatched: number;\n  nModified: number;\n  nRemoved: number;\n  upserted: Document[];\n  opTime?: Document;\n}\n\n/**\n * Keeps the state of a unordered batch so we can rewrite the results\n * correctly after command execution\n *\n * @public\n */\nexport class Batch<T = Document> {\n  originalZeroIndex: number;\n  currentIndex: number;\n  originalIndexes: number[];\n  batchType: BatchType;\n  operations: T[];\n  size: number;\n  sizeBytes: number;\n\n  constructor(batchType: BatchType, originalZeroIndex: number) {\n    this.originalZeroIndex = originalZeroIndex;\n    this.currentIndex = 0;\n    this.originalIndexes = [];\n    this.batchType = batchType;\n    this.operations = [];\n    this.size = 0;\n    this.sizeBytes = 0;\n  }\n}\n\n/**\n * @public\n * The result of a bulk write.\n */\nexport class BulkWriteResult {\n  result: BulkResult;\n\n  /**\n   * Create a new BulkWriteResult instance\n   * @internal\n   */\n  constructor(bulkResult: BulkResult) {\n    this.result = bulkResult;\n  }\n\n  /** Number of documents inserted. */\n  get insertedCount(): number {\n    return this.result.nInserted ?? 0;\n  }\n  /** Number of documents matched for update. */\n  get matchedCount(): number {\n    return this.result.nMatched ?? 0;\n  }\n  /** Number of documents modified. */\n  get modifiedCount(): number {\n    return this.result.nModified ?? 0;\n  }\n  /** Number of documents deleted. */\n  get deletedCount(): number {\n    return this.result.nRemoved ?? 0;\n  }\n  /** Number of documents upserted. */\n  get upsertedCount(): number {\n    return this.result.upserted.length ?? 0;\n  }\n\n  /** Upserted document generated Id's, hash key is the index of the originating operation */\n  get upsertedIds(): { [key: number]: any } {\n    const upserted: { [index: number]: any } = {};\n    for (const doc of this.result.upserted ?? []) {\n      upserted[doc.index] = doc._id;\n    }\n    return upserted;\n  }\n\n  /** Inserted document generated Id's, hash key is the index of the originating operation */\n  get insertedIds(): { [key: number]: any } {\n    const inserted: { [index: number]: any } = {};\n    for (const doc of this.result.insertedIds ?? []) {\n      inserted[doc.index] = doc._id;\n    }\n    return inserted;\n  }\n\n  /** Evaluates to true if the bulk operation correctly executes */\n  get ok(): number {\n    return this.result.ok;\n  }\n\n  /** The number of inserted documents */\n  get nInserted(): number {\n    return this.result.nInserted;\n  }\n\n  /** Number of upserted documents */\n  get nUpserted(): number {\n    return this.result.nUpserted;\n  }\n\n  /** Number of matched documents */\n  get nMatched(): number {\n    return this.result.nMatched;\n  }\n\n  /** Number of documents updated physically on disk */\n  get nModified(): number {\n    return this.result.nModified;\n  }\n\n  /** Number of removed documents */\n  get nRemoved(): number {\n    return this.result.nRemoved;\n  }\n\n  /** Returns an array of all inserted ids */\n  getInsertedIds(): Document[] {\n    return this.result.insertedIds;\n  }\n\n  /** Returns an array of all upserted ids */\n  getUpsertedIds(): Document[] {\n    return this.result.upserted;\n  }\n\n  /** Returns the upserted id at the given index */\n  getUpsertedIdAt(index: number): Document | undefined {\n    return this.result.upserted[index];\n  }\n\n  /** Returns raw internal result */\n  getRawResponse(): Document {\n    return this.result;\n  }\n\n  /** Returns true if the bulk operation contains a write error */\n  hasWriteErrors(): boolean {\n    return this.result.writeErrors.length > 0;\n  }\n\n  /** Returns the number of write errors off the bulk operation */\n  getWriteErrorCount(): number {\n    return this.result.writeErrors.length;\n  }\n\n  /** Returns a specific write error object */\n  getWriteErrorAt(index: number): WriteError | undefined {\n    if (index < this.result.writeErrors.length) {\n      return this.result.writeErrors[index];\n    }\n  }\n\n  /** Retrieve all write errors */\n  getWriteErrors(): WriteError[] {\n    return this.result.writeErrors;\n  }\n\n  /** Retrieve lastOp if available */\n  getLastOp(): Document | undefined {\n    return this.result.opTime;\n  }\n\n  /** Retrieve the write concern error if one exists */\n  getWriteConcernError(): WriteConcernError | undefined {\n    if (this.result.writeConcernErrors.length === 0) {\n      return;\n    } else if (this.result.writeConcernErrors.length === 1) {\n      // Return the error\n      return this.result.writeConcernErrors[0];\n    } else {\n      // Combine the errors\n      let errmsg = '';\n      for (let i = 0; i < this.result.writeConcernErrors.length; i++) {\n        const err = this.result.writeConcernErrors[i];\n        errmsg = errmsg + err.errmsg;\n\n        // TODO: Something better\n        if (i === 0) errmsg = errmsg + ' and ';\n      }\n\n      return new WriteConcernError({ errmsg, code: MONGODB_ERROR_CODES.WriteConcernFailed });\n    }\n  }\n\n  toJSON(): BulkResult {\n    return this.result;\n  }\n\n  toString(): string {\n    return `BulkWriteResult(${this.toJSON()})`;\n  }\n\n  isOk(): boolean {\n    return this.result.ok === 1;\n  }\n}\n\n/** @public */\nexport interface WriteConcernErrorData {\n  code: number;\n  errmsg: string;\n  errInfo?: Document;\n}\n\n/**\n * An error representing a failure by the server to apply the requested write concern to the bulk operation.\n * @public\n * @category Error\n */\nexport class WriteConcernError {\n  /** @internal */\n  [kServerError]: WriteConcernErrorData;\n\n  constructor(error: WriteConcernErrorData) {\n    this[kServerError] = error;\n  }\n\n  /** Write concern error code. */\n  get code(): number | undefined {\n    return this[kServerError].code;\n  }\n\n  /** Write concern error message. */\n  get errmsg(): string | undefined {\n    return this[kServerError].errmsg;\n  }\n\n  /** Write concern error info. */\n  get errInfo(): Document | undefined {\n    return this[kServerError].errInfo;\n  }\n\n  /** @deprecated The `err` prop that contained a MongoServerError has been deprecated. */\n  get err(): WriteConcernErrorData {\n    return this[kServerError];\n  }\n\n  toJSON(): WriteConcernErrorData {\n    return this[kServerError];\n  }\n\n  toString(): string {\n    return `WriteConcernError(${this.errmsg})`;\n  }\n}\n\n/** @public */\nexport interface BulkWriteOperationError {\n  index: number;\n  code: number;\n  errmsg: string;\n  errInfo: Document;\n  op: Document | UpdateStatement | DeleteStatement;\n}\n\n/**\n * An error that occurred during a BulkWrite on the server.\n * @public\n * @category Error\n */\nexport class WriteError {\n  err: BulkWriteOperationError;\n\n  constructor(err: BulkWriteOperationError) {\n    this.err = err;\n  }\n\n  /** WriteError code. */\n  get code(): number {\n    return this.err.code;\n  }\n\n  /** WriteError original bulk operation index. */\n  get index(): number {\n    return this.err.index;\n  }\n\n  /** WriteError message. */\n  get errmsg(): string | undefined {\n    return this.err.errmsg;\n  }\n\n  /** WriteError details. */\n  get errInfo(): Document | undefined {\n    return this.err.errInfo;\n  }\n\n  /** Returns the underlying operation that caused the error */\n  getOperation(): Document {\n    return this.err.op;\n  }\n\n  toJSON(): { code: number; index: number; errmsg?: string; op: Document } {\n    return { code: this.err.code, index: this.err.index, errmsg: this.err.errmsg, op: this.err.op };\n  }\n\n  toString(): string {\n    return `WriteError(${JSON.stringify(this.toJSON())})`;\n  }\n}\n\n/** Converts the number to a Long or returns it. */\nfunction longOrConvert(value: number | Long | Timestamp): Long | Timestamp {\n  return typeof value === 'number' ? Long.fromNumber(value) : value;\n}\n\n/** Merges results into shared data structure */\nexport function mergeBatchResults(\n  batch: Batch,\n  bulkResult: BulkResult,\n  err?: AnyError,\n  result?: Document\n): void {\n  // If we have an error set the result to be the err object\n  if (err) {\n    result = err;\n  } else if (result && result.result) {\n    result = result.result;\n  }\n\n  if (result == null) {\n    return;\n  }\n\n  // Do we have a top level error stop processing and return\n  if (result.ok === 0 && bulkResult.ok === 1) {\n    bulkResult.ok = 0;\n\n    const writeError = {\n      index: 0,\n      code: result.code || 0,\n      errmsg: result.message,\n      errInfo: result.errInfo,\n      op: batch.operations[0]\n    };\n\n    bulkResult.writeErrors.push(new WriteError(writeError));\n    return;\n  } else if (result.ok === 0 && bulkResult.ok === 0) {\n    return;\n  }\n\n  // The server write command specification states that lastOp is an optional\n  // mongod only field that has a type of timestamp. Across various scarce specs\n  // where opTime is mentioned, it is an \"opaque\" object that can have a \"ts\" and\n  // \"t\" field with Timestamp and Long as their types respectively.\n  // The \"lastOp\" field of the bulk write result is never mentioned in the driver\n  // specifications or the bulk write spec, so we should probably just keep its\n  // value consistent since it seems to vary.\n  // See: https://github.com/mongodb/specifications/blob/master/source/driver-bulk-update.rst#results-object\n  if (result.opTime || result.lastOp) {\n    let opTime = result.lastOp || result.opTime;\n\n    // If the opTime is a Timestamp, convert it to a consistent format to be\n    // able to compare easily. Converting to the object from a timestamp is\n    // much more straightforward than the other direction.\n    if (opTime._bsontype === 'Timestamp') {\n      opTime = { ts: opTime, t: Long.ZERO };\n    }\n\n    // If there's no lastOp, just set it.\n    if (!bulkResult.opTime) {\n      bulkResult.opTime = opTime;\n    } else {\n      // First compare the ts values and set if the opTimeTS value is greater.\n      const lastOpTS = longOrConvert(bulkResult.opTime.ts);\n      const opTimeTS = longOrConvert(opTime.ts);\n      if (opTimeTS.greaterThan(lastOpTS)) {\n        bulkResult.opTime = opTime;\n      } else if (opTimeTS.equals(lastOpTS)) {\n        // If the ts values are equal, then compare using the t values.\n        const lastOpT = longOrConvert(bulkResult.opTime.t);\n        const opTimeT = longOrConvert(opTime.t);\n        if (opTimeT.greaterThan(lastOpT)) {\n          bulkResult.opTime = opTime;\n        }\n      }\n    }\n  }\n\n  // If we have an insert Batch type\n  if (isInsertBatch(batch) && result.n) {\n    bulkResult.nInserted = bulkResult.nInserted + result.n;\n  }\n\n  // If we have an insert Batch type\n  if (isDeleteBatch(batch) && result.n) {\n    bulkResult.nRemoved = bulkResult.nRemoved + result.n;\n  }\n\n  let nUpserted = 0;\n\n  // We have an array of upserted values, we need to rewrite the indexes\n  if (Array.isArray(result.upserted)) {\n    nUpserted = result.upserted.length;\n\n    for (let i = 0; i < result.upserted.length; i++) {\n      bulkResult.upserted.push({\n        index: result.upserted[i].index + batch.originalZeroIndex,\n        _id: result.upserted[i]._id\n      });\n    }\n  } else if (result.upserted) {\n    nUpserted = 1;\n\n    bulkResult.upserted.push({\n      index: batch.originalZeroIndex,\n      _id: result.upserted\n    });\n  }\n\n  // If we have an update Batch type\n  if (isUpdateBatch(batch) && result.n) {\n    const nModified = result.nModified;\n    bulkResult.nUpserted = bulkResult.nUpserted + nUpserted;\n    bulkResult.nMatched = bulkResult.nMatched + (result.n - nUpserted);\n\n    if (typeof nModified === 'number') {\n      bulkResult.nModified = bulkResult.nModified + nModified;\n    } else {\n      bulkResult.nModified = 0;\n    }\n  }\n\n  if (Array.isArray(result.writeErrors)) {\n    for (let i = 0; i < result.writeErrors.length; i++) {\n      const writeError = {\n        index: batch.originalIndexes[result.writeErrors[i].index],\n        code: result.writeErrors[i].code,\n        errmsg: result.writeErrors[i].errmsg,\n        errInfo: result.writeErrors[i].errInfo,\n        op: batch.operations[result.writeErrors[i].index]\n      };\n\n      bulkResult.writeErrors.push(new WriteError(writeError));\n    }\n  }\n\n  if (result.writeConcernError) {\n    bulkResult.writeConcernErrors.push(new WriteConcernError(result.writeConcernError));\n  }\n}\n\nfunction executeCommands(\n  bulkOperation: BulkOperationBase,\n  options: BulkWriteOptions,\n  callback: Callback<BulkWriteResult>\n) {\n  if (bulkOperation.s.batches.length === 0) {\n    return callback(undefined, new BulkWriteResult(bulkOperation.s.bulkResult));\n  }\n\n  const batch = bulkOperation.s.batches.shift() as Batch;\n\n  function resultHandler(err?: AnyError, result?: Document) {\n    // Error is a driver related error not a bulk op error, return early\n    if (err && 'message' in err && !(err instanceof MongoWriteConcernError)) {\n      return callback(\n        new MongoBulkWriteError(err, new BulkWriteResult(bulkOperation.s.bulkResult))\n      );\n    }\n\n    if (err instanceof MongoWriteConcernError) {\n      return handleMongoWriteConcernError(batch, bulkOperation.s.bulkResult, err, callback);\n    }\n\n    // Merge the results together\n    const writeResult = new BulkWriteResult(bulkOperation.s.bulkResult);\n    const mergeResult = mergeBatchResults(batch, bulkOperation.s.bulkResult, err, result);\n    if (mergeResult != null) {\n      return callback(undefined, writeResult);\n    }\n\n    if (bulkOperation.handleWriteError(callback, writeResult)) return;\n\n    // Execute the next command in line\n    executeCommands(bulkOperation, options, callback);\n  }\n\n  const finalOptions = resolveOptions(bulkOperation, {\n    ...options,\n    ordered: bulkOperation.isOrdered\n  });\n\n  if (finalOptions.bypassDocumentValidation !== true) {\n    delete finalOptions.bypassDocumentValidation;\n  }\n\n  // Set an operationIf if provided\n  if (bulkOperation.operationId) {\n    resultHandler.operationId = bulkOperation.operationId;\n  }\n\n  // Is the bypassDocumentValidation options specific\n  if (bulkOperation.s.bypassDocumentValidation === true) {\n    finalOptions.bypassDocumentValidation = true;\n  }\n\n  // Is the checkKeys option disabled\n  if (bulkOperation.s.checkKeys === false) {\n    finalOptions.checkKeys = false;\n  }\n\n  if (finalOptions.retryWrites) {\n    if (isUpdateBatch(batch)) {\n      finalOptions.retryWrites = finalOptions.retryWrites && !batch.operations.some(op => op.multi);\n    }\n\n    if (isDeleteBatch(batch)) {\n      finalOptions.retryWrites =\n        finalOptions.retryWrites && !batch.operations.some(op => op.limit === 0);\n    }\n  }\n\n  try {\n    if (isInsertBatch(batch)) {\n      executeOperation(\n        bulkOperation.s.topology,\n        new InsertOperation(bulkOperation.s.namespace, batch.operations, finalOptions),\n        resultHandler\n      );\n    } else if (isUpdateBatch(batch)) {\n      executeOperation(\n        bulkOperation.s.topology,\n        new UpdateOperation(bulkOperation.s.namespace, batch.operations, finalOptions),\n        resultHandler\n      );\n    } else if (isDeleteBatch(batch)) {\n      executeOperation(\n        bulkOperation.s.topology,\n        new DeleteOperation(bulkOperation.s.namespace, batch.operations, finalOptions),\n        resultHandler\n      );\n    }\n  } catch (err) {\n    // Force top level error\n    err.ok = 0;\n    // Merge top level error and return\n    mergeBatchResults(batch, bulkOperation.s.bulkResult, err, undefined);\n    callback();\n  }\n}\n\nfunction handleMongoWriteConcernError(\n  batch: Batch,\n  bulkResult: BulkResult,\n  err: MongoWriteConcernError,\n  callback: Callback<BulkWriteResult>\n) {\n  mergeBatchResults(batch, bulkResult, undefined, err.result);\n\n  callback(\n    new MongoBulkWriteError(\n      {\n        message: err.result?.writeConcernError.errmsg,\n        code: err.result?.writeConcernError.result\n      },\n      new BulkWriteResult(bulkResult)\n    )\n  );\n}\n\n/**\n * An error indicating an unsuccessful Bulk Write\n * @public\n * @category Error\n */\nexport class MongoBulkWriteError extends MongoServerError {\n  result: BulkWriteResult;\n  writeErrors: OneOrMore<WriteError> = [];\n  err?: WriteConcernError;\n\n  /** Creates a new MongoBulkWriteError */\n  constructor(\n    error:\n      | { message: string; code: number; writeErrors?: WriteError[] }\n      | WriteConcernError\n      | AnyError,\n    result: BulkWriteResult\n  ) {\n    super(error);\n\n    if (error instanceof WriteConcernError) this.err = error;\n    else if (!(error instanceof Error)) {\n      this.message = error.message;\n      this.code = error.code;\n      this.writeErrors = error.writeErrors ?? [];\n    }\n\n    this.result = result;\n    Object.assign(this, error);\n  }\n\n  get name(): string {\n    return 'MongoBulkWriteError';\n  }\n\n  /** Number of documents inserted. */\n  get insertedCount(): number {\n    return this.result.insertedCount;\n  }\n  /** Number of documents matched for update. */\n  get matchedCount(): number {\n    return this.result.matchedCount;\n  }\n  /** Number of documents modified. */\n  get modifiedCount(): number {\n    return this.result.modifiedCount;\n  }\n  /** Number of documents deleted. */\n  get deletedCount(): number {\n    return this.result.deletedCount;\n  }\n  /** Number of documents upserted. */\n  get upsertedCount(): number {\n    return this.result.upsertedCount;\n  }\n  /** Inserted document generated Id's, hash key is the index of the originating operation */\n  get insertedIds(): { [key: number]: any } {\n    return this.result.insertedIds;\n  }\n  /** Upserted document generated Id's, hash key is the index of the originating operation */\n  get upsertedIds(): { [key: number]: any } {\n    return this.result.upsertedIds;\n  }\n}\n\n/**\n * A builder object that is returned from {@link BulkOperationBase#find}.\n * Is used to build a write operation that involves a query filter.\n *\n * @public\n */\nexport class FindOperators {\n  bulkOperation: BulkOperationBase;\n\n  /**\n   * Creates a new FindOperators object.\n   * @internal\n   */\n  constructor(bulkOperation: BulkOperationBase) {\n    this.bulkOperation = bulkOperation;\n  }\n\n  /** Add a multiple update operation to the bulk operation */\n  update(updateDocument: Document): BulkOperationBase {\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.UPDATE,\n      makeUpdateStatement(currentOp.selector, updateDocument, {\n        ...currentOp,\n        multi: true\n      })\n    );\n  }\n\n  /** Add a single update operation to the bulk operation */\n  updateOne(updateDocument: Document): BulkOperationBase {\n    if (!hasAtomicOperators(updateDocument)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.UPDATE,\n      makeUpdateStatement(currentOp.selector, updateDocument, { ...currentOp, multi: false })\n    );\n  }\n\n  /** Add a replace one operation to the bulk operation */\n  replaceOne(replacement: Document): BulkOperationBase {\n    if (hasAtomicOperators(replacement)) {\n      throw new MongoInvalidArgumentError('Replacement document must not use atomic operators');\n    }\n\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.UPDATE,\n      makeUpdateStatement(currentOp.selector, replacement, { ...currentOp, multi: false })\n    );\n  }\n\n  /** Add a delete one operation to the bulk operation */\n  deleteOne(): BulkOperationBase {\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.DELETE,\n      makeDeleteStatement(currentOp.selector, { ...currentOp, limit: 1 })\n    );\n  }\n\n  /** Add a delete many operation to the bulk operation */\n  delete(): BulkOperationBase {\n    const currentOp = buildCurrentOp(this.bulkOperation);\n    return this.bulkOperation.addToOperationsList(\n      BatchType.DELETE,\n      makeDeleteStatement(currentOp.selector, { ...currentOp, limit: 0 })\n    );\n  }\n\n  /** Upsert modifier for update bulk operation, noting that this operation is an upsert. */\n  upsert(): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.upsert = true;\n    return this;\n  }\n\n  /** Specifies the collation for the query condition. */\n  collation(collation: CollationOptions): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.collation = collation;\n    return this;\n  }\n\n  /** Specifies arrayFilters for UpdateOne or UpdateMany bulk operations. */\n  arrayFilters(arrayFilters: Document[]): this {\n    if (!this.bulkOperation.s.currentOp) {\n      this.bulkOperation.s.currentOp = {};\n    }\n\n    this.bulkOperation.s.currentOp.arrayFilters = arrayFilters;\n    return this;\n  }\n}\n\n/** @internal */\nexport interface BulkOperationPrivate {\n  bulkResult: BulkResult;\n  currentBatch?: Batch;\n  currentIndex: number;\n  // ordered specific\n  currentBatchSize: number;\n  currentBatchSizeBytes: number;\n  // unordered specific\n  currentInsertBatch?: Batch;\n  currentUpdateBatch?: Batch;\n  currentRemoveBatch?: Batch;\n  batches: Batch[];\n  // Write concern\n  writeConcern?: WriteConcern;\n  // Max batch size options\n  maxBsonObjectSize: number;\n  maxBatchSizeBytes: number;\n  maxWriteBatchSize: number;\n  maxKeySize: number;\n  // Namespace\n  namespace: MongoDBNamespace;\n  // Topology\n  topology: Topology;\n  // Options\n  options: BulkWriteOptions;\n  // BSON options\n  bsonOptions: BSONSerializeOptions;\n  // Document used to build a bulk operation\n  currentOp?: Document;\n  // Executed\n  executed: boolean;\n  // Collection\n  collection: Collection;\n  // Fundamental error\n  err?: AnyError;\n  // check keys\n  checkKeys: boolean;\n  bypassDocumentValidation?: boolean;\n}\n\n/** @public */\nexport interface BulkWriteOptions extends CommandOperationOptions {\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n  /** If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails. */\n  ordered?: boolean;\n  /** @deprecated use `ordered` instead */\n  keepGoing?: boolean;\n  /** Force server to assign _id values instead of driver. */\n  forceServerObjectId?: boolean;\n}\n\n/** @public */\nexport abstract class BulkOperationBase {\n  isOrdered: boolean;\n  /** @internal */\n  s: BulkOperationPrivate;\n  operationId?: number;\n\n  /**\n   * Create a new OrderedBulkOperation or UnorderedBulkOperation instance\n   * @internal\n   */\n  constructor(collection: Collection, options: BulkWriteOptions, isOrdered: boolean) {\n    // determine whether bulkOperation is ordered or unordered\n    this.isOrdered = isOrdered;\n\n    const topology = getTopology(collection);\n    options = options == null ? {} : options;\n    // TODO Bring from driver information in isMaster\n    // Get the namespace for the write operations\n    const namespace = collection.s.namespace;\n    // Used to mark operation as executed\n    const executed = false;\n\n    // Current item\n    const currentOp = undefined;\n\n    // Set max byte size\n    const isMaster = topology.lastIsMaster();\n\n    // If we have autoEncryption on, batch-splitting must be done on 2mb chunks, but single documents\n    // over 2mb are still allowed\n    const usingAutoEncryption = !!(topology.s.options && topology.s.options.autoEncrypter);\n    const maxBsonObjectSize =\n      isMaster && isMaster.maxBsonObjectSize ? isMaster.maxBsonObjectSize : 1024 * 1024 * 16;\n    const maxBatchSizeBytes = usingAutoEncryption ? 1024 * 1024 * 2 : maxBsonObjectSize;\n    const maxWriteBatchSize =\n      isMaster && isMaster.maxWriteBatchSize ? isMaster.maxWriteBatchSize : 1000;\n\n    // Calculates the largest possible size of an Array key, represented as a BSON string\n    // element. This calculation:\n    //     1 byte for BSON type\n    //     # of bytes = length of (string representation of (maxWriteBatchSize - 1))\n    //   + 1 bytes for null terminator\n    const maxKeySize = (maxWriteBatchSize - 1).toString(10).length + 2;\n\n    // Final options for retryable writes\n    let finalOptions = Object.assign({}, options);\n    finalOptions = applyRetryableWrites(finalOptions, collection.s.db);\n\n    // Final results\n    const bulkResult: BulkResult = {\n      ok: 1,\n      writeErrors: [],\n      writeConcernErrors: [],\n      insertedIds: [],\n      nInserted: 0,\n      nUpserted: 0,\n      nMatched: 0,\n      nModified: 0,\n      nRemoved: 0,\n      upserted: []\n    };\n\n    // Internal state\n    this.s = {\n      // Final result\n      bulkResult,\n      // Current batch state\n      currentBatch: undefined,\n      currentIndex: 0,\n      // ordered specific\n      currentBatchSize: 0,\n      currentBatchSizeBytes: 0,\n      // unordered specific\n      currentInsertBatch: undefined,\n      currentUpdateBatch: undefined,\n      currentRemoveBatch: undefined,\n      batches: [],\n      // Write concern\n      writeConcern: WriteConcern.fromOptions(options),\n      // Max batch size options\n      maxBsonObjectSize,\n      maxBatchSizeBytes,\n      maxWriteBatchSize,\n      maxKeySize,\n      // Namespace\n      namespace,\n      // Topology\n      topology,\n      // Options\n      options: finalOptions,\n      // BSON options\n      bsonOptions: resolveBSONOptions(options),\n      // Current operation\n      currentOp,\n      // Executed\n      executed,\n      // Collection\n      collection,\n      // Fundamental error\n      err: undefined,\n      // check keys\n      checkKeys: typeof options.checkKeys === 'boolean' ? options.checkKeys : false\n    };\n\n    // bypass Validation\n    if (options.bypassDocumentValidation === true) {\n      this.s.bypassDocumentValidation = true;\n    }\n  }\n\n  /**\n   * Add a single insert document to the bulk operation\n   *\n   * @example\n   * ```js\n   * const bulkOp = collection.initializeOrderedBulkOp();\n   *\n   * // Adds three inserts to the bulkOp.\n   * bulkOp\n   *   .insert({ a: 1 })\n   *   .insert({ b: 2 })\n   *   .insert({ c: 3 });\n   * await bulkOp.execute();\n   * ```\n   */\n  insert(document: Document): BulkOperationBase {\n    if (document._id == null && !shouldForceServerObjectId(this)) {\n      document._id = new ObjectId();\n    }\n\n    return this.addToOperationsList(BatchType.INSERT, document);\n  }\n\n  /**\n   * Builds a find operation for an update/updateOne/delete/deleteOne/replaceOne.\n   * Returns a builder object used to complete the definition of the operation.\n   *\n   * @example\n   * ```js\n   * const bulkOp = collection.initializeOrderedBulkOp();\n   *\n   * // Add an updateOne to the bulkOp\n   * bulkOp.find({ a: 1 }).updateOne({ $set: { b: 2 } });\n   *\n   * // Add an updateMany to the bulkOp\n   * bulkOp.find({ c: 3 }).update({ $set: { d: 4 } });\n   *\n   * // Add an upsert\n   * bulkOp.find({ e: 5 }).upsert().updateOne({ $set: { f: 6 } });\n   *\n   * // Add a deletion\n   * bulkOp.find({ g: 7 }).deleteOne();\n   *\n   * // Add a multi deletion\n   * bulkOp.find({ h: 8 }).delete();\n   *\n   * // Add a replaceOne\n   * bulkOp.find({ i: 9 }).replaceOne({writeConcern: { j: 10 }});\n   *\n   * // Update using a pipeline (requires Mongodb 4.2 or higher)\n   * bulk.find({ k: 11, y: { $exists: true }, z: { $exists: true } }).updateOne([\n   *   { $set: { total: { $sum: [ '$y', '$z' ] } } }\n   * ]);\n   *\n   * // All of the ops will now be executed\n   * await bulkOp.execute();\n   * ```\n   */\n  find(selector: Document): FindOperators {\n    if (!selector) {\n      throw new MongoInvalidArgumentError('Bulk find operation must specify a selector');\n    }\n\n    // Save a current selector\n    this.s.currentOp = {\n      selector: selector\n    };\n\n    return new FindOperators(this);\n  }\n\n  /** Specifies a raw operation to perform in the bulk write. */\n  raw(op: AnyBulkWriteOperation): this {\n    if ('insertOne' in op) {\n      const forceServerObjectId = shouldForceServerObjectId(this);\n      if (op.insertOne && op.insertOne.document == null) {\n        // NOTE: provided for legacy support, but this is a malformed operation\n        if (forceServerObjectId !== true && (op.insertOne as Document)._id == null) {\n          (op.insertOne as Document)._id = new ObjectId();\n        }\n\n        return this.addToOperationsList(BatchType.INSERT, op.insertOne);\n      }\n\n      if (forceServerObjectId !== true && op.insertOne.document._id == null) {\n        op.insertOne.document._id = new ObjectId();\n      }\n\n      return this.addToOperationsList(BatchType.INSERT, op.insertOne.document);\n    }\n\n    if ('replaceOne' in op || 'updateOne' in op || 'updateMany' in op) {\n      if ('replaceOne' in op) {\n        if ('q' in op.replaceOne) {\n          throw new MongoInvalidArgumentError('Raw operations are not allowed');\n        }\n        const updateStatement = makeUpdateStatement(\n          op.replaceOne.filter,\n          op.replaceOne.replacement,\n          { ...op.replaceOne, multi: false }\n        );\n        if (hasAtomicOperators(updateStatement.u)) {\n          throw new MongoInvalidArgumentError('Replacement document must not use atomic operators');\n        }\n        return this.addToOperationsList(BatchType.UPDATE, updateStatement);\n      }\n\n      if ('updateOne' in op) {\n        if ('q' in op.updateOne) {\n          throw new MongoInvalidArgumentError('Raw operations are not allowed');\n        }\n        const updateStatement = makeUpdateStatement(op.updateOne.filter, op.updateOne.update, {\n          ...op.updateOne,\n          multi: false\n        });\n        if (!hasAtomicOperators(updateStatement.u)) {\n          throw new MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n        return this.addToOperationsList(BatchType.UPDATE, updateStatement);\n      }\n\n      if ('updateMany' in op) {\n        if ('q' in op.updateMany) {\n          throw new MongoInvalidArgumentError('Raw operations are not allowed');\n        }\n        const updateStatement = makeUpdateStatement(op.updateMany.filter, op.updateMany.update, {\n          ...op.updateMany,\n          multi: true\n        });\n        if (!hasAtomicOperators(updateStatement.u)) {\n          throw new MongoInvalidArgumentError('Update document requires atomic operators');\n        }\n        return this.addToOperationsList(BatchType.UPDATE, updateStatement);\n      }\n    }\n\n    if ('deleteOne' in op) {\n      if ('q' in op.deleteOne) {\n        throw new MongoInvalidArgumentError('Raw operations are not allowed');\n      }\n      return this.addToOperationsList(\n        BatchType.DELETE,\n        makeDeleteStatement(op.deleteOne.filter, { ...op.deleteOne, limit: 1 })\n      );\n    }\n\n    if ('deleteMany' in op) {\n      if ('q' in op.deleteMany) {\n        throw new MongoInvalidArgumentError('Raw operations are not allowed');\n      }\n      return this.addToOperationsList(\n        BatchType.DELETE,\n        makeDeleteStatement(op.deleteMany.filter, { ...op.deleteMany, limit: 0 })\n      );\n    }\n\n    // otherwise an unknown operation was provided\n    throw new MongoInvalidArgumentError(\n      'bulkWrite only supports insertOne, updateOne, updateMany, deleteOne, deleteMany'\n    );\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  get writeConcern(): WriteConcern | undefined {\n    return this.s.writeConcern;\n  }\n\n  get batches(): Batch[] {\n    const batches = [...this.s.batches];\n    if (this.isOrdered) {\n      if (this.s.currentBatch) batches.push(this.s.currentBatch);\n    } else {\n      if (this.s.currentInsertBatch) batches.push(this.s.currentInsertBatch);\n      if (this.s.currentUpdateBatch) batches.push(this.s.currentUpdateBatch);\n      if (this.s.currentRemoveBatch) batches.push(this.s.currentRemoveBatch);\n    }\n    return batches;\n  }\n\n  /** An internal helper method. Do not invoke directly. Will be going away in the future */\n  execute(\n    options?: BulkWriteOptions,\n    callback?: Callback<BulkWriteResult>\n  ): Promise<BulkWriteResult> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n\n    if (this.s.executed) {\n      return handleEarlyError(new MongoBatchReExecutionError(), callback);\n    }\n\n    const writeConcern = WriteConcern.fromOptions(options);\n    if (writeConcern) {\n      this.s.writeConcern = writeConcern;\n    }\n\n    // If we have current batch\n    if (this.isOrdered) {\n      if (this.s.currentBatch) this.s.batches.push(this.s.currentBatch);\n    } else {\n      if (this.s.currentInsertBatch) this.s.batches.push(this.s.currentInsertBatch);\n      if (this.s.currentUpdateBatch) this.s.batches.push(this.s.currentUpdateBatch);\n      if (this.s.currentRemoveBatch) this.s.batches.push(this.s.currentRemoveBatch);\n    }\n    // If we have no operations in the bulk raise an error\n    if (this.s.batches.length === 0) {\n      const emptyBatchError = new MongoInvalidArgumentError(\n        'Invalid BulkOperation, Batch cannot be empty'\n      );\n      return handleEarlyError(emptyBatchError, callback);\n    }\n\n    this.s.executed = true;\n    const finalOptions = { ...this.s.options, ...options };\n    return executeLegacyOperation(this.s.topology, executeCommands, [this, finalOptions, callback]);\n  }\n\n  /**\n   * Handles the write error before executing commands\n   * @internal\n   */\n  handleWriteError(\n    callback: Callback<BulkWriteResult>,\n    writeResult: BulkWriteResult\n  ): boolean | undefined {\n    if (this.s.bulkResult.writeErrors.length > 0) {\n      const msg = this.s.bulkResult.writeErrors[0].errmsg\n        ? this.s.bulkResult.writeErrors[0].errmsg\n        : 'write operation failed';\n\n      callback(\n        new MongoBulkWriteError(\n          {\n            message: msg,\n            code: this.s.bulkResult.writeErrors[0].code,\n            writeErrors: this.s.bulkResult.writeErrors\n          },\n          writeResult\n        )\n      );\n\n      return true;\n    }\n\n    const writeConcernError = writeResult.getWriteConcernError();\n    if (writeConcernError) {\n      callback(new MongoBulkWriteError(writeConcernError, writeResult));\n      return true;\n    }\n  }\n\n  abstract addToOperationsList(\n    batchType: BatchType,\n    document: Document | UpdateStatement | DeleteStatement\n  ): this;\n}\n\nObject.defineProperty(BulkOperationBase.prototype, 'length', {\n  enumerable: true,\n  get() {\n    return this.s.currentIndex;\n  }\n});\n\n/** helper function to assist with promiseOrCallback behavior */\nfunction handleEarlyError(\n  err?: AnyError,\n  callback?: Callback<BulkWriteResult>\n): Promise<BulkWriteResult> | void {\n  const Promise = PromiseProvider.get();\n  if (typeof callback === 'function') {\n    callback(err);\n    return;\n  }\n\n  return Promise.reject(err);\n}\n\nfunction shouldForceServerObjectId(bulkOperation: BulkOperationBase): boolean {\n  if (typeof bulkOperation.s.options.forceServerObjectId === 'boolean') {\n    return bulkOperation.s.options.forceServerObjectId;\n  }\n\n  if (typeof bulkOperation.s.collection.s.db.options?.forceServerObjectId === 'boolean') {\n    return bulkOperation.s.collection.s.db.options?.forceServerObjectId;\n  }\n\n  return false;\n}\n\nfunction isInsertBatch(batch: Batch): boolean {\n  return batch.batchType === BatchType.INSERT;\n}\n\nfunction isUpdateBatch(batch: Batch): batch is Batch<UpdateStatement> {\n  return batch.batchType === BatchType.UPDATE;\n}\n\nfunction isDeleteBatch(batch: Batch): batch is Batch<DeleteStatement> {\n  return batch.batchType === BatchType.DELETE;\n}\n\nfunction buildCurrentOp(bulkOp: BulkOperationBase): Document {\n  let { currentOp } = bulkOp.s;\n  bulkOp.s.currentOp = undefined;\n  if (!currentOp) currentOp = {};\n  return currentOp;\n}\n", "import * as BSON from '../bson';\nimport { BulkOperationBase, Batch, BatchType, BulkWriteOptions, BulkWriteResult } from './common';\nimport type { Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { UpdateStatement } from '../operations/update';\nimport type { DeleteStatement } from '../operations/delete';\nimport { MongoInvalidArgumentError } from '../error';\n\n/** @public */\nexport class UnorderedBulkOperation extends BulkOperationBase {\n  constructor(collection: Collection, options: BulkWriteOptions) {\n    super(collection, options, false);\n  }\n\n  handleWriteError(callback: Callback, writeResult: BulkWriteResult): boolean | undefined {\n    if (this.s.batches.length) {\n      return false;\n    }\n\n    return super.handleWriteError(callback, writeResult);\n  }\n\n  addToOperationsList(\n    batchType: BatchType,\n    document: Document | UpdateStatement | DeleteStatement\n  ): this {\n    // Get the bsonSize\n    const bsonSize = BSON.calculateObjectSize(document, {\n      checkKeys: false,\n\n      // Since we don't know what the user selected for BSON options here,\n      // err on the safe side, and check the size with ignoreUndefined: false.\n      ignoreUndefined: false\n    } as any);\n\n    // Throw error if the doc is bigger than the max BSON size\n    if (bsonSize >= this.s.maxBsonObjectSize) {\n      // TODO(NODE-3483): Change this to MongoBSONError\n      throw new MongoInvalidArgumentError(\n        `Document is larger than the maximum size ${this.s.maxBsonObjectSize}`\n      );\n    }\n\n    // Holds the current batch\n    this.s.currentBatch = undefined;\n    // Get the right type of batch\n    if (batchType === BatchType.INSERT) {\n      this.s.currentBatch = this.s.currentInsertBatch;\n    } else if (batchType === BatchType.UPDATE) {\n      this.s.currentBatch = this.s.currentUpdateBatch;\n    } else if (batchType === BatchType.DELETE) {\n      this.s.currentBatch = this.s.currentRemoveBatch;\n    }\n\n    const maxKeySize = this.s.maxKeySize;\n\n    // Create a new batch object if we don't have a current one\n    if (this.s.currentBatch == null) {\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n    }\n\n    // Check if we need to create a new batch\n    if (\n      // New batch if we exceed the max batch op size\n      this.s.currentBatch.size + 1 >= this.s.maxWriteBatchSize ||\n      // New batch if we exceed the maxBatchSizeBytes. Only matters if batch already has a doc,\n      // since we can't sent an empty batch\n      (this.s.currentBatch.size > 0 &&\n        this.s.currentBatch.sizeBytes + maxKeySize + bsonSize >= this.s.maxBatchSizeBytes) ||\n      // New batch if the new op does not have the same op type as the current batch\n      this.s.currentBatch.batchType !== batchType\n    ) {\n      // Save the batch to the execution stack\n      this.s.batches.push(this.s.currentBatch);\n\n      // Create a new batch\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n    }\n\n    // We have an array of documents\n    if (Array.isArray(document)) {\n      throw new MongoInvalidArgumentError('Operation passed in cannot be an Array');\n    }\n\n    this.s.currentBatch.operations.push(document);\n    this.s.currentBatch.originalIndexes.push(this.s.currentIndex);\n    this.s.currentIndex = this.s.currentIndex + 1;\n\n    // Save back the current Batch to the right type\n    if (batchType === BatchType.INSERT) {\n      this.s.currentInsertBatch = this.s.currentBatch;\n      this.s.bulkResult.insertedIds.push({\n        index: this.s.bulkResult.insertedIds.length,\n        _id: (document as Document)._id\n      });\n    } else if (batchType === BatchType.UPDATE) {\n      this.s.currentUpdateBatch = this.s.currentBatch;\n    } else if (batchType === BatchType.DELETE) {\n      this.s.currentRemoveBatch = this.s.currentBatch;\n    }\n\n    // Update current batch size\n    this.s.currentBatch.size += 1;\n    this.s.currentBatch.sizeBytes += maxKeySize + bsonSize;\n\n    return this;\n  }\n}\n", "import * as BSON from '../bson';\nimport { BulkOperationBase, Batch, BatchType, BulkWriteOptions } from './common';\nimport type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { UpdateStatement } from '../operations/update';\nimport type { DeleteStatement } from '../operations/delete';\nimport { MongoInvalidArgumentError } from '../error';\n\n/** @public */\nexport class OrderedBulkOperation extends BulkOperationBase {\n  constructor(collection: Collection, options: BulkWriteOptions) {\n    super(collection, options, true);\n  }\n\n  addToOperationsList(\n    batchType: BatchType,\n    document: Document | UpdateStatement | DeleteStatement\n  ): this {\n    // Get the bsonSize\n    const bsonSize = BSON.calculateObjectSize(document, {\n      checkKeys: false,\n      // Since we don't know what the user selected for BSON options here,\n      // err on the safe side, and check the size with ignoreUndefined: false.\n      ignoreUndefined: false\n    } as any);\n\n    // Throw error if the doc is bigger than the max BSON size\n    if (bsonSize >= this.s.maxBsonObjectSize)\n      // TODO(NODE-3483): Change this to MongoBSONError\n      throw new MongoInvalidArgumentError(\n        `Document is larger than the maximum size ${this.s.maxBsonObjectSize}`\n      );\n\n    // Create a new batch object if we don't have a current one\n    if (this.s.currentBatch == null) {\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n    }\n\n    const maxKeySize = this.s.maxKeySize;\n\n    // Check if we need to create a new batch\n    if (\n      // New batch if we exceed the max batch op size\n      this.s.currentBatchSize + 1 >= this.s.maxWriteBatchSize ||\n      // New batch if we exceed the maxBatchSizeBytes. Only matters if batch already has a doc,\n      // since we can't sent an empty batch\n      (this.s.currentBatchSize > 0 &&\n        this.s.currentBatchSizeBytes + maxKeySize + bsonSize >= this.s.maxBatchSizeBytes) ||\n      // New batch if the new op does not have the same op type as the current batch\n      this.s.currentBatch.batchType !== batchType\n    ) {\n      // Save the batch to the execution stack\n      this.s.batches.push(this.s.currentBatch);\n\n      // Create a new batch\n      this.s.currentBatch = new Batch(batchType, this.s.currentIndex);\n\n      // Reset the current size trackers\n      this.s.currentBatchSize = 0;\n      this.s.currentBatchSizeBytes = 0;\n    }\n\n    if (batchType === BatchType.INSERT) {\n      this.s.bulkResult.insertedIds.push({\n        index: this.s.currentIndex,\n        _id: (document as Document)._id\n      });\n    }\n\n    // We have an array of documents\n    if (Array.isArray(document)) {\n      throw new MongoInvalidArgumentError('Operation passed in cannot be an Array');\n    }\n\n    this.s.currentBatch.originalIndexes.push(this.s.currentIndex);\n    this.s.currentBatch.operations.push(document);\n    this.s.currentBatchSize += 1;\n    this.s.currentBatchSizeBytes += maxKeySize + bsonSize;\n    this.s.currentIndex += 1;\n    return this;\n  }\n}\n", "'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array, options) {\n  var options = options || {};\n  this._capacity = options.capacity;\n\n  this._head = 0;\n  this._tail = 0;\n\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  } else {\n    this._capacityMask = 0x3;\n    this._list = new Array(4);\n  }\n}\n\n/**\n * --------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peekAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (arguments.length === 0) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._capacity && this.size() > this._capacity) this.pop();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (arguments.length === 0) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n  if (this._capacity && this.size() > this._capacity) {\n    this.shift();\n  }\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = (i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._list = new Array(this._list.length);\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  var length = array.length;\n  var capacity = this._nextPowerOf2(length);\n\n  this._list = new Array(capacity);\n  this._capacityMask = capacity - 1;\n  this._tail = length;\n\n  for (var i = 0; i < length; i++) this._list[i] = array[i];\n};\n\n/**\n *\n * @param fullCopy\n * @param size Initialize the array with a specific size. Will default to the current list size\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy, size) {\n  var src = this._list;\n  var capacity = src.length;\n  var length = this.length;\n  size = size | length;\n\n  // No prealloc requested and the buffer is contiguous\n  if (size == length && this._head < this._tail) {\n    // Simply do a fast slice copy\n    return this._list.slice(this._head, this._tail);\n  }\n\n  var dest = new Array(size);\n\n  var k = 0;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < capacity; i++) dest[k++] = src[i];\n    for (i = 0; i < this._tail; i++) dest[k++] = src[i];\n  } else {\n    for (i = this._head; i < this._tail; i++) dest[k++] = src[i];\n  }\n\n  return dest;\n}\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head != 0) {\n    // double array size and copy existing data, head to end, then beginning to tail.\n    var newList = this._copyArray(true, this._list.length << 1);\n\n    this._tail = this._list.length;\n    this._head = 0;\n\n    this._list = newList;\n  } else {\n    this._tail = this._list.length;\n    this._list.length <<= 1;\n  }\n\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n/**\n * Find the next power of 2, at least 4\n * @private\n * @param {number} num \n * @returns {number}\n */\nDenque.prototype._nextPowerOf2 = function _nextPowerOf2(num) {\n  var log2 = Math.log(num) / Math.log(2);\n  var nextPow2 = 1 << (log2 + 1);\n\n  return Math.max(nextPow2, 4);\n}\n\nmodule.exports = Denque;\n", "import Denque = require('denque');\nimport {\n  MongoError,\n  AnyError,\n  isResumableError,\n  MongoRuntimeError,\n  MongoAPIError,\n  MongoChangeStreamError\n} from './error';\nimport { AggregateOperation, AggregateOptions } from './operations/aggregate';\nimport {\n  maxWireVersion,\n  calculateDurationInMs,\n  now,\n  maybePromise,\n  MongoDBNamespace,\n  Callback,\n  getTopology\n} from './utils';\nimport type { ReadPreference } from './read_preference';\nimport type { Timestamp, Document } from './bson';\nimport type { Topology } from './sdam/topology';\nimport type { OperationParent, CollationOptions } from './operations/command';\nimport { MongoClient } from './mongo_client';\nimport { Db } from './db';\nimport { Collection } from './collection';\nimport type { Readable } from 'stream';\nimport {\n  AbstractCursor,\n  AbstractCursorEvents,\n  AbstractCursorOptions,\n  CursorStreamOptions\n} from './cursor/abstract_cursor';\nimport type { ClientSession } from './sessions';\nimport { executeOperation, ExecutionResult } from './operations/execute_operation';\nimport { InferIdType, Nullable, TypedEventEmitter } from './mongo_types';\n\n/** @internal */\nconst kResumeQueue = Symbol('resumeQueue');\n/** @internal */\nconst kCursorStream = Symbol('cursorStream');\n/** @internal */\nconst kClosed = Symbol('closed');\n/** @internal */\nconst kMode = Symbol('mode');\n\nconst CHANGE_STREAM_OPTIONS = ['resumeAfter', 'startAfter', 'startAtOperationTime', 'fullDocument'];\nconst CURSOR_OPTIONS = ['batchSize', 'maxAwaitTimeMS', 'collation', 'readPreference'].concat(\n  CHANGE_STREAM_OPTIONS\n);\n\nconst CHANGE_DOMAIN_TYPES = {\n  COLLECTION: Symbol('Collection'),\n  DATABASE: Symbol('Database'),\n  CLUSTER: Symbol('Cluster')\n};\n\nconst NO_RESUME_TOKEN_ERROR =\n  'A change stream document has been received that lacks a resume token (_id).';\nconst NO_CURSOR_ERROR = 'ChangeStream has no cursor';\nconst CHANGESTREAM_CLOSED_ERROR = 'ChangeStream is closed';\n\n/** @public */\nexport interface ResumeOptions {\n  startAtOperationTime?: Timestamp;\n  batchSize?: number;\n  maxAwaitTimeMS?: number;\n  collation?: CollationOptions;\n  readPreference?: ReadPreference;\n}\n\n/**\n * Represents the logical starting point for a new or resuming {@link https://docs.mongodb.com/master/changeStreams/#change-stream-resume-token| Change Stream} on the server.\n * @public\n */\nexport type ResumeToken = unknown;\n\n/**\n * Represents a specific point in time on a server. Can be retrieved by using {@link Db#command}\n * @public\n * @remarks\n * See {@link https://docs.mongodb.com/manual/reference/method/db.runCommand/#response| Run Command Response}\n */\nexport type OperationTime = Timestamp;\n\n/** @public */\nexport interface PipeOptions {\n  end?: boolean;\n}\n\n/**\n * Options that can be passed to a ChangeStream. Note that startAfter, resumeAfter, and startAtOperationTime are all mutually exclusive, and the server will error if more than one is specified.\n * @public\n */\nexport interface ChangeStreamOptions extends AggregateOptions {\n  /** Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred. */\n  fullDocument?: string;\n  /** The maximum amount of time for the server to wait on new documents to satisfy a change stream query. */\n  maxAwaitTimeMS?: number;\n  /** Allows you to start a changeStream after a specified event. See {@link https://docs.mongodb.com/master/changeStreams/#resumeafter-for-change-streams|ChangeStream documentation}. */\n  resumeAfter?: ResumeToken;\n  /** Similar to resumeAfter, but will allow you to start after an invalidated event. See {@link https://docs.mongodb.com/master/changeStreams/#startafter-for-change-streams|ChangeStream documentation}. */\n  startAfter?: ResumeToken;\n  /** Will start the changeStream after the specified operationTime. */\n  startAtOperationTime?: OperationTime;\n  /** The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}. */\n  batchSize?: number;\n}\n\n/** @public */\nexport interface ChangeStreamDocument<TSchema extends Document = Document> {\n  /**\n   * The id functions as an opaque token for use when resuming an interrupted\n   * change stream.\n   */\n  _id: InferIdType<TSchema>;\n\n  /**\n   * Describes the type of operation represented in this change notification.\n   */\n  operationType:\n    | 'insert'\n    | 'update'\n    | 'replace'\n    | 'delete'\n    | 'invalidate'\n    | 'drop'\n    | 'dropDatabase'\n    | 'rename';\n\n  /**\n   * Contains two fields: “db” and “coll” containing the database and\n   * collection name in which the change happened.\n   */\n  ns: { db: string; coll: string };\n\n  /**\n   * Only present for ops of type ‘insert’, ‘update’, ‘replace’, and\n   * ‘delete’.\n   *\n   * For unsharded collections this contains a single field, _id, with the\n   * value of the _id of the document updated.  For sharded collections,\n   * this will contain all the components of the shard key in order,\n   * followed by the _id if the _id isn’t part of the shard key.\n   */\n  documentKey?: InferIdType<TSchema>;\n\n  /**\n   * Only present for ops of type ‘update’.\n   *\n   * Contains a description of updated and removed fields in this\n   * operation.\n   */\n  updateDescription?: UpdateDescription<TSchema>;\n\n  /**\n   * Always present for operations of type ‘insert’ and ‘replace’. Also\n   * present for operations of type ‘update’ if the user has specified ‘updateLookup’\n   * in the ‘fullDocument’ arguments to the ‘$changeStream’ stage.\n   *\n   * For operations of type ‘insert’ and ‘replace’, this key will contain the\n   * document being inserted, or the new version of the document that is replacing\n   * the existing document, respectively.\n   *\n   * For operations of type ‘update’, this key will contain a copy of the full\n   * version of the document from some point after the update occurred. If the\n   * document was deleted since the updated happened, it will be null.\n   */\n  fullDocument?: TSchema;\n}\n\n/** @public */\nexport interface UpdateDescription<TSchema extends Document = Document> {\n  /**\n   * A document containing key:value pairs of names of the fields that were\n   * changed, and the new value for those fields.\n   */\n  updatedFields: Partial<TSchema>;\n\n  /**\n   * An array of field names that were removed from the document.\n   */\n  removedFields: string[];\n}\n\n/** @public */\nexport type ChangeStreamEvents = {\n  resumeTokenChanged(token: ResumeToken): void;\n  init(response: Document): void;\n  more(response?: Document | undefined): void;\n  response(): void;\n  end(): void;\n  error(error: Error): void;\n  change(change: ChangeStreamDocument): void;\n} & AbstractCursorEvents;\n\n/**\n * Creates a new Change Stream instance. Normally created using {@link Collection#watch|Collection.watch()}.\n * @public\n */\nexport class ChangeStream<\n  TSchema extends Document = Document\n> extends TypedEventEmitter<ChangeStreamEvents> {\n  pipeline: Document[];\n  options: ChangeStreamOptions;\n  parent: MongoClient | Db | Collection;\n  namespace: MongoDBNamespace;\n  type: symbol;\n  /** @internal */\n  cursor?: ChangeStreamCursor<TSchema>;\n  streamOptions?: CursorStreamOptions;\n  /** @internal */\n  [kResumeQueue]: Denque<Callback<ChangeStreamCursor<TSchema>>>;\n  /** @internal */\n  [kCursorStream]?: Readable;\n  /** @internal */\n  [kClosed]: boolean;\n  /** @internal */\n  [kMode]: false | 'iterator' | 'emitter';\n\n  /** @event */\n  static readonly RESPONSE = 'response' as const;\n  /** @event */\n  static readonly MORE = 'more' as const;\n  /** @event */\n  static readonly INIT = 'init' as const;\n  /** @event */\n  static readonly CLOSE = 'close' as const;\n  /**\n   * Fired for each new matching change in the specified namespace. Attaching a `change`\n   * event listener to a Change Stream will switch the stream into flowing mode. Data will\n   * then be passed as soon as it is available.\n   * @event\n   */\n  static readonly CHANGE = 'change' as const;\n  /** @event */\n  static readonly END = 'end' as const;\n  /** @event */\n  static readonly ERROR = 'error' as const;\n  /**\n   * Emitted each time the change stream stores a new resume token.\n   * @event\n   */\n  static readonly RESUME_TOKEN_CHANGED = 'resumeTokenChanged' as const;\n\n  /**\n   * @internal\n   *\n   * @param parent - The parent object that created this change stream\n   * @param pipeline - An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents\n   */\n  constructor(\n    parent: OperationParent,\n    pipeline: Document[] = [],\n    options: ChangeStreamOptions = {}\n  ) {\n    super();\n\n    this.pipeline = pipeline;\n    this.options = options;\n\n    if (parent instanceof Collection) {\n      this.type = CHANGE_DOMAIN_TYPES.COLLECTION;\n    } else if (parent instanceof Db) {\n      this.type = CHANGE_DOMAIN_TYPES.DATABASE;\n    } else if (parent instanceof MongoClient) {\n      this.type = CHANGE_DOMAIN_TYPES.CLUSTER;\n    } else {\n      throw new MongoChangeStreamError(\n        'Parent provided to ChangeStream constructor must be an instance of Collection, Db, or MongoClient'\n      );\n    }\n\n    this.parent = parent;\n    this.namespace = parent.s.namespace;\n    if (!this.options.readPreference && parent.readPreference) {\n      this.options.readPreference = parent.readPreference;\n    }\n\n    this[kResumeQueue] = new Denque();\n\n    // Create contained Change Stream cursor\n    this.cursor = createChangeStreamCursor(this, options);\n\n    this[kClosed] = false;\n    this[kMode] = false;\n\n    // Listen for any `change` listeners being added to ChangeStream\n    this.on('newListener', eventName => {\n      if (eventName === 'change' && this.cursor && this.listenerCount('change') === 0) {\n        streamEvents(this, this.cursor);\n      }\n    });\n\n    this.on('removeListener', eventName => {\n      if (eventName === 'change' && this.listenerCount('change') === 0 && this.cursor) {\n        this[kCursorStream]?.removeAllListeners('data');\n      }\n    });\n  }\n\n  /** @internal */\n  get cursorStream(): Readable | undefined {\n    return this[kCursorStream];\n  }\n\n  /** The cached resume token that is used to resume after the most recently returned change. */\n  get resumeToken(): ResumeToken {\n    return this.cursor?.resumeToken;\n  }\n\n  /** Check if there is any document still available in the Change Stream */\n  hasNext(callback?: Callback): Promise<void> | void {\n    setIsIterator(this);\n    return maybePromise(callback, cb => {\n      getCursor(this, (err, cursor) => {\n        if (err || !cursor) return cb(err); // failed to resume, raise an error\n        cursor.hasNext(cb);\n      });\n    });\n  }\n\n  /** Get the next available document from the Change Stream. */\n  next(): Promise<ChangeStreamDocument<TSchema>>;\n  next(callback: Callback<ChangeStreamDocument<TSchema>>): void;\n  next(\n    callback?: Callback<ChangeStreamDocument<TSchema>>\n  ): Promise<ChangeStreamDocument<TSchema>> | void {\n    setIsIterator(this);\n    return maybePromise(callback, cb => {\n      getCursor(this, (err, cursor) => {\n        if (err || !cursor) return cb(err); // failed to resume, raise an error\n        cursor.next((error, change) => {\n          if (error) {\n            this[kResumeQueue].push(() => this.next(cb));\n            processError(this, error, cb);\n            return;\n          }\n          processNewChange<TSchema>(this, change, cb);\n        });\n      });\n    });\n  }\n\n  /** Is the cursor closed */\n  get closed(): boolean {\n    return this[kClosed] || (this.cursor?.closed ?? false);\n  }\n\n  /** Close the Change Stream */\n  close(callback?: Callback): Promise<void> | void {\n    this[kClosed] = true;\n\n    return maybePromise(callback, cb => {\n      if (!this.cursor) {\n        return cb();\n      }\n\n      const cursor = this.cursor;\n      return cursor.close(err => {\n        endStream(this);\n        this.cursor = undefined;\n        return cb(err);\n      });\n    });\n  }\n\n  /**\n   * Return a modified Readable stream including a possible transform method.\n   * @throws MongoDriverError if this.cursor is undefined\n   */\n  stream(options?: CursorStreamOptions): Readable {\n    this.streamOptions = options;\n    if (!this.cursor) throw new MongoChangeStreamError(NO_CURSOR_ERROR);\n    return this.cursor.stream(options);\n  }\n\n  /**\n   * Try to get the next available document from the Change Stream's cursor or `null` if an empty batch is returned\n   */\n  tryNext(): Promise<Document | null>;\n  tryNext(callback: Callback<Document | null>): void;\n  tryNext(callback?: Callback<Document | null>): Promise<Document | null> | void {\n    setIsIterator(this);\n    return maybePromise(callback, cb => {\n      getCursor(this, (err, cursor) => {\n        if (err || !cursor) return cb(err); // failed to resume, raise an error\n        return cursor.tryNext(cb);\n      });\n    });\n  }\n}\n\n/** @internal */\nexport interface ChangeStreamCursorOptions extends AbstractCursorOptions {\n  startAtOperationTime?: OperationTime;\n  resumeAfter?: ResumeToken;\n  startAfter?: boolean;\n}\n\n/** @internal */\nexport class ChangeStreamCursor<TSchema extends Document = Document> extends AbstractCursor<\n  ChangeStreamDocument<TSchema>,\n  ChangeStreamEvents\n> {\n  _resumeToken: ResumeToken;\n  startAtOperationTime?: OperationTime;\n  hasReceived?: boolean;\n  resumeAfter: ResumeToken;\n  startAfter: ResumeToken;\n  options: ChangeStreamCursorOptions;\n\n  postBatchResumeToken?: ResumeToken;\n  pipeline: Document[];\n\n  constructor(\n    topology: Topology,\n    namespace: MongoDBNamespace,\n    pipeline: Document[] = [],\n    options: ChangeStreamCursorOptions = {}\n  ) {\n    super(topology, namespace, options);\n\n    this.pipeline = pipeline;\n    this.options = options;\n    this._resumeToken = null;\n    this.startAtOperationTime = options.startAtOperationTime;\n\n    if (options.startAfter) {\n      this.resumeToken = options.startAfter;\n    } else if (options.resumeAfter) {\n      this.resumeToken = options.resumeAfter;\n    }\n  }\n\n  set resumeToken(token: ResumeToken) {\n    this._resumeToken = token;\n    this.emit(ChangeStream.RESUME_TOKEN_CHANGED, token);\n  }\n\n  get resumeToken(): ResumeToken {\n    return this._resumeToken;\n  }\n\n  get resumeOptions(): ResumeOptions {\n    const result = {} as ResumeOptions;\n    for (const optionName of CURSOR_OPTIONS) {\n      if (Reflect.has(this.options, optionName)) {\n        Reflect.set(result, optionName, Reflect.get(this.options, optionName));\n      }\n    }\n\n    if (this.resumeToken || this.startAtOperationTime) {\n      ['resumeAfter', 'startAfter', 'startAtOperationTime'].forEach(key =>\n        Reflect.deleteProperty(result, key)\n      );\n\n      if (this.resumeToken) {\n        const resumeKey =\n          this.options.startAfter && !this.hasReceived ? 'startAfter' : 'resumeAfter';\n        Reflect.set(result, resumeKey, this.resumeToken);\n      } else if (this.startAtOperationTime && maxWireVersion(this.server) >= 7) {\n        result.startAtOperationTime = this.startAtOperationTime;\n      }\n    }\n\n    return result;\n  }\n\n  cacheResumeToken(resumeToken: ResumeToken): void {\n    if (this.bufferedCount() === 0 && this.postBatchResumeToken) {\n      this.resumeToken = this.postBatchResumeToken;\n    } else {\n      this.resumeToken = resumeToken;\n    }\n    this.hasReceived = true;\n  }\n\n  _processBatch(batchName: string, response?: Document): void {\n    const cursor = response?.cursor || {};\n    if (cursor.postBatchResumeToken) {\n      this.postBatchResumeToken = cursor.postBatchResumeToken;\n\n      if (cursor[batchName].length === 0) {\n        this.resumeToken = cursor.postBatchResumeToken;\n      }\n    }\n  }\n\n  clone(): AbstractCursor<ChangeStreamDocument<TSchema>> {\n    return new ChangeStreamCursor(this.topology, this.namespace, this.pipeline, {\n      ...this.cursorOptions\n    });\n  }\n\n  _initialize(session: ClientSession, callback: Callback<ExecutionResult>): void {\n    const aggregateOperation = new AggregateOperation(this.namespace, this.pipeline, {\n      ...this.cursorOptions,\n      ...this.options,\n      session\n    });\n\n    executeOperation(this.topology, aggregateOperation, (err, response) => {\n      if (err || response == null) {\n        return callback(err);\n      }\n\n      const server = aggregateOperation.server;\n      if (\n        this.startAtOperationTime == null &&\n        this.resumeAfter == null &&\n        this.startAfter == null &&\n        maxWireVersion(server) >= 7\n      ) {\n        this.startAtOperationTime = response.operationTime;\n      }\n\n      this._processBatch('firstBatch', response);\n\n      this.emit(ChangeStream.INIT, response);\n      this.emit(ChangeStream.RESPONSE);\n\n      // TODO: NODE-2882\n      callback(undefined, { server, session, response });\n    });\n  }\n\n  _getMore(batchSize: number, callback: Callback): void {\n    super._getMore(batchSize, (err, response) => {\n      if (err) {\n        return callback(err);\n      }\n\n      this._processBatch('nextBatch', response);\n\n      this.emit(ChangeStream.MORE, response);\n      this.emit(ChangeStream.RESPONSE);\n      callback(err, response);\n    });\n  }\n}\n\nconst CHANGE_STREAM_EVENTS = [\n  ChangeStream.RESUME_TOKEN_CHANGED,\n  ChangeStream.END,\n  ChangeStream.CLOSE\n];\n\nfunction setIsEmitter<TSchema>(changeStream: ChangeStream<TSchema>): void {\n  if (changeStream[kMode] === 'iterator') {\n    // TODO(NODE-3485): Replace with MongoChangeStreamModeError\n    throw new MongoAPIError(\n      'ChangeStream cannot be used as an EventEmitter after being used as an iterator'\n    );\n  }\n  changeStream[kMode] = 'emitter';\n}\n\nfunction setIsIterator<TSchema>(changeStream: ChangeStream<TSchema>): void {\n  if (changeStream[kMode] === 'emitter') {\n    // TODO(NODE-3485): Replace with MongoChangeStreamModeError\n    throw new MongoAPIError(\n      'ChangeStream cannot be used as an iterator after being used as an EventEmitter'\n    );\n  }\n  changeStream[kMode] = 'iterator';\n}\n/**\n * Create a new change stream cursor based on self's configuration\n * @internal\n */\nfunction createChangeStreamCursor<TSchema>(\n  changeStream: ChangeStream<TSchema>,\n  options: ChangeStreamOptions\n): ChangeStreamCursor<TSchema> {\n  const changeStreamStageOptions: Document = { fullDocument: options.fullDocument || 'default' };\n  applyKnownOptions(changeStreamStageOptions, options, CHANGE_STREAM_OPTIONS);\n  if (changeStream.type === CHANGE_DOMAIN_TYPES.CLUSTER) {\n    changeStreamStageOptions.allChangesForCluster = true;\n  }\n\n  const pipeline = [{ $changeStream: changeStreamStageOptions } as Document].concat(\n    changeStream.pipeline\n  );\n\n  const cursorOptions = applyKnownOptions({}, options, CURSOR_OPTIONS);\n  const changeStreamCursor = new ChangeStreamCursor<TSchema>(\n    getTopology(changeStream.parent),\n    changeStream.namespace,\n    pipeline,\n    cursorOptions\n  );\n\n  for (const event of CHANGE_STREAM_EVENTS) {\n    changeStreamCursor.on(event, e => changeStream.emit(event, e));\n  }\n\n  if (changeStream.listenerCount(ChangeStream.CHANGE) > 0) {\n    streamEvents(changeStream, changeStreamCursor);\n  }\n\n  return changeStreamCursor;\n}\n\nfunction applyKnownOptions(target: Document, source: Document, optionNames: string[]) {\n  optionNames.forEach(name => {\n    if (source[name]) {\n      target[name] = source[name];\n    }\n  });\n\n  return target;\n}\n\ninterface TopologyWaitOptions {\n  start?: number;\n  timeout?: number;\n  readPreference?: ReadPreference;\n}\n// This method performs a basic server selection loop, satisfying the requirements of\n// ChangeStream resumability until the new SDAM layer can be used.\nconst SELECTION_TIMEOUT = 30000;\nfunction waitForTopologyConnected(\n  topology: Topology,\n  options: TopologyWaitOptions,\n  callback: Callback\n) {\n  setTimeout(() => {\n    if (options && options.start == null) {\n      options.start = now();\n    }\n\n    const start = options.start || now();\n    const timeout = options.timeout || SELECTION_TIMEOUT;\n    if (topology.isConnected()) {\n      return callback();\n    }\n\n    if (calculateDurationInMs(start) > timeout) {\n      // TODO(NODE-3497): Replace with MongoNetworkTimeoutError\n      return callback(new MongoRuntimeError('Timed out waiting for connection'));\n    }\n\n    waitForTopologyConnected(topology, options, callback);\n  }, 500); // this is an arbitrary wait time to allow SDAM to transition\n}\n\nfunction closeWithError<T>(\n  changeStream: ChangeStream<T>,\n  error: AnyError,\n  callback?: Callback\n): void {\n  if (!callback) {\n    changeStream.emit(ChangeStream.ERROR, error);\n  }\n\n  changeStream.close(() => callback && callback(error));\n}\n\nfunction streamEvents<TSchema>(\n  changeStream: ChangeStream<TSchema>,\n  cursor: ChangeStreamCursor<TSchema>\n): void {\n  setIsEmitter(changeStream);\n  const stream = changeStream[kCursorStream] || cursor.stream();\n  changeStream[kCursorStream] = stream;\n  stream.on('data', change => processNewChange(changeStream, change));\n  stream.on('error', error => processError(changeStream, error));\n}\n\nfunction endStream<TSchema>(changeStream: ChangeStream<TSchema>): void {\n  const cursorStream = changeStream[kCursorStream];\n  if (cursorStream) {\n    ['data', 'close', 'end', 'error'].forEach(event => cursorStream.removeAllListeners(event));\n    cursorStream.destroy();\n  }\n\n  changeStream[kCursorStream] = undefined;\n}\n\nfunction processNewChange<TSchema>(\n  changeStream: ChangeStream<TSchema>,\n  change: Nullable<ChangeStreamDocument<TSchema>>,\n  callback?: Callback<ChangeStreamDocument<TSchema>>\n) {\n  if (changeStream[kClosed]) {\n    // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n    if (callback) callback(new MongoAPIError(CHANGESTREAM_CLOSED_ERROR));\n    return;\n  }\n\n  // a null change means the cursor has been notified, implicitly closing the change stream\n  if (change == null) {\n    // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n    return closeWithError(changeStream, new MongoRuntimeError(CHANGESTREAM_CLOSED_ERROR), callback);\n  }\n\n  if (change && !change._id) {\n    return closeWithError(\n      changeStream,\n      new MongoChangeStreamError(NO_RESUME_TOKEN_ERROR),\n      callback\n    );\n  }\n\n  // cache the resume token\n  changeStream.cursor?.cacheResumeToken(change._id);\n\n  // wipe the startAtOperationTime if there was one so that there won't be a conflict\n  // between resumeToken and startAtOperationTime if we need to reconnect the cursor\n  changeStream.options.startAtOperationTime = undefined;\n\n  // Return the change\n  if (!callback) return changeStream.emit(ChangeStream.CHANGE, change);\n  return callback(undefined, change);\n}\n\nfunction processError<TSchema>(\n  changeStream: ChangeStream<TSchema>,\n  error: AnyError,\n  callback?: Callback\n) {\n  const cursor = changeStream.cursor;\n\n  // If the change stream has been closed explicitly, do not process error.\n  if (changeStream[kClosed]) {\n    // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n    if (callback) callback(new MongoAPIError(CHANGESTREAM_CLOSED_ERROR));\n    return;\n  }\n\n  // if the resume succeeds, continue with the new cursor\n  function resumeWithCursor(newCursor: ChangeStreamCursor<TSchema>) {\n    changeStream.cursor = newCursor;\n    processResumeQueue(changeStream);\n  }\n\n  // otherwise, raise an error and close the change stream\n  function unresumableError(err: AnyError) {\n    if (!callback) {\n      changeStream.emit(ChangeStream.ERROR, err);\n    }\n\n    changeStream.close(() => processResumeQueue(changeStream, err));\n  }\n\n  if (cursor && isResumableError(error as MongoError, maxWireVersion(cursor.server))) {\n    changeStream.cursor = undefined;\n\n    // stop listening to all events from old cursor\n    endStream(changeStream);\n\n    // close internal cursor, ignore errors\n    cursor.close();\n\n    const topology = getTopology(changeStream.parent);\n    waitForTopologyConnected(topology, { readPreference: cursor.readPreference }, err => {\n      // if the topology can't reconnect, close the stream\n      if (err) return unresumableError(err);\n\n      // create a new cursor, preserving the old cursor's options\n      const newCursor = createChangeStreamCursor(changeStream, cursor.resumeOptions);\n\n      // attempt to continue in emitter mode\n      if (!callback) return resumeWithCursor(newCursor);\n\n      // attempt to continue in iterator mode\n      newCursor.hasNext(err => {\n        // if there's an error immediately after resuming, close the stream\n        if (err) return unresumableError(err);\n        resumeWithCursor(newCursor);\n      });\n    });\n    return;\n  }\n\n  // if initial error wasn't resumable, raise an error and close the change stream\n  return closeWithError(changeStream, error, callback);\n}\n\n/**\n * Safely provides a cursor across resume attempts\n *\n * @param changeStream - the parent ChangeStream\n */\nfunction getCursor<T>(changeStream: ChangeStream<T>, callback: Callback<ChangeStreamCursor<T>>) {\n  if (changeStream[kClosed]) {\n    // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n    callback(new MongoAPIError(CHANGESTREAM_CLOSED_ERROR));\n    return;\n  }\n\n  // if a cursor exists and it is open, return it\n  if (changeStream.cursor) {\n    callback(undefined, changeStream.cursor);\n    return;\n  }\n\n  // no cursor, queue callback until topology reconnects\n  changeStream[kResumeQueue].push(callback);\n}\n\n/**\n * Drain the resume queue when a new has become available\n *\n * @param changeStream - the parent ChangeStream\n * @param err - error getting a new cursor\n */\nfunction processResumeQueue<TSchema>(changeStream: ChangeStream<TSchema>, err?: Error) {\n  while (changeStream[kResumeQueue].length) {\n    const request = changeStream[kResumeQueue].pop();\n    if (!request) break; // Should never occur but TS can't use the length check in the while condition\n\n    if (!err) {\n      if (changeStream[kClosed]) {\n        // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n        request(new MongoAPIError(CHANGESTREAM_CLOSED_ERROR));\n        return;\n      }\n      if (!changeStream.cursor) {\n        request(new MongoChangeStreamError(NO_CURSOR_ERROR));\n        return;\n      }\n    }\n    request(err, changeStream.cursor);\n  }\n}\n", "import { AggregateOperation, AggregateOptions } from './aggregate';\nimport type { Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport type { ClientSession } from '../sessions';\n\n/** @public */\nexport interface CountDocumentsOptions extends AggregateOptions {\n  /** The number of documents to skip. */\n  skip?: number;\n  /** The maximum amounts to count before aborting. */\n  limit?: number;\n}\n\n/** @internal */\nexport class CountDocumentsOperation extends AggregateOperation<number> {\n  constructor(collection: Collection, query: Document, options: CountDocumentsOptions) {\n    const pipeline = [];\n    pipeline.push({ $match: query });\n\n    if (typeof options.skip === 'number') {\n      pipeline.push({ $skip: options.skip });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({ $limit: options.limit });\n    }\n\n    pipeline.push({ $group: { _id: 1, n: { $sum: 1 } } });\n\n    super(collection.s.namespace, pipeline, options);\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<number>): void {\n    super.execute(server, session, (err, result) => {\n      if (err || !result) {\n        callback(err);\n        return;\n      }\n\n      // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n      const response = result as unknown as Document;\n      if (response.cursor == null || response.cursor.firstBatch == null) {\n        callback(undefined, 0);\n        return;\n      }\n\n      const docs = response.cursor.firstBatch;\n      callback(undefined, docs.length ? docs[0].n : 0);\n    });\n  }\n}\n", "import { Aspect, defineAspects } from './operation';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport { decorateWithCollation, decorateWithReadConcern, Callback, maxWireVersion } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport { MongoCompatibilityError } from '../error';\nimport type { ClientSession } from '../sessions';\n\n/** @public */\nexport type DistinctOptions = CommandOperationOptions;\n\n/**\n * Return a list of distinct values for the given key across a collection.\n * @internal\n */\nexport class DistinctOperation extends CommandOperation<any[]> {\n  options: DistinctOptions;\n  collection: Collection;\n  /** Field of the document to find distinct values for. */\n  key: string;\n  /** The query for filtering the set of documents to which we apply the distinct filter. */\n  query: Document;\n\n  /**\n   * Construct a Distinct operation.\n   *\n   * @param collection - Collection instance.\n   * @param key - Field of the document to find distinct values for.\n   * @param query - The query for filtering the set of documents to which we apply the distinct filter.\n   * @param options - Optional settings. See Collection.prototype.distinct for a list of options.\n   */\n  constructor(collection: Collection, key: string, query: Document, options?: DistinctOptions) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collection = collection;\n    this.key = key;\n    this.query = query;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<any[]>): void {\n    const coll = this.collection;\n    const key = this.key;\n    const query = this.query;\n    const options = this.options;\n\n    // Distinct command\n    const cmd: Document = {\n      distinct: coll.collectionName,\n      key: key,\n      query: query\n    };\n\n    // Add maxTimeMS if defined\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(cmd, coll, options);\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(cmd, coll, options);\n    } catch (err) {\n      return callback(err);\n    }\n\n    if (this.explain && maxWireVersion(server) < 4) {\n      callback(\n        new MongoCompatibilityError(`Server ${server.name} does not support explain on distinct`)\n      );\n      return;\n    }\n\n    super.executeCommand(server, session, cmd, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, this.explain ? result : result.values);\n    });\n  }\n}\n\ndefineAspects(DistinctOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXPLAINABLE]);\n", "import { Aspect, defineAspects } from './operation';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport type { Callback } from '../utils';\nimport type { Server } from '../sdam/server';\nimport type { Db } from '../db';\nimport type { ClientSession } from '../sessions';\n\n/** @public */\nexport type DropCollectionOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropCollectionOperation extends CommandOperation<boolean> {\n  options: DropCollectionOptions;\n  name: string;\n\n  constructor(db: Db, name: string, options: DropCollectionOptions) {\n    super(db, options);\n    this.options = options;\n    this.name = name;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<boolean>): void {\n    super.executeCommand(server, session, { drop: this.name }, (err, result) => {\n      if (err) return callback(err);\n      if (result.ok) return callback(undefined, true);\n      callback(undefined, false);\n    });\n  }\n}\n\n/** @public */\nexport type DropDatabaseOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropDatabaseOperation extends CommandOperation<boolean> {\n  options: DropDatabaseOptions;\n\n  constructor(db: Db, options: DropDatabaseOptions) {\n    super(db, options);\n    this.options = options;\n  }\n  execute(server: Server, session: ClientSession, callback: Callback<boolean>): void {\n    super.executeCommand(server, session, { dropDatabase: 1 }, (err, result) => {\n      if (err) return callback(err);\n      if (result.ok) return callback(undefined, true);\n      callback(undefined, false);\n    });\n  }\n}\n\ndefineAspects(DropCollectionOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropDatabaseOperation, [Aspect.WRITE_OPERATION]);\n", "import { Aspect, defineAspects } from './operation';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport { Callback, maxWireVersion } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport type { ClientSession } from '../sessions';\nimport type { MongoServerError } from '../error';\n\n/** @public */\nexport interface EstimatedDocumentCountOptions extends CommandOperationOptions {\n  /**\n   * The maximum amount of time to allow the operation to run.\n   *\n   * This option is sent only if the caller explicitly provides a value. The default is to not send a value.\n   */\n  maxTimeMS?: number;\n}\n\n/** @internal */\nexport class EstimatedDocumentCountOperation extends CommandOperation<number> {\n  options: EstimatedDocumentCountOptions;\n  collectionName: string;\n\n  constructor(collection: Collection, options: EstimatedDocumentCountOptions = {}) {\n    super(collection, options);\n    this.options = options;\n    this.collectionName = collection.collectionName;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<number>): void {\n    if (maxWireVersion(server) < 12) {\n      return this.executeLegacy(server, session, callback);\n    }\n    const pipeline = [{ $collStats: { count: {} } }, { $group: { _id: 1, n: { $sum: '$count' } } }];\n\n    const cmd: Document = { aggregate: this.collectionName, pipeline, cursor: {} };\n\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err && (err as MongoServerError).code !== 26) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, response?.cursor?.firstBatch[0]?.n || 0);\n    });\n  }\n\n  executeLegacy(server: Server, session: ClientSession, callback: Callback<number>): void {\n    const cmd: Document = { count: this.collectionName };\n\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, response.n || 0);\n    });\n  }\n}\n\ndefineAspects(EstimatedDocumentCountOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\n", "import { ReadPreference } from '../read_preference';\nimport { maxWireVersion, decorateWithCollation, hasAtomicOperators, Callback } from '../utils';\nimport { MongoInvalidArgumentError, MongoCompatibilityError } from '../error';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport { defineAspects, Aspect } from './operation';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport { Sort, SortForCmd, formatSort } from '../sort';\nimport type { ClientSession } from '../sessions';\nimport type { WriteConcern, WriteConcernSettings } from '../write_concern';\n\n/** @public */\nexport const ReturnDocument = Object.freeze({\n  BEFORE: 'before',\n  AFTER: 'after'\n} as const);\n\n/** @public */\nexport type ReturnDocument = typeof ReturnDocument[keyof typeof ReturnDocument];\n\n/** @public */\nexport interface FindOneAndDeleteOptions extends CommandOperationOptions {\n  /** An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint|update command} reference for more information.*/\n  hint?: Document;\n  /** Limits the fields to return for all matching documents. */\n  projection?: Document;\n  /** Determines which document the operation modifies if the query selects multiple documents. */\n  sort?: Sort;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/** @public */\nexport interface FindOneAndReplaceOptions extends CommandOperationOptions {\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n  /** An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint|update command} reference for more information.*/\n  hint?: Document;\n  /** Limits the fields to return for all matching documents. */\n  projection?: Document;\n  /** When set to 'after', returns the updated document rather than the original. The default is 'before'.  */\n  returnDocument?: ReturnDocument;\n  /** Determines which document the operation modifies if the query selects multiple documents. */\n  sort?: Sort;\n  /** Upsert the document if it does not exist. */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/** @public */\nexport interface FindOneAndUpdateOptions extends CommandOperationOptions {\n  /** Optional list of array filters referenced in filtered positional operators */\n  arrayFilters?: Document[];\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n  /** An optional hint for query optimization. See the {@link https://docs.mongodb.com/manual/reference/command/update/#update-command-hint|update command} reference for more information.*/\n  hint?: Document;\n  /** Limits the fields to return for all matching documents. */\n  projection?: Document;\n  /** When set to 'after', returns the updated document rather than the original. The default is 'before'.  */\n  returnDocument?: ReturnDocument;\n  /** Determines which document the operation modifies if the query selects multiple documents. */\n  sort?: Sort;\n  /** Upsert the document if it does not exist. */\n  upsert?: boolean;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n}\n\n/** @internal */\ninterface FindAndModifyCmdBase {\n  remove: boolean;\n  new: boolean;\n  upsert: boolean;\n  update?: Document;\n  sort?: SortForCmd;\n  fields?: Document;\n  bypassDocumentValidation?: boolean;\n  arrayFilters?: Document[];\n  maxTimeMS?: number;\n  let?: Document;\n  writeConcern?: WriteConcern | WriteConcernSettings;\n}\n\nfunction configureFindAndModifyCmdBaseUpdateOpts(\n  cmdBase: FindAndModifyCmdBase,\n  options: FindOneAndReplaceOptions | FindOneAndUpdateOptions\n): FindAndModifyCmdBase {\n  cmdBase.new = options.returnDocument === ReturnDocument.AFTER;\n  cmdBase.upsert = options.upsert === true;\n\n  if (options.bypassDocumentValidation === true) {\n    cmdBase.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n  return cmdBase;\n}\n\n/** @internal */\nclass FindAndModifyOperation extends CommandOperation<Document> {\n  options: FindOneAndReplaceOptions | FindOneAndUpdateOptions | FindOneAndDeleteOptions;\n  cmdBase: FindAndModifyCmdBase;\n  collection: Collection;\n  query: Document;\n  doc?: Document;\n\n  constructor(\n    collection: Collection,\n    query: Document,\n    options: FindOneAndReplaceOptions | FindOneAndUpdateOptions | FindOneAndDeleteOptions\n  ) {\n    super(collection, options);\n    this.options = options ?? {};\n    this.cmdBase = {\n      remove: false,\n      new: false,\n      upsert: false\n    };\n\n    const sort = formatSort(options.sort);\n    if (sort) {\n      this.cmdBase.sort = sort;\n    }\n\n    if (options.projection) {\n      this.cmdBase.fields = options.projection;\n    }\n\n    if (options.maxTimeMS) {\n      this.cmdBase.maxTimeMS = options.maxTimeMS;\n    }\n\n    // Decorate the findAndModify command with the write Concern\n    if (options.writeConcern) {\n      this.cmdBase.writeConcern = options.writeConcern;\n    }\n\n    if (options.let) {\n      this.cmdBase.let = options.let;\n    }\n\n    // force primary read preference\n    this.readPreference = ReadPreference.primary;\n\n    this.collection = collection;\n    this.query = query;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const coll = this.collection;\n    const query = this.query;\n    const options = { ...this.options, ...this.bsonOptions };\n\n    // Create findAndModify command object\n    const cmd: Document = {\n      findAndModify: coll.collectionName,\n      query: query,\n      ...this.cmdBase\n    };\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(cmd, coll, options);\n    } catch (err) {\n      return callback(err);\n    }\n\n    if (options.hint) {\n      // TODO: once this method becomes a CommandOperation we will have the server\n      // in place to check.\n      const unacknowledgedWrite = this.writeConcern?.w === 0;\n      if (unacknowledgedWrite || maxWireVersion(server) < 8) {\n        callback(\n          new MongoCompatibilityError(\n            'The current topology does not support a hint on findAndModify commands'\n          )\n        );\n\n        return;\n      }\n\n      cmd.hint = options.hint;\n    }\n\n    if (this.explain && maxWireVersion(server) < 4) {\n      callback(\n        new MongoCompatibilityError(\n          `Server ${server.name} does not support explain on findAndModify`\n        )\n      );\n      return;\n    }\n\n    // Execute the command\n    super.executeCommand(server, session, cmd, (err, result) => {\n      if (err) return callback(err);\n      return callback(undefined, result);\n    });\n  }\n}\n\n/** @internal */\nexport class FindOneAndDeleteOperation extends FindAndModifyOperation {\n  constructor(collection: Collection, filter: Document, options: FindOneAndDeleteOptions) {\n    // Basic validation\n    if (filter == null || typeof filter !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n\n    super(collection, filter, options);\n    this.cmdBase.remove = true;\n  }\n}\n\n/** @internal */\nexport class FindOneAndReplaceOperation extends FindAndModifyOperation {\n  constructor(\n    collection: Collection,\n    filter: Document,\n    replacement: Document,\n    options: FindOneAndReplaceOptions\n  ) {\n    if (filter == null || typeof filter !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n\n    if (replacement == null || typeof replacement !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"replacement\" must be an object');\n    }\n\n    if (hasAtomicOperators(replacement)) {\n      throw new MongoInvalidArgumentError('Replacement document must not contain atomic operators');\n    }\n\n    super(collection, filter, options);\n    this.cmdBase.update = replacement;\n    configureFindAndModifyCmdBaseUpdateOpts(this.cmdBase, options);\n  }\n}\n\n/** @internal */\nexport class FindOneAndUpdateOperation extends FindAndModifyOperation {\n  constructor(\n    collection: Collection,\n    filter: Document,\n    update: Document,\n    options: FindOneAndUpdateOptions\n  ) {\n    if (filter == null || typeof filter !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"filter\" must be an object');\n    }\n\n    if (update == null || typeof update !== 'object') {\n      throw new MongoInvalidArgumentError('Argument \"update\" must be an object');\n    }\n\n    if (!hasAtomicOperators(update)) {\n      throw new MongoInvalidArgumentError('Update document requires atomic operators');\n    }\n\n    super(collection, filter, options);\n    this.cmdBase.update = update;\n    configureFindAndModifyCmdBaseUpdateOpts(this.cmdBase, options);\n\n    if (options.arrayFilters) {\n      this.cmdBase.arrayFilters = options.arrayFilters;\n    }\n  }\n}\n\ndefineAspects(FindAndModifyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.EXPLAINABLE\n]);\n", "import type { Callback } from '../utils';\nimport type { Collection } from '../collection';\nimport { OperationOptions, AbstractOperation } from './operation';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { MongoAPIError } from '../error';\n\n/** @internal */\nexport class IsCappedOperation extends AbstractOperation<boolean> {\n  options: OperationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: OperationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<boolean>): void {\n    const coll = this.collection;\n\n    coll.s.db\n      .listCollections(\n        { name: coll.collectionName },\n        { ...this.options, nameOnly: false, readPreference: this.readPreference, session }\n      )\n      .toArray((err, collections) => {\n        if (err || !collections) return callback(err);\n        if (collections.length === 0) {\n          // TODO(NODE-3485)\n          return callback(new MongoAPIError(`collection ${coll.namespace} not found`));\n        }\n\n        const collOptions = collections[0].options;\n        callback(undefined, !!(collOptions && collOptions.capped));\n      });\n  }\n}\n", "import { Code, Document } from '../bson';\nimport {\n  applyWriteConcern,\n  decorateWithCollation,\n  decorateWithReadConcern,\n  isObject,\n  Callback,\n  maxWireVersion\n} from '../utils';\nimport { ReadPreference, ReadPreferenceMode } from '../read_preference';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport type { Sort } from '../sort';\nimport { MongoServerError, MongoCompatibilityError } from '../error';\nimport type { ObjectId } from '../bson';\nimport { Aspect, defineAspects } from './operation';\nimport type { ClientSession } from '../sessions';\nimport { Db } from '../db';\n\nconst exclusionList = [\n  'explain',\n  'readPreference',\n  'readConcern',\n  'session',\n  'bypassDocumentValidation',\n  'writeConcern',\n  'raw',\n  'fieldsAsRaw',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'bsonRegExp',\n  'serializeFunctions',\n  'ignoreUndefined',\n  'scope' // this option is reformatted thus exclude the original\n];\n\n/** @public */\nexport type MapFunction<TSchema = Document> = (this: TSchema) => void;\n/** @public */\nexport type ReduceFunction<TKey = ObjectId, TValue = any> = (key: TKey, values: TValue[]) => TValue;\n/** @public */\nexport type FinalizeFunction<TKey = ObjectId, TValue = Document> = (\n  key: TKey,\n  reducedValue: TValue\n) => TValue;\n\n/** @public */\nexport interface MapReduceOptions<TKey = ObjectId, TValue = Document>\n  extends CommandOperationOptions {\n  /** Sets the output target for the map reduce job. */\n  out?: 'inline' | { inline: 1 } | { replace: string } | { merge: string } | { reduce: string };\n  /** Query filter object. */\n  query?: Document;\n  /** Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces. */\n  sort?: Sort;\n  /** Number of objects to return from collection. */\n  limit?: number;\n  /** Keep temporary data. */\n  keeptemp?: boolean;\n  /** Finalize function. */\n  finalize?: FinalizeFunction<TKey, TValue> | string;\n  /** Can pass in variables that can be access from map/reduce/finalize. */\n  scope?: Document;\n  /** It is possible to make the execution stay in JS. Provided in MongoDB \\> 2.0.X. */\n  jsMode?: boolean;\n  /** Provide statistics on job execution time. */\n  verbose?: boolean;\n  /** Allow driver to bypass schema validation in MongoDB 3.2 or higher. */\n  bypassDocumentValidation?: boolean;\n}\n\ninterface MapReduceStats {\n  processtime?: number;\n  counts?: number;\n  timing?: number;\n}\n\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n * @internal\n */\nexport class MapReduceOperation extends CommandOperation<Document | Document[]> {\n  options: MapReduceOptions;\n  collection: Collection;\n  /** The mapping function. */\n  map: MapFunction | string;\n  /** The reduce function. */\n  reduce: ReduceFunction | string;\n\n  /**\n   * Constructs a MapReduce operation.\n   *\n   * @param collection - Collection instance.\n   * @param map - The mapping function.\n   * @param reduce - The reduce function.\n   * @param options - Optional settings. See Collection.prototype.mapReduce for a list of options.\n   */\n  constructor(\n    collection: Collection,\n    map: MapFunction | string,\n    reduce: ReduceFunction | string,\n    options?: MapReduceOptions\n  ) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collection = collection;\n    this.map = map;\n    this.reduce = reduce;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document | Document[]>): void {\n    const coll = this.collection;\n    const map = this.map;\n    const reduce = this.reduce;\n    let options = this.options;\n\n    const mapCommandHash: Document = {\n      mapReduce: coll.collectionName,\n      map: map,\n      reduce: reduce\n    };\n\n    if (options.scope) {\n      mapCommandHash.scope = processScope(options.scope);\n    }\n\n    // Add any other options passed in\n    for (const n in options) {\n      // Only include if not in exclusion list\n      if (exclusionList.indexOf(n) === -1) {\n        mapCommandHash[n] = (options as any)[n];\n      }\n    }\n\n    options = Object.assign({}, options);\n\n    // If we have a read preference and inline is not set as output fail hard\n    if (\n      this.readPreference.mode === ReadPreferenceMode.primary &&\n      options.out &&\n      (options.out as any).inline !== 1 &&\n      options.out !== 'inline'\n    ) {\n      // Force readPreference to primary\n      options.readPreference = ReadPreference.primary;\n      // Decorate command with writeConcern if supported\n      applyWriteConcern(mapCommandHash, { db: coll.s.db, collection: coll }, options);\n    } else {\n      decorateWithReadConcern(mapCommandHash, coll, options);\n    }\n\n    // Is bypassDocumentValidation specified\n    if (options.bypassDocumentValidation === true) {\n      mapCommandHash.bypassDocumentValidation = options.bypassDocumentValidation;\n    }\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(mapCommandHash, coll, options);\n    } catch (err) {\n      return callback(err);\n    }\n\n    if (this.explain && maxWireVersion(server) < 9) {\n      callback(\n        new MongoCompatibilityError(`Server ${server.name} does not support explain on mapReduce`)\n      );\n      return;\n    }\n\n    // Execute command\n    super.executeCommand(server, session, mapCommandHash, (err, result) => {\n      if (err) return callback(err);\n      // Check if we have an error\n      if (1 !== result.ok || result.err || result.errmsg) {\n        return callback(new MongoServerError(result));\n      }\n\n      // If an explain option was executed, don't process the server results\n      if (this.explain) return callback(undefined, result);\n\n      // Create statistics value\n      const stats: MapReduceStats = {};\n      if (result.timeMillis) stats['processtime'] = result.timeMillis;\n      if (result.counts) stats['counts'] = result.counts;\n      if (result.timing) stats['timing'] = result.timing;\n\n      // invoked with inline?\n      if (result.results) {\n        // If we wish for no verbosity\n        if (options['verbose'] == null || !options['verbose']) {\n          return callback(undefined, result.results);\n        }\n\n        return callback(undefined, { results: result.results, stats: stats });\n      }\n\n      // The returned collection\n      let collection = null;\n\n      // If we have an object it's a different db\n      if (result.result != null && typeof result.result === 'object') {\n        const doc = result.result;\n        // Return a collection from another db\n        collection = new Db(coll.s.db.s.client, doc.db, coll.s.db.s.options).collection(\n          doc.collection\n        );\n      } else {\n        // Create a collection object that wraps the result collection\n        collection = coll.s.db.collection(result.result);\n      }\n\n      // If we wish for no verbosity\n      if (options['verbose'] == null || !options['verbose']) {\n        return callback(err, collection);\n      }\n\n      // Return stats as third set of values\n      callback(err, { collection, stats });\n    });\n  }\n}\n\n/** Functions that are passed as scope args must be converted to Code instances. */\nfunction processScope(scope: Document | ObjectId) {\n  if (!isObject(scope) || (scope as any)._bsontype === 'ObjectID') {\n    return scope;\n  }\n\n  const newScope: Document = {};\n\n  for (const key of Object.keys(scope)) {\n    if ('function' === typeof (scope as Document)[key]) {\n      newScope[key] = new Code(String((scope as Document)[key]));\n    } else if ((scope as Document)[key]._bsontype === 'Code') {\n      newScope[key] = (scope as Document)[key];\n    } else {\n      newScope[key] = processScope((scope as Document)[key]);\n    }\n  }\n\n  return newScope;\n}\n\ndefineAspects(MapReduceOperation, [Aspect.EXPLAINABLE]);\n", "import { AbstractOperation, OperationOptions } from './operation';\nimport { MongoAPIError } from '../error';\nimport type { Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\n\n/** @internal */\nexport class OptionsOperation extends AbstractOperation<Document> {\n  options: OperationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: OperationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const coll = this.collection;\n\n    coll.s.db\n      .listCollections(\n        { name: coll.collectionName },\n        { ...this.options, nameOnly: false, readPreference: this.readPreference, session }\n      )\n      .toArray((err, collections) => {\n        if (err || !collections) return callback(err);\n        if (collections.length === 0) {\n          // TODO(NODE-3485)\n          return callback(new MongoAPIError(`collection ${coll.namespace} not found`));\n        }\n\n        callback(err, collections[0].options);\n      });\n  }\n}\n", "import { checkCollectionName, Callback } from '../utils';\nimport { RunAdminCommandOperation } from './run_command';\nimport { defineAspects, Aspect } from './operation';\nimport type { Server } from '../sdam/server';\nimport { Collection } from '../collection';\nimport type { CommandOperationOptions } from './command';\nimport { MongoServerError } from '../error';\nimport type { ClientSession } from '../sessions';\nimport type { Document } from 'bson';\n\n/** @public */\nexport interface RenameOptions extends CommandOperationOptions {\n  /** Drop the target name collection if it previously exists. */\n  dropTarget?: boolean;\n  /** Unclear */\n  new_collection?: boolean;\n}\n\n/** @internal */\nexport class RenameOperation extends RunAdminCommandOperation {\n  options: RenameOptions;\n  collection: Collection;\n  newName: string;\n\n  constructor(collection: Collection, newName: string, options: RenameOptions) {\n    // Check the collection name\n    checkCollectionName(newName);\n\n    // Build the command\n    const renameCollection = collection.namespace;\n    const toCollection = collection.s.namespace.withCollection(newName).toString();\n    const dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n    const cmd = { renameCollection: renameCollection, to: toCollection, dropTarget: dropTarget };\n\n    super(collection, cmd, options);\n    this.options = options;\n    this.collection = collection;\n    this.newName = newName;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Collection>): void {\n    const coll = this.collection;\n\n    super.execute(server, session, (err, doc) => {\n      if (err) return callback(err);\n      // We have an error\n      if (doc.errmsg) {\n        return callback(new MongoServerError(doc));\n      }\n\n      let newColl: Collection<Document>;\n      try {\n        newColl = new Collection(coll.s.db, this.newName, coll.s.options);\n      } catch (err) {\n        return callback(err);\n      }\n\n      return callback(undefined, newColl);\n    });\n  }\n}\n\ndefineAspects(RenameOperation, [Aspect.WRITE_OPERATION]);\n", "import { Aspect, defineAspects } from './operation';\nimport { CommandOperation, CommandOperationOptions } from './command';\nimport type { Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Collection } from '../collection';\nimport type { Db } from '../db';\nimport type { ClientSession } from '../sessions';\n\n/** @public */\nexport interface CollStatsOptions extends CommandOperationOptions {\n  /** Divide the returned sizes by scale value. */\n  scale?: number;\n}\n\n/**\n * Get all the collection statistics.\n * @internal\n */\nexport class CollStatsOperation extends CommandOperation<Document> {\n  options: CollStatsOptions;\n  collectionName: string;\n\n  /**\n   * Construct a Stats operation.\n   *\n   * @param collection - Collection instance\n   * @param options - Optional settings. See Collection.prototype.stats for a list of options.\n   */\n  constructor(collection: Collection, options?: CollStatsOptions) {\n    super(collection, options);\n    this.options = options ?? {};\n    this.collectionName = collection.collectionName;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<CollStats>): void {\n    const command: Document = { collStats: this.collectionName };\n    if (this.options.scale != null) {\n      command.scale = this.options.scale;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\n/** @public */\nexport interface DbStatsOptions extends CommandOperationOptions {\n  /** Divide the returned sizes by scale value. */\n  scale?: number;\n}\n\n/** @internal */\nexport class DbStatsOperation extends CommandOperation<Document> {\n  options: DbStatsOptions;\n\n  constructor(db: Db, options: DbStatsOptions) {\n    super(db, options);\n    this.options = options;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Document>): void {\n    const command: Document = { dbStats: true };\n    if (this.options.scale != null) {\n      command.scale = this.options.scale;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\n/**\n * @public\n * @see https://docs.mongodb.org/manual/reference/command/collStats/\n */\nexport interface CollStats extends Document {\n  /** Namespace */\n  ns: string;\n  /** Number of documents */\n  count: number;\n  /** Collection size in bytes */\n  size: number;\n  /** Average object size in bytes */\n  avgObjSize: number;\n  /** (Pre)allocated space for the collection in bytes */\n  storageSize: number;\n  /** Number of extents (contiguously allocated chunks of datafile space) */\n  numExtents: number;\n  /** Number of indexes */\n  nindexes: number;\n  /** Size of the most recently created extent in bytes */\n  lastExtentSize: number;\n  /** Padding can speed up updates if documents grow */\n  paddingFactor: number;\n  /** A number that indicates the user-set flags on the collection. userFlags only appears when using the mmapv1 storage engine */\n  userFlags?: number;\n  /** Total index size in bytes */\n  totalIndexSize: number;\n  /** Size of specific indexes in bytes */\n  indexSizes: {\n    _id_: number;\n    [index: string]: number;\n  };\n  /** `true` if the collection is capped */\n  capped: boolean;\n  /** The maximum number of documents that may be present in a capped collection */\n  max: number;\n  /** The maximum size of a capped collection */\n  maxSize: number;\n  /** This document contains data reported directly by the WiredTiger engine and other data for internal diagnostic use */\n  wiredTiger?: WiredTigerData;\n  /** The fields in this document are the names of the indexes, while the values themselves are documents that contain statistics for the index provided by the storage engine */\n  indexDetails?: any;\n  ok: number;\n\n  /** The amount of storage available for reuse. The scale argument affects this value. */\n  freeStorageSize?: number;\n  /** An array that contains the names of the indexes that are currently being built on the collection */\n  indexBuilds?: number;\n  /** The sum of the storageSize and totalIndexSize. The scale argument affects this value */\n  totalSize: number;\n  /** The scale value used by the command. */\n  scaleFactor: number;\n}\n\n/** @public */\nexport interface WiredTigerData extends Document {\n  LSM: {\n    'bloom filter false positives': number;\n    'bloom filter hits': number;\n    'bloom filter misses': number;\n    'bloom filter pages evicted from cache': number;\n    'bloom filter pages read into cache': number;\n    'bloom filters in the LSM tree': number;\n    'chunks in the LSM tree': number;\n    'highest merge generation in the LSM tree': number;\n    'queries that could have benefited from a Bloom filter that did not exist': number;\n    'sleep for LSM checkpoint throttle': number;\n    'sleep for LSM merge throttle': number;\n    'total size of bloom filters': number;\n  } & Document;\n  'block-manager': {\n    'allocations requiring file extension': number;\n    'blocks allocated': number;\n    'blocks freed': number;\n    'checkpoint size': number;\n    'file allocation unit size': number;\n    'file bytes available for reuse': number;\n    'file magic number': number;\n    'file major version number': number;\n    'file size in bytes': number;\n    'minor version number': number;\n  };\n  btree: {\n    'btree checkpoint generation': number;\n    'column-store fixed-size leaf pages': number;\n    'column-store internal pages': number;\n    'column-store variable-size RLE encoded values': number;\n    'column-store variable-size deleted values': number;\n    'column-store variable-size leaf pages': number;\n    'fixed-record size': number;\n    'maximum internal page key size': number;\n    'maximum internal page size': number;\n    'maximum leaf page key size': number;\n    'maximum leaf page size': number;\n    'maximum leaf page value size': number;\n    'maximum tree depth': number;\n    'number of key/value pairs': number;\n    'overflow pages': number;\n    'pages rewritten by compaction': number;\n    'row-store internal pages': number;\n    'row-store leaf pages': number;\n  } & Document;\n  cache: {\n    'bytes currently in the cache': number;\n    'bytes read into cache': number;\n    'bytes written from cache': number;\n    'checkpoint blocked page eviction': number;\n    'data source pages selected for eviction unable to be evicted': number;\n    'hazard pointer blocked page eviction': number;\n    'in-memory page passed criteria to be split': number;\n    'in-memory page splits': number;\n    'internal pages evicted': number;\n    'internal pages split during eviction': number;\n    'leaf pages split during eviction': number;\n    'modified pages evicted': number;\n    'overflow pages read into cache': number;\n    'overflow values cached in memory': number;\n    'page split during eviction deepened the tree': number;\n    'page written requiring lookaside records': number;\n    'pages read into cache': number;\n    'pages read into cache requiring lookaside entries': number;\n    'pages requested from the cache': number;\n    'pages written from cache': number;\n    'pages written requiring in-memory restoration': number;\n    'tracked dirty bytes in the cache': number;\n    'unmodified pages evicted': number;\n  } & Document;\n  cache_walk: {\n    'Average difference between current eviction generation when the page was last considered': number;\n    'Average on-disk page image size seen': number;\n    'Clean pages currently in cache': number;\n    'Current eviction generation': number;\n    'Dirty pages currently in cache': number;\n    'Entries in the root page': number;\n    'Internal pages currently in cache': number;\n    'Leaf pages currently in cache': number;\n    'Maximum difference between current eviction generation when the page was last considered': number;\n    'Maximum page size seen': number;\n    'Minimum on-disk page image size seen': number;\n    'On-disk page image sizes smaller than a single allocation unit': number;\n    'Pages created in memory and never written': number;\n    'Pages currently queued for eviction': number;\n    'Pages that could not be queued for eviction': number;\n    'Refs skipped during cache traversal': number;\n    'Size of the root page': number;\n    'Total number of pages currently in cache': number;\n  } & Document;\n  compression: {\n    'compressed pages read': number;\n    'compressed pages written': number;\n    'page written failed to compress': number;\n    'page written was too small to compress': number;\n    'raw compression call failed, additional data available': number;\n    'raw compression call failed, no additional data available': number;\n    'raw compression call succeeded': number;\n  } & Document;\n  cursor: {\n    'bulk-loaded cursor-insert calls': number;\n    'create calls': number;\n    'cursor-insert key and value bytes inserted': number;\n    'cursor-remove key bytes removed': number;\n    'cursor-update value bytes updated': number;\n    'insert calls': number;\n    'next calls': number;\n    'prev calls': number;\n    'remove calls': number;\n    'reset calls': number;\n    'restarted searches': number;\n    'search calls': number;\n    'search near calls': number;\n    'truncate calls': number;\n    'update calls': number;\n  };\n  reconciliation: {\n    'dictionary matches': number;\n    'fast-path pages deleted': number;\n    'internal page key bytes discarded using suffix compression': number;\n    'internal page multi-block writes': number;\n    'internal-page overflow keys': number;\n    'leaf page key bytes discarded using prefix compression': number;\n    'leaf page multi-block writes': number;\n    'leaf-page overflow keys': number;\n    'maximum blocks required for a page': number;\n    'overflow values written': number;\n    'page checksum matches': number;\n    'page reconciliation calls': number;\n    'page reconciliation calls for eviction': number;\n    'pages deleted': number;\n  } & Document;\n}\n\ndefineAspects(CollStatsOperation, [Aspect.READ_OPERATION]);\ndefineAspects(DbStatsOperation, [Aspect.READ_OPERATION]);\n", "import { DEFAULT_PK_FACTORY, emitWarningOnce, resolveOptions } from './utils';\nimport { ReadPreference, ReadPreferenceLike } from './read_preference';\nimport {\n  normalizeHintField,\n  checkCollectionName,\n  MongoDBNamespace,\n  Callback,\n  getTopology\n} from './utils';\nimport { Document, BSONSerializeOptions, resolveBSONOptions } from './bson';\nimport { MongoInvalidArgumentError } from './error';\nimport { UnorderedBulkOperation } from './bulk/unordered';\nimport { OrderedBulkOperation } from './bulk/ordered';\nimport { ChangeStream, ChangeStreamOptions } from './change_stream';\nimport { WriteConcern, WriteConcernOptions } from './write_concern';\nimport { ReadConcern, ReadConcernLike } from './read_concern';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport type { AggregateOptions } from './operations/aggregate';\nimport { BulkWriteOperation } from './operations/bulk_write';\nimport { CountDocumentsOperation, CountDocumentsOptions } from './operations/count_documents';\nimport {\n  CreateIndexesOperation,\n  CreateIndexOperation,\n  DropIndexOperation,\n  DropIndexesOperation,\n  IndexesOperation,\n  IndexExistsOperation,\n  IndexInformationOperation,\n  CreateIndexesOptions,\n  DropIndexesOptions,\n  ListIndexesOptions,\n  IndexSpecification,\n  IndexDescription,\n  ListIndexesCursor\n} from './operations/indexes';\nimport { DistinctOperation, DistinctOptions } from './operations/distinct';\nimport { DropCollectionOperation, DropCollectionOptions } from './operations/drop';\nimport {\n  EstimatedDocumentCountOperation,\n  EstimatedDocumentCountOptions\n} from './operations/estimated_document_count';\nimport type { FindOptions } from './operations/find';\nimport {\n  FindOneAndDeleteOperation,\n  FindOneAndReplaceOperation,\n  FindOneAndUpdateOperation,\n  FindOneAndDeleteOptions,\n  FindOneAndReplaceOptions,\n  FindOneAndUpdateOptions\n} from './operations/find_and_modify';\nimport {\n  InsertOneOperation,\n  InsertOneOptions,\n  InsertOneResult,\n  InsertManyOperation,\n  InsertManyResult\n} from './operations/insert';\nimport {\n  UpdateOneOperation,\n  UpdateManyOperation,\n  UpdateOptions,\n  UpdateResult,\n  ReplaceOneOperation,\n  ReplaceOptions\n} from './operations/update';\nimport {\n  DeleteOneOperation,\n  DeleteManyOperation,\n  DeleteOptions,\n  DeleteResult\n} from './operations/delete';\nimport { IsCappedOperation } from './operations/is_capped';\nimport {\n  MapReduceOperation,\n  MapFunction,\n  ReduceFunction,\n  MapReduceOptions\n} from './operations/map_reduce';\nimport { OptionsOperation } from './operations/options_operation';\nimport { RenameOperation, RenameOptions } from './operations/rename';\nimport { CollStats, CollStatsOperation, CollStatsOptions } from './operations/stats';\nimport { executeOperation } from './operations/execute_operation';\nimport type { Db } from './db';\nimport type { OperationOptions, Hint } from './operations/operation';\nimport type { IndexInformationOptions } from './operations/common_functions';\nimport type { BulkWriteResult, BulkWriteOptions, AnyBulkWriteOperation } from './bulk/common';\nimport type { PkFactory } from './mongo_client';\nimport type { Logger, LoggerOptions } from './logger';\nimport { FindCursor } from './cursor/find_cursor';\nimport type { CountOptions } from './operations/count';\nimport type {\n  Filter,\n  TODO_NODE_3286,\n  UpdateFilter,\n  WithId,\n  OptionalId,\n  Flatten\n} from './mongo_types';\n\n/** @public */\nexport interface ModifyResult<TSchema = Document> {\n  value: TSchema | null;\n  lastErrorObject?: Document;\n  ok: 0 | 1;\n}\n\n/** @public */\nexport interface CollectionOptions\n  extends BSONSerializeOptions,\n    WriteConcernOptions,\n    LoggerOptions {\n  slaveOk?: boolean;\n  /** Specify a read concern for the collection. (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcernLike;\n  /** The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST). */\n  readPreference?: ReadPreferenceLike;\n}\n\n/** @internal */\nexport interface CollectionPrivate {\n  pkFactory: PkFactory;\n  db: Db;\n  options: any;\n  namespace: MongoDBNamespace;\n  readPreference?: ReadPreference;\n  bsonOptions: BSONSerializeOptions;\n  slaveOk?: boolean;\n  collectionHint?: Hint;\n  readConcern?: ReadConcern;\n  writeConcern?: WriteConcern;\n}\n\n/**\n * The **Collection** class is an internal class that embodies a MongoDB collection\n * allowing for insert/update/remove/find and other command operation on that MongoDB collection.\n *\n * **COLLECTION Cannot directly be instantiated**\n * @public\n *\n * @example\n * ```js\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Show that duplicate records got dropped\n *   col.find({}).toArray(function(err, items) {\n *     expect(err).to.not.exist;\n *     test.equal(4, items.length);\n *     client.close();\n *   });\n * });\n * ```\n */\nexport class Collection<TSchema extends Document = Document> {\n  /** @internal */\n  s: CollectionPrivate;\n\n  /**\n   * Create a new Collection instance\n   * @internal\n   */\n  constructor(db: Db, name: string, options?: CollectionOptions) {\n    checkCollectionName(name);\n\n    // Internal state\n    this.s = {\n      db,\n      options,\n      namespace: new MongoDBNamespace(db.databaseName, name),\n      pkFactory: db.options?.pkFactory ?? DEFAULT_PK_FACTORY,\n      readPreference: ReadPreference.fromOptions(options),\n      bsonOptions: resolveBSONOptions(options, db),\n      readConcern: ReadConcern.fromOptions(options),\n      writeConcern: WriteConcern.fromOptions(options),\n      slaveOk: options == null || options.slaveOk == null ? db.slaveOk : options.slaveOk\n    };\n  }\n\n  /**\n   * The name of the database this collection belongs to\n   */\n  get dbName(): string {\n    return this.s.namespace.db;\n  }\n\n  /**\n   * The name of this collection\n   */\n  get collectionName(): string {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.s.namespace.collection!;\n  }\n\n  /**\n   * The namespace of this collection, in the format `${this.dbName}.${this.collectionName}`\n   */\n  get namespace(): string {\n    return this.s.namespace.toString();\n  }\n\n  /**\n   * The current readConcern of the collection. If not explicitly defined for\n   * this collection, will be inherited from the parent DB\n   */\n  get readConcern(): ReadConcern | undefined {\n    if (this.s.readConcern == null) {\n      return this.s.db.readConcern;\n    }\n    return this.s.readConcern;\n  }\n\n  /**\n   * The current readPreference of the collection. If not explicitly defined for\n   * this collection, will be inherited from the parent DB\n   */\n  get readPreference(): ReadPreference | undefined {\n    if (this.s.readPreference == null) {\n      return this.s.db.readPreference;\n    }\n\n    return this.s.readPreference;\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  /**\n   * The current writeConcern of the collection. If not explicitly defined for\n   * this collection, will be inherited from the parent DB\n   */\n  get writeConcern(): WriteConcern | undefined {\n    if (this.s.writeConcern == null) {\n      return this.s.db.writeConcern;\n    }\n    return this.s.writeConcern;\n  }\n\n  /** The current index hint for the collection */\n  get hint(): Hint | undefined {\n    return this.s.collectionHint;\n  }\n\n  set hint(v: Hint | undefined) {\n    this.s.collectionHint = normalizeHintField(v);\n  }\n\n  /**\n   * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,\n   * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n   * can be overridden by setting the **forceServerObjectId** flag.\n   *\n   * @param doc - The document to insert\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  insertOne(doc: OptionalId<TSchema>): Promise<InsertOneResult<TSchema>>;\n  insertOne(doc: OptionalId<TSchema>, callback: Callback<InsertOneResult<TSchema>>): void;\n  insertOne(doc: OptionalId<TSchema>, options: InsertOneOptions): Promise<InsertOneResult<TSchema>>;\n  insertOne(\n    doc: OptionalId<TSchema>,\n    options: InsertOneOptions,\n    callback: Callback<InsertOneResult<TSchema>>\n  ): void;\n  insertOne(\n    doc: OptionalId<TSchema>,\n    options?: InsertOneOptions | Callback<InsertOneResult<TSchema>>,\n    callback?: Callback<InsertOneResult<TSchema>>\n  ): Promise<InsertOneResult<TSchema>> | void {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    // CSFLE passes in { w: 'majority' } to ensure the lib works in both 3.x and 4.x\n    // we support that option style here only\n    if (options && Reflect.get(options, 'w')) {\n      options.writeConcern = WriteConcern.fromOptions(Reflect.get(options, 'w'));\n    }\n\n    return executeOperation(\n      getTopology(this),\n      new InsertOneOperation(\n        this as TODO_NODE_3286,\n        doc,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286,\n      callback\n    );\n  }\n\n  /**\n   * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n   * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n   * can be overridden by setting the **forceServerObjectId** flag.\n   *\n   * @param docs - The documents to insert\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  insertMany(docs: OptionalId<TSchema>[]): Promise<InsertManyResult<TSchema>>;\n  insertMany(docs: OptionalId<TSchema>[], callback: Callback<InsertManyResult<TSchema>>): void;\n  insertMany(\n    docs: OptionalId<TSchema>[],\n    options: BulkWriteOptions\n  ): Promise<InsertManyResult<TSchema>>;\n  insertMany(\n    docs: OptionalId<TSchema>[],\n    options: BulkWriteOptions,\n    callback: Callback<InsertManyResult<TSchema>>\n  ): void;\n  insertMany(\n    docs: OptionalId<TSchema>[],\n    options?: BulkWriteOptions | Callback<InsertManyResult<TSchema>>,\n    callback?: Callback<InsertManyResult<TSchema>>\n  ): Promise<InsertManyResult<TSchema>> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ? Object.assign({}, options) : { ordered: true };\n\n    return executeOperation(\n      getTopology(this),\n      new InsertManyOperation(\n        this as TODO_NODE_3286,\n        docs,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286,\n      callback\n    );\n  }\n\n  /**\n   * Perform a bulkWrite operation without a fluent API\n   *\n   * Legal operation types are\n   *\n   * ```js\n   *  { insertOne: { document: { a: 1 } } }\n   *\n   *  { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n   *\n   *  { updateMany: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n   *\n   *  { updateMany: { filter: {}, update: {$set: {\"a.$[i].x\": 5}}, arrayFilters: [{ \"i.x\": 5 }]} }\n   *\n   *  { deleteOne: { filter: {c:1} } }\n   *\n   *  { deleteMany: { filter: {c:1} } }\n   *\n   *  { replaceOne: { filter: {c:3}, replacement: {c:4}, upsert:true} }\n   *```\n   * Please note that raw operations are no longer accepted as of driver version 4.0.\n   *\n   * If documents passed in do not contain the **_id** field,\n   * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n   * can be overridden by setting the **forceServerObjectId** flag.\n   *\n   * @param operations - Bulk operations to perform\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   * @throws MongoDriverError if operations is not an array\n   */\n  bulkWrite(operations: AnyBulkWriteOperation<TSchema>[]): Promise<BulkWriteResult>;\n  bulkWrite(\n    operations: AnyBulkWriteOperation<TSchema>[],\n    callback: Callback<BulkWriteResult>\n  ): void;\n  bulkWrite(\n    operations: AnyBulkWriteOperation<TSchema>[],\n    options: BulkWriteOptions\n  ): Promise<BulkWriteResult>;\n  bulkWrite(\n    operations: AnyBulkWriteOperation<TSchema>[],\n    options: BulkWriteOptions,\n    callback: Callback<BulkWriteResult>\n  ): void;\n  bulkWrite(\n    operations: AnyBulkWriteOperation<TSchema>[],\n    options?: BulkWriteOptions | Callback<BulkWriteResult>,\n    callback?: Callback<BulkWriteResult>\n  ): Promise<BulkWriteResult> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || { ordered: true };\n\n    if (!Array.isArray(operations)) {\n      throw new MongoInvalidArgumentError('Argument \"operations\" must be an array of documents');\n    }\n\n    return executeOperation(\n      getTopology(this),\n      new BulkWriteOperation(\n        this as TODO_NODE_3286,\n        operations as TODO_NODE_3286,\n        resolveOptions(this, options)\n      ),\n      callback\n    );\n  }\n\n  /**\n   * Update a single document in a collection\n   *\n   * @param filter - The filter used to select the document to update\n   * @param update - The update operations to be applied to the document\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  updateOne(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Partial<TSchema>\n  ): Promise<UpdateResult>;\n  updateOne(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Partial<TSchema>,\n    callback: Callback<UpdateResult>\n  ): void;\n  updateOne(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Partial<TSchema>,\n    options: UpdateOptions\n  ): Promise<UpdateResult>;\n  updateOne(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Partial<TSchema>,\n    options: UpdateOptions,\n    callback: Callback<UpdateResult>\n  ): void;\n  updateOne(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema> | Partial<TSchema>,\n    options?: UpdateOptions | Callback<UpdateResult>,\n    callback?: Callback<UpdateResult>\n  ): Promise<UpdateResult> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new UpdateOneOperation(\n        this as TODO_NODE_3286,\n        filter,\n        update,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286,\n      callback\n    );\n  }\n\n  /**\n   * Replace a document in a collection with another document\n   *\n   * @param filter - The filter used to select the document to replace\n   * @param replacement - The Document that replaces the matching document\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  replaceOne(filter: Filter<TSchema>, replacement: TSchema): Promise<UpdateResult | Document>;\n  replaceOne(\n    filter: Filter<TSchema>,\n    replacement: TSchema,\n    callback: Callback<UpdateResult | Document>\n  ): void;\n  replaceOne(\n    filter: Filter<TSchema>,\n    replacement: TSchema,\n    options: ReplaceOptions\n  ): Promise<UpdateResult | Document>;\n  replaceOne(\n    filter: Filter<TSchema>,\n    replacement: TSchema,\n    options: ReplaceOptions,\n    callback: Callback<UpdateResult | Document>\n  ): void;\n  replaceOne(\n    filter: Filter<TSchema>,\n    replacement: TSchema,\n    options?: ReplaceOptions | Callback<UpdateResult | Document>,\n    callback?: Callback<UpdateResult | Document>\n  ): Promise<UpdateResult | Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new ReplaceOneOperation(\n        this as TODO_NODE_3286,\n        filter,\n        replacement,\n        resolveOptions(this, options)\n      ),\n      callback\n    );\n  }\n\n  /**\n   * Update multiple documents in a collection\n   *\n   * @param filter - The filter used to select the documents to update\n   * @param update - The update operations to be applied to the documents\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  updateMany(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>\n  ): Promise<UpdateResult | Document>;\n  updateMany(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    callback: Callback<UpdateResult | Document>\n  ): void;\n  updateMany(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options: UpdateOptions\n  ): Promise<UpdateResult | Document>;\n  updateMany(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options: UpdateOptions,\n    callback: Callback<UpdateResult | Document>\n  ): void;\n  updateMany(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options?: UpdateOptions | Callback<UpdateResult | Document>,\n    callback?: Callback<UpdateResult | Document>\n  ): Promise<UpdateResult | Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new UpdateManyOperation(\n        this as TODO_NODE_3286,\n        filter,\n        update,\n        resolveOptions(this, options)\n      ),\n      callback\n    );\n  }\n\n  /**\n   * Delete a document from a collection\n   *\n   * @param filter - The filter used to select the document to remove\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  deleteOne(filter: Filter<TSchema>): Promise<DeleteResult>;\n  deleteOne(filter: Filter<TSchema>, callback: Callback<DeleteResult>): void;\n  deleteOne(filter: Filter<TSchema>, options: DeleteOptions): Promise<DeleteResult>;\n  deleteOne(\n    filter: Filter<TSchema>,\n    options: DeleteOptions,\n    callback?: Callback<DeleteResult>\n  ): void;\n  deleteOne(\n    filter: Filter<TSchema>,\n    options?: DeleteOptions | Callback<DeleteResult>,\n    callback?: Callback<DeleteResult>\n  ): Promise<DeleteResult> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new DeleteOneOperation(this as TODO_NODE_3286, filter, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Delete multiple documents from a collection\n   *\n   * @param filter - The filter used to select the documents to remove\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  deleteMany(filter: Filter<TSchema>): Promise<DeleteResult>;\n  deleteMany(filter: Filter<TSchema>, callback: Callback<DeleteResult>): void;\n  deleteMany(filter: Filter<TSchema>, options: DeleteOptions): Promise<DeleteResult>;\n  deleteMany(\n    filter: Filter<TSchema>,\n    options: DeleteOptions,\n    callback: Callback<DeleteResult>\n  ): void;\n  deleteMany(\n    filter: Filter<TSchema>,\n    options?: DeleteOptions | Callback<DeleteResult>,\n    callback?: Callback<DeleteResult>\n  ): Promise<DeleteResult> | void {\n    if (filter == null) {\n      filter = {};\n      options = {};\n      callback = undefined;\n    } else if (typeof filter === 'function') {\n      callback = filter as Callback<DeleteResult>;\n      filter = {};\n      options = {};\n    } else if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    return executeOperation(\n      getTopology(this),\n      new DeleteManyOperation(this as TODO_NODE_3286, filter, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Rename the collection.\n   *\n   * @remarks\n   * This operation does not inherit options from the Db or MongoClient.\n   *\n   * @param newName - New name of of the collection.\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  rename(newName: string): Promise<Collection>;\n  rename(newName: string, callback: Callback<Collection>): void;\n  rename(newName: string, options: RenameOptions): Promise<Collection>;\n  rename(newName: string, options: RenameOptions, callback: Callback<Collection>): void;\n  rename(\n    newName: string,\n    options?: RenameOptions | Callback<Collection>,\n    callback?: Callback<Collection>\n  ): Promise<Collection> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    // Intentionally, we do not inherit options from parent for this operation.\n    return executeOperation(\n      getTopology(this),\n      new RenameOperation(this as TODO_NODE_3286, newName, {\n        ...options,\n        readPreference: ReadPreference.PRIMARY\n      }),\n      callback\n    );\n  }\n\n  /**\n   * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  drop(): Promise<boolean>;\n  drop(callback: Callback<boolean>): void;\n  drop(options: DropCollectionOptions): Promise<boolean>;\n  drop(options: DropCollectionOptions, callback: Callback<boolean>): void;\n  drop(\n    options?: DropCollectionOptions | Callback<boolean>,\n    callback?: Callback<boolean>\n  ): Promise<boolean> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n\n    return executeOperation(\n      getTopology(this),\n      new DropCollectionOperation(this.s.db, this.collectionName, options),\n      callback\n    );\n  }\n\n  /**\n   * Fetches the first document that matches the filter\n   *\n   * @param filter - Query for find Operation\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  findOne(): Promise<TSchema | null>;\n  findOne(callback: Callback<TSchema | null>): void;\n  findOne(filter: Filter<TSchema>): Promise<TSchema | null>;\n  findOne(filter: Filter<TSchema>, callback: Callback<TSchema | null>): void;\n  findOne(filter: Filter<TSchema>, options: FindOptions): Promise<TSchema | null>;\n  findOne(filter: Filter<TSchema>, options: FindOptions, callback: Callback<TSchema | null>): void;\n\n  // allow an override of the schema.\n  findOne<T = TSchema>(): Promise<T | null>;\n  findOne<T = TSchema>(callback: Callback<T | null>): void;\n  findOne<T = TSchema>(filter: Filter<TSchema>): Promise<T | null>;\n  findOne<T = TSchema>(filter: Filter<TSchema>, options?: FindOptions): Promise<T | null>;\n  findOne<T = TSchema>(\n    filter: Filter<TSchema>,\n    options?: FindOptions,\n    callback?: Callback<T | null>\n  ): void;\n\n  findOne(\n    filter?: Filter<TSchema> | Callback<TSchema | null>,\n    options?: FindOptions | Callback<TSchema | null>,\n    callback?: Callback<TSchema | null>\n  ): Promise<TSchema | null> | void {\n    if (callback != null && typeof callback !== 'function') {\n      throw new MongoInvalidArgumentError(\n        'Third parameter to `findOne()` must be a callback or undefined'\n      );\n    }\n\n    if (typeof filter === 'function') {\n      callback = filter as Callback<TSchema | null>;\n      filter = {};\n      options = {};\n    }\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    const finalFilter = filter ?? {};\n    const finalOptions = options ?? {};\n    return this.find(finalFilter, finalOptions).limit(-1).batchSize(1).next(callback);\n  }\n\n  /**\n   * Creates a cursor for a filter that can be used to iterate over results from MongoDB\n   *\n   * @param filter - The filter predicate. If unspecified, then all documents in the collection will match the predicate\n   */\n  find(): FindCursor<TSchema>;\n  find(filter: Filter<TSchema>, options?: FindOptions): FindCursor<TSchema>;\n  find<T>(filter: Filter<TSchema>, options?: FindOptions): FindCursor<T>;\n  find(filter?: Filter<TSchema>, options?: FindOptions): FindCursor<TSchema> {\n    if (arguments.length > 2) {\n      throw new MongoInvalidArgumentError(\n        'Method \"collection.find()\" accepts at most two arguments'\n      );\n    }\n    if (typeof options === 'function') {\n      throw new MongoInvalidArgumentError('Argument \"options\" must not be function');\n    }\n\n    return new FindCursor<TSchema>(\n      getTopology(this),\n      this.s.namespace,\n      filter,\n      resolveOptions(this as TODO_NODE_3286, options)\n    );\n  }\n\n  /**\n   * Returns the options of the collection.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  options(): Promise<Document>;\n  options(callback: Callback<Document>): void;\n  options(options: OperationOptions): Promise<Document>;\n  options(options: OperationOptions, callback: Callback<Document>): void;\n  options(\n    options?: OperationOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new OptionsOperation(this as TODO_NODE_3286, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Returns if the collection is a capped collection\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  isCapped(): Promise<boolean>;\n  isCapped(callback: Callback<boolean>): void;\n  isCapped(options: OperationOptions): Promise<boolean>;\n  isCapped(options: OperationOptions, callback: Callback<boolean>): void;\n  isCapped(\n    options?: OperationOptions | Callback<boolean>,\n    callback?: Callback<boolean>\n  ): Promise<boolean> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new IsCappedOperation(this as TODO_NODE_3286, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Creates an index on the db and collection collection.\n   *\n   * @param indexSpec - The field name or index specification to create an index for\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   *\n   * @example\n   * ```js\n   * const collection = client.db('foo').collection('bar');\n   *\n   * await collection.createIndex({ a: 1, b: -1 });\n   *\n   * // Alternate syntax for { c: 1, d: -1 } that ensures order of indexes\n   * await collection.createIndex([ [c, 1], [d, -1] ]);\n   *\n   * // Equivalent to { e: 1 }\n   * await collection.createIndex('e');\n   *\n   * // Equivalent to { f: 1, g: 1 }\n   * await collection.createIndex(['f', 'g'])\n   *\n   * // Equivalent to { h: 1, i: -1 }\n   * await collection.createIndex([ { h: 1 }, { i: -1 } ]);\n   *\n   * // Equivalent to { j: 1, k: -1, l: 2d }\n   * await collection.createIndex(['j', ['k', -1], { l: '2d' }])\n   * ```\n   */\n  createIndex(indexSpec: IndexSpecification): Promise<string>;\n  createIndex(indexSpec: IndexSpecification, callback: Callback<string>): void;\n  createIndex(indexSpec: IndexSpecification, options: CreateIndexesOptions): Promise<string>;\n  createIndex(\n    indexSpec: IndexSpecification,\n    options: CreateIndexesOptions,\n    callback: Callback<string>\n  ): void;\n  createIndex(\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions | Callback<string>,\n    callback?: Callback<string>\n  ): Promise<string> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new CreateIndexOperation(\n        this as TODO_NODE_3286,\n        this.collectionName,\n        indexSpec,\n        resolveOptions(this, options)\n      ),\n      callback\n    );\n  }\n\n  /**\n   * Creates multiple indexes in the collection, this method is only supported for\n   * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n   * error.\n   *\n   * **Note**: Unlike {@link Collection#createIndex| createIndex}, this function takes in raw index specifications.\n   * Index specifications are defined {@link http://docs.mongodb.org/manual/reference/command/createIndexes/| here}.\n   *\n   * @param indexSpecs - An array of index specifications to be created\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   *\n   * @example\n   * ```js\n   * const collection = client.db('foo').collection('bar');\n   * await collection.createIndexes([\n   *   // Simple index on field fizz\n   *   {\n   *     key: { fizz: 1 },\n   *   }\n   *   // wildcard index\n   *   {\n   *     key: { '$**': 1 }\n   *   },\n   *   // named index on darmok and jalad\n   *   {\n   *     key: { darmok: 1, jalad: -1 }\n   *     name: 'tanagra'\n   *   }\n   * ]);\n   * ```\n   */\n  createIndexes(indexSpecs: IndexDescription[]): Promise<string[]>;\n  createIndexes(indexSpecs: IndexDescription[], callback: Callback<string[]>): void;\n  createIndexes(indexSpecs: IndexDescription[], options: CreateIndexesOptions): Promise<string[]>;\n  createIndexes(\n    indexSpecs: IndexDescription[],\n    options: CreateIndexesOptions,\n    callback: Callback<string[]>\n  ): void;\n  createIndexes(\n    indexSpecs: IndexDescription[],\n    options?: CreateIndexesOptions | Callback<string[]>,\n    callback?: Callback<string[]>\n  ): Promise<string[]> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ? Object.assign({}, options) : {};\n    if (typeof options.maxTimeMS !== 'number') delete options.maxTimeMS;\n\n    return executeOperation(\n      getTopology(this),\n      new CreateIndexesOperation(\n        this as TODO_NODE_3286,\n        this.collectionName,\n        indexSpecs,\n        resolveOptions(this, options)\n      ),\n      callback\n    );\n  }\n\n  /**\n   * Drops an index from this collection.\n   *\n   * @param indexName - Name of the index to drop.\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  dropIndex(indexName: string): Promise<Document>;\n  dropIndex(indexName: string, callback: Callback<Document>): void;\n  dropIndex(indexName: string, options: DropIndexesOptions): Promise<Document>;\n  dropIndex(indexName: string, options: DropIndexesOptions, callback: Callback<Document>): void;\n  dropIndex(\n    indexName: string,\n    options?: DropIndexesOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = resolveOptions(this, options);\n\n    // Run only against primary\n    options.readPreference = ReadPreference.primary;\n\n    return executeOperation(\n      getTopology(this),\n      new DropIndexOperation(this as TODO_NODE_3286, indexName, options),\n      callback\n    );\n  }\n\n  /**\n   * Drops all indexes from this collection.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  dropIndexes(): Promise<Document>;\n  dropIndexes(callback: Callback<Document>): void;\n  dropIndexes(options: DropIndexesOptions): Promise<Document>;\n  dropIndexes(options: DropIndexesOptions, callback: Callback<Document>): void;\n  dropIndexes(\n    options?: DropIndexesOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new DropIndexesOperation(this as TODO_NODE_3286, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Get the list of all indexes information for the collection.\n   *\n   * @param options - Optional settings for the command\n   */\n  listIndexes(options?: ListIndexesOptions): ListIndexesCursor {\n    return new ListIndexesCursor(this as TODO_NODE_3286, resolveOptions(this, options));\n  }\n\n  /**\n   * Checks if one or more indexes exist on the collection, fails on first non-existing index\n   *\n   * @param indexes - One or more index names to check.\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  indexExists(indexes: string | string[]): Promise<boolean>;\n  indexExists(indexes: string | string[], callback: Callback<boolean>): void;\n  indexExists(indexes: string | string[], options: IndexInformationOptions): Promise<boolean>;\n  indexExists(\n    indexes: string | string[],\n    options: IndexInformationOptions,\n    callback: Callback<boolean>\n  ): void;\n  indexExists(\n    indexes: string | string[],\n    options?: IndexInformationOptions | Callback<boolean>,\n    callback?: Callback<boolean>\n  ): Promise<boolean> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new IndexExistsOperation(this as TODO_NODE_3286, indexes, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Retrieves this collections index info.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  indexInformation(): Promise<Document>;\n  indexInformation(callback: Callback<Document>): void;\n  indexInformation(options: IndexInformationOptions): Promise<Document>;\n  indexInformation(options: IndexInformationOptions, callback: Callback<Document>): void;\n  indexInformation(\n    options?: IndexInformationOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new IndexInformationOperation(this.s.db, this.collectionName, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Gets an estimate of the count of documents in a collection using collection metadata.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  estimatedDocumentCount(): Promise<number>;\n  estimatedDocumentCount(callback: Callback<number>): void;\n  estimatedDocumentCount(options: EstimatedDocumentCountOptions): Promise<number>;\n  estimatedDocumentCount(options: EstimatedDocumentCountOptions, callback: Callback<number>): void;\n  estimatedDocumentCount(\n    options?: EstimatedDocumentCountOptions | Callback<number>,\n    callback?: Callback<number>\n  ): Promise<number> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    return executeOperation(\n      getTopology(this),\n      new EstimatedDocumentCountOperation(this as TODO_NODE_3286, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Gets the number of documents matching the filter.\n   * For a fast count of the total documents in a collection see {@link Collection#estimatedDocumentCount| estimatedDocumentCount}.\n   * **Note**: When migrating from {@link Collection#count| count} to {@link Collection#countDocuments| countDocuments}\n   * the following query operators must be replaced:\n   *\n   * | Operator | Replacement |\n   * | -------- | ----------- |\n   * | `$where`   | [`$expr`][1] |\n   * | `$near`    | [`$geoWithin`][2] with [`$center`][3] |\n   * | `$nearSphere` | [`$geoWithin`][2] with [`$centerSphere`][4] |\n   *\n   * [1]: https://docs.mongodb.com/manual/reference/operator/query/expr/\n   * [2]: https://docs.mongodb.com/manual/reference/operator/query/geoWithin/\n   * [3]: https://docs.mongodb.com/manual/reference/operator/query/center/#op._S_center\n   * [4]: https://docs.mongodb.com/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n   *\n   * @param filter - The filter for the count\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   *\n   * @see https://docs.mongodb.com/manual/reference/operator/query/expr/\n   * @see https://docs.mongodb.com/manual/reference/operator/query/geoWithin/\n   * @see https://docs.mongodb.com/manual/reference/operator/query/center/#op._S_center\n   * @see https://docs.mongodb.com/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n   */\n  countDocuments(): Promise<number>;\n  countDocuments(callback: Callback<number>): void;\n  countDocuments(filter: Filter<TSchema>): Promise<number>;\n  countDocuments(callback: Callback<number>): void;\n  countDocuments(filter: Filter<TSchema>, options: CountDocumentsOptions): Promise<number>;\n  countDocuments(\n    filter: Filter<TSchema>,\n    options: CountDocumentsOptions,\n    callback: Callback<number>\n  ): void;\n  countDocuments(filter: Filter<TSchema>, callback: Callback<number>): void;\n  countDocuments(\n    filter?: Document | CountDocumentsOptions | Callback<number>,\n    options?: CountDocumentsOptions | Callback<number>,\n    callback?: Callback<number>\n  ): Promise<number> | void {\n    if (filter == null) {\n      (filter = {}), (options = {}), (callback = undefined);\n    } else if (typeof filter === 'function') {\n      (callback = filter as Callback<number>), (filter = {}), (options = {});\n    } else {\n      if (arguments.length === 2) {\n        if (typeof options === 'function') (callback = options), (options = {});\n      }\n    }\n\n    filter ??= {};\n    return executeOperation(\n      getTopology(this),\n      new CountDocumentsOperation(\n        this as TODO_NODE_3286,\n        filter as Document,\n        resolveOptions(this, options as CountDocumentsOptions)\n      ),\n      callback\n    );\n  }\n\n  /**\n   * The distinct command returns a list of distinct values for the given key across a collection.\n   *\n   * @param key - Field of the document to find distinct values for\n   * @param filter - The filter for filtering the set of documents to which we apply the distinct filter.\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key\n  ): Promise<Array<Flatten<WithId<TSchema>[Key]>>>;\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    callback: Callback<Array<Flatten<WithId<TSchema>[Key]>>>\n  ): void;\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter: Filter<TSchema>\n  ): Promise<Array<Flatten<WithId<TSchema>[Key]>>>;\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter: Filter<TSchema>,\n    callback: Callback<Array<Flatten<WithId<TSchema>[Key]>>>\n  ): void;\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter: Filter<TSchema>,\n    options: DistinctOptions\n  ): Promise<Array<Flatten<WithId<TSchema>[Key]>>>;\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter: Filter<TSchema>,\n    options: DistinctOptions,\n    callback: Callback<Array<Flatten<WithId<TSchema>[Key]>>>\n  ): void;\n\n  // Embedded documents overload\n  distinct(key: string): Promise<any[]>;\n  distinct(key: string, callback: Callback<any[]>): void;\n  distinct(key: string, filter: Filter<TSchema>): Promise<any[]>;\n  distinct(key: string, filter: Filter<TSchema>, callback: Callback<any[]>): void;\n  distinct(key: string, filter: Filter<TSchema>, options: DistinctOptions): Promise<any[]>;\n  distinct(\n    key: string,\n    filter: Filter<TSchema>,\n    options: DistinctOptions,\n    callback: Callback<any[]>\n  ): void;\n  // Implementation\n  distinct<Key extends keyof WithId<TSchema>>(\n    key: Key,\n    filter?: Filter<TSchema> | DistinctOptions | Callback<any[]>,\n    options?: DistinctOptions | Callback<any[]>,\n    callback?: Callback<any[]>\n  ): Promise<any[]> | void {\n    if (typeof filter === 'function') {\n      (callback = filter as Callback<any[]>), (filter = {}), (options = {});\n    } else {\n      if (arguments.length === 3 && typeof options === 'function') {\n        (callback = options), (options = {});\n      }\n    }\n\n    filter ??= {};\n    return executeOperation(\n      getTopology(this),\n      new DistinctOperation(\n        this as TODO_NODE_3286,\n        key as TODO_NODE_3286,\n        filter,\n        resolveOptions(this, options as DistinctOptions)\n      ),\n      callback\n    );\n  }\n\n  /**\n   * Retrieve all the indexes on the collection.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  indexes(): Promise<Document[]>;\n  indexes(callback: Callback<Document[]>): void;\n  indexes(options: IndexInformationOptions): Promise<Document[]>;\n  indexes(options: IndexInformationOptions, callback: Callback<Document[]>): void;\n  indexes(\n    options?: IndexInformationOptions | Callback<Document[]>,\n    callback?: Callback<Document[]>\n  ): Promise<Document[]> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new IndexesOperation(this as TODO_NODE_3286, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Get all the collection statistics.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  stats(): Promise<CollStats>;\n  stats(callback: Callback<CollStats>): void;\n  stats(options: CollStatsOptions): Promise<CollStats>;\n  stats(options: CollStatsOptions, callback: Callback<CollStats>): void;\n  stats(\n    options?: CollStatsOptions | Callback<CollStats>,\n    callback?: Callback<CollStats>\n  ): Promise<CollStats> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n\n    return executeOperation(\n      getTopology(this),\n      new CollStatsOperation(this as TODO_NODE_3286, options),\n      callback\n    );\n  }\n\n  /**\n   * Find a document and delete it in one atomic operation. Requires a write lock for the duration of the operation.\n   *\n   * @param filter - The filter used to select the document to remove\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  findOneAndDelete(filter: Filter<TSchema>): Promise<ModifyResult<TSchema>>;\n  findOneAndDelete(\n    filter: Filter<TSchema>,\n    options: FindOneAndDeleteOptions\n  ): Promise<ModifyResult<TSchema>>;\n  findOneAndDelete(filter: Filter<TSchema>, callback: Callback<ModifyResult<TSchema>>): void;\n  findOneAndDelete(\n    filter: Filter<TSchema>,\n    options: FindOneAndDeleteOptions,\n    callback: Callback<ModifyResult<TSchema>>\n  ): void;\n  findOneAndDelete(\n    filter: Filter<TSchema>,\n    options?: FindOneAndDeleteOptions | Callback<ModifyResult<TSchema>>,\n    callback?: Callback<ModifyResult<TSchema>>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new FindOneAndDeleteOperation(\n        this as TODO_NODE_3286,\n        filter,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286,\n      callback\n    );\n  }\n\n  /**\n   * Find a document and replace it in one atomic operation. Requires a write lock for the duration of the operation.\n   *\n   * @param filter - The filter used to select the document to replace\n   * @param replacement - The Document that replaces the matching document\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  findOneAndReplace(filter: Filter<TSchema>, replacement: Document): Promise<ModifyResult<TSchema>>;\n  findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: Document,\n    callback: Callback<ModifyResult<TSchema>>\n  ): void;\n  findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: Document,\n    options: FindOneAndReplaceOptions\n  ): Promise<ModifyResult<TSchema>>;\n  findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: Document,\n    options: FindOneAndReplaceOptions,\n    callback: Callback<ModifyResult<TSchema>>\n  ): void;\n  findOneAndReplace(\n    filter: Filter<TSchema>,\n    replacement: Document,\n    options?: FindOneAndReplaceOptions | Callback<ModifyResult<TSchema>>,\n    callback?: Callback<ModifyResult<TSchema>>\n  ): Promise<ModifyResult<TSchema>> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new FindOneAndReplaceOperation(\n        this as TODO_NODE_3286,\n        filter,\n        replacement,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286,\n      callback\n    );\n  }\n\n  /**\n   * Find a document and update it in one atomic operation. Requires a write lock for the duration of the operation.\n   *\n   * @param filter - The filter used to select the document to update\n   * @param update - Update operations to be performed on the document\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>\n  ): Promise<ModifyResult<TSchema>>;\n  findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    callback: Callback<ModifyResult<TSchema>>\n  ): void;\n  findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options: FindOneAndUpdateOptions\n  ): Promise<ModifyResult<TSchema>>;\n  findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options: FindOneAndUpdateOptions,\n    callback: Callback<ModifyResult<TSchema>>\n  ): void;\n  findOneAndUpdate(\n    filter: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options?: FindOneAndUpdateOptions | Callback<ModifyResult<TSchema>>,\n    callback?: Callback<ModifyResult<TSchema>>\n  ): Promise<ModifyResult<TSchema>> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new FindOneAndUpdateOperation(\n        this as TODO_NODE_3286,\n        filter,\n        update,\n        resolveOptions(this, options)\n      ) as TODO_NODE_3286,\n      callback\n    );\n  }\n\n  /**\n   * Execute an aggregation framework pipeline against the collection, needs MongoDB \\>= 2.2\n   *\n   * @param pipeline - An array of aggregation pipelines to execute\n   * @param options - Optional settings for the command\n   */\n  aggregate<T = Document>(\n    pipeline: Document[] = [],\n    options?: AggregateOptions\n  ): AggregationCursor<T> {\n    if (arguments.length > 2) {\n      throw new MongoInvalidArgumentError(\n        'Method \"collection.aggregate()\" accepts at most two arguments'\n      );\n    }\n    if (!Array.isArray(pipeline)) {\n      throw new MongoInvalidArgumentError(\n        'Argument \"pipeline\" must be an array of aggregation stages'\n      );\n    }\n    if (typeof options === 'function') {\n      throw new MongoInvalidArgumentError('Argument \"options\" must not be function');\n    }\n\n    return new AggregationCursor(\n      getTopology(this),\n      this.s.namespace,\n      pipeline,\n      resolveOptions(this, options)\n    );\n  }\n\n  /**\n   * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this collection.\n   *\n   * @since 3.0.0\n   * @param pipeline - An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n   * @param options - Optional settings for the command\n   */\n  watch<TLocal = TSchema>(\n    pipeline: Document[] = [],\n    options: ChangeStreamOptions = {}\n  ): ChangeStream<TLocal> {\n    // Allow optionally not specifying a pipeline\n    if (!Array.isArray(pipeline)) {\n      options = pipeline;\n      pipeline = [];\n    }\n\n    return new ChangeStream<TLocal>(this, pipeline, resolveOptions(this, options));\n  }\n\n  /**\n   * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n   *\n   * @param map - The mapping function.\n   * @param reduce - The reduce function.\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  mapReduce<TKey = any, TValue = any>(\n    map: string | MapFunction<TSchema>,\n    reduce: string | ReduceFunction<TKey, TValue>\n  ): Promise<Document | Document[]>;\n  mapReduce<TKey = any, TValue = any>(\n    map: string | MapFunction<TSchema>,\n    reduce: string | ReduceFunction<TKey, TValue>,\n    callback: Callback<Document | Document[]>\n  ): void;\n  mapReduce<TKey = any, TValue = any>(\n    map: string | MapFunction<TSchema>,\n    reduce: string | ReduceFunction<TKey, TValue>,\n    options: MapReduceOptions<TKey, TValue>\n  ): Promise<Document | Document[]>;\n  mapReduce<TKey = any, TValue = any>(\n    map: string | MapFunction<TSchema>,\n    reduce: string | ReduceFunction<TKey, TValue>,\n    options: MapReduceOptions<TKey, TValue>,\n    callback: Callback<Document | Document[]>\n  ): void;\n  mapReduce<TKey = any, TValue = any>(\n    map: string | MapFunction<TSchema>,\n    reduce: string | ReduceFunction<TKey, TValue>,\n    options?: MapReduceOptions<TKey, TValue> | Callback<Document | Document[]>,\n    callback?: Callback<Document | Document[]>\n  ): Promise<Document | Document[]> | void {\n    if ('function' === typeof options) (callback = options), (options = {});\n    // Out must always be defined (make sure we don't break weirdly on pre 1.8+ servers)\n    // TODO NODE-3339: Figure out if this is still necessary given we no longer officially support pre-1.8\n    if (options?.out == null) {\n      throw new MongoInvalidArgumentError(\n        'Option \"out\" must be defined, see mongodb docs for possible values'\n      );\n    }\n\n    if ('function' === typeof map) {\n      map = map.toString();\n    }\n\n    if ('function' === typeof reduce) {\n      reduce = reduce.toString();\n    }\n\n    if ('function' === typeof options.finalize) {\n      options.finalize = options.finalize.toString();\n    }\n\n    return executeOperation(\n      getTopology(this),\n      new MapReduceOperation(\n        this as TODO_NODE_3286,\n        map,\n        reduce,\n        resolveOptions(this, options) as TODO_NODE_3286\n      ),\n      callback\n    );\n  }\n\n  /** Initiate an Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order. */\n  initializeUnorderedBulkOp(options?: BulkWriteOptions): UnorderedBulkOperation {\n    return new UnorderedBulkOperation(this as TODO_NODE_3286, resolveOptions(this, options));\n  }\n\n  /** Initiate an In order bulk write operation. Operations will be serially executed in the order they are added, creating a new operation for each switch in types. */\n  initializeOrderedBulkOp(options?: BulkWriteOptions): OrderedBulkOperation {\n    return new OrderedBulkOperation(this as TODO_NODE_3286, resolveOptions(this, options));\n  }\n\n  /** Get the db scoped logger */\n  getLogger(): Logger {\n    return this.s.db.s.logger;\n  }\n\n  get logger(): Logger {\n    return this.s.db.s.logger;\n  }\n\n  /**\n   * Inserts a single document or a an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n   * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n   * can be overridden by setting the **forceServerObjectId** flag.\n   *\n   * @deprecated Use insertOne, insertMany or bulkWrite instead.\n   * @param docs - The documents to insert\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  insert(\n    docs: OptionalId<TSchema>[],\n    options: BulkWriteOptions,\n    callback: Callback<InsertManyResult<TSchema>>\n  ): Promise<InsertManyResult<TSchema>> | void {\n    emitWarningOnce(\n      'collection.insert is deprecated. Use insertOne, insertMany or bulkWrite instead.'\n    );\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || { ordered: false };\n    docs = !Array.isArray(docs) ? [docs] : docs;\n\n    if (options.keepGoing === true) {\n      options.ordered = false;\n    }\n\n    return this.insertMany(docs, options, callback);\n  }\n\n  /**\n   * Updates documents.\n   *\n   * @deprecated use updateOne, updateMany or bulkWrite\n   * @param selector - The selector for the update operation.\n   * @param update - The update operations to be applied to the documents\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  update(\n    selector: Filter<TSchema>,\n    update: UpdateFilter<TSchema>,\n    options: UpdateOptions,\n    callback: Callback<Document>\n  ): Promise<UpdateResult> | void {\n    emitWarningOnce(\n      'collection.update is deprecated. Use updateOne, updateMany, or bulkWrite instead.'\n    );\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n\n    return this.updateMany(selector, update, options, callback);\n  }\n\n  /**\n   * Remove documents.\n   *\n   * @deprecated use deleteOne, deleteMany or bulkWrite\n   * @param selector - The selector for the update operation.\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  remove(\n    selector: Filter<TSchema>,\n    options: DeleteOptions,\n    callback: Callback\n  ): Promise<DeleteResult> | void {\n    emitWarningOnce(\n      'collection.remove is deprecated. Use deleteOne, deleteMany, or bulkWrite instead.'\n    );\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n\n    return this.deleteMany(selector, options, callback);\n  }\n\n  /**\n   * An estimated count of matching documents in the db to a filter.\n   *\n   * **NOTE:** This method has been deprecated, since it does not provide an accurate count of the documents\n   * in a collection. To obtain an accurate count of documents in the collection, use {@link Collection#countDocuments| countDocuments}.\n   * To obtain an estimated count of all documents in the collection, use {@link Collection#estimatedDocumentCount| estimatedDocumentCount}.\n   *\n   * @deprecated use {@link Collection#countDocuments| countDocuments} or {@link Collection#estimatedDocumentCount| estimatedDocumentCount} instead\n   *\n   * @param filter - The filter for the count.\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  count(): Promise<number>;\n  count(callback: Callback<number>): void;\n  count(filter: Filter<TSchema>): Promise<number>;\n  count(filter: Filter<TSchema>, callback: Callback<number>): void;\n  count(filter: Filter<TSchema>, options: CountOptions): Promise<number>;\n  count(\n    filter: Filter<TSchema>,\n    options: CountOptions,\n    callback: Callback<number>\n  ): Promise<number> | void;\n  count(\n    filter?: Filter<TSchema> | CountOptions | Callback<number>,\n    options?: CountOptions | Callback<number>,\n    callback?: Callback<number>\n  ): Promise<number> | void {\n    if (typeof filter === 'function') {\n      (callback = filter as Callback<number>), (filter = {}), (options = {});\n    } else {\n      if (typeof options === 'function') (callback = options), (options = {});\n    }\n\n    filter ??= {};\n    return executeOperation(\n      getTopology(this),\n      new CountDocumentsOperation(this as TODO_NODE_3286, filter, resolveOptions(this, options)),\n      callback\n    );\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "import { format } from 'util';\nimport { enumToString } from './utils';\nimport { MongoInvalidArgumentError } from './error';\n\n// Filters for classes\nconst classFilters: any = {};\nlet filteredClasses: any = {};\nlet level: LoggerLevel;\n\n// Save the process id\nconst pid = process.pid;\n\n// current logger\n// eslint-disable-next-line no-console\nlet currentLogger: LoggerFunction = console.warn;\n\n/** @public */\nexport const LoggerLevel = Object.freeze({\n  ERROR: 'error',\n  WARN: 'warn',\n  INFO: 'info',\n  DEBUG: 'debug',\n  error: 'error',\n  warn: 'warn',\n  info: 'info',\n  debug: 'debug'\n} as const);\n\n/** @public */\nexport type LoggerLevel = typeof LoggerLevel[keyof typeof LoggerLevel];\n\n/** @public */\nexport type LoggerFunction = (message?: any, ...optionalParams: any[]) => void;\n\n/** @public */\nexport interface LoggerOptions {\n  logger?: LoggerFunction;\n  loggerLevel?: LoggerLevel;\n}\n\n/**\n * @public\n */\nexport class Logger {\n  className: string;\n\n  /**\n   * Creates a new Logger instance\n   *\n   * @param className - The Class name associated with the logging instance\n   * @param options - Optional logging settings\n   */\n  constructor(className: string, options?: LoggerOptions) {\n    options = options ?? {};\n\n    // Current reference\n    this.className = className;\n\n    // Current logger\n    if (!(options.logger instanceof Logger) && typeof options.logger === 'function') {\n      currentLogger = options.logger;\n    }\n\n    // Set level of logging, default is error\n    if (options.loggerLevel) {\n      level = options.loggerLevel || LoggerLevel.ERROR;\n    }\n\n    // Add all class names\n    if (filteredClasses[this.className] == null) {\n      classFilters[this.className] = true;\n    }\n  }\n\n  /**\n   * Log a message at the debug level\n   *\n   * @param message - The message to log\n   * @param object - Additional meta data to log\n   */\n  debug(message: string, object?: unknown): void {\n    if (\n      this.isDebug() &&\n      ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n        (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n    ) {\n      const dateTime = new Date().getTime();\n      const msg = format('[%s-%s:%s] %s %s', 'DEBUG', this.className, pid, dateTime, message);\n      const state = {\n        type: LoggerLevel.DEBUG,\n        message,\n        className: this.className,\n        pid,\n        date: dateTime\n      } as any;\n\n      if (object) state.meta = object;\n      currentLogger(msg, state);\n    }\n  }\n\n  /**\n   * Log a message at the warn level\n   *\n   * @param message - The message to log\n   * @param object - Additional meta data to log\n   */\n  warn(message: string, object?: unknown): void {\n    if (\n      this.isWarn() &&\n      ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n        (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n    ) {\n      const dateTime = new Date().getTime();\n      const msg = format('[%s-%s:%s] %s %s', 'WARN', this.className, pid, dateTime, message);\n      const state = {\n        type: LoggerLevel.WARN,\n        message,\n        className: this.className,\n        pid,\n        date: dateTime\n      } as any;\n\n      if (object) state.meta = object;\n      currentLogger(msg, state);\n    }\n  }\n\n  /**\n   * Log a message at the info level\n   *\n   * @param message - The message to log\n   * @param object - Additional meta data to log\n   */\n  info(message: string, object?: unknown): void {\n    if (\n      this.isInfo() &&\n      ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n        (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n    ) {\n      const dateTime = new Date().getTime();\n      const msg = format('[%s-%s:%s] %s %s', 'INFO', this.className, pid, dateTime, message);\n      const state = {\n        type: LoggerLevel.INFO,\n        message,\n        className: this.className,\n        pid,\n        date: dateTime\n      } as any;\n\n      if (object) state.meta = object;\n      currentLogger(msg, state);\n    }\n  }\n\n  /**\n   * Log a message at the error level\n   *\n   * @param message - The message to log\n   * @param object - Additional meta data to log\n   */\n  error(message: string, object?: unknown): void {\n    if (\n      this.isError() &&\n      ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n        (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n    ) {\n      const dateTime = new Date().getTime();\n      const msg = format('[%s-%s:%s] %s %s', 'ERROR', this.className, pid, dateTime, message);\n      const state = {\n        type: LoggerLevel.ERROR,\n        message,\n        className: this.className,\n        pid,\n        date: dateTime\n      } as any;\n\n      if (object) state.meta = object;\n      currentLogger(msg, state);\n    }\n  }\n\n  /** Is the logger set at info level */\n  isInfo(): boolean {\n    return level === LoggerLevel.INFO || level === LoggerLevel.DEBUG;\n  }\n\n  /** Is the logger set at error level */\n  isError(): boolean {\n    return level === LoggerLevel.ERROR || level === LoggerLevel.INFO || level === LoggerLevel.DEBUG;\n  }\n\n  /** Is the logger set at error level */\n  isWarn(): boolean {\n    return (\n      level === LoggerLevel.ERROR ||\n      level === LoggerLevel.WARN ||\n      level === LoggerLevel.INFO ||\n      level === LoggerLevel.DEBUG\n    );\n  }\n\n  /** Is the logger set at debug level */\n  isDebug(): boolean {\n    return level === LoggerLevel.DEBUG;\n  }\n\n  /** Resets the logger to default settings, error and no filtered classes */\n  static reset(): void {\n    level = LoggerLevel.ERROR;\n    filteredClasses = {};\n  }\n\n  /** Get the current logger function */\n  static currentLogger(): LoggerFunction {\n    return currentLogger;\n  }\n\n  /**\n   * Set the current logger function\n   *\n   * @param logger - Custom logging function\n   */\n  static setCurrentLogger(logger: LoggerFunction): void {\n    if (typeof logger !== 'function') {\n      throw new MongoInvalidArgumentError('Current logger must be a function');\n    }\n\n    currentLogger = logger;\n  }\n\n  /**\n   * Filter log messages for a particular class\n   *\n   * @param type - The type of filter (currently only class)\n   * @param values - The filters to apply\n   */\n  static filter(type: string, values: string[]): void {\n    if (type === 'class' && Array.isArray(values)) {\n      filteredClasses = {};\n      values.forEach(x => (filteredClasses[x] = true));\n    }\n  }\n\n  /**\n   * Set the current log level\n   *\n   * @param newLevel - Set current log level (debug, warn, info, error)\n   */\n  static setLevel(newLevel: LoggerLevel): void {\n    if (\n      newLevel !== LoggerLevel.INFO &&\n      newLevel !== LoggerLevel.ERROR &&\n      newLevel !== LoggerLevel.DEBUG &&\n      newLevel !== LoggerLevel.WARN\n    ) {\n      throw new MongoInvalidArgumentError(\n        `Argument \"newLevel\" should be one of ${enumToString(LoggerLevel)}`\n      );\n    }\n\n    level = newLevel;\n  }\n}\n", "import { AbstractOperation, OperationOptions } from './operation';\nimport { Collection } from '../collection';\nimport type { Callback } from '../utils';\nimport type { Db } from '../db';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\n\nexport interface CollectionsOptions extends OperationOptions {\n  nameOnly?: boolean;\n}\n\n/** @internal */\nexport class CollectionsOperation extends AbstractOperation<Collection[]> {\n  options: CollectionsOptions;\n  db: Db;\n\n  constructor(db: Db, options: CollectionsOptions) {\n    super(options);\n    this.options = options;\n    this.db = db;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Collection[]>): void {\n    const db = this.db;\n\n    // Let's get the collection names\n    db.listCollections(\n      {},\n      { ...this.options, nameOnly: true, readPreference: this.readPreference, session }\n    ).toArray((err, documents) => {\n      if (err || !documents) return callback(err);\n      // Filter collections removing any illegal ones\n      documents = documents.filter(doc => doc.name.indexOf('$') === -1);\n\n      // Return the collection objects\n      callback(\n        undefined,\n        documents.map(d => {\n          return new Collection(db, d.name, db.s.options);\n        })\n      );\n    });\n  }\n}\n", "import { CommandOperation, CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\nimport { Collection } from '../collection';\nimport type { Callback } from '../utils';\nimport type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { Db } from '../db';\nimport type { PkFactory } from '../mongo_client';\nimport type { ClientSession } from '../sessions';\n\nconst ILLEGAL_COMMAND_FIELDS = new Set([\n  'w',\n  'wtimeout',\n  'j',\n  'fsync',\n  'autoIndexId',\n  'pkFactory',\n  'raw',\n  'readPreference',\n  'session',\n  'readConcern',\n  'writeConcern',\n  'raw',\n  'fieldsAsRaw',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'bsonRegExp',\n  'serializeFunctions',\n  'ignoreUndefined'\n]);\n\n/** @public\n * Configuration options for timeseries collections\n * @see https://docs.mongodb.com/manual/core/timeseries-collections/\n */\nexport interface TimeSeriesCollectionOptions extends Document {\n  timeField: string;\n  metaField?: string;\n  granularity?: string;\n}\n\n/** @public */\nexport interface CreateCollectionOptions extends CommandOperationOptions {\n  /** Returns an error if the collection does not exist */\n  strict?: boolean;\n  /** Create a capped collection */\n  capped?: boolean;\n  /** @deprecated Create an index on the _id field of the document, True by default on MongoDB 2.6 - 3.0 */\n  autoIndexId?: boolean;\n  /** The size of the capped collection in bytes */\n  size?: number;\n  /** The maximum number of documents in the capped collection */\n  max?: number;\n  /** Available for the MMAPv1 storage engine only to set the usePowerOf2Sizes and the noPadding flag */\n  flags?: number;\n  /** Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection on MongoDB 3.0 or higher */\n  storageEngine?: Document;\n  /** Allows users to specify validation rules or expressions for the collection. For more information, see Document Validation on MongoDB 3.2 or higher */\n  validator?: Document;\n  /** Determines how strictly MongoDB applies the validation rules to existing documents during an update on MongoDB 3.2 or higher */\n  validationLevel?: string;\n  /** Determines whether to error on invalid documents or just warn about the violations but allow invalid documents to be inserted on MongoDB 3.2 or higher */\n  validationAction?: string;\n  /** Allows users to specify a default configuration for indexes when creating a collection on MongoDB 3.2 or higher */\n  indexOptionDefaults?: Document;\n  /** The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view; i.e. does not include the database name and implies the same database as the view to create on MongoDB 3.4 or higher */\n  viewOn?: string;\n  /** An array that consists of the aggregation pipeline stage. Creates the view by applying the specified pipeline to the viewOn collection or view on MongoDB 3.4 or higher */\n  pipeline?: Document[];\n  /** A primary key factory function for generation of custom _id keys. */\n  pkFactory?: PkFactory;\n  /** A document specifying configuration options for timeseries collections. */\n  timeseries?: TimeSeriesCollectionOptions;\n  /** The number of seconds after which a document in a timeseries collection expires. */\n  expireAfterSeconds?: number;\n}\n\n/** @internal */\nexport class CreateCollectionOperation extends CommandOperation<Collection> {\n  options: CreateCollectionOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options: CreateCollectionOptions = {}) {\n    super(db, options);\n\n    this.options = options;\n    this.db = db;\n    this.name = name;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<Collection>): void {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n\n    const done: Callback = err => {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(undefined, new Collection(db, name, options));\n    };\n\n    const cmd: Document = { create: name };\n    for (const n in options) {\n      if (\n        (options as any)[n] != null &&\n        typeof (options as any)[n] !== 'function' &&\n        !ILLEGAL_COMMAND_FIELDS.has(n)\n      ) {\n        cmd[n] = (options as any)[n];\n      }\n    }\n\n    // otherwise just execute the command\n    super.executeCommand(server, session, cmd, done);\n  }\n}\n\ndefineAspects(CreateCollectionOperation, [Aspect.WRITE_OPERATION]);\n", "import { CommandOperation, CommandOperationOptions } from './command';\nimport type { Callback } from '../utils';\nimport type { Server } from '../sdam/server';\nimport type { Db } from '../db';\nimport type { ClientSession } from '../sessions';\nimport { MongoRuntimeError } from '../error';\n\n/** @public */\nexport type ProfilingLevelOptions = CommandOperationOptions;\n\n/** @internal */\nexport class ProfilingLevelOperation extends CommandOperation<string> {\n  options: ProfilingLevelOptions;\n\n  constructor(db: Db, options: ProfilingLevelOptions) {\n    super(db, options);\n    this.options = options;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<string>): void {\n    super.executeCommand(server, session, { profile: -1 }, (err, doc) => {\n      if (err == null && doc.ok === 1) {\n        const was = doc.was;\n        if (was === 0) return callback(undefined, 'off');\n        if (was === 1) return callback(undefined, 'slow_only');\n        if (was === 2) return callback(undefined, 'all');\n        // TODO(NODE-3483)\n        return callback(new MongoRuntimeError(`Illegal profiling level value ${was}`));\n      } else {\n        // TODO(NODE-3483): Consider MongoUnexpectedServerResponseError\n        err != null ? callback(err) : callback(new MongoRuntimeError('Error with profile command'));\n      }\n    });\n  }\n}\n", "import { CommandOperation, CommandOperationOptions } from './command';\nimport type { Callback } from '../utils';\nimport { enumToString } from '../utils';\nimport type { Server } from '../sdam/server';\nimport type { Db } from '../db';\nimport type { ClientSession } from '../sessions';\nimport { MongoRuntimeError, MongoInvalidArgumentError } from '../error';\nconst levelValues = new Set(['off', 'slow_only', 'all']);\n\n/** @public */\nexport const ProfilingLevel = Object.freeze({\n  off: 'off',\n  slowOnly: 'slow_only',\n  all: 'all'\n} as const);\n\n/** @public */\nexport type ProfilingLevel = typeof ProfilingLevel[keyof typeof ProfilingLevel];\n\n/** @public */\nexport type SetProfilingLevelOptions = CommandOperationOptions;\n\n/** @internal */\nexport class SetProfilingLevelOperation extends CommandOperation<ProfilingLevel> {\n  options: SetProfilingLevelOptions;\n  level: ProfilingLevel;\n  profile: 0 | 1 | 2;\n\n  constructor(db: Db, level: ProfilingLevel, options: SetProfilingLevelOptions) {\n    super(db, options);\n    this.options = options;\n    switch (level) {\n      case ProfilingLevel.off:\n        this.profile = 0;\n        break;\n      case ProfilingLevel.slowOnly:\n        this.profile = 1;\n        break;\n      case ProfilingLevel.all:\n        this.profile = 2;\n        break;\n      default:\n        this.profile = 0;\n        break;\n    }\n\n    this.level = level;\n  }\n\n  execute(server: Server, session: ClientSession, callback: Callback<ProfilingLevel>): void {\n    const level = this.level;\n\n    if (!levelValues.has(level)) {\n      return callback(\n        new MongoInvalidArgumentError(\n          `Profiling level must be one of \"${enumToString(ProfilingLevel)}\"`\n        )\n      );\n    }\n\n    // TODO(NODE-3483): Determine error to put here\n    super.executeCommand(server, session, { profile: this.profile }, (err, doc) => {\n      if (err == null && doc.ok === 1) return callback(undefined, level);\n      return err != null\n        ? callback(err)\n        : callback(new MongoRuntimeError('Error with profile command'));\n    });\n  }\n}\n", "import {\n  Callback,\n  resolveOptions,\n  filterOptions,\n  MongoDBNamespace,\n  getTopology,\n  DEFAULT_PK_FACTORY\n} from './utils';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport { Document, BSONSerializeOptions, resolveBSONOptions } from './bson';\nimport { ReadPreference, ReadPreferenceLike } from './read_preference';\nimport { MongoAPIError, MongoInvalidArgumentError } from './error';\nimport { Collection, CollectionOptions } from './collection';\nimport { ChangeStream, ChangeStreamOptions } from './change_stream';\nimport * as CONSTANTS from './constants';\nimport { WriteConcern, WriteConcernOptions } from './write_concern';\nimport { ReadConcern } from './read_concern';\nimport { Logger, LoggerOptions } from './logger';\nimport type { AggregateOptions } from './operations/aggregate';\nimport { AddUserOperation, AddUserOptions } from './operations/add_user';\nimport { CollectionsOperation } from './operations/collections';\nimport { DbStatsOperation, DbStatsOptions } from './operations/stats';\nimport { RunCommandOperation, RunCommandOptions } from './operations/run_command';\nimport { CreateCollectionOperation, CreateCollectionOptions } from './operations/create_collection';\nimport {\n  CreateIndexOperation,\n  IndexInformationOperation,\n  CreateIndexesOptions,\n  IndexSpecification\n} from './operations/indexes';\nimport {\n  DropCollectionOperation,\n  DropDatabaseOperation,\n  DropDatabaseOptions,\n  DropCollectionOptions\n} from './operations/drop';\nimport {\n  CollectionInfo,\n  ListCollectionsCursor,\n  ListCollectionsOptions\n} from './operations/list_collections';\nimport { ProfilingLevelOperation, ProfilingLevelOptions } from './operations/profiling_level';\nimport { RemoveUserOperation, RemoveUserOptions } from './operations/remove_user';\nimport { RenameOperation, RenameOptions } from './operations/rename';\nimport {\n  SetProfilingLevelOperation,\n  SetProfilingLevelOptions,\n  ProfilingLevel\n} from './operations/set_profiling_level';\nimport { executeOperation } from './operations/execute_operation';\nimport type { IndexInformationOptions } from './operations/common_functions';\nimport type { MongoClient, PkFactory } from './mongo_client';\nimport { Admin } from './admin';\nimport type { TODO_NODE_3286 } from './mongo_types';\n\n// Allowed parameters\nconst DB_OPTIONS_ALLOW_LIST = [\n  'writeConcern',\n  'readPreference',\n  'readPreferenceTags',\n  'native_parser',\n  'forceServerObjectId',\n  'pkFactory',\n  'serializeFunctions',\n  'raw',\n  'authSource',\n  'ignoreUndefined',\n  'readConcern',\n  'retryMiliSeconds',\n  'numberOfRetries',\n  'loggerLevel',\n  'logger',\n  'promoteBuffers',\n  'promoteLongs',\n  'bsonRegExp',\n  'promoteValues',\n  'compression',\n  'retryWrites'\n];\n\n/** @internal */\nexport interface DbPrivate {\n  client: MongoClient;\n  options?: DbOptions;\n  logger: Logger;\n  readPreference?: ReadPreference;\n  pkFactory: PkFactory;\n  readConcern?: ReadConcern;\n  bsonOptions: BSONSerializeOptions;\n  writeConcern?: WriteConcern;\n  namespace: MongoDBNamespace;\n}\n\n/** @public */\nexport interface DbOptions extends BSONSerializeOptions, WriteConcernOptions, LoggerOptions {\n  /** If the database authentication is dependent on another databaseName. */\n  authSource?: string;\n  /** Force server to assign _id values instead of driver. */\n  forceServerObjectId?: boolean;\n  /** The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST). */\n  readPreference?: ReadPreferenceLike;\n  /** A primary key factory object for generation of custom _id keys. */\n  pkFactory?: PkFactory;\n  /** Specify a read concern for the collection. (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcern;\n  /** Should retry failed writes */\n  retryWrites?: boolean;\n}\n\n/**\n * The **Db** class is a class that represents a MongoDB Database.\n * @public\n *\n * @example\n * ```js\n * const { MongoClient } = require('mongodb');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Select the database by name\n *   const testDb = client.db(dbName);\n *   client.close();\n * });\n * ```\n */\nexport class Db {\n  /** @internal */\n  s: DbPrivate;\n\n  public static SYSTEM_NAMESPACE_COLLECTION = CONSTANTS.SYSTEM_NAMESPACE_COLLECTION;\n  public static SYSTEM_INDEX_COLLECTION = CONSTANTS.SYSTEM_INDEX_COLLECTION;\n  public static SYSTEM_PROFILE_COLLECTION = CONSTANTS.SYSTEM_PROFILE_COLLECTION;\n  public static SYSTEM_USER_COLLECTION = CONSTANTS.SYSTEM_USER_COLLECTION;\n  public static SYSTEM_COMMAND_COLLECTION = CONSTANTS.SYSTEM_COMMAND_COLLECTION;\n  public static SYSTEM_JS_COLLECTION = CONSTANTS.SYSTEM_JS_COLLECTION;\n\n  /**\n   * Creates a new Db instance\n   *\n   * @param client - The MongoClient for the database.\n   * @param databaseName - The name of the database this instance represents.\n   * @param options - Optional settings for Db construction\n   */\n  constructor(client: MongoClient, databaseName: string, options?: DbOptions) {\n    options = options ?? {};\n\n    // Filter the options\n    options = filterOptions(options, DB_OPTIONS_ALLOW_LIST);\n\n    // Ensure we have a valid db name\n    validateDatabaseName(databaseName);\n\n    // Internal state of the db object\n    this.s = {\n      // Client\n      client,\n      // Options\n      options,\n      // Logger instance\n      logger: new Logger('Db', options),\n      // Unpack read preference\n      readPreference: ReadPreference.fromOptions(options),\n      // Merge bson options\n      bsonOptions: resolveBSONOptions(options, client),\n      // Set up the primary key factory or fallback to ObjectId\n      pkFactory: options?.pkFactory ?? DEFAULT_PK_FACTORY,\n      // ReadConcern\n      readConcern: ReadConcern.fromOptions(options),\n      writeConcern: WriteConcern.fromOptions(options),\n      // Namespace\n      namespace: new MongoDBNamespace(databaseName)\n    };\n  }\n\n  get databaseName(): string {\n    return this.s.namespace.db;\n  }\n\n  // Options\n  get options(): DbOptions | undefined {\n    return this.s.options;\n  }\n\n  // slaveOk specified\n  get slaveOk(): boolean {\n    return this.s.readPreference?.preference !== 'primary' || false;\n  }\n\n  get readConcern(): ReadConcern | undefined {\n    return this.s.readConcern;\n  }\n\n  /**\n   * The current readPreference of the Db. If not explicitly defined for\n   * this Db, will be inherited from the parent MongoClient\n   */\n  get readPreference(): ReadPreference {\n    if (this.s.readPreference == null) {\n      return this.s.client.readPreference;\n    }\n\n    return this.s.readPreference;\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  // get the write Concern\n  get writeConcern(): WriteConcern | undefined {\n    return this.s.writeConcern;\n  }\n\n  get namespace(): string {\n    return this.s.namespace.toString();\n  }\n\n  /**\n   * Create a new collection on a server with the specified options. Use this to create capped collections.\n   * More information about command options available at https://docs.mongodb.com/manual/reference/command/create/\n   *\n   * @param name - The name of the collection to create\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  createCollection<TSchema extends Document = Document>(name: string): Promise<Collection<TSchema>>;\n  createCollection<TSchema extends Document = Document>(\n    name: string,\n    callback: Callback<Collection<TSchema>>\n  ): void;\n  createCollection<TSchema extends Document = Document>(\n    name: string,\n    options: CreateCollectionOptions\n  ): Promise<Collection<TSchema>>;\n  createCollection<TSchema extends Document = Document>(\n    name: string,\n    options: CreateCollectionOptions,\n    callback: Callback<Collection<TSchema>>\n  ): void;\n  createCollection<TSchema extends Document = Document>(\n    name: string,\n    options?: CreateCollectionOptions | Callback<Collection>,\n    callback?: Callback<Collection>\n  ): Promise<Collection<TSchema>> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new CreateCollectionOperation(this, name, resolveOptions(this, options)) as TODO_NODE_3286,\n      callback\n    ) as TODO_NODE_3286;\n  }\n\n  /**\n   * Execute a command\n   *\n   * @remarks\n   * This command does not inherit options from the MongoClient.\n   *\n   * @param command - The command to run\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  command(command: Document): Promise<Document>;\n  command(command: Document, callback: Callback<Document>): void;\n  command(command: Document, options: RunCommandOptions): Promise<Document>;\n  command(command: Document, options: RunCommandOptions, callback: Callback<Document>): void;\n  command(\n    command: Document,\n    options?: RunCommandOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    // Intentionally, we do not inherit options from parent for this operation.\n    return executeOperation(\n      getTopology(this),\n      new RunCommandOperation(this, command, options ?? {}),\n      callback\n    );\n  }\n\n  /**\n   * Execute an aggregation framework pipeline against the database, needs MongoDB \\>= 3.6\n   *\n   * @param pipeline - An array of aggregation stages to be executed\n   * @param options - Optional settings for the command\n   */\n  aggregate<T = Document>(\n    pipeline: Document[] = [],\n    options?: AggregateOptions\n  ): AggregationCursor<T> {\n    if (arguments.length > 2) {\n      throw new MongoInvalidArgumentError('Method \"db.aggregate()\" accepts at most two arguments');\n    }\n    if (typeof pipeline === 'function') {\n      throw new MongoInvalidArgumentError('Argument \"pipeline\" must not be function');\n    }\n    if (typeof options === 'function') {\n      throw new MongoInvalidArgumentError('Argument \"options\" must not be function');\n    }\n\n    return new AggregationCursor(\n      getTopology(this),\n      this.s.namespace,\n      pipeline,\n      resolveOptions(this, options)\n    );\n  }\n\n  /** Return the Admin db instance */\n  admin(): Admin {\n    return new Admin(this);\n  }\n\n  /**\n   * Returns a reference to a MongoDB Collection. If it does not exist it will be created implicitly.\n   *\n   * @param name - the collection name we wish to access.\n   * @returns return the new Collection instance\n   */\n  collection<TSchema extends Document = Document>(\n    name: string,\n    options: CollectionOptions = {}\n  ): Collection<TSchema> {\n    if (typeof options === 'function') {\n      throw new MongoInvalidArgumentError('The callback form of this helper has been removed.');\n    }\n    const finalOptions = resolveOptions(this, options);\n    return new Collection<TSchema>(this, name, finalOptions);\n  }\n\n  /**\n   * Get all the db statistics.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  stats(): Promise<Document>;\n  stats(callback: Callback<Document>): void;\n  stats(options: DbStatsOptions): Promise<Document>;\n  stats(options: DbStatsOptions, callback: Callback<Document>): void;\n  stats(\n    options?: DbStatsOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    return executeOperation(\n      getTopology(this),\n      new DbStatsOperation(this, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * List all collections of this database with optional filter\n   *\n   * @param filter - Query to filter collections by\n   * @param options - Optional settings for the command\n   */\n  listCollections(\n    filter: Document,\n    options: Exclude<ListCollectionsOptions, 'nameOnly'> & { nameOnly: true }\n  ): ListCollectionsCursor<Pick<CollectionInfo, 'name' | 'type'>>;\n  listCollections(\n    filter: Document,\n    options: Exclude<ListCollectionsOptions, 'nameOnly'> & { nameOnly: false }\n  ): ListCollectionsCursor<CollectionInfo>;\n  listCollections<\n    T extends Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo =\n      | Pick<CollectionInfo, 'name' | 'type'>\n      | CollectionInfo\n  >(filter?: Document, options?: ListCollectionsOptions): ListCollectionsCursor<T>;\n  listCollections<\n    T extends Pick<CollectionInfo, 'name' | 'type'> | CollectionInfo =\n      | Pick<CollectionInfo, 'name' | 'type'>\n      | CollectionInfo\n  >(filter: Document = {}, options: ListCollectionsOptions = {}): ListCollectionsCursor<T> {\n    return new ListCollectionsCursor<T>(this, filter, resolveOptions(this, options));\n  }\n\n  /**\n   * Rename a collection.\n   *\n   * @remarks\n   * This operation does not inherit options from the MongoClient.\n   *\n   * @param fromCollection - Name of current collection to rename\n   * @param toCollection - New name of of the collection\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  renameCollection<TSchema extends Document = Document>(\n    fromCollection: string,\n    toCollection: string\n  ): Promise<Collection<TSchema>>;\n  renameCollection<TSchema extends Document = Document>(\n    fromCollection: string,\n    toCollection: string,\n    callback: Callback<Collection<TSchema>>\n  ): void;\n  renameCollection<TSchema extends Document = Document>(\n    fromCollection: string,\n    toCollection: string,\n    options: RenameOptions\n  ): Promise<Collection<TSchema>>;\n  renameCollection<TSchema extends Document = Document>(\n    fromCollection: string,\n    toCollection: string,\n    options: RenameOptions,\n    callback: Callback<Collection<TSchema>>\n  ): void;\n  renameCollection<TSchema extends Document = Document>(\n    fromCollection: string,\n    toCollection: string,\n    options?: RenameOptions | Callback<Collection<TSchema>>,\n    callback?: Callback<Collection<TSchema>>\n  ): Promise<Collection<TSchema>> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    // Intentionally, we do not inherit options from parent for this operation.\n    options = { ...options, readPreference: ReadPreference.PRIMARY };\n\n    // Add return new collection\n    options.new_collection = true;\n\n    return executeOperation(\n      getTopology(this),\n      new RenameOperation(\n        this.collection<TSchema>(fromCollection) as TODO_NODE_3286,\n        toCollection,\n        options\n      ) as TODO_NODE_3286,\n      callback\n    );\n  }\n\n  /**\n   * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n   *\n   * @param name - Name of collection to drop\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  dropCollection(name: string): Promise<boolean>;\n  dropCollection(name: string, callback: Callback<boolean>): void;\n  dropCollection(name: string, options: DropCollectionOptions): Promise<boolean>;\n  dropCollection(name: string, options: DropCollectionOptions, callback: Callback<boolean>): void;\n  dropCollection(\n    name: string,\n    options?: DropCollectionOptions | Callback<boolean>,\n    callback?: Callback<boolean>\n  ): Promise<boolean> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new DropCollectionOperation(this, name, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Drop a database, removing it permanently from the server.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  dropDatabase(): Promise<boolean>;\n  dropDatabase(callback: Callback<boolean>): void;\n  dropDatabase(options: DropDatabaseOptions): Promise<boolean>;\n  dropDatabase(options: DropDatabaseOptions, callback: Callback<boolean>): void;\n  dropDatabase(\n    options?: DropDatabaseOptions | Callback<boolean>,\n    callback?: Callback<boolean>\n  ): Promise<boolean> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new DropDatabaseOperation(this, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Fetch all collections for the current db.\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  collections(): Promise<Collection[]>;\n  collections(callback: Callback<Collection[]>): void;\n  collections(options: ListCollectionsOptions): Promise<Collection[]>;\n  collections(options: ListCollectionsOptions, callback: Callback<Collection[]>): void;\n  collections(\n    options?: ListCollectionsOptions | Callback<Collection[]>,\n    callback?: Callback<Collection[]>\n  ): Promise<Collection[]> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new CollectionsOperation(this, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Creates an index on the db and collection.\n   *\n   * @param name - Name of the collection to create the index on.\n   * @param indexSpec - Specify the field to index, or an index specification\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  createIndex(name: string, indexSpec: IndexSpecification): Promise<string>;\n  createIndex(name: string, indexSpec: IndexSpecification, callback?: Callback<string>): void;\n  createIndex(\n    name: string,\n    indexSpec: IndexSpecification,\n    options: CreateIndexesOptions\n  ): Promise<string>;\n  createIndex(\n    name: string,\n    indexSpec: IndexSpecification,\n    options: CreateIndexesOptions,\n    callback: Callback<string>\n  ): void;\n  createIndex(\n    name: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions | Callback<string>,\n    callback?: Callback<string>\n  ): Promise<string> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new CreateIndexOperation(this, name, indexSpec, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Add a user to the database\n   *\n   * @param username - The username for the new user\n   * @param password - An optional password for the new user\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  addUser(username: string): Promise<Document>;\n  addUser(username: string, callback: Callback<Document>): void;\n  addUser(username: string, password: string): Promise<Document>;\n  addUser(username: string, password: string, callback: Callback<Document>): void;\n  addUser(username: string, options: AddUserOptions): Promise<Document>;\n  addUser(username: string, options: AddUserOptions, callback: Callback<Document>): void;\n  addUser(username: string, password: string, options: AddUserOptions): Promise<Document>;\n  addUser(\n    username: string,\n    password: string,\n    options: AddUserOptions,\n    callback: Callback<Document>\n  ): void;\n  addUser(\n    username: string,\n    password?: string | AddUserOptions | Callback<Document>,\n    options?: AddUserOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof password === 'function') {\n      (callback = password), (password = undefined), (options = {});\n    } else if (typeof password !== 'string') {\n      if (typeof options === 'function') {\n        (callback = options), (options = password), (password = undefined);\n      } else {\n        (options = password), (callback = undefined), (password = undefined);\n      }\n    } else {\n      if (typeof options === 'function') (callback = options), (options = {});\n    }\n\n    return executeOperation(\n      getTopology(this),\n      new AddUserOperation(this, username, password, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Remove a user from a database\n   *\n   * @param username - The username to remove\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  removeUser(username: string): Promise<boolean>;\n  removeUser(username: string, callback: Callback<boolean>): void;\n  removeUser(username: string, options: RemoveUserOptions): Promise<boolean>;\n  removeUser(username: string, options: RemoveUserOptions, callback: Callback<boolean>): void;\n  removeUser(\n    username: string,\n    options?: RemoveUserOptions | Callback<boolean>,\n    callback?: Callback<boolean>\n  ): Promise<boolean> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new RemoveUserOperation(this, username, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Set the current profiling level of MongoDB\n   *\n   * @param level - The new profiling level (off, slow_only, all).\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  setProfilingLevel(level: ProfilingLevel): Promise<ProfilingLevel>;\n  setProfilingLevel(level: ProfilingLevel, callback: Callback<ProfilingLevel>): void;\n  setProfilingLevel(\n    level: ProfilingLevel,\n    options: SetProfilingLevelOptions\n  ): Promise<ProfilingLevel>;\n  setProfilingLevel(\n    level: ProfilingLevel,\n    options: SetProfilingLevelOptions,\n    callback: Callback<ProfilingLevel>\n  ): void;\n  setProfilingLevel(\n    level: ProfilingLevel,\n    options?: SetProfilingLevelOptions | Callback<ProfilingLevel>,\n    callback?: Callback<ProfilingLevel>\n  ): Promise<ProfilingLevel> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new SetProfilingLevelOperation(this, level, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Retrieve the current profiling Level for MongoDB\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  profilingLevel(): Promise<string>;\n  profilingLevel(callback: Callback<string>): void;\n  profilingLevel(options: ProfilingLevelOptions): Promise<string>;\n  profilingLevel(options: ProfilingLevelOptions, callback: Callback<string>): void;\n  profilingLevel(\n    options?: ProfilingLevelOptions | Callback<string>,\n    callback?: Callback<string>\n  ): Promise<string> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new ProfilingLevelOperation(this, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Retrieves this collections index info.\n   *\n   * @param name - The name of the collection.\n   * @param options - Optional settings for the command\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  indexInformation(name: string): Promise<Document>;\n  indexInformation(name: string, callback: Callback<Document>): void;\n  indexInformation(name: string, options: IndexInformationOptions): Promise<Document>;\n  indexInformation(\n    name: string,\n    options: IndexInformationOptions,\n    callback: Callback<Document>\n  ): void;\n  indexInformation(\n    name: string,\n    options?: IndexInformationOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): Promise<Document> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n\n    return executeOperation(\n      getTopology(this),\n      new IndexInformationOperation(this, name, resolveOptions(this, options)),\n      callback\n    );\n  }\n\n  /**\n   * Unref all sockets\n   * @deprecated This function is deprecated and will be removed in the next major version.\n   */\n  unref(): void {\n    getTopology(this).unref();\n  }\n\n  /**\n   * Create a new Change Stream, watching for new changes (insertions, updates,\n   * replacements, deletions, and invalidations) in this database. Will ignore all\n   * changes to system collections.\n   *\n   * @param pipeline - An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n   * @param options - Optional settings for the command\n   */\n  watch<TSchema = Document>(\n    pipeline: Document[] = [],\n    options: ChangeStreamOptions = {}\n  ): ChangeStream<TSchema> {\n    // Allow optionally not specifying a pipeline\n    if (!Array.isArray(pipeline)) {\n      options = pipeline;\n      pipeline = [];\n    }\n\n    return new ChangeStream<TSchema>(this, pipeline, resolveOptions(this, options));\n  }\n\n  /** Return the db logger */\n  getLogger(): Logger {\n    return this.s.logger;\n  }\n\n  get logger(): Logger {\n    return this.s.logger;\n  }\n}\n\n// TODO(NODE-3484): Refactor into MongoDBNamespace\n// Validate the database name\nfunction validateDatabaseName(databaseName: string) {\n  if (typeof databaseName !== 'string')\n    throw new MongoInvalidArgumentError('Database name must be a string');\n  if (databaseName.length === 0)\n    throw new MongoInvalidArgumentError('Database name cannot be the empty string');\n  if (databaseName === '$external') return;\n\n  const invalidChars = [' ', '.', '$', '/', '\\\\'];\n  for (let i = 0; i < invalidChars.length; i++) {\n    if (databaseName.indexOf(invalidChars[i]) !== -1)\n      throw new MongoAPIError(`database names cannot contain the character '${invalidChars[i]}'`);\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"net\" has been externalized for browser compatibility. Cannot access \"net.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"tls\" has been externalized for browser compatibility. Cannot access \"tls.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "import type { Document } from '../../bson';\nimport type { Connection, ConnectionOptions } from '../connection';\nimport type { MongoCredentials } from './mongo_credentials';\nimport type { HandshakeDocument } from '../connect';\nimport type { ClientMetadataOptions, Callback } from '../../utils';\nimport { MongoRuntimeError } from '../../error';\n\nexport type AuthContextOptions = ConnectionOptions & ClientMetadataOptions;\n\n/** Context used during authentication */\nexport class AuthContext {\n  /** The connection to authenticate */\n  connection: Connection;\n  /** The credentials to use for authentication */\n  credentials?: MongoCredentials;\n  /** The options passed to the `connect` method */\n  options: AuthContextOptions;\n\n  /** A response from an initial auth attempt, only some mechanisms use this (e.g, SCRAM) */\n  response?: Document;\n  /** A random nonce generated for use in an authentication conversation */\n  nonce?: Buffer;\n\n  constructor(\n    connection: Connection,\n    credentials: MongoCredentials | undefined,\n    options: AuthContextOptions\n  ) {\n    this.connection = connection;\n    this.credentials = credentials;\n    this.options = options;\n  }\n}\n\nexport class AuthProvider {\n  /**\n   * Prepare the handshake document before the initial handshake.\n   *\n   * @param handshakeDoc - The document used for the initial handshake on a connection\n   * @param authContext - Context for authentication flow\n   */\n  prepare(\n    handshakeDoc: HandshakeDocument,\n    authContext: AuthContext,\n    callback: Callback<HandshakeDocument>\n  ): void {\n    callback(undefined, handshakeDoc);\n  }\n\n  /**\n   * Authenticate\n   *\n   * @param context - A shared context for authentication flow\n   * @param callback - The callback to return the result from the authentication\n   */\n  auth(context: AuthContext, callback: Callback): void {\n    // TODO(NODE-3483): Replace this with MongoMethodOverrideError\n    callback(new MongoRuntimeError('`auth` method must be overridden by subclass'));\n  }\n}\n", "import * as crypto from 'crypto';\nimport { AuthProvider, AuthContext } from './auth_provider';\nimport { Callback, ns } from '../../utils';\nimport { MongoMissingCredentialsError } from '../../error';\n\nexport class MongoCR extends AuthProvider {\n  auth(authContext: AuthContext, callback: Callback): void {\n    const { connection, credentials } = authContext;\n    if (!credentials) {\n      return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    const username = credentials.username;\n    const password = credentials.password;\n    const source = credentials.source;\n    connection.command(ns(`${source}.$cmd`), { getnonce: 1 }, undefined, (err, r) => {\n      let nonce = null;\n      let key = null;\n\n      // Get nonce\n      if (err == null) {\n        nonce = r.nonce;\n\n        // Use node md5 generator\n        let md5 = crypto.createHash('md5');\n\n        // Generate keys used for authentication\n        md5.update(`${username}:mongo:${password}`, 'utf8');\n        const hash_password = md5.digest('hex');\n\n        // Final key\n        md5 = crypto.createHash('md5');\n        md5.update(nonce + username + hash_password, 'utf8');\n        key = md5.digest('hex');\n      }\n\n      const authenticateCommand = {\n        authenticate: 1,\n        user: username,\n        nonce,\n        key\n      };\n\n      connection.command(ns(`${source}.$cmd`), authenticateCommand, undefined, callback);\n    });\n  }\n}\n", "import { AuthProvider, AuthContext } from './auth_provider';\nimport { MongoMissingCredentialsError } from '../../error';\nimport type { Document } from '../../bson';\nimport { Callback, ns } from '../../utils';\nimport type { MongoCredentials } from './mongo_credentials';\nimport type { HandshakeDocument } from '../connect';\n\nexport class X509 extends AuthProvider {\n  prepare(handshakeDoc: HandshakeDocument, authContext: AuthContext, callback: Callback): void {\n    const { credentials } = authContext;\n    if (!credentials) {\n      return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    Object.assign(handshakeDoc, {\n      speculativeAuthenticate: x509AuthenticateCommand(credentials)\n    });\n\n    callback(undefined, handshakeDoc);\n  }\n\n  auth(authContext: AuthContext, callback: Callback): void {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    const response = authContext.response;\n\n    if (response && response.speculativeAuthenticate) {\n      return callback();\n    }\n\n    connection.command(\n      ns('$external.$cmd'),\n      x509AuthenticateCommand(credentials),\n      undefined,\n      callback\n    );\n  }\n}\n\nfunction x509AuthenticateCommand(credentials: MongoCredentials) {\n  const command: Document = { authenticate: 1, mechanism: 'MONGODB-X509' };\n  if (credentials.username) {\n    command.user = credentials.username;\n  }\n\n  return command;\n}\n", "import { Binary } from '../../bson';\nimport { AuthProvider, AuthContext } from './auth_provider';\nimport { MongoMissingCredentialsError } from '../../error';\nimport { Callback, ns } from '../../utils';\n\nexport class Plain extends AuthProvider {\n  auth(authContext: AuthContext, callback: Callback): void {\n    const { connection, credentials } = authContext;\n    if (!credentials) {\n      return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    const username = credentials.username;\n    const password = credentials.password;\n\n    const payload = new Binary(Buffer.from(`\\x00${username}\\x00${password}`));\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    connection.command(ns('$external.$cmd'), command, undefined, callback);\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"dns\" has been externalized for browser compatibility. Cannot access \"dns.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "import { AuthProvider, AuthContext } from './auth_provider';\nimport {\n  MongoRuntimeError,\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError,\n  MongoError,\n  MongoMissingDependencyError\n} from '../../error';\nimport { Kerberos, KerberosClient } from '../../deps';\nimport { Callback, ns } from '../../utils';\nimport type { Document } from '../../bson';\n\ntype MechanismProperties = {\n  gssapiCanonicalizeHostName?: boolean;\n  SERVICE_NAME?: string;\n  SERVICE_REALM?: string;\n};\n\nimport * as dns from 'dns';\n\nexport class GSSAPI extends AuthProvider {\n  auth(authContext: AuthContext, callback: Callback): void {\n    const { connection, credentials } = authContext;\n    if (credentials == null)\n      return callback(\n        new MongoMissingCredentialsError('Credentials required for GSSAPI authentication')\n      );\n    const { username } = credentials;\n    function externalCommand(\n      command: Document,\n      cb: Callback<{ payload: string; conversationId: any }>\n    ) {\n      return connection.command(ns('$external.$cmd'), command, undefined, cb);\n    }\n    makeKerberosClient(authContext, (err, client) => {\n      if (err) return callback(err);\n      if (client == null) return callback(new MongoMissingDependencyError('GSSAPI client missing'));\n      client.step('', (err, payload) => {\n        if (err) return callback(err);\n\n        externalCommand(saslStart(payload), (err, result) => {\n          if (err) return callback(err);\n          if (result == null) return callback();\n          negotiate(client, 10, result.payload, (err, payload) => {\n            if (err) return callback(err);\n\n            externalCommand(saslContinue(payload, result.conversationId), (err, result) => {\n              if (err) return callback(err);\n              if (result == null) return callback();\n              finalize(client, username, result.payload, (err, payload) => {\n                if (err) return callback(err);\n\n                externalCommand(\n                  {\n                    saslContinue: 1,\n                    conversationId: result.conversationId,\n                    payload\n                  },\n                  (err, result) => {\n                    if (err) return callback(err);\n\n                    callback(undefined, result);\n                  }\n                );\n              });\n            });\n          });\n        });\n      });\n    });\n  }\n}\nfunction makeKerberosClient(authContext: AuthContext, callback: Callback<KerberosClient>): void {\n  const { hostAddress } = authContext.options;\n  const { credentials } = authContext;\n  if (!hostAddress || typeof hostAddress.host !== 'string' || !credentials) {\n    return callback(\n      new MongoInvalidArgumentError('Connection must have host and port and credentials defined.')\n    );\n  }\n\n  if ('kModuleError' in Kerberos) {\n    return callback(Kerberos['kModuleError']);\n  }\n  const { initializeClient } = Kerberos;\n\n  const { username, password } = credentials;\n  const mechanismProperties = credentials.mechanismProperties as MechanismProperties;\n\n  const serviceName = mechanismProperties.SERVICE_NAME ?? 'mongodb';\n\n  performGssapiCanonicalizeHostName(\n    hostAddress.host,\n    mechanismProperties,\n    (err?: Error | MongoError, host?: string) => {\n      if (err) return callback(err);\n\n      const initOptions = {};\n      if (password != null) {\n        Object.assign(initOptions, { user: username, password: password });\n      }\n\n      let spn = `${serviceName}${process.platform === 'win32' ? '/' : '@'}${host}`;\n      if ('SERVICE_REALM' in mechanismProperties) {\n        spn = `${spn}@${mechanismProperties.SERVICE_REALM}`;\n      }\n\n      initializeClient(spn, initOptions, (err: string, client: KerberosClient): void => {\n        // TODO(NODE-3483)\n        if (err) return callback(new MongoRuntimeError(err));\n        callback(undefined, client);\n      });\n    }\n  );\n}\n\nfunction saslStart(payload?: string): Document {\n  return {\n    saslStart: 1,\n    mechanism: 'GSSAPI',\n    payload,\n    autoAuthorize: 1\n  };\n}\n\nfunction saslContinue(payload?: string, conversationId?: number): Document {\n  return {\n    saslContinue: 1,\n    conversationId,\n    payload\n  };\n}\n\nfunction negotiate(\n  client: KerberosClient,\n  retries: number,\n  payload: string,\n  callback: Callback<string>\n): void {\n  client.step(payload, (err, response) => {\n    // Retries exhausted, raise error\n    if (err && retries === 0) return callback(err);\n\n    // Adjust number of retries and call step again\n    if (err) return negotiate(client, retries - 1, payload, callback);\n\n    // Return the payload\n    callback(undefined, response || '');\n  });\n}\n\nfunction finalize(\n  client: KerberosClient,\n  user: string,\n  payload: string,\n  callback: Callback<string>\n): void {\n  // GSS Client Unwrap\n  client.unwrap(payload, (err, response) => {\n    if (err) return callback(err);\n\n    // Wrap the response\n    client.wrap(response || '', { user }, (err, wrapped) => {\n      if (err) return callback(err);\n\n      // Return the payload\n      callback(undefined, wrapped);\n    });\n  });\n}\n\nfunction performGssapiCanonicalizeHostName(\n  host: string,\n  mechanismProperties: MechanismProperties,\n  callback: Callback<string>\n): void {\n  if (!mechanismProperties.gssapiCanonicalizeHostName) return callback(undefined, host);\n\n  // Attempt to resolve the host name\n  dns.resolveCname(host, (err, r) => {\n    if (err) return callback(err);\n\n    // Get the first resolve host id\n    if (Array.isArray(r) && r.length > 0) {\n      return callback(undefined, r[0]);\n    }\n\n    callback(undefined, host);\n  });\n}\n", "import * as crypto from 'crypto';\nimport { Binary, Document } from '../../bson';\nimport {\n  AnyError,\n  MongoRuntimeError,\n  MongoServerError,\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError\n} from '../../error';\nimport { AuthProvider, AuthContext } from './auth_provider';\nimport { Callback, ns, emitWarning } from '../../utils';\nimport type { MongoCredentials } from './mongo_credentials';\nimport type { HandshakeDocument } from '../connect';\n\nimport { saslprep } from '../../deps';\nimport { AuthMechanism } from './defaultAuthProviders';\n\ntype CryptoMethod = 'sha1' | 'sha256';\n\nclass ScramSHA extends AuthProvider {\n  cryptoMethod: CryptoMethod;\n  constructor(cryptoMethod: CryptoMethod) {\n    super();\n    this.cryptoMethod = cryptoMethod || 'sha1';\n  }\n\n  prepare(handshakeDoc: HandshakeDocument, authContext: AuthContext, callback: Callback) {\n    const cryptoMethod = this.cryptoMethod;\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n    if (cryptoMethod === 'sha256' && saslprep == null) {\n      emitWarning('Warning: no saslprep library specified. Passwords will not be sanitized');\n    }\n\n    crypto.randomBytes(24, (err, nonce) => {\n      if (err) {\n        return callback(err);\n      }\n\n      // store the nonce for later use\n      Object.assign(authContext, { nonce });\n\n      const request = Object.assign({}, handshakeDoc, {\n        speculativeAuthenticate: Object.assign(makeFirstMessage(cryptoMethod, credentials, nonce), {\n          db: credentials.source\n        })\n      });\n\n      callback(undefined, request);\n    });\n  }\n\n  auth(authContext: AuthContext, callback: Callback) {\n    const response = authContext.response;\n    if (response && response.speculativeAuthenticate) {\n      continueScramConversation(\n        this.cryptoMethod,\n        response.speculativeAuthenticate,\n        authContext,\n        callback\n      );\n\n      return;\n    }\n\n    executeScram(this.cryptoMethod, authContext, callback);\n  }\n}\n\nfunction cleanUsername(username: string) {\n  return username.replace('=', '=3D').replace(',', '=2C');\n}\n\nfunction clientFirstMessageBare(username: string, nonce: Buffer) {\n  // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n  // Since the username is not sasl-prep-d, we need to do this here.\n  return Buffer.concat([\n    Buffer.from('n=', 'utf8'),\n    Buffer.from(username, 'utf8'),\n    Buffer.from(',r=', 'utf8'),\n    Buffer.from(nonce.toString('base64'), 'utf8')\n  ]);\n}\n\nfunction makeFirstMessage(\n  cryptoMethod: CryptoMethod,\n  credentials: MongoCredentials,\n  nonce: Buffer\n) {\n  const username = cleanUsername(credentials.username);\n  const mechanism =\n    cryptoMethod === 'sha1' ? AuthMechanism.MONGODB_SCRAM_SHA1 : AuthMechanism.MONGODB_SCRAM_SHA256;\n\n  // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n  // Since the username is not sasl-prep-d, we need to do this here.\n  return {\n    saslStart: 1,\n    mechanism,\n    payload: new Binary(\n      Buffer.concat([Buffer.from('n,,', 'utf8'), clientFirstMessageBare(username, nonce)])\n    ),\n    autoAuthorize: 1,\n    options: { skipEmptyExchange: true }\n  };\n}\n\nfunction executeScram(cryptoMethod: CryptoMethod, authContext: AuthContext, callback: Callback) {\n  const { connection, credentials } = authContext;\n  if (!credentials) {\n    return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\n  }\n  if (!authContext.nonce) {\n    return callback(\n      new MongoInvalidArgumentError('AuthContext must contain a valid nonce property')\n    );\n  }\n  const nonce = authContext.nonce;\n  const db = credentials.source;\n\n  const saslStartCmd = makeFirstMessage(cryptoMethod, credentials, nonce);\n  connection.command(ns(`${db}.$cmd`), saslStartCmd, undefined, (_err, result) => {\n    const err = resolveError(_err, result);\n    if (err) {\n      return callback(err);\n    }\n\n    continueScramConversation(cryptoMethod, result, authContext, callback);\n  });\n}\n\nfunction continueScramConversation(\n  cryptoMethod: CryptoMethod,\n  response: Document,\n  authContext: AuthContext,\n  callback: Callback\n) {\n  const connection = authContext.connection;\n  const credentials = authContext.credentials;\n  if (!credentials) {\n    return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\n  }\n  if (!authContext.nonce) {\n    return callback(new MongoInvalidArgumentError('Unable to continue SCRAM without valid nonce'));\n  }\n  const nonce = authContext.nonce;\n\n  const db = credentials.source;\n  const username = cleanUsername(credentials.username);\n  const password = credentials.password;\n\n  let processedPassword;\n  if (cryptoMethod === 'sha256') {\n    processedPassword = 'kModuleError' in saslprep ? password : saslprep(password);\n  } else {\n    try {\n      processedPassword = passwordDigest(username, password);\n    } catch (e) {\n      return callback(e);\n    }\n  }\n\n  const payload = Buffer.isBuffer(response.payload)\n    ? new Binary(response.payload)\n    : response.payload;\n  const dict = parsePayload(payload.value());\n\n  const iterations = parseInt(dict.i, 10);\n  if (iterations && iterations < 4096) {\n    callback(\n      // TODO(NODE-3483)\n      new MongoRuntimeError(`Server returned an invalid iteration count ${iterations}`),\n      false\n    );\n    return;\n  }\n\n  const salt = dict.s;\n  const rnonce = dict.r;\n  if (rnonce.startsWith('nonce')) {\n    // TODO(NODE-3483)\n    callback(new MongoRuntimeError(`Server returned an invalid nonce: ${rnonce}`), false);\n    return;\n  }\n\n  // Set up start of proof\n  const withoutProof = `c=biws,r=${rnonce}`;\n  const saltedPassword = HI(\n    processedPassword,\n    Buffer.from(salt, 'base64'),\n    iterations,\n    cryptoMethod\n  );\n\n  const clientKey = HMAC(cryptoMethod, saltedPassword, 'Client Key');\n  const serverKey = HMAC(cryptoMethod, saltedPassword, 'Server Key');\n  const storedKey = H(cryptoMethod, clientKey);\n  const authMessage = [clientFirstMessageBare(username, nonce), payload.value(), withoutProof].join(\n    ','\n  );\n\n  const clientSignature = HMAC(cryptoMethod, storedKey, authMessage);\n  const clientProof = `p=${xor(clientKey, clientSignature)}`;\n  const clientFinal = [withoutProof, clientProof].join(',');\n\n  const serverSignature = HMAC(cryptoMethod, serverKey, authMessage);\n  const saslContinueCmd = {\n    saslContinue: 1,\n    conversationId: response.conversationId,\n    payload: new Binary(Buffer.from(clientFinal))\n  };\n\n  connection.command(ns(`${db}.$cmd`), saslContinueCmd, undefined, (_err, r) => {\n    const err = resolveError(_err, r);\n    if (err) {\n      return callback(err);\n    }\n\n    const parsedResponse = parsePayload(r.payload.value());\n    if (!compareDigest(Buffer.from(parsedResponse.v, 'base64'), serverSignature)) {\n      callback(new MongoRuntimeError('Server returned an invalid signature'));\n      return;\n    }\n\n    if (!r || r.done !== false) {\n      return callback(err, r);\n    }\n\n    const retrySaslContinueCmd = {\n      saslContinue: 1,\n      conversationId: r.conversationId,\n      payload: Buffer.alloc(0)\n    };\n\n    connection.command(ns(`${db}.$cmd`), retrySaslContinueCmd, undefined, callback);\n  });\n}\n\nfunction parsePayload(payload: string) {\n  const dict: Document = {};\n  const parts = payload.split(',');\n  for (let i = 0; i < parts.length; i++) {\n    const valueParts = parts[i].split('=');\n    dict[valueParts[0]] = valueParts[1];\n  }\n\n  return dict;\n}\n\nfunction passwordDigest(username: string, password: string) {\n  if (typeof username !== 'string') {\n    throw new MongoInvalidArgumentError('Username must be a string');\n  }\n\n  if (typeof password !== 'string') {\n    throw new MongoInvalidArgumentError('Password must be a string');\n  }\n\n  if (password.length === 0) {\n    throw new MongoInvalidArgumentError('Password cannot be empty');\n  }\n\n  const md5 = crypto.createHash('md5');\n  md5.update(`${username}:mongo:${password}`, 'utf8');\n  return md5.digest('hex');\n}\n\n// XOR two buffers\nfunction xor(a: Buffer, b: Buffer) {\n  if (!Buffer.isBuffer(a)) {\n    a = Buffer.from(a);\n  }\n\n  if (!Buffer.isBuffer(b)) {\n    b = Buffer.from(b);\n  }\n\n  const length = Math.max(a.length, b.length);\n  const res = [];\n\n  for (let i = 0; i < length; i += 1) {\n    res.push(a[i] ^ b[i]);\n  }\n\n  return Buffer.from(res).toString('base64');\n}\n\nfunction H(method: CryptoMethod, text: Buffer) {\n  return crypto.createHash(method).update(text).digest();\n}\n\nfunction HMAC(method: CryptoMethod, key: Buffer, text: Buffer | string) {\n  return crypto.createHmac(method, key).update(text).digest();\n}\n\ninterface HICache {\n  [key: string]: Buffer;\n}\n\nlet _hiCache: HICache = {};\nlet _hiCacheCount = 0;\nfunction _hiCachePurge() {\n  _hiCache = {};\n  _hiCacheCount = 0;\n}\n\nconst hiLengthMap = {\n  sha256: 32,\n  sha1: 20\n};\n\nfunction HI(data: string, salt: Buffer, iterations: number, cryptoMethod: CryptoMethod) {\n  // omit the work if already generated\n  const key = [data, salt.toString('base64'), iterations].join('_');\n  if (_hiCache[key] != null) {\n    return _hiCache[key];\n  }\n\n  // generate the salt\n  const saltedData = crypto.pbkdf2Sync(\n    data,\n    salt,\n    iterations,\n    hiLengthMap[cryptoMethod],\n    cryptoMethod\n  );\n\n  // cache a copy to speed up the next lookup, but prevent unbounded cache growth\n  if (_hiCacheCount >= 200) {\n    _hiCachePurge();\n  }\n\n  _hiCache[key] = saltedData;\n  _hiCacheCount += 1;\n  return saltedData;\n}\n\nfunction compareDigest(lhs: Buffer, rhs: Uint8Array) {\n  if (lhs.length !== rhs.length) {\n    return false;\n  }\n\n  if (typeof crypto.timingSafeEqual === 'function') {\n    return crypto.timingSafeEqual(lhs, rhs);\n  }\n\n  let result = 0;\n  for (let i = 0; i < lhs.length; i++) {\n    result |= lhs[i] ^ rhs[i];\n  }\n\n  return result === 0;\n}\n\nfunction resolveError(err?: AnyError, result?: Document) {\n  if (err) return err;\n  if (result) {\n    if (result.$err || result.errmsg) return new MongoServerError(result);\n  }\n}\n\nexport class ScramSHA1 extends ScramSHA {\n  constructor() {\n    super('sha1');\n  }\n}\n\nexport class ScramSHA256 extends ScramSHA {\n  constructor() {\n    super('sha256');\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "// Resolves the default auth mechanism according to\n\nimport type { Document } from '../../bson';\nimport { MongoAPIError, MongoMissingCredentialsError } from '../../error';\nimport { AuthMechanism } from './defaultAuthProviders';\n\n// https://github.com/mongodb/specifications/blob/master/source/auth/auth.rst\nfunction getDefaultAuthMechanism(ismaster?: Document): AuthMechanism {\n  if (ismaster) {\n    // If ismaster contains saslSupportedMechs, use scram-sha-256\n    // if it is available, else scram-sha-1\n    if (Array.isArray(ismaster.saslSupportedMechs)) {\n      return ismaster.saslSupportedMechs.includes(AuthMechanism.MONGODB_SCRAM_SHA256)\n        ? AuthMechanism.MONGODB_SCRAM_SHA256\n        : AuthMechanism.MONGODB_SCRAM_SHA1;\n    }\n\n    // Fallback to legacy selection method. If wire version >= 3, use scram-sha-1\n    if (ismaster.maxWireVersion >= 3) {\n      return AuthMechanism.MONGODB_SCRAM_SHA1;\n    }\n  }\n\n  // Default for wireprotocol < 3\n  return AuthMechanism.MONGODB_CR;\n}\n\n/** @public */\nexport interface AuthMechanismProperties extends Document {\n  SERVICE_NAME?: string;\n  SERVICE_REALM?: string;\n  CANONICALIZE_HOST_NAME?: boolean;\n  AWS_SESSION_TOKEN?: string;\n}\n\n/** @public */\nexport interface MongoCredentialsOptions {\n  username: string;\n  password: string;\n  source: string;\n  db?: string;\n  mechanism?: AuthMechanism;\n  mechanismProperties: AuthMechanismProperties;\n}\n\n/**\n * A representation of the credentials used by MongoDB\n * @public\n */\nexport class MongoCredentials {\n  /** The username used for authentication */\n  readonly username: string;\n  /** The password used for authentication */\n  readonly password: string;\n  /** The database that the user should authenticate against */\n  readonly source: string;\n  /** The method used to authenticate */\n  readonly mechanism: AuthMechanism;\n  /** Special properties used by some types of auth mechanisms */\n  readonly mechanismProperties: AuthMechanismProperties;\n\n  constructor(options: MongoCredentialsOptions) {\n    this.username = options.username;\n    this.password = options.password;\n    this.source = options.source;\n    if (!this.source && options.db) {\n      this.source = options.db;\n    }\n    this.mechanism = options.mechanism || AuthMechanism.MONGODB_DEFAULT;\n    this.mechanismProperties = options.mechanismProperties || {};\n\n    if (this.mechanism.match(/MONGODB-AWS/i)) {\n      if (!this.username && process.env.AWS_ACCESS_KEY_ID) {\n        this.username = process.env.AWS_ACCESS_KEY_ID;\n      }\n\n      if (!this.password && process.env.AWS_SECRET_ACCESS_KEY) {\n        this.password = process.env.AWS_SECRET_ACCESS_KEY;\n      }\n\n      if (\n        this.mechanismProperties.AWS_SESSION_TOKEN == null &&\n        process.env.AWS_SESSION_TOKEN != null\n      ) {\n        this.mechanismProperties = {\n          ...this.mechanismProperties,\n          AWS_SESSION_TOKEN: process.env.AWS_SESSION_TOKEN\n        };\n      }\n    }\n\n    Object.freeze(this.mechanismProperties);\n    Object.freeze(this);\n  }\n\n  /** Determines if two MongoCredentials objects are equivalent */\n  equals(other: MongoCredentials): boolean {\n    return (\n      this.mechanism === other.mechanism &&\n      this.username === other.username &&\n      this.password === other.password &&\n      this.source === other.source\n    );\n  }\n\n  /**\n   * If the authentication mechanism is set to \"default\", resolves the authMechanism\n   * based on the server version and server supported sasl mechanisms.\n   *\n   * @param ismaster - An ismaster response from the server\n   */\n  resolveAuthMechanism(ismaster?: Document): MongoCredentials {\n    // If the mechanism is not \"default\", then it does not need to be resolved\n    if (this.mechanism.match(/DEFAULT/i)) {\n      return new MongoCredentials({\n        username: this.username,\n        password: this.password,\n        source: this.source,\n        mechanism: getDefaultAuthMechanism(ismaster),\n        mechanismProperties: this.mechanismProperties\n      });\n    }\n\n    return this;\n  }\n\n  validate(): void {\n    if (\n      (this.mechanism === AuthMechanism.MONGODB_GSSAPI ||\n        this.mechanism === AuthMechanism.MONGODB_CR ||\n        this.mechanism === AuthMechanism.MONGODB_PLAIN ||\n        this.mechanism === AuthMechanism.MONGODB_SCRAM_SHA1 ||\n        this.mechanism === AuthMechanism.MONGODB_SCRAM_SHA256) &&\n      !this.username\n    ) {\n      throw new MongoMissingCredentialsError(`Username required for mechanism '${this.mechanism}'`);\n    }\n\n    if (\n      this.mechanism === AuthMechanism.MONGODB_GSSAPI ||\n      this.mechanism === AuthMechanism.MONGODB_AWS ||\n      this.mechanism === AuthMechanism.MONGODB_X509\n    ) {\n      if (this.source != null && this.source !== '$external') {\n        // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n        throw new MongoAPIError(\n          `Invalid source '${this.source}' for mechanism '${this.mechanism}' specified.`\n        );\n      }\n    }\n\n    if (this.mechanism === AuthMechanism.MONGODB_PLAIN && this.source == null) {\n      // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n      throw new MongoAPIError('PLAIN Authentication Mechanism needs an auth source');\n    }\n\n    if (this.mechanism === AuthMechanism.MONGODB_X509 && this.password != null) {\n      if (this.password === '') {\n        Reflect.set(this, 'password', undefined);\n        return;\n      }\n      // TODO(NODE-3485): Replace this with a MongoAuthValidationError\n      throw new MongoAPIError(`Password not allowed for mechanism MONGODB-X509`);\n    }\n  }\n\n  static merge(\n    creds: MongoCredentials | undefined,\n    options: Partial<MongoCredentialsOptions>\n  ): MongoCredentials {\n    return new MongoCredentials({\n      username: options.username ?? creds?.username ?? '',\n      password: options.password ?? creds?.password ?? '',\n      mechanism: options.mechanism ?? creds?.mechanism ?? AuthMechanism.MONGODB_DEFAULT,\n      mechanismProperties: options.mechanismProperties ?? creds?.mechanismProperties ?? {},\n      source: options.source ?? options.db ?? creds?.source ?? 'admin'\n    });\n  }\n}\n", "import * as http from 'http';\nimport * as crypto from 'crypto';\nimport * as url from 'url';\nimport * as BSON from '../../bson';\nimport { AuthProvider, AuthContext } from './auth_provider';\nimport { MongoCredentials } from './mongo_credentials';\nimport {\n  MongoRuntimeError,\n  MongoMissingCredentialsError,\n  MongoCompatibilityError\n} from '../../error';\nimport { maxWireVersion, Callback, ns } from '../../utils';\nimport type { BSONSerializeOptions } from '../../bson';\n\nimport { aws4 } from '../../deps';\nimport { AuthMechanism } from './defaultAuthProviders';\nimport type { Binary } from 'bson';\n\nconst ASCII_N = 110;\nconst AWS_RELATIVE_URI = 'http://169.254.170.2';\nconst AWS_EC2_URI = 'http://169.254.169.254';\nconst AWS_EC2_PATH = '/latest/meta-data/iam/security-credentials';\nconst bsonOptions: BSONSerializeOptions = {\n  promoteLongs: true,\n  promoteValues: true,\n  promoteBuffers: false,\n  bsonRegExp: false\n};\n\ninterface AWSSaslContinuePayload {\n  a: string;\n  d: string;\n  t?: string;\n}\n\nexport class MongoDBAWS extends AuthProvider {\n  auth(authContext: AuthContext, callback: Callback): void {\n    const { connection, credentials } = authContext;\n    if (!credentials) {\n      return callback(new MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n\n    if ('kModuleError' in aws4) {\n      return callback(aws4['kModuleError']);\n    }\n    const { sign } = aws4;\n\n    if (maxWireVersion(connection) < 9) {\n      callback(\n        new MongoCompatibilityError(\n          'MONGODB-AWS authentication requires MongoDB version 4.4 or later'\n        )\n      );\n      return;\n    }\n\n    if (!credentials.username) {\n      makeTempCredentials(credentials, (err, tempCredentials) => {\n        if (err || !tempCredentials) return callback(err);\n\n        authContext.credentials = tempCredentials;\n        this.auth(authContext, callback);\n      });\n\n      return;\n    }\n\n    const accessKeyId = credentials.username;\n    const secretAccessKey = credentials.password;\n    const sessionToken = credentials.mechanismProperties.AWS_SESSION_TOKEN;\n\n    // If all three defined, include sessionToken, else include username and pass, else no credentials\n    const awsCredentials =\n      accessKeyId && secretAccessKey && sessionToken\n        ? { accessKeyId, secretAccessKey, sessionToken }\n        : accessKeyId && secretAccessKey\n        ? { accessKeyId, secretAccessKey }\n        : undefined;\n\n    const db = credentials.source;\n    crypto.randomBytes(32, (err, nonce) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      const saslStart = {\n        saslStart: 1,\n        mechanism: 'MONGODB-AWS',\n        payload: BSON.serialize({ r: nonce, p: ASCII_N }, bsonOptions)\n      };\n\n      connection.command(ns(`${db}.$cmd`), saslStart, undefined, (err, res) => {\n        if (err) return callback(err);\n\n        const serverResponse = BSON.deserialize(res.payload.buffer, bsonOptions) as {\n          s: Binary;\n          h: string;\n        };\n        const host = serverResponse.h;\n        const serverNonce = serverResponse.s.buffer;\n        if (serverNonce.length !== 64) {\n          callback(\n            // TODO(NODE-3483)\n            new MongoRuntimeError(`Invalid server nonce length ${serverNonce.length}, expected 64`)\n          );\n\n          return;\n        }\n\n        if (serverNonce.compare(nonce, 0, nonce.length, 0, nonce.length) !== 0) {\n          // TODO(NODE-3483)\n          callback(new MongoRuntimeError('Server nonce does not begin with client nonce'));\n          return;\n        }\n\n        if (host.length < 1 || host.length > 255 || host.indexOf('..') !== -1) {\n          // TODO(NODE-3483)\n          callback(new MongoRuntimeError(`Server returned an invalid host: \"${host}\"`));\n          return;\n        }\n\n        const body = 'Action=GetCallerIdentity&Version=2011-06-15';\n        const options = sign(\n          {\n            method: 'POST',\n            host,\n            region: deriveRegion(serverResponse.h),\n            service: 'sts',\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n              'Content-Length': body.length,\n              'X-MongoDB-Server-Nonce': serverNonce.toString('base64'),\n              'X-MongoDB-GS2-CB-Flag': 'n'\n            },\n            path: '/',\n            body\n          },\n          awsCredentials\n        );\n\n        const payload: AWSSaslContinuePayload = {\n          a: options.headers.Authorization,\n          d: options.headers['X-Amz-Date']\n        };\n        if (sessionToken) {\n          payload.t = sessionToken;\n        }\n\n        const saslContinue = {\n          saslContinue: 1,\n          conversationId: 1,\n          payload: BSON.serialize(payload, bsonOptions)\n        };\n\n        connection.command(ns(`${db}.$cmd`), saslContinue, undefined, callback);\n      });\n    });\n  }\n}\n\ninterface AWSTempCredentials {\n  AccessKeyId?: string;\n  SecretAccessKey?: string;\n  Token?: string;\n  RoleArn?: string;\n  Expiration?: Date;\n}\n\nfunction makeTempCredentials(credentials: MongoCredentials, callback: Callback<MongoCredentials>) {\n  function done(creds: AWSTempCredentials) {\n    if (!creds.AccessKeyId || !creds.SecretAccessKey || !creds.Token) {\n      callback(\n        new MongoMissingCredentialsError('Could not obtain temporary MONGODB-AWS credentials')\n      );\n      return;\n    }\n\n    callback(\n      undefined,\n      new MongoCredentials({\n        username: creds.AccessKeyId,\n        password: creds.SecretAccessKey,\n        source: credentials.source,\n        mechanism: AuthMechanism.MONGODB_AWS,\n        mechanismProperties: {\n          AWS_SESSION_TOKEN: creds.Token\n        }\n      })\n    );\n  }\n\n  // If the environment variable AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\n  // is set then drivers MUST assume that it was set by an AWS ECS agent\n  if (process.env.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI) {\n    request(\n      `${AWS_RELATIVE_URI}${process.env.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI}`,\n      undefined,\n      (err, res) => {\n        if (err) return callback(err);\n        done(res);\n      }\n    );\n\n    return;\n  }\n\n  // Otherwise assume we are on an EC2 instance\n\n  // get a token\n  request(\n    `${AWS_EC2_URI}/latest/api/token`,\n    { method: 'PUT', json: false, headers: { 'X-aws-ec2-metadata-token-ttl-seconds': 30 } },\n    (err, token) => {\n      if (err) return callback(err);\n\n      // get role name\n      request(\n        `${AWS_EC2_URI}/${AWS_EC2_PATH}`,\n        { json: false, headers: { 'X-aws-ec2-metadata-token': token } },\n        (err, roleName) => {\n          if (err) return callback(err);\n\n          // get temp credentials\n          request(\n            `${AWS_EC2_URI}/${AWS_EC2_PATH}/${roleName}`,\n            { headers: { 'X-aws-ec2-metadata-token': token } },\n            (err, creds) => {\n              if (err) return callback(err);\n              done(creds);\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction deriveRegion(host: string) {\n  const parts = host.split('.');\n  if (parts.length === 1 || parts[1] === 'amazonaws') {\n    return 'us-east-1';\n  }\n\n  return parts[1];\n}\n\ninterface RequestOptions {\n  json?: boolean;\n  method?: string;\n  timeout?: number;\n  headers?: http.OutgoingHttpHeaders;\n}\n\nfunction request(uri: string, _options: RequestOptions | undefined, callback: Callback) {\n  const options = Object.assign(\n    {\n      method: 'GET',\n      timeout: 10000,\n      json: true\n    },\n    url.parse(uri),\n    _options\n  );\n\n  const req = http.request(options, res => {\n    res.setEncoding('utf8');\n\n    let data = '';\n    res.on('data', d => (data += d));\n    res.on('end', () => {\n      if (options.json === false) {\n        callback(undefined, data);\n        return;\n      }\n\n      try {\n        const parsed = JSON.parse(data);\n        callback(undefined, parsed);\n      } catch (err) {\n        // TODO(NODE-3483)\n        callback(new MongoRuntimeError(`Invalid JSON response: \"${data}\"`));\n      }\n    });\n  });\n\n  req.on('error', err => callback(err));\n  req.end();\n}\n", "import { MongoCR } from './mongocr';\nimport { X509 } from './x509';\nimport { Plain } from './plain';\nimport { GSSAPI } from './gssapi';\nimport { ScramSHA1, ScramSHA256 } from './scram';\nimport { MongoDBAWS } from './mongodb_aws';\nimport type { AuthProvider } from './auth_provider';\n\n/** @public */\nexport const AuthMechanism = Object.freeze({\n  MONGODB_AWS: 'MONGODB-AWS',\n  MONGODB_CR: 'MONGODB-CR',\n  MONGODB_DEFAULT: 'DEFAULT',\n  MONGODB_GSSAPI: 'GSSAPI',\n  MONGODB_PLAIN: 'PLAIN',\n  MONGODB_SCRAM_SHA1: 'SCRAM-SHA-1',\n  MONGODB_SCRAM_SHA256: 'SCRAM-SHA-256',\n  MONGODB_X509: 'MONGODB-X509'\n} as const);\n\n/** @public */\nexport type AuthMechanism = typeof AuthMechanism[keyof typeof AuthMechanism];\n\nexport const AUTH_PROVIDERS = new Map<AuthMechanism | string, AuthProvider>([\n  [AuthMechanism.MONGODB_AWS, new MongoDBAWS()],\n  [AuthMechanism.MONGODB_CR, new MongoCR()],\n  [AuthMechanism.MONGODB_GSSAPI, new GSSAPI()],\n  [AuthMechanism.MONGODB_PLAIN, new Plain()],\n  [AuthMechanism.MONGODB_SCRAM_SHA1, new ScramSHA1()],\n  [AuthMechanism.MONGODB_SCRAM_SHA256, new ScramSHA256()],\n  [AuthMechanism.MONGODB_X509, new X509()]\n]);\n", "import * as net from 'net';\nimport * as tls from 'tls';\nimport { Connection, ConnectionOptions, CryptoConnection } from './connection';\nimport {\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  AnyError,\n  MongoCompatibilityError,\n  MongoInvalidArgumentError,\n  MongoServerError,\n  MongoRuntimeError\n} from '../error';\nimport { AUTH_PROVIDERS, AuthMechanism } from './auth/defaultAuthProviders';\nimport { AuthContext } from './auth/auth_provider';\nimport { makeClientMetadata, ClientMetadata, Callback, CallbackWithType, ns } from '../utils';\nimport {\n  MAX_SUPPORTED_WIRE_VERSION,\n  MAX_SUPPORTED_SERVER_VERSION,\n  MIN_SUPPORTED_WIRE_VERSION,\n  MIN_SUPPORTED_SERVER_VERSION\n} from './wire_protocol/constants';\nimport type { Document } from '../bson';\nimport { Int32 } from '../bson';\n\nimport type { Socket, SocketConnectOpts } from 'net';\nimport type { TLSSocket, ConnectionOptions as TLSConnectionOpts } from 'tls';\n\nconst FAKE_MONGODB_SERVICE_ID =\n  typeof process.env.FAKE_MONGODB_SERVICE_ID === 'string' &&\n  process.env.FAKE_MONGODB_SERVICE_ID.toLowerCase() === 'true';\n\n/** @public */\nexport type Stream = Socket | TLSSocket;\n\nexport function connect(options: ConnectionOptions, callback: Callback<Connection>): void {\n  makeConnection(options, (err, socket) => {\n    if (err || !socket) {\n      return callback(err);\n    }\n\n    let ConnectionType = options.connectionType ?? Connection;\n    if (options.autoEncrypter) {\n      ConnectionType = CryptoConnection;\n    }\n    performInitialHandshake(new ConnectionType(socket, options), options, callback);\n  });\n}\n\nfunction checkSupportedServer(ismaster: Document, options: ConnectionOptions) {\n  const serverVersionHighEnough =\n    ismaster &&\n    (typeof ismaster.maxWireVersion === 'number' || ismaster.maxWireVersion instanceof Int32) &&\n    ismaster.maxWireVersion >= MIN_SUPPORTED_WIRE_VERSION;\n  const serverVersionLowEnough =\n    ismaster &&\n    (typeof ismaster.minWireVersion === 'number' || ismaster.minWireVersion instanceof Int32) &&\n    ismaster.minWireVersion <= MAX_SUPPORTED_WIRE_VERSION;\n\n  if (serverVersionHighEnough) {\n    if (serverVersionLowEnough) {\n      return null;\n    }\n\n    const message = `Server at ${options.hostAddress} reports minimum wire version ${JSON.stringify(\n      ismaster.minWireVersion\n    )}, but this version of the Node.js Driver requires at most ${MAX_SUPPORTED_WIRE_VERSION} (MongoDB ${MAX_SUPPORTED_SERVER_VERSION})`;\n    return new MongoCompatibilityError(message);\n  }\n\n  const message = `Server at ${options.hostAddress} reports maximum wire version ${\n    JSON.stringify(ismaster.maxWireVersion) ?? 0\n  }, but this version of the Node.js Driver requires at least ${MIN_SUPPORTED_WIRE_VERSION} (MongoDB ${MIN_SUPPORTED_SERVER_VERSION})`;\n  return new MongoCompatibilityError(message);\n}\n\nfunction performInitialHandshake(\n  conn: Connection,\n  options: ConnectionOptions,\n  _callback: Callback\n) {\n  const callback: Callback<Document> = function (err, ret) {\n    if (err && conn) {\n      conn.destroy();\n    }\n    _callback(err, ret);\n  };\n\n  const credentials = options.credentials;\n  if (credentials) {\n    if (\n      !(credentials.mechanism === AuthMechanism.MONGODB_DEFAULT) &&\n      !AUTH_PROVIDERS.get(credentials.mechanism)\n    ) {\n      callback(\n        new MongoInvalidArgumentError(`AuthMechanism '${credentials.mechanism}' not supported`)\n      );\n      return;\n    }\n  }\n\n  const authContext = new AuthContext(conn, credentials, options);\n  prepareHandshakeDocument(authContext, (err, handshakeDoc) => {\n    if (err || !handshakeDoc) {\n      return callback(err);\n    }\n\n    const handshakeOptions: Document = Object.assign({}, options);\n    if (typeof options.connectTimeoutMS === 'number') {\n      // The handshake technically is a monitoring check, so its socket timeout should be connectTimeoutMS\n      handshakeOptions.socketTimeoutMS = options.connectTimeoutMS;\n    }\n\n    const start = new Date().getTime();\n    conn.command(ns('admin.$cmd'), handshakeDoc, handshakeOptions, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      if (response?.ok === 0) {\n        callback(new MongoServerError(response));\n        return;\n      }\n\n      if ('isWritablePrimary' in response) {\n        // Provide pre-hello-style response document.\n        response.ismaster = response.isWritablePrimary;\n      }\n\n      if (response.helloOk) {\n        conn.helloOk = true;\n      }\n\n      const supportedServerErr = checkSupportedServer(response, options);\n      if (supportedServerErr) {\n        callback(supportedServerErr);\n        return;\n      }\n\n      if (options.loadBalanced) {\n        // TODO: Durran: Remove when server support exists. (NODE-3431)\n        if (FAKE_MONGODB_SERVICE_ID) {\n          response.serviceId = response.topologyVersion.processId;\n        }\n        if (!response.serviceId) {\n          return callback(\n            new MongoCompatibilityError(\n              'Driver attempted to initialize in load balancing mode, ' +\n                'but the server does not support this mode.'\n            )\n          );\n        }\n      }\n\n      // NOTE: This is metadata attached to the connection while porting away from\n      //       handshake being done in the `Server` class. Likely, it should be\n      //       relocated, or at very least restructured.\n      conn.ismaster = response;\n      conn.lastIsMasterMS = new Date().getTime() - start;\n\n      if (!response.arbiterOnly && credentials) {\n        // store the response on auth context\n        authContext.response = response;\n\n        const resolvedCredentials = credentials.resolveAuthMechanism(response);\n        const provider = AUTH_PROVIDERS.get(resolvedCredentials.mechanism);\n        if (!provider) {\n          return callback(\n            new MongoInvalidArgumentError(\n              `No AuthProvider for ${resolvedCredentials.mechanism} defined.`\n            )\n          );\n        }\n        provider.auth(authContext, err => {\n          if (err) return callback(err);\n          callback(undefined, conn);\n        });\n\n        return;\n      }\n\n      callback(undefined, conn);\n    });\n  });\n}\n\nexport interface HandshakeDocument extends Document {\n  ismaster?: boolean;\n  hello?: boolean;\n  helloOk?: boolean;\n  client: ClientMetadata;\n  compression: string[];\n  saslSupportedMechs?: string;\n  loadBalanced: boolean;\n}\n\nfunction prepareHandshakeDocument(authContext: AuthContext, callback: Callback<HandshakeDocument>) {\n  const options = authContext.options;\n  const compressors = options.compressors ? options.compressors : [];\n  const { serverApi } = authContext.connection;\n\n  const handshakeDoc: HandshakeDocument = {\n    [serverApi?.version ? 'hello' : 'ismaster']: true,\n    helloOk: true,\n    client: options.metadata || makeClientMetadata(options),\n    compression: compressors,\n    loadBalanced: options.loadBalanced\n  };\n\n  const credentials = authContext.credentials;\n  if (credentials) {\n    if (credentials.mechanism === AuthMechanism.MONGODB_DEFAULT && credentials.username) {\n      handshakeDoc.saslSupportedMechs = `${credentials.source}.${credentials.username}`;\n\n      const provider = AUTH_PROVIDERS.get(AuthMechanism.MONGODB_SCRAM_SHA256);\n      if (!provider) {\n        // This auth mechanism is always present.\n        return callback(\n          new MongoInvalidArgumentError(\n            `No AuthProvider for ${AuthMechanism.MONGODB_SCRAM_SHA256} defined.`\n          )\n        );\n      }\n      return provider.prepare(handshakeDoc, authContext, callback);\n    }\n    const provider = AUTH_PROVIDERS.get(credentials.mechanism);\n    if (!provider) {\n      return callback(\n        new MongoInvalidArgumentError(`No AuthProvider for ${credentials.mechanism} defined.`)\n      );\n    }\n    return provider.prepare(handshakeDoc, authContext, callback);\n  }\n  callback(undefined, handshakeDoc);\n}\n\n/** @public */\nexport const LEGAL_TLS_SOCKET_OPTIONS = [\n  'ALPNProtocols',\n  'ca',\n  'cert',\n  'checkServerIdentity',\n  'ciphers',\n  'crl',\n  'ecdhCurve',\n  'key',\n  'minDHSize',\n  'passphrase',\n  'pfx',\n  'rejectUnauthorized',\n  'secureContext',\n  'secureProtocol',\n  'servername',\n  'session'\n] as const;\n\n/** @public */\nexport const LEGAL_TCP_SOCKET_OPTIONS = [\n  'family',\n  'hints',\n  'localAddress',\n  'localPort',\n  'lookup'\n] as const;\n\nfunction parseConnectOptions(options: ConnectionOptions): SocketConnectOpts {\n  const hostAddress = options.hostAddress;\n  if (!hostAddress) throw new MongoInvalidArgumentError('Option \"hostAddress\" is required');\n\n  const result: Partial<net.TcpNetConnectOpts & net.IpcNetConnectOpts> = {};\n  for (const name of LEGAL_TCP_SOCKET_OPTIONS) {\n    if (options[name] != null) {\n      (result as Document)[name] = options[name];\n    }\n  }\n\n  if (typeof hostAddress.socketPath === 'string') {\n    result.path = hostAddress.socketPath;\n    return result as net.IpcNetConnectOpts;\n  } else if (typeof hostAddress.host === 'string') {\n    result.host = hostAddress.host;\n    result.port = hostAddress.port;\n    return result as net.TcpNetConnectOpts;\n  } else {\n    // This should never happen since we set up HostAddresses\n    // But if we don't throw here the socket could hang until timeout\n    // TODO(NODE-3483)\n    throw new MongoRuntimeError(`Unexpected HostAddress ${JSON.stringify(hostAddress)}`);\n  }\n}\n\nfunction parseSslOptions(options: ConnectionOptions): TLSConnectionOpts {\n  const result: TLSConnectionOpts = parseConnectOptions(options);\n  // Merge in valid SSL options\n  for (const name of LEGAL_TLS_SOCKET_OPTIONS) {\n    if (options[name] != null) {\n      (result as Document)[name] = options[name];\n    }\n  }\n\n  // Set default sni servername to be the same as host\n  if (result.servername == null && result.host && !net.isIP(result.host)) {\n    result.servername = result.host;\n  }\n\n  return result;\n}\n\nconst SOCKET_ERROR_EVENT_LIST = ['error', 'close', 'timeout', 'parseError'] as const;\ntype ErrorHandlerEventName = typeof SOCKET_ERROR_EVENT_LIST[number] | 'cancel';\nconst SOCKET_ERROR_EVENTS = new Set(SOCKET_ERROR_EVENT_LIST);\n\nfunction makeConnection(options: ConnectionOptions, _callback: CallbackWithType<AnyError, Stream>) {\n  const useTLS = options.tls ?? false;\n  const keepAlive = options.keepAlive ?? true;\n  const socketTimeoutMS = options.socketTimeoutMS ?? Reflect.get(options, 'socketTimeout') ?? 0;\n  const noDelay = options.noDelay ?? true;\n  const connectionTimeout = options.connectTimeoutMS ?? 30000;\n  const rejectUnauthorized = options.rejectUnauthorized ?? true;\n  const keepAliveInitialDelay =\n    ((options.keepAliveInitialDelay ?? 120000) > socketTimeoutMS\n      ? Math.round(socketTimeoutMS / 2)\n      : options.keepAliveInitialDelay) ?? 120000;\n\n  let socket: Stream;\n  const callback: Callback<Stream> = function (err, ret) {\n    if (err && socket) {\n      socket.destroy();\n    }\n\n    _callback(err, ret);\n  };\n\n  if (useTLS) {\n    const tlsSocket = tls.connect(parseSslOptions(options));\n    if (typeof tlsSocket.disableRenegotiation === 'function') {\n      tlsSocket.disableRenegotiation();\n    }\n    socket = tlsSocket;\n  } else {\n    socket = net.createConnection(parseConnectOptions(options));\n  }\n\n  socket.setKeepAlive(keepAlive, keepAliveInitialDelay);\n  socket.setTimeout(connectionTimeout);\n  socket.setNoDelay(noDelay);\n\n  const connectEvent = useTLS ? 'secureConnect' : 'connect';\n  let cancellationHandler: (err: Error) => void;\n  function errorHandler(eventName: ErrorHandlerEventName) {\n    return (err: Error) => {\n      SOCKET_ERROR_EVENTS.forEach(event => socket.removeAllListeners(event));\n      if (cancellationHandler && options.cancellationToken) {\n        options.cancellationToken.removeListener('cancel', cancellationHandler);\n      }\n\n      socket.removeListener(connectEvent, connectHandler);\n      callback(connectionFailureError(eventName, err));\n    };\n  }\n\n  function connectHandler() {\n    SOCKET_ERROR_EVENTS.forEach(event => socket.removeAllListeners(event));\n    if (cancellationHandler && options.cancellationToken) {\n      options.cancellationToken.removeListener('cancel', cancellationHandler);\n    }\n\n    if ('authorizationError' in socket) {\n      if (socket.authorizationError && rejectUnauthorized) {\n        return callback(socket.authorizationError);\n      }\n    }\n\n    socket.setTimeout(socketTimeoutMS);\n    callback(undefined, socket);\n  }\n\n  SOCKET_ERROR_EVENTS.forEach(event => socket.once(event, errorHandler(event)));\n  if (options.cancellationToken) {\n    cancellationHandler = errorHandler('cancel');\n    options.cancellationToken.once('cancel', cancellationHandler);\n  }\n\n  socket.once(connectEvent, connectHandler);\n}\n\nfunction connectionFailureError(type: string, err: Error) {\n  switch (type) {\n    case 'error':\n      return new MongoNetworkError(err);\n    case 'timeout':\n      return new MongoNetworkTimeoutError('connection timed out');\n    case 'close':\n      return new MongoNetworkError('connection closed');\n    case 'cancel':\n      return new MongoNetworkError('connection establishment was cancelled');\n    default:\n      return new MongoNetworkError('unknown network error');\n  }\n}\n", "import { MongoDriverError } from '../error';\nimport type { ConnectionPool } from './connection_pool';\n\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\nexport class PoolClosedError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(pool: ConnectionPool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.address = pool.address;\n  }\n\n  get name(): string {\n    return 'MongoPoolClosedError';\n  }\n}\n\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\nexport class WaitQueueTimeoutError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(message: string, address: string) {\n    super(message);\n    this.address = address;\n  }\n\n  get name(): string {\n    return 'MongoWaitQueueTimeoutError';\n  }\n}\n", "import type { ObjectId } from '../bson';\nimport type { Connection } from './connection';\nimport type { ConnectionPool, ConnectionPoolOptions } from './connection_pool';\nimport type { AnyError } from '../error';\n\n/**\n * The base export class for all monitoring events published from the connection pool\n * @public\n * @category Event\n */\nexport class ConnectionPoolMonitoringEvent {\n  /** A timestamp when the event was created  */\n  time: Date;\n  /** The address (host/port pair) of the pool */\n  address: string;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    this.time = new Date();\n    this.address = pool.address;\n  }\n}\n\n/**\n * An event published when a connection pool is created\n * @public\n * @category Event\n */\nexport class ConnectionPoolCreatedEvent extends ConnectionPoolMonitoringEvent {\n  /** The options used to create this connection pool */\n  options?: ConnectionPoolOptions;\n\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n    this.options = pool.options;\n  }\n}\n\n/**\n * An event published when a connection pool is closed\n * @public\n * @category Event\n */\nexport class ConnectionPoolClosedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a connection pool creates a new connection\n * @public\n * @category Event\n */\nexport class ConnectionCreatedEvent extends ConnectionPoolMonitoringEvent {\n  /** A monotonically increasing, per-pool id for the newly created connection */\n  connectionId: number | '<monitor>';\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is ready for use\n * @public\n * @category Event\n */\nexport class ConnectionReadyEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is closed\n * @public\n * @category Event\n */\nexport class ConnectionClosedEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n  /** The reason the connection was closed */\n  reason: string;\n  serviceId?: ObjectId;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection, reason: string) {\n    super(pool);\n    this.connectionId = connection.id;\n    this.reason = reason || 'unknown';\n    this.serviceId = connection.serviceId;\n  }\n}\n\n/**\n * An event published when a request to check a connection out begins\n * @public\n * @category Event\n */\nexport class ConnectionCheckOutStartedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool: ConnectionPool) {\n    super(pool);\n  }\n}\n\n/**\n * An event published when a request to check a connection out fails\n * @public\n * @category Event\n */\nexport class ConnectionCheckOutFailedEvent extends ConnectionPoolMonitoringEvent {\n  /** The reason the attempt to check out failed */\n  reason: AnyError | string;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, reason: AnyError | string) {\n    super(pool);\n    this.reason = reason;\n  }\n}\n\n/**\n * An event published when a connection is checked out of the connection pool\n * @public\n * @category Event\n */\nexport class ConnectionCheckedOutEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection is checked into the connection pool\n * @public\n * @category Event\n */\nexport class ConnectionCheckedInEvent extends ConnectionPoolMonitoringEvent {\n  /** The id of the connection */\n  connectionId: number | '<monitor>';\n\n  /** @internal */\n  constructor(pool: ConnectionPool, connection: Connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n}\n\n/**\n * An event published when a connection pool is cleared\n * @public\n * @category Event\n */\nexport class ConnectionPoolClearedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  serviceId?: ObjectId;\n\n  /** @internal */\n  constructor(pool: ConnectionPool, serviceId?: ObjectId) {\n    super(pool);\n    this.serviceId = serviceId;\n  }\n}\n", "import Denque = require('denque');\nimport { APM_EVENTS, Connection, ConnectionEvents, ConnectionOptions } from './connection';\nimport type { ObjectId } from 'bson';\nimport { Logger } from '../logger';\nimport { ConnectionPoolMetrics } from './metrics';\nimport { connect } from './connect';\nimport { eachAsync, makeCounter, Callback } from '../utils';\nimport { MongoError, MongoInvalidArgumentError, MongoRuntimeError } from '../error';\nimport { PoolClosedError, WaitQueueTimeoutError } from './errors';\nimport {\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionReadyEvent,\n  ConnectionClosedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionCheckedInEvent,\n  ConnectionPoolClearedEvent\n} from './connection_pool_events';\nimport { CancellationToken, TypedEventEmitter } from '../mongo_types';\n\n/** @internal */\nconst kLogger = Symbol('logger');\n/** @internal */\nconst kConnections = Symbol('connections');\n/** @internal */\nconst kPermits = Symbol('permits');\n/** @internal */\nconst kMinPoolSizeTimer = Symbol('minPoolSizeTimer');\n/** @internal */\nconst kGeneration = Symbol('generation');\n/** @internal */\nconst kServiceGenerations = Symbol('serviceGenerations');\n/** @internal */\nconst kConnectionCounter = Symbol('connectionCounter');\n/** @internal */\nconst kCancellationToken = Symbol('cancellationToken');\n/** @internal */\nconst kWaitQueue = Symbol('waitQueue');\n/** @internal */\nconst kCancelled = Symbol('cancelled');\n/** @internal */\nconst kMetrics = Symbol('metrics');\n/** @internal */\nconst kCheckedOut = Symbol('checkedOut');\n/** @internal */\nconst kProcessingWaitQueue = Symbol('processingWaitQueue');\n\n/** @public */\nexport interface ConnectionPoolOptions extends Omit<ConnectionOptions, 'id' | 'generation'> {\n  /** The maximum number of connections that may be associated with a pool at a given time. This includes in use and available connections. */\n  maxPoolSize: number;\n  /** The minimum number of connections that MUST exist at any moment in a single connection pool. */\n  minPoolSize: number;\n  /** The maximum amount of time a connection should remain idle in the connection pool before being marked idle. */\n  maxIdleTimeMS: number;\n  /** The maximum amount of time operation execution should wait for a connection to become available. The default is 0 which means there is no limit. */\n  waitQueueTimeoutMS: number;\n  /** If we are in load balancer mode. */\n  loadBalanced: boolean;\n}\n\n/** @internal */\nexport interface WaitQueueMember {\n  callback: Callback<Connection>;\n  timer?: NodeJS.Timeout;\n  [kCancelled]?: boolean;\n}\n\n/** @public */\nexport interface CloseOptions {\n  force?: boolean;\n}\n\n/** @public */\nexport type ConnectionPoolEvents = {\n  connectionPoolCreated(event: ConnectionPoolCreatedEvent): void;\n  connectionPoolClosed(event: ConnectionPoolClosedEvent): void;\n  connectionPoolCleared(event: ConnectionPoolClearedEvent): void;\n  connectionCreated(event: ConnectionCreatedEvent): void;\n  connectionReady(event: ConnectionReadyEvent): void;\n  connectionClosed(event: ConnectionClosedEvent): void;\n  connectionCheckOutStarted(event: ConnectionCheckOutStartedEvent): void;\n  connectionCheckOutFailed(event: ConnectionCheckOutFailedEvent): void;\n  connectionCheckedOut(event: ConnectionCheckedOutEvent): void;\n  connectionCheckedIn(event: ConnectionCheckedInEvent): void;\n} & Omit<ConnectionEvents, 'close' | 'message'>;\n\n/**\n * A pool of connections which dynamically resizes, and emit events related to pool activity\n * @internal\n */\nexport class ConnectionPool extends TypedEventEmitter<ConnectionPoolEvents> {\n  closed: boolean;\n  options: Readonly<ConnectionPoolOptions>;\n  /** @internal */\n  [kLogger]: Logger;\n  /** @internal */\n  [kConnections]: Denque<Connection>;\n  /**\n   * An integer expressing how many total connections are permitted\n   * @internal\n   */\n  [kPermits]: number;\n  /** @internal */\n  [kMinPoolSizeTimer]?: NodeJS.Timeout;\n  /**\n   * An integer representing the SDAM generation of the pool\n   * @internal\n   */\n  [kGeneration]: number;\n  /** A map of generations to service ids\n   * @internal\n   */\n  [kServiceGenerations]: Map<string, number>;\n  /** @internal */\n  [kConnectionCounter]: Generator<number>;\n  /** @internal */\n  [kCancellationToken]: CancellationToken;\n  /** @internal */\n  [kWaitQueue]: Denque<WaitQueueMember>;\n  /** @internal */\n  [kMetrics]: ConnectionPoolMetrics;\n  /** @internal */\n  [kCheckedOut]: number;\n  /** @internal */\n  [kProcessingWaitQueue]: boolean;\n\n  /**\n   * Emitted when the connection pool is created.\n   * @event\n   */\n  static readonly CONNECTION_POOL_CREATED = 'connectionPoolCreated' as const;\n  /**\n   * Emitted once when the connection pool is closed\n   * @event\n   */\n  static readonly CONNECTION_POOL_CLOSED = 'connectionPoolClosed' as const;\n  /**\n   * Emitted each time the connection pool is cleared and it's generation incremented\n   * @event\n   */\n  static readonly CONNECTION_POOL_CLEARED = 'connectionPoolCleared' as const;\n  /**\n   * Emitted when a connection is created.\n   * @event\n   */\n  static readonly CONNECTION_CREATED = 'connectionCreated' as const;\n  /**\n   * Emitted when a connection becomes established, and is ready to use\n   * @event\n   */\n  static readonly CONNECTION_READY = 'connectionReady' as const;\n  /**\n   * Emitted when a connection is closed\n   * @event\n   */\n  static readonly CONNECTION_CLOSED = 'connectionClosed' as const;\n  /**\n   * Emitted when an attempt to check out a connection begins\n   * @event\n   */\n  static readonly CONNECTION_CHECK_OUT_STARTED = 'connectionCheckOutStarted' as const;\n  /**\n   * Emitted when an attempt to check out a connection fails\n   * @event\n   */\n  static readonly CONNECTION_CHECK_OUT_FAILED = 'connectionCheckOutFailed' as const;\n  /**\n   * Emitted each time a connection is successfully checked out of the connection pool\n   * @event\n   */\n  static readonly CONNECTION_CHECKED_OUT = 'connectionCheckedOut' as const;\n  /**\n   * Emitted each time a connection is successfully checked into the connection pool\n   * @event\n   */\n  static readonly CONNECTION_CHECKED_IN = 'connectionCheckedIn' as const;\n\n  /** @internal */\n  constructor(options: ConnectionPoolOptions) {\n    super();\n\n    this.closed = false;\n    this.options = Object.freeze({\n      ...options,\n      connectionType: Connection,\n      maxPoolSize: options.maxPoolSize ?? 100,\n      minPoolSize: options.minPoolSize ?? 0,\n      maxIdleTimeMS: options.maxIdleTimeMS ?? 0,\n      waitQueueTimeoutMS: options.waitQueueTimeoutMS ?? 0,\n      autoEncrypter: options.autoEncrypter,\n      metadata: options.metadata\n    });\n\n    if (this.options.minPoolSize > this.options.maxPoolSize) {\n      throw new MongoInvalidArgumentError(\n        'Connection pool minimum size must not be greater than maximum pool size'\n      );\n    }\n\n    this[kLogger] = new Logger('ConnectionPool');\n    this[kConnections] = new Denque();\n    this[kPermits] = this.options.maxPoolSize;\n    this[kMinPoolSizeTimer] = undefined;\n    this[kGeneration] = 0;\n    this[kServiceGenerations] = new Map();\n    this[kConnectionCounter] = makeCounter(1);\n    this[kCancellationToken] = new CancellationToken();\n    this[kCancellationToken].setMaxListeners(Infinity);\n    this[kWaitQueue] = new Denque();\n    this[kMetrics] = new ConnectionPoolMetrics();\n    this[kCheckedOut] = 0;\n    this[kProcessingWaitQueue] = false;\n\n    process.nextTick(() => {\n      this.emit(ConnectionPool.CONNECTION_POOL_CREATED, new ConnectionPoolCreatedEvent(this));\n      ensureMinPoolSize(this);\n    });\n  }\n\n  /** The address of the endpoint the pool is connected to */\n  get address(): string {\n    return this.options.hostAddress.toString();\n  }\n\n  /** An integer representing the SDAM generation of the pool */\n  get generation(): number {\n    return this[kGeneration];\n  }\n\n  /** An integer expressing how many total connections (active + in use) the pool currently has */\n  get totalConnectionCount(): number {\n    return this[kConnections].length + (this.options.maxPoolSize - this[kPermits]);\n  }\n\n  /** An integer expressing how many connections are currently available in the pool. */\n  get availableConnectionCount(): number {\n    return this[kConnections].length;\n  }\n\n  get waitQueueSize(): number {\n    return this[kWaitQueue].length;\n  }\n\n  get loadBalanced(): boolean {\n    return this.options.loadBalanced;\n  }\n\n  get serviceGenerations(): Map<string, number> {\n    return this[kServiceGenerations];\n  }\n\n  get currentCheckedOutCount(): number {\n    return this[kCheckedOut];\n  }\n\n  /**\n   * Get the metrics information for the pool when a wait queue timeout occurs.\n   */\n  private waitQueueErrorMetrics(): string {\n    return this[kMetrics].info(this.options.maxPoolSize);\n  }\n\n  /**\n   * Check a connection out of this pool. The connection will continue to be tracked, but no reference to it\n   * will be held by the pool. This means that if a connection is checked out it MUST be checked back in or\n   * explicitly destroyed by the new owner.\n   */\n  checkOut(callback: Callback<Connection>): void {\n    this.emit(\n      ConnectionPool.CONNECTION_CHECK_OUT_STARTED,\n      new ConnectionCheckOutStartedEvent(this)\n    );\n\n    if (this.closed) {\n      this.emit(\n        ConnectionPool.CONNECTION_CHECK_OUT_FAILED,\n        new ConnectionCheckOutFailedEvent(this, 'poolClosed')\n      );\n      callback(new PoolClosedError(this));\n      return;\n    }\n\n    const waitQueueMember: WaitQueueMember = { callback };\n    const waitQueueTimeoutMS = this.options.waitQueueTimeoutMS;\n    if (waitQueueTimeoutMS) {\n      waitQueueMember.timer = setTimeout(() => {\n        waitQueueMember[kCancelled] = true;\n        waitQueueMember.timer = undefined;\n\n        this.emit(\n          ConnectionPool.CONNECTION_CHECK_OUT_FAILED,\n          new ConnectionCheckOutFailedEvent(this, 'timeout')\n        );\n        waitQueueMember.callback(\n          new WaitQueueTimeoutError(\n            this.loadBalanced\n              ? this.waitQueueErrorMetrics()\n              : 'Timed out while checking out a connection from connection pool',\n            this.address\n          )\n        );\n      }, waitQueueTimeoutMS);\n    }\n\n    this[kCheckedOut] = this[kCheckedOut] + 1;\n    this[kWaitQueue].push(waitQueueMember);\n    process.nextTick(processWaitQueue, this);\n  }\n\n  /**\n   * Check a connection into the pool.\n   *\n   * @param connection - The connection to check in\n   */\n  checkIn(connection: Connection): void {\n    const poolClosed = this.closed;\n    const stale = connectionIsStale(this, connection);\n    const willDestroy = !!(poolClosed || stale || connection.closed);\n\n    if (!willDestroy) {\n      connection.markAvailable();\n      this[kConnections].unshift(connection);\n    }\n\n    this[kCheckedOut] = this[kCheckedOut] - 1;\n    this.emit(ConnectionPool.CONNECTION_CHECKED_IN, new ConnectionCheckedInEvent(this, connection));\n\n    if (willDestroy) {\n      const reason = connection.closed ? 'error' : poolClosed ? 'poolClosed' : 'stale';\n      destroyConnection(this, connection, reason);\n    }\n\n    process.nextTick(processWaitQueue, this);\n  }\n\n  /**\n   * Clear the pool\n   *\n   * Pool reset is handled by incrementing the pool's generation count. Any existing connection of a\n   * previous generation will eventually be pruned during subsequent checkouts.\n   */\n  clear(serviceId?: ObjectId): void {\n    if (this.loadBalanced && serviceId) {\n      const sid = serviceId.toHexString();\n      const generation = this.serviceGenerations.get(sid);\n      // Only need to worry if the generation exists, since it should\n      // always be there but typescript needs the check.\n      if (generation == null) {\n        // TODO(NODE-3483)\n        throw new MongoRuntimeError('Service generations are required in load balancer mode.');\n      } else {\n        // Increment the generation for the service id.\n        this.serviceGenerations.set(sid, generation + 1);\n      }\n    } else {\n      this[kGeneration] += 1;\n    }\n\n    this.emit('connectionPoolCleared', new ConnectionPoolClearedEvent(this, serviceId));\n  }\n\n  /** Close the pool */\n  close(callback: Callback<void>): void;\n  close(options: CloseOptions, callback: Callback<void>): void;\n  close(_options?: CloseOptions | Callback<void>, _cb?: Callback<void>): void {\n    let options = _options as CloseOptions;\n    const callback = (_cb ?? _options) as Callback<void>;\n    if (typeof options === 'function') {\n      options = {};\n    }\n\n    options = Object.assign({ force: false }, options);\n    if (this.closed) {\n      return callback();\n    }\n\n    // immediately cancel any in-flight connections\n    this[kCancellationToken].emit('cancel');\n\n    // drain the wait queue\n    while (this.waitQueueSize) {\n      const waitQueueMember = this[kWaitQueue].pop();\n      if (waitQueueMember) {\n        if (waitQueueMember.timer) {\n          clearTimeout(waitQueueMember.timer);\n        }\n        if (!waitQueueMember[kCancelled]) {\n          // TODO(NODE-3483): Replace with MongoConnectionPoolClosedError\n          waitQueueMember.callback(new MongoRuntimeError('Connection pool closed'));\n        }\n      }\n    }\n\n    // clear the min pool size timer\n    const minPoolSizeTimer = this[kMinPoolSizeTimer];\n    if (minPoolSizeTimer) {\n      clearTimeout(minPoolSizeTimer);\n    }\n\n    // end the connection counter\n    if (typeof this[kConnectionCounter].return === 'function') {\n      this[kConnectionCounter].return(undefined);\n    }\n\n    // mark the pool as closed immediately\n    this.closed = true;\n    eachAsync<Connection>(\n      this[kConnections].toArray(),\n      (conn, cb) => {\n        this.emit(\n          ConnectionPool.CONNECTION_CLOSED,\n          new ConnectionClosedEvent(this, conn, 'poolClosed')\n        );\n        conn.destroy(options, cb);\n      },\n      err => {\n        this[kConnections].clear();\n        this.emit(ConnectionPool.CONNECTION_POOL_CLOSED, new ConnectionPoolClosedEvent(this));\n        callback(err);\n      }\n    );\n  }\n\n  /**\n   * Runs a lambda with an implicitly checked out connection, checking that connection back in when the lambda\n   * has completed by calling back.\n   *\n   * NOTE: please note the required signature of `fn`\n   *\n   * @remarks When in load balancer mode, connections can be pinned to cursors or transactions.\n   *   In these cases we pass the connection in to this method to ensure it is used and a new\n   *   connection is not checked out.\n   *\n   * @param conn - A pinned connection for use in load balancing mode.\n   * @param fn - A function which operates on a managed connection\n   * @param callback - The original callback\n   */\n  withConnection(\n    conn: Connection | undefined,\n    fn: WithConnectionCallback,\n    callback?: Callback<Connection>\n  ): void {\n    if (conn) {\n      // use the provided connection, and do _not_ check it in after execution\n      fn(undefined, conn, (fnErr, result) => {\n        if (typeof callback === 'function') {\n          if (fnErr) {\n            callback(fnErr);\n          } else {\n            callback(undefined, result);\n          }\n        }\n      });\n\n      return;\n    }\n\n    this.checkOut((err, conn) => {\n      // don't callback with `err` here, we might want to act upon it inside `fn`\n      fn(err as MongoError, conn, (fnErr, result) => {\n        if (typeof callback === 'function') {\n          if (fnErr) {\n            callback(fnErr);\n          } else {\n            callback(undefined, result);\n          }\n        }\n\n        if (conn) {\n          this.checkIn(conn);\n        }\n      });\n    });\n  }\n}\n\nfunction ensureMinPoolSize(pool: ConnectionPool) {\n  if (pool.closed || pool.options.minPoolSize === 0) {\n    return;\n  }\n\n  const minPoolSize = pool.options.minPoolSize;\n  for (let i = pool.totalConnectionCount; i < minPoolSize; ++i) {\n    createConnection(pool);\n  }\n\n  pool[kMinPoolSizeTimer] = setTimeout(() => ensureMinPoolSize(pool), 10);\n}\n\nfunction connectionIsStale(pool: ConnectionPool, connection: Connection) {\n  const serviceId = connection.serviceId;\n  if (pool.loadBalanced && serviceId) {\n    const sid = serviceId.toHexString();\n    const generation = pool.serviceGenerations.get(sid);\n    return connection.generation !== generation;\n  }\n\n  return connection.generation !== pool[kGeneration];\n}\n\nfunction connectionIsIdle(pool: ConnectionPool, connection: Connection) {\n  return !!(pool.options.maxIdleTimeMS && connection.idleTime > pool.options.maxIdleTimeMS);\n}\n\nfunction createConnection(pool: ConnectionPool, callback?: Callback<Connection>) {\n  const connectOptions: ConnectionOptions = {\n    ...pool.options,\n    id: pool[kConnectionCounter].next().value,\n    generation: pool[kGeneration],\n    cancellationToken: pool[kCancellationToken]\n  };\n\n  pool[kPermits]--;\n  connect(connectOptions, (err, connection) => {\n    if (err || !connection) {\n      pool[kPermits]++;\n      pool[kLogger].debug(`connection attempt failed with error [${JSON.stringify(err)}]`);\n      if (typeof callback === 'function') {\n        callback(err);\n      }\n\n      return;\n    }\n\n    // The pool might have closed since we started trying to create a connection\n    if (pool.closed) {\n      connection.destroy({ force: true });\n      return;\n    }\n\n    // forward all events from the connection to the pool\n    for (const event of [...APM_EVENTS, Connection.CLUSTER_TIME_RECEIVED]) {\n      connection.on(event, (e: any) => pool.emit(event, e));\n    }\n\n    pool.emit(ConnectionPool.CONNECTION_CREATED, new ConnectionCreatedEvent(pool, connection));\n\n    if (pool.loadBalanced) {\n      connection.on(Connection.PINNED, pinType => pool[kMetrics].markPinned(pinType));\n      connection.on(Connection.UNPINNED, pinType => pool[kMetrics].markUnpinned(pinType));\n\n      const serviceId = connection.serviceId;\n      if (serviceId) {\n        let generation;\n        const sid = serviceId.toHexString();\n        if ((generation = pool.serviceGenerations.get(sid))) {\n          connection.generation = generation;\n        } else {\n          pool.serviceGenerations.set(sid, 0);\n          connection.generation = 0;\n        }\n      }\n    }\n\n    connection.markAvailable();\n    pool.emit(ConnectionPool.CONNECTION_READY, new ConnectionReadyEvent(pool, connection));\n\n    // if a callback has been provided, check out the connection immediately\n    if (typeof callback === 'function') {\n      callback(undefined, connection);\n      return;\n    }\n\n    // otherwise add it to the pool for later acquisition, and try to process the wait queue\n    pool[kConnections].push(connection);\n    process.nextTick(processWaitQueue, pool);\n  });\n}\n\nfunction destroyConnection(pool: ConnectionPool, connection: Connection, reason: string) {\n  pool.emit(ConnectionPool.CONNECTION_CLOSED, new ConnectionClosedEvent(pool, connection, reason));\n\n  // allow more connections to be created\n  pool[kPermits]++;\n\n  // destroy the connection\n  process.nextTick(() => connection.destroy());\n}\n\nfunction processWaitQueue(pool: ConnectionPool) {\n  if (pool.closed || pool[kProcessingWaitQueue]) {\n    return;\n  }\n\n  pool[kProcessingWaitQueue] = true;\n  while (pool.waitQueueSize) {\n    const waitQueueMember = pool[kWaitQueue].peekFront();\n    if (!waitQueueMember) {\n      pool[kWaitQueue].shift();\n      continue;\n    }\n\n    if (waitQueueMember[kCancelled]) {\n      pool[kWaitQueue].shift();\n      continue;\n    }\n\n    if (!pool.availableConnectionCount) {\n      break;\n    }\n\n    const connection = pool[kConnections].shift();\n    if (!connection) {\n      break;\n    }\n\n    const isStale = connectionIsStale(pool, connection);\n    const isIdle = connectionIsIdle(pool, connection);\n    if (!isStale && !isIdle && !connection.closed) {\n      pool.emit(\n        ConnectionPool.CONNECTION_CHECKED_OUT,\n        new ConnectionCheckedOutEvent(pool, connection)\n      );\n      if (waitQueueMember.timer) {\n        clearTimeout(waitQueueMember.timer);\n      }\n\n      pool[kWaitQueue].shift();\n      waitQueueMember.callback(undefined, connection);\n    } else {\n      const reason = connection.closed ? 'error' : isStale ? 'stale' : 'idle';\n      destroyConnection(pool, connection, reason);\n    }\n  }\n\n  const maxPoolSize = pool.options.maxPoolSize;\n  if (pool.waitQueueSize && (maxPoolSize <= 0 || pool.totalConnectionCount < maxPoolSize)) {\n    createConnection(pool, (err, connection) => {\n      const waitQueueMember = pool[kWaitQueue].shift();\n      if (!waitQueueMember || waitQueueMember[kCancelled]) {\n        if (!err && connection) {\n          pool[kConnections].push(connection);\n        }\n\n        pool[kProcessingWaitQueue] = false;\n        return;\n      }\n\n      if (err) {\n        pool.emit(\n          ConnectionPool.CONNECTION_CHECK_OUT_FAILED,\n          new ConnectionCheckOutFailedEvent(pool, err)\n        );\n      } else if (connection) {\n        pool.emit(\n          ConnectionPool.CONNECTION_CHECKED_OUT,\n          new ConnectionCheckedOutEvent(pool, connection)\n        );\n      }\n\n      if (waitQueueMember.timer) {\n        clearTimeout(waitQueueMember.timer);\n      }\n      waitQueueMember.callback(err, connection);\n      pool[kProcessingWaitQueue] = false;\n      process.nextTick(() => processWaitQueue(pool));\n    });\n  } else {\n    pool[kProcessingWaitQueue] = false;\n  }\n}\n\nexport const CMAP_EVENTS = [\n  ConnectionPool.CONNECTION_POOL_CREATED,\n  ConnectionPool.CONNECTION_POOL_CLOSED,\n  ConnectionPool.CONNECTION_CREATED,\n  ConnectionPool.CONNECTION_READY,\n  ConnectionPool.CONNECTION_CLOSED,\n  ConnectionPool.CONNECTION_CHECK_OUT_STARTED,\n  ConnectionPool.CONNECTION_CHECK_OUT_FAILED,\n  ConnectionPool.CONNECTION_CHECKED_OUT,\n  ConnectionPool.CONNECTION_CHECKED_IN,\n  ConnectionPool.CONNECTION_POOL_CLEARED\n] as const;\n\n/**\n * A callback provided to `withConnection`\n * @internal\n *\n * @param error - An error instance representing the error during the execution.\n * @param connection - The managed connection which was checked out of the pool.\n * @param callback - A function to call back after connection management is complete\n */\nexport type WithConnectionCallback = (\n  error: MongoError | undefined,\n  connection: Connection | undefined,\n  callback: Callback<Connection>\n) => void;\n", "import type { ServerDescription } from './server_description';\nimport type { TopologyDescription } from './topology_description';\nimport type { Document } from '../bson';\n\n/**\n * Emitted when server description changes, but does NOT include changes to the RTT.\n * @public\n * @category Event\n */\nexport class ServerDescriptionChangedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The address (host/port pair) of the server */\n  address: string;\n  /** The previous server description */\n  previousDescription: ServerDescription;\n  /** The new server description */\n  newDescription: ServerDescription;\n\n  /** @internal */\n  constructor(\n    topologyId: number,\n    address: string,\n    previousDescription: ServerDescription,\n    newDescription: ServerDescription\n  ) {\n    this.topologyId = topologyId;\n    this.address = address;\n    this.previousDescription = previousDescription;\n    this.newDescription = newDescription;\n  }\n}\n\n/**\n * Emitted when server is initialized.\n * @public\n * @category Event\n */\nexport class ServerOpeningEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The address (host/port pair) of the server */\n  address: string;\n\n  /** @internal */\n  constructor(topologyId: number, address: string) {\n    this.topologyId = topologyId;\n    this.address = address;\n  }\n}\n\n/**\n * Emitted when server is closed.\n * @public\n * @category Event\n */\nexport class ServerClosedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The address (host/port pair) of the server */\n  address: string;\n\n  /** @internal */\n  constructor(topologyId: number, address: string) {\n    this.topologyId = topologyId;\n    this.address = address;\n  }\n}\n\n/**\n * Emitted when topology description changes.\n * @public\n * @category Event\n */\nexport class TopologyDescriptionChangedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n  /** The old topology description */\n  previousDescription: TopologyDescription;\n  /** The new topology description */\n  newDescription: TopologyDescription;\n\n  /** @internal */\n  constructor(\n    topologyId: number,\n    previousDescription: TopologyDescription,\n    newDescription: TopologyDescription\n  ) {\n    this.topologyId = topologyId;\n    this.previousDescription = previousDescription;\n    this.newDescription = newDescription;\n  }\n}\n\n/**\n * Emitted when topology is initialized.\n * @public\n * @category Event\n */\nexport class TopologyOpeningEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n\n  /** @internal */\n  constructor(topologyId: number) {\n    this.topologyId = topologyId;\n  }\n}\n\n/**\n * Emitted when topology is closed.\n * @public\n * @category Event\n */\nexport class TopologyClosedEvent {\n  /** A unique identifier for the topology */\n  topologyId: number;\n\n  /** @internal */\n  constructor(topologyId: number) {\n    this.topologyId = topologyId;\n  }\n}\n\n/**\n * Emitted when the server monitor’s ismaster command is started - immediately before\n * the ismaster command is serialized into raw BSON and written to the socket.\n *\n * @public\n * @category Event\n */\nexport class ServerHeartbeatStartedEvent {\n  /** The connection id for the command */\n  connectionId: string;\n\n  /** @internal */\n  constructor(connectionId: string) {\n    this.connectionId = connectionId;\n  }\n}\n\n/**\n * Emitted when the server monitor’s ismaster succeeds.\n * @public\n * @category Event\n */\nexport class ServerHeartbeatSucceededEvent {\n  /** The connection id for the command */\n  connectionId: string;\n  /** The execution time of the event in ms */\n  duration: number;\n  /** The command reply */\n  reply: Document;\n\n  /** @internal */\n  constructor(connectionId: string, duration: number, reply: Document) {\n    this.connectionId = connectionId;\n    this.duration = duration;\n    this.reply = reply;\n  }\n}\n\n/**\n * Emitted when the server monitor’s ismaster fails, either with an “ok: 0” or a socket exception.\n * @public\n * @category Event\n */\nexport class ServerHeartbeatFailedEvent {\n  /** The connection id for the command */\n  connectionId: string;\n  /** The execution time of the event in ms */\n  duration: number;\n  /** The command failure */\n  failure: Error;\n\n  /** @internal */\n  constructor(connectionId: string, duration: number, failure: Error) {\n    this.connectionId = connectionId;\n    this.duration = duration;\n    this.failure = failure;\n  }\n}\n", "import { ServerType, STATE_CLOSED, STATE_CLOSING } from './common';\nimport {\n  now,\n  makeStateMachine,\n  calculateDurationInMs,\n  makeInterruptibleAsyncInterval,\n  ns,\n  EventEmitterWithState\n} from '../utils';\nimport { connect } from '../cmap/connect';\nimport { Connection, ConnectionOptions } from '../cmap/connection';\nimport { MongoNetworkError, AnyError } from '../error';\nimport { Long, Document } from '../bson';\nimport {\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent,\n  ServerHeartbeatFailedEvent\n} from './events';\n\nimport { Server } from './server';\nimport type { InterruptibleAsyncInterval, Callback } from '../utils';\nimport type { TopologyVersion } from './server_description';\nimport { CancellationToken, TypedEventEmitter } from '../mongo_types';\n\n/** @internal */\nconst kServer = Symbol('server');\n/** @internal */\nconst kMonitorId = Symbol('monitorId');\n/** @internal */\nconst kConnection = Symbol('connection');\n/** @internal */\nconst kCancellationToken = Symbol('cancellationToken');\n/** @internal */\nconst kRTTPinger = Symbol('rttPinger');\n/** @internal */\nconst kRoundTripTime = Symbol('roundTripTime');\n\nconst STATE_IDLE = 'idle';\nconst STATE_MONITORING = 'monitoring';\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_IDLE, STATE_CLOSED],\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_MONITORING],\n  [STATE_IDLE]: [STATE_IDLE, STATE_MONITORING, STATE_CLOSING],\n  [STATE_MONITORING]: [STATE_MONITORING, STATE_IDLE, STATE_CLOSING]\n});\n\nconst INVALID_REQUEST_CHECK_STATES = new Set([STATE_CLOSING, STATE_CLOSED, STATE_MONITORING]);\nfunction isInCloseState(monitor: Monitor) {\n  return monitor.s.state === STATE_CLOSED || monitor.s.state === STATE_CLOSING;\n}\n\n/** @internal */\nexport interface MonitorPrivate {\n  state: string;\n}\n\n/** @public */\nexport interface MonitorOptions\n  extends Omit<ConnectionOptions, 'id' | 'generation' | 'hostAddress'> {\n  connectTimeoutMS: number;\n  heartbeatFrequencyMS: number;\n  minHeartbeatFrequencyMS: number;\n}\n\n/** @public */\nexport type MonitorEvents = {\n  serverHeartbeatStarted(event: ServerHeartbeatStartedEvent): void;\n  serverHeartbeatSucceeded(event: ServerHeartbeatSucceededEvent): void;\n  serverHeartbeatFailed(event: ServerHeartbeatFailedEvent): void;\n  resetServer(error?: Error): void;\n  resetConnectionPool(): void;\n  close(): void;\n} & EventEmitterWithState;\n\n/** @internal */\nexport class Monitor extends TypedEventEmitter<MonitorEvents> {\n  /** @internal */\n  s: MonitorPrivate;\n  address: string;\n  options: Readonly<\n    Pick<MonitorOptions, 'connectTimeoutMS' | 'heartbeatFrequencyMS' | 'minHeartbeatFrequencyMS'>\n  >;\n  connectOptions: ConnectionOptions;\n  [kServer]: Server;\n  [kConnection]?: Connection;\n  [kCancellationToken]: CancellationToken;\n  /** @internal */\n  [kMonitorId]?: InterruptibleAsyncInterval;\n  [kRTTPinger]?: RTTPinger;\n\n  constructor(server: Server, options: MonitorOptions) {\n    super();\n\n    this[kServer] = server;\n    this[kConnection] = undefined;\n    this[kCancellationToken] = new CancellationToken();\n    this[kCancellationToken].setMaxListeners(Infinity);\n    this[kMonitorId] = undefined;\n    this.s = {\n      state: STATE_CLOSED\n    };\n\n    this.address = server.description.address;\n    this.options = Object.freeze({\n      connectTimeoutMS: options.connectTimeoutMS ?? 10000,\n      heartbeatFrequencyMS: options.heartbeatFrequencyMS ?? 10000,\n      minHeartbeatFrequencyMS: options.minHeartbeatFrequencyMS ?? 500\n    });\n\n    const cancellationToken = this[kCancellationToken];\n    // TODO: refactor this to pull it directly from the pool, requires new ConnectionPool integration\n    const connectOptions = Object.assign(\n      {\n        id: '<monitor>' as const,\n        generation: server.s.pool.generation,\n        connectionType: Connection,\n        cancellationToken,\n        hostAddress: server.description.hostAddress\n      },\n      options,\n      // force BSON serialization options\n      {\n        raw: false,\n        promoteLongs: true,\n        promoteValues: true,\n        promoteBuffers: true\n      }\n    );\n\n    // ensure no authentication is used for monitoring\n    delete connectOptions.credentials;\n    if (connectOptions.autoEncrypter) {\n      delete connectOptions.autoEncrypter;\n    }\n\n    this.connectOptions = Object.freeze(connectOptions);\n  }\n\n  connect(): void {\n    if (this.s.state !== STATE_CLOSED) {\n      return;\n    }\n\n    // start\n    const heartbeatFrequencyMS = this.options.heartbeatFrequencyMS;\n    const minHeartbeatFrequencyMS = this.options.minHeartbeatFrequencyMS;\n    this[kMonitorId] = makeInterruptibleAsyncInterval(monitorServer(this), {\n      interval: heartbeatFrequencyMS,\n      minInterval: minHeartbeatFrequencyMS,\n      immediate: true\n    });\n  }\n\n  requestCheck(): void {\n    if (INVALID_REQUEST_CHECK_STATES.has(this.s.state)) {\n      return;\n    }\n\n    this[kMonitorId]?.wake();\n  }\n\n  reset(): void {\n    const topologyVersion = this[kServer].description.topologyVersion;\n    if (isInCloseState(this) || topologyVersion == null) {\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n    resetMonitorState(this);\n\n    // restart monitor\n    stateTransition(this, STATE_IDLE);\n\n    // restart monitoring\n    const heartbeatFrequencyMS = this.options.heartbeatFrequencyMS;\n    const minHeartbeatFrequencyMS = this.options.minHeartbeatFrequencyMS;\n    this[kMonitorId] = makeInterruptibleAsyncInterval(monitorServer(this), {\n      interval: heartbeatFrequencyMS,\n      minInterval: minHeartbeatFrequencyMS\n    });\n  }\n\n  close(): void {\n    if (isInCloseState(this)) {\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n    resetMonitorState(this);\n\n    // close monitor\n    this.emit('close');\n    stateTransition(this, STATE_CLOSED);\n  }\n}\n\nfunction resetMonitorState(monitor: Monitor) {\n  monitor[kMonitorId]?.stop();\n  monitor[kMonitorId] = undefined;\n\n  monitor[kRTTPinger]?.close();\n  monitor[kRTTPinger] = undefined;\n\n  monitor[kCancellationToken].emit('cancel');\n\n  monitor[kConnection]?.destroy({ force: true });\n  monitor[kConnection] = undefined;\n}\n\nfunction checkServer(monitor: Monitor, callback: Callback<Document>) {\n  let start = now();\n  monitor.emit(Server.SERVER_HEARTBEAT_STARTED, new ServerHeartbeatStartedEvent(monitor.address));\n\n  function failureHandler(err: AnyError) {\n    monitor[kConnection]?.destroy({ force: true });\n    monitor[kConnection] = undefined;\n\n    monitor.emit(\n      Server.SERVER_HEARTBEAT_FAILED,\n      new ServerHeartbeatFailedEvent(monitor.address, calculateDurationInMs(start), err)\n    );\n\n    monitor.emit('resetServer', err);\n    monitor.emit('resetConnectionPool');\n    callback(err);\n  }\n\n  const connection = monitor[kConnection];\n  if (connection && !connection.closed) {\n    const { serverApi, helloOk } = connection;\n    const connectTimeoutMS = monitor.options.connectTimeoutMS;\n    const maxAwaitTimeMS = monitor.options.heartbeatFrequencyMS;\n    const topologyVersion = monitor[kServer].description.topologyVersion;\n    const isAwaitable = topologyVersion != null;\n\n    const cmd = {\n      [serverApi?.version || helloOk ? 'hello' : 'ismaster']: true,\n      ...(isAwaitable && topologyVersion\n        ? { maxAwaitTimeMS, topologyVersion: makeTopologyVersion(topologyVersion) }\n        : {})\n    };\n\n    const options = isAwaitable\n      ? {\n          socketTimeoutMS: connectTimeoutMS ? connectTimeoutMS + maxAwaitTimeMS : 0,\n          exhaustAllowed: true\n        }\n      : { socketTimeoutMS: connectTimeoutMS };\n\n    if (isAwaitable && monitor[kRTTPinger] == null) {\n      monitor[kRTTPinger] = new RTTPinger(\n        monitor[kCancellationToken],\n        Object.assign(\n          { heartbeatFrequencyMS: monitor.options.heartbeatFrequencyMS },\n          monitor.connectOptions\n        )\n      );\n    }\n\n    connection.command(ns('admin.$cmd'), cmd, options, (err, isMaster) => {\n      if (err) {\n        failureHandler(err);\n        return;\n      }\n      if ('isWritablePrimary' in isMaster) {\n        // Provide pre-hello-style response document.\n        isMaster.ismaster = isMaster.isWritablePrimary;\n      }\n\n      const rttPinger = monitor[kRTTPinger];\n      const duration =\n        isAwaitable && rttPinger ? rttPinger.roundTripTime : calculateDurationInMs(start);\n\n      monitor.emit(\n        Server.SERVER_HEARTBEAT_SUCCEEDED,\n        new ServerHeartbeatSucceededEvent(monitor.address, duration, isMaster)\n      );\n\n      // if we are using the streaming protocol then we immediately issue another `started`\n      // event, otherwise the \"check\" is complete and return to the main monitor loop\n      if (isAwaitable && isMaster.topologyVersion) {\n        monitor.emit(\n          Server.SERVER_HEARTBEAT_STARTED,\n          new ServerHeartbeatStartedEvent(monitor.address)\n        );\n        start = now();\n      } else {\n        monitor[kRTTPinger]?.close();\n        monitor[kRTTPinger] = undefined;\n\n        callback(undefined, isMaster);\n      }\n    });\n\n    return;\n  }\n\n  // connecting does an implicit `ismaster`\n  connect(monitor.connectOptions, (err, conn) => {\n    if (err) {\n      monitor[kConnection] = undefined;\n\n      // we already reset the connection pool on network errors in all cases\n      if (!(err instanceof MongoNetworkError)) {\n        monitor.emit('resetConnectionPool');\n      }\n\n      failureHandler(err);\n      return;\n    }\n\n    if (conn) {\n      if (isInCloseState(monitor)) {\n        conn.destroy({ force: true });\n        return;\n      }\n\n      monitor[kConnection] = conn;\n      monitor.emit(\n        Server.SERVER_HEARTBEAT_SUCCEEDED,\n        new ServerHeartbeatSucceededEvent(\n          monitor.address,\n          calculateDurationInMs(start),\n          conn.ismaster\n        )\n      );\n\n      callback(undefined, conn.ismaster);\n    }\n  });\n}\n\nfunction monitorServer(monitor: Monitor) {\n  return (callback: Callback) => {\n    stateTransition(monitor, STATE_MONITORING);\n    function done() {\n      if (!isInCloseState(monitor)) {\n        stateTransition(monitor, STATE_IDLE);\n      }\n\n      callback();\n    }\n\n    checkServer(monitor, (err, isMaster) => {\n      if (err) {\n        // otherwise an error occurred on initial discovery, also bail\n        if (monitor[kServer].description.type === ServerType.Unknown) {\n          monitor.emit('resetServer', err);\n          return done();\n        }\n      }\n\n      // if the check indicates streaming is supported, immediately reschedule monitoring\n      if (isMaster && isMaster.topologyVersion) {\n        setTimeout(() => {\n          if (!isInCloseState(monitor)) {\n            monitor[kMonitorId]?.wake();\n          }\n        }, 0);\n      }\n\n      done();\n    });\n  };\n}\n\nfunction makeTopologyVersion(tv: TopologyVersion) {\n  return {\n    processId: tv.processId,\n    // tests mock counter as just number, but in a real situation counter should always be a Long\n    counter: Long.isLong(tv.counter) ? tv.counter : Long.fromNumber(tv.counter)\n  };\n}\n\n/** @internal */\nexport interface RTTPingerOptions extends ConnectionOptions {\n  heartbeatFrequencyMS: number;\n}\n\n/** @internal */\nexport class RTTPinger {\n  /** @internal */\n  [kConnection]?: Connection;\n  /** @internal */\n  [kCancellationToken]: CancellationToken;\n  /** @internal */\n  [kRoundTripTime]: number;\n  /** @internal */\n  [kMonitorId]: NodeJS.Timeout;\n  closed: boolean;\n\n  constructor(cancellationToken: CancellationToken, options: RTTPingerOptions) {\n    this[kConnection] = undefined;\n    this[kCancellationToken] = cancellationToken;\n    this[kRoundTripTime] = 0;\n    this.closed = false;\n\n    const heartbeatFrequencyMS = options.heartbeatFrequencyMS;\n    this[kMonitorId] = setTimeout(() => measureRoundTripTime(this, options), heartbeatFrequencyMS);\n  }\n\n  get roundTripTime(): number {\n    return this[kRoundTripTime];\n  }\n\n  close(): void {\n    this.closed = true;\n    clearTimeout(this[kMonitorId]);\n\n    this[kConnection]?.destroy({ force: true });\n    this[kConnection] = undefined;\n  }\n}\n\nfunction measureRoundTripTime(rttPinger: RTTPinger, options: RTTPingerOptions) {\n  const start = now();\n  options.cancellationToken = rttPinger[kCancellationToken];\n  const heartbeatFrequencyMS = options.heartbeatFrequencyMS;\n\n  if (rttPinger.closed) {\n    return;\n  }\n\n  function measureAndReschedule(conn?: Connection) {\n    if (rttPinger.closed) {\n      conn?.destroy({ force: true });\n      return;\n    }\n\n    if (rttPinger[kConnection] == null) {\n      rttPinger[kConnection] = conn;\n    }\n\n    rttPinger[kRoundTripTime] = calculateDurationInMs(start);\n    rttPinger[kMonitorId] = setTimeout(\n      () => measureRoundTripTime(rttPinger, options),\n      heartbeatFrequencyMS\n    );\n  }\n\n  const connection = rttPinger[kConnection];\n  if (connection == null) {\n    connect(options, (err, conn) => {\n      if (err) {\n        rttPinger[kConnection] = undefined;\n        rttPinger[kRoundTripTime] = 0;\n        return;\n      }\n\n      measureAndReschedule(conn);\n    });\n\n    return;\n  }\n\n  connection.command(ns('admin.$cmd'), { ismaster: 1 }, undefined, err => {\n    if (err) {\n      rttPinger[kConnection] = undefined;\n      rttPinger[kRoundTripTime] = 0;\n      return;\n    }\n\n    measureAndReschedule();\n  });\n}\n", "import { Logger } from '../logger';\nimport {\n  ConnectionPool,\n  ConnectionPoolOptions,\n  CMAP_EVENTS,\n  ConnectionPoolEvents\n} from '../cmap/connection_pool';\nimport { ServerDescription, compareTopologyVersion } from './server_description';\nimport { Monitor, MonitorOptions } from './monitor';\nimport { isTransactionCommand } from '../transactions';\nimport {\n  collationNotSupported,\n  makeStateMachine,\n  maxWireVersion,\n  Callback,\n  CallbackWithType,\n  MongoDBNamespace,\n  EventEmitterWithState\n} from '../utils';\nimport {\n  STATE_CLOSED,\n  STATE_CLOSING,\n  STATE_CONNECTING,\n  STATE_CONNECTED,\n  ClusterTime,\n  TopologyType\n} from './common';\nimport {\n  MongoError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  isSDAMUnrecoverableError,\n  isRetryableWriteError,\n  isNodeShuttingDownError,\n  isNetworkErrorBeforeHandshake,\n  MongoCompatibilityError,\n  MongoInvalidArgumentError,\n  MongoServerClosedError\n} from '../error';\nimport {\n  Connection,\n  DestroyOptions,\n  QueryOptions,\n  GetMoreOptions,\n  CommandOptions,\n  APM_EVENTS\n} from '../cmap/connection';\nimport type { Topology } from './topology';\nimport type {\n  ServerHeartbeatFailedEvent,\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent\n} from './events';\nimport type { ClientSession } from '../sessions';\nimport type { Document, Long } from '../bson';\nimport type { AutoEncrypter } from '../deps';\nimport type { ServerApi } from '../mongo_client';\nimport { TypedEventEmitter } from '../mongo_types';\nimport { supportsRetryableWrites } from '../utils';\n\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_CONNECTING],\n  [STATE_CONNECTING]: [STATE_CONNECTING, STATE_CLOSING, STATE_CONNECTED, STATE_CLOSED],\n  [STATE_CONNECTED]: [STATE_CONNECTED, STATE_CLOSING, STATE_CLOSED],\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_CLOSED]\n});\n\n/** @internal */\nconst kMonitor = Symbol('monitor');\n\n/** @public */\nexport type ServerOptions = Omit<ConnectionPoolOptions, 'id' | 'generation' | 'hostAddress'> &\n  MonitorOptions;\n\n/** @internal */\nexport interface ServerPrivate {\n  /** The server description for this server */\n  description: ServerDescription;\n  /** A copy of the options used to construct this instance */\n  options: ServerOptions;\n  /** A logger instance */\n  logger: Logger;\n  /** The current state of the Server */\n  state: string;\n  /** The topology this server is a part of */\n  topology: Topology;\n  /** A connection pool for this server */\n  pool: ConnectionPool;\n  /** MongoDB server API version */\n  serverApi?: ServerApi;\n}\n\n/** @public */\nexport type ServerEvents = {\n  serverHeartbeatStarted(event: ServerHeartbeatStartedEvent): void;\n  serverHeartbeatSucceeded(event: ServerHeartbeatSucceededEvent): void;\n  serverHeartbeatFailed(event: ServerHeartbeatFailedEvent): void;\n  /** Top level MongoClient doesn't emit this so it is marked: @internal */\n  connect(server: Server): void;\n  descriptionReceived(description: ServerDescription): void;\n  closed(): void;\n  ended(): void;\n} & ConnectionPoolEvents &\n  EventEmitterWithState;\n\n/** @internal */\nexport class Server extends TypedEventEmitter<ServerEvents> {\n  /** @internal */\n  s: ServerPrivate;\n  serverApi?: ServerApi;\n  clusterTime?: ClusterTime;\n  ismaster?: Document;\n  [kMonitor]: Monitor;\n\n  /** @event */\n  static readonly SERVER_HEARTBEAT_STARTED = 'serverHeartbeatStarted' as const;\n  /** @event */\n  static readonly SERVER_HEARTBEAT_SUCCEEDED = 'serverHeartbeatSucceeded' as const;\n  /** @event */\n  static readonly SERVER_HEARTBEAT_FAILED = 'serverHeartbeatFailed' as const;\n  /** @event */\n  static readonly CONNECT = 'connect' as const;\n  /** @event */\n  static readonly DESCRIPTION_RECEIVED = 'descriptionReceived' as const;\n  /** @event */\n  static readonly CLOSED = 'closed' as const;\n  /** @event */\n  static readonly ENDED = 'ended' as const;\n\n  /**\n   * Create a server\n   */\n  constructor(topology: Topology, description: ServerDescription, options: ServerOptions) {\n    super();\n\n    this.serverApi = options.serverApi;\n\n    const poolOptions = { hostAddress: description.hostAddress, ...options };\n\n    this.s = {\n      description,\n      options,\n      logger: new Logger('Server'),\n      state: STATE_CLOSED,\n      topology,\n      pool: new ConnectionPool(poolOptions)\n    };\n\n    for (const event of [...CMAP_EVENTS, ...APM_EVENTS]) {\n      this.s.pool.on(event, (e: any) => this.emit(event, e));\n    }\n\n    this.s.pool.on(Connection.CLUSTER_TIME_RECEIVED, (clusterTime: ClusterTime) => {\n      this.clusterTime = clusterTime;\n    });\n\n    // monitoring is disabled in load balancing mode\n    if (this.loadBalanced) return;\n\n    // create the monitor\n    this[kMonitor] = new Monitor(this, this.s.options);\n\n    for (const event of HEARTBEAT_EVENTS) {\n      this[kMonitor].on(event, (e: any) => this.emit(event, e));\n    }\n\n    this[kMonitor].on('resetConnectionPool', () => {\n      this.s.pool.clear();\n    });\n\n    this[kMonitor].on('resetServer', (error: MongoError) => markServerUnknown(this, error));\n    this[kMonitor].on(Server.SERVER_HEARTBEAT_SUCCEEDED, (event: ServerHeartbeatSucceededEvent) => {\n      this.emit(\n        Server.DESCRIPTION_RECEIVED,\n        new ServerDescription(this.description.hostAddress, event.reply, {\n          roundTripTime: calculateRoundTripTime(this.description.roundTripTime, event.duration)\n        })\n      );\n\n      if (this.s.state === STATE_CONNECTING) {\n        stateTransition(this, STATE_CONNECTED);\n        this.emit(Server.CONNECT, this);\n      }\n    });\n  }\n\n  get description(): ServerDescription {\n    return this.s.description;\n  }\n\n  get name(): string {\n    return this.s.description.address;\n  }\n\n  get autoEncrypter(): AutoEncrypter | undefined {\n    if (this.s.options && this.s.options.autoEncrypter) {\n      return this.s.options.autoEncrypter;\n    }\n  }\n\n  get loadBalanced(): boolean {\n    return this.s.topology.description.type === TopologyType.LoadBalanced;\n  }\n\n  /**\n   * Initiate server connect\n   */\n  connect(): void {\n    if (this.s.state !== STATE_CLOSED) {\n      return;\n    }\n\n    stateTransition(this, STATE_CONNECTING);\n\n    // If in load balancer mode we automatically set the server to\n    // a load balancer. It never transitions out of this state and\n    // has no monitor.\n    if (!this.loadBalanced) {\n      this[kMonitor].connect();\n    } else {\n      stateTransition(this, STATE_CONNECTED);\n      this.emit(Server.CONNECT, this);\n    }\n  }\n\n  /** Destroy the server connection */\n  destroy(options?: DestroyOptions, callback?: Callback): void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = Object.assign({}, { force: false }, options);\n\n    if (this.s.state === STATE_CLOSED) {\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n\n    if (!this.loadBalanced) {\n      this[kMonitor].close();\n    }\n\n    this.s.pool.close(options, err => {\n      stateTransition(this, STATE_CLOSED);\n      this.emit('closed');\n      if (typeof callback === 'function') {\n        callback(err);\n      }\n    });\n  }\n\n  /**\n   * Immediately schedule monitoring of this server. If there already an attempt being made\n   * this will be a no-op.\n   */\n  requestCheck(): void {\n    if (!this.loadBalanced) {\n      this[kMonitor].requestCheck();\n    }\n  }\n\n  /**\n   * Execute a command\n   * @internal\n   */\n  command(ns: MongoDBNamespace, cmd: Document, callback: Callback): void;\n  /** @internal */\n  command(\n    ns: MongoDBNamespace,\n    cmd: Document,\n    options: CommandOptions,\n    callback: Callback<Document>\n  ): void;\n  command(\n    ns: MongoDBNamespace,\n    cmd: Document,\n    options?: CommandOptions | Callback<Document>,\n    callback?: Callback<Document>\n  ): void {\n    if (typeof options === 'function') {\n      (callback = options), (options = {}), (options = options ?? {});\n    }\n\n    if (callback == null) {\n      throw new MongoInvalidArgumentError('Callback must be provided');\n    }\n\n    if (ns.db == null || typeof ns === 'string') {\n      throw new MongoInvalidArgumentError('Namespace must not be a string');\n    }\n\n    if (this.s.state === STATE_CLOSING || this.s.state === STATE_CLOSED) {\n      callback(new MongoServerClosedError());\n      return;\n    }\n\n    // Clone the options\n    const finalOptions = Object.assign({}, options, { wireProtocolCommand: false });\n\n    // error if collation not supported\n    if (collationNotSupported(this, cmd)) {\n      callback(new MongoCompatibilityError(`Server ${this.name} does not support collation`));\n      return;\n    }\n\n    const session = finalOptions.session;\n    const conn = session?.pinnedConnection;\n\n    // NOTE: This is a hack! We can't retrieve the connections used for executing an operation\n    //       (and prevent them from being checked back in) at the point of operation execution.\n    //       This should be considered as part of the work for NODE-2882\n    if (this.loadBalanced && session && conn == null && isPinnableCommand(cmd, session)) {\n      this.s.pool.checkOut((err, checkedOut) => {\n        if (err || checkedOut == null) {\n          if (callback) return callback(err);\n          return;\n        }\n\n        session.pin(checkedOut);\n        this.command(ns, cmd, finalOptions, callback as Callback<Document>);\n      });\n\n      return;\n    }\n\n    this.s.pool.withConnection(\n      conn,\n      (err, conn, cb) => {\n        if (err || !conn) {\n          markServerUnknown(this, err);\n          return cb(err);\n        }\n\n        conn.command(\n          ns,\n          cmd,\n          finalOptions,\n          makeOperationHandler(this, conn, cmd, finalOptions, cb) as Callback<Document>\n        );\n      },\n      callback\n    );\n  }\n\n  /**\n   * Execute a query against the server\n   * @internal\n   */\n  query(ns: MongoDBNamespace, cmd: Document, options: QueryOptions, callback: Callback): void {\n    if (this.s.state === STATE_CLOSING || this.s.state === STATE_CLOSED) {\n      callback(new MongoServerClosedError());\n      return;\n    }\n\n    this.s.pool.withConnection(\n      undefined,\n      (err, conn, cb) => {\n        if (err || !conn) {\n          markServerUnknown(this, err);\n          return cb(err);\n        }\n\n        conn.query(\n          ns,\n          cmd,\n          options,\n          makeOperationHandler(this, conn, cmd, options, cb) as Callback\n        );\n      },\n      callback\n    );\n  }\n\n  /**\n   * Execute a `getMore` against the server\n   * @internal\n   */\n  getMore(\n    ns: MongoDBNamespace,\n    cursorId: Long,\n    options: GetMoreOptions,\n    callback: Callback<Document>\n  ): void {\n    if (this.s.state === STATE_CLOSING || this.s.state === STATE_CLOSED) {\n      callback(new MongoServerClosedError());\n      return;\n    }\n\n    this.s.pool.withConnection(\n      options.session?.pinnedConnection,\n      (err, conn, cb) => {\n        if (err || !conn) {\n          markServerUnknown(this, err);\n          return cb(err);\n        }\n\n        conn.getMore(\n          ns,\n          cursorId,\n          options,\n          makeOperationHandler(this, conn, {}, options, cb) as Callback\n        );\n      },\n      callback\n    );\n  }\n\n  /**\n   * Execute a `killCursors` command against the server\n   * @internal\n   */\n  killCursors(\n    ns: MongoDBNamespace,\n    cursorIds: Long[],\n    options: CommandOptions,\n    callback?: Callback\n  ): void {\n    if (this.s.state === STATE_CLOSING || this.s.state === STATE_CLOSED) {\n      if (typeof callback === 'function') {\n        callback(new MongoServerClosedError());\n      }\n\n      return;\n    }\n\n    this.s.pool.withConnection(\n      options.session?.pinnedConnection,\n      (err, conn, cb) => {\n        if (err || !conn) {\n          markServerUnknown(this, err);\n          return cb(err);\n        }\n\n        conn.killCursors(\n          ns,\n          cursorIds,\n          options,\n          makeOperationHandler(this, conn, {}, undefined, cb) as Callback\n        );\n      },\n      callback\n    );\n  }\n}\n\nexport const HEARTBEAT_EVENTS = [\n  Server.SERVER_HEARTBEAT_STARTED,\n  Server.SERVER_HEARTBEAT_SUCCEEDED,\n  Server.SERVER_HEARTBEAT_FAILED\n];\n\nObject.defineProperty(Server.prototype, 'clusterTime', {\n  get() {\n    return this.s.topology.clusterTime;\n  },\n  set(clusterTime: ClusterTime) {\n    this.s.topology.clusterTime = clusterTime;\n  }\n});\n\nfunction calculateRoundTripTime(oldRtt: number, duration: number): number {\n  if (oldRtt === -1) {\n    return duration;\n  }\n\n  const alpha = 0.2;\n  return alpha * duration + (1 - alpha) * oldRtt;\n}\n\nfunction markServerUnknown(server: Server, error?: MongoError) {\n  // Load balancer servers can never be marked unknown.\n  if (server.loadBalanced) {\n    return;\n  }\n\n  if (error instanceof MongoNetworkError && !(error instanceof MongoNetworkTimeoutError)) {\n    server[kMonitor].reset();\n  }\n\n  server.emit(\n    Server.DESCRIPTION_RECEIVED,\n    new ServerDescription(server.description.hostAddress, undefined, {\n      error,\n      topologyVersion:\n        error && error.topologyVersion ? error.topologyVersion : server.description.topologyVersion\n    })\n  );\n}\n\nfunction isPinnableCommand(cmd: Document, session?: ClientSession): boolean {\n  if (session) {\n    return (\n      session.inTransaction() ||\n      'aggregate' in cmd ||\n      'find' in cmd ||\n      'getMore' in cmd ||\n      'listCollections' in cmd ||\n      'listIndexes' in cmd\n    );\n  }\n\n  return false;\n}\n\nfunction connectionIsStale(pool: ConnectionPool, connection: Connection) {\n  if (connection.serviceId) {\n    return (\n      connection.generation !== pool.serviceGenerations.get(connection.serviceId.toHexString())\n    );\n  }\n\n  return connection.generation !== pool.generation;\n}\n\nfunction shouldHandleStateChangeError(server: Server, err: MongoError) {\n  const etv = err.topologyVersion;\n  const stv = server.description.topologyVersion;\n  return compareTopologyVersion(stv, etv) < 0;\n}\n\nfunction inActiveTransaction(session: ClientSession | undefined, cmd: Document) {\n  return session && session.inTransaction() && !isTransactionCommand(cmd);\n}\n\n/** this checks the retryWrites option passed down from the client options, it\n * does not check if the server supports retryable writes */\nfunction isRetryableWritesEnabled(topology: Topology) {\n  return topology.s.options.retryWrites !== false;\n}\n\nfunction makeOperationHandler(\n  server: Server,\n  connection: Connection,\n  cmd: Document,\n  options: CommandOptions | GetMoreOptions | undefined,\n  callback: Callback\n): CallbackWithType<MongoError, Document> {\n  const session = options?.session;\n  return function handleOperationResult(err, result) {\n    if (err && !connectionIsStale(server.s.pool, connection)) {\n      if (err instanceof MongoNetworkError) {\n        if (session && !session.hasEnded && session.serverSession) {\n          session.serverSession.isDirty = true;\n        }\n\n        // inActiveTransaction check handles commit and abort.\n        if (inActiveTransaction(session, cmd) && !err.hasErrorLabel('TransientTransactionError')) {\n          err.addErrorLabel('TransientTransactionError');\n        }\n\n        if (\n          (isRetryableWritesEnabled(server.s.topology) || isTransactionCommand(cmd)) &&\n          supportsRetryableWrites(server) &&\n          !inActiveTransaction(session, cmd)\n        ) {\n          err.addErrorLabel('RetryableWriteError');\n        }\n\n        if (!(err instanceof MongoNetworkTimeoutError) || isNetworkErrorBeforeHandshake(err)) {\n          // In load balanced mode we never mark the server as unknown and always\n          // clear for the specific service id.\n\n          server.s.pool.clear(connection.serviceId);\n          if (!server.loadBalanced) {\n            markServerUnknown(server, err);\n          }\n        }\n      } else {\n        // if pre-4.4 server, then add error label if its a retryable write error\n        if (\n          (isRetryableWritesEnabled(server.s.topology) || isTransactionCommand(cmd)) &&\n          maxWireVersion(server) < 9 &&\n          isRetryableWriteError(err) &&\n          !inActiveTransaction(session, cmd)\n        ) {\n          err.addErrorLabel('RetryableWriteError');\n        }\n\n        if (isSDAMUnrecoverableError(err)) {\n          if (shouldHandleStateChangeError(server, err)) {\n            if (maxWireVersion(server) <= 7 || isNodeShuttingDownError(err)) {\n              server.s.pool.clear(connection.serviceId);\n            }\n\n            if (!server.loadBalanced) {\n              markServerUnknown(server, err);\n              process.nextTick(() => server.requestCheck());\n            }\n          }\n        }\n      }\n\n      if (session && session.isPinned && err.hasErrorLabel('TransientTransactionError')) {\n        session.unpin({ force: true });\n      }\n    }\n\n    callback(err, result);\n  };\n}\n", "import * as dns from 'dns';\nimport { Logger, LoggerOptions } from '../logger';\nimport { HostAddress } from '../utils';\nimport { TypedEventEmitter } from '../mongo_types';\nimport { MongoRuntimeError } from '../error';\n\n/**\n * Determines whether a provided address matches the provided parent domain in order\n * to avoid certain attack vectors.\n *\n * @param srvAddress - The address to check against a domain\n * @param parentDomain - The domain to check the provided address against\n * @returns Whether the provided address matches the parent domain\n */\nfunction matchesParentDomain(srvAddress: string, parentDomain: string): boolean {\n  const regex = /^.*?\\./;\n  const srv = `.${srvAddress.replace(regex, '')}`;\n  const parent = `.${parentDomain.replace(regex, '')}`;\n  return srv.endsWith(parent);\n}\n\n/**\n * @internal\n * @category Event\n */\nexport class SrvPollingEvent {\n  srvRecords: dns.SrvRecord[];\n  constructor(srvRecords: dns.SrvRecord[]) {\n    this.srvRecords = srvRecords;\n  }\n\n  addresses(): Map<string, HostAddress> {\n    return new Map(\n      this.srvRecords.map(record => {\n        const host = new HostAddress(`${record.name}:${record.port}`);\n        return [host.toString(), host];\n      })\n    );\n  }\n}\n\n/** @internal */\nexport interface SrvPollerOptions extends LoggerOptions {\n  srvHost: string;\n  heartbeatFrequencyMS: number;\n}\n\n/** @internal */\nexport type SrvPollerEvents = {\n  srvRecordDiscovery(event: SrvPollingEvent): void;\n};\n\n/** @internal */\nexport class SrvPoller extends TypedEventEmitter<SrvPollerEvents> {\n  srvHost: string;\n  rescanSrvIntervalMS: number;\n  heartbeatFrequencyMS: number;\n  logger: Logger;\n  haMode: boolean;\n  generation: number;\n  _timeout?: NodeJS.Timeout;\n\n  /** @event */\n  static readonly SRV_RECORD_DISCOVERY = 'srvRecordDiscovery' as const;\n\n  constructor(options: SrvPollerOptions) {\n    super();\n\n    if (!options || !options.srvHost) {\n      throw new MongoRuntimeError('Options for SrvPoller must exist and include srvHost');\n    }\n\n    this.srvHost = options.srvHost;\n    this.rescanSrvIntervalMS = 60000;\n    this.heartbeatFrequencyMS = options.heartbeatFrequencyMS || 10000;\n    this.logger = new Logger('srvPoller', options);\n\n    this.haMode = false;\n    this.generation = 0;\n\n    this._timeout = undefined;\n  }\n\n  get srvAddress(): string {\n    return `_mongodb._tcp.${this.srvHost}`;\n  }\n\n  get intervalMS(): number {\n    return this.haMode ? this.heartbeatFrequencyMS : this.rescanSrvIntervalMS;\n  }\n\n  start(): void {\n    if (!this._timeout) {\n      this.schedule();\n    }\n  }\n\n  stop(): void {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this.generation += 1;\n      this._timeout = undefined;\n    }\n  }\n\n  schedule(): void {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => this._poll(), this.intervalMS);\n  }\n\n  success(srvRecords: dns.SrvRecord[]): void {\n    this.haMode = false;\n    this.schedule();\n    this.emit(SrvPoller.SRV_RECORD_DISCOVERY, new SrvPollingEvent(srvRecords));\n  }\n\n  failure(message: string, obj?: NodeJS.ErrnoException): void {\n    this.logger.warn(message, obj);\n    this.haMode = true;\n    this.schedule();\n  }\n\n  parentDomainMismatch(srvRecord: dns.SrvRecord): void {\n    this.logger.warn(\n      `parent domain mismatch on SRV record (${srvRecord.name}:${srvRecord.port})`,\n      srvRecord\n    );\n  }\n\n  _poll(): void {\n    const generation = this.generation;\n    dns.resolveSrv(this.srvAddress, (err, srvRecords) => {\n      if (generation !== this.generation) {\n        return;\n      }\n\n      if (err) {\n        this.failure('DNS error', err);\n        return;\n      }\n\n      const finalAddresses: dns.SrvRecord[] = [];\n      srvRecords.forEach((record: dns.SrvRecord) => {\n        if (matchesParentDomain(record.name, this.srvHost)) {\n          finalAddresses.push(record);\n        } else {\n          this.parentDomainMismatch(record);\n        }\n      });\n\n      if (!finalAddresses.length) {\n        this.failure('No valid addresses found at host');\n        return;\n      }\n\n      this.success(finalAddresses);\n    });\n  }\n}\n", "import { ServerType, TopologyType } from './common';\nimport { ReadPreference } from '../read_preference';\nimport { MongoCompatibilityError, MongoInvalidArgumentError } from '../error';\nimport type { TopologyDescription } from './topology_description';\nimport type { ServerDescription, TagSet } from './server_description';\n\n// max staleness constants\nconst IDLE_WRITE_PERIOD = 10000;\nconst SMALLEST_MAX_STALENESS_SECONDS = 90;\n\n/** @public */\nexport type ServerSelector = (\n  topologyDescription: TopologyDescription,\n  servers: ServerDescription[]\n) => ServerDescription[];\n\n/**\n * Returns a server selector that selects for writable servers\n */\nexport function writableServerSelector(): ServerSelector {\n  return (\n    topologyDescription: TopologyDescription,\n    servers: ServerDescription[]\n  ): ServerDescription[] =>\n    latencyWindowReducer(\n      topologyDescription,\n      servers.filter((s: ServerDescription) => s.isWritable)\n    );\n}\n\n/**\n * Reduces the passed in array of servers by the rules of the \"Max Staleness\" specification\n * found here: https://github.com/mongodb/specifications/blob/master/source/max-staleness/max-staleness.rst\n *\n * @param readPreference - The read preference providing max staleness guidance\n * @param topologyDescription - The topology description\n * @param servers - The list of server descriptions to be reduced\n * @returns The list of servers that satisfy the requirements of max staleness\n */\nfunction maxStalenessReducer(\n  readPreference: ReadPreference,\n  topologyDescription: TopologyDescription,\n  servers: ServerDescription[]\n): ServerDescription[] {\n  if (readPreference.maxStalenessSeconds == null || readPreference.maxStalenessSeconds < 0) {\n    return servers;\n  }\n\n  const maxStaleness = readPreference.maxStalenessSeconds;\n  const maxStalenessVariance =\n    (topologyDescription.heartbeatFrequencyMS + IDLE_WRITE_PERIOD) / 1000;\n  if (maxStaleness < maxStalenessVariance) {\n    throw new MongoInvalidArgumentError(\n      `Option \"maxStalenessSeconds\" must be at least ${maxStalenessVariance} seconds`\n    );\n  }\n\n  if (maxStaleness < SMALLEST_MAX_STALENESS_SECONDS) {\n    throw new MongoInvalidArgumentError(\n      `Option \"maxStalenessSeconds\" must be at least ${SMALLEST_MAX_STALENESS_SECONDS} seconds`\n    );\n  }\n\n  if (topologyDescription.type === TopologyType.ReplicaSetWithPrimary) {\n    const primary: ServerDescription = Array.from(topologyDescription.servers.values()).filter(\n      primaryFilter\n    )[0];\n\n    return servers.reduce((result: ServerDescription[], server: ServerDescription) => {\n      const stalenessMS =\n        server.lastUpdateTime -\n        server.lastWriteDate -\n        (primary.lastUpdateTime - primary.lastWriteDate) +\n        topologyDescription.heartbeatFrequencyMS;\n\n      const staleness = stalenessMS / 1000;\n      const maxStalenessSeconds = readPreference.maxStalenessSeconds ?? 0;\n      if (staleness <= maxStalenessSeconds) {\n        result.push(server);\n      }\n\n      return result;\n    }, []);\n  }\n\n  if (topologyDescription.type === TopologyType.ReplicaSetNoPrimary) {\n    if (servers.length === 0) {\n      return servers;\n    }\n\n    const sMax = servers.reduce((max: ServerDescription, s: ServerDescription) =>\n      s.lastWriteDate > max.lastWriteDate ? s : max\n    );\n\n    return servers.reduce((result: ServerDescription[], server: ServerDescription) => {\n      const stalenessMS =\n        sMax.lastWriteDate - server.lastWriteDate + topologyDescription.heartbeatFrequencyMS;\n\n      const staleness = stalenessMS / 1000;\n      const maxStalenessSeconds = readPreference.maxStalenessSeconds ?? 0;\n      if (staleness <= maxStalenessSeconds) {\n        result.push(server);\n      }\n\n      return result;\n    }, []);\n  }\n\n  return servers;\n}\n\n/**\n * Determines whether a server's tags match a given set of tags\n *\n * @param tagSet - The requested tag set to match\n * @param serverTags - The server's tags\n */\nfunction tagSetMatch(tagSet: TagSet, serverTags: TagSet) {\n  const keys = Object.keys(tagSet);\n  const serverTagKeys = Object.keys(serverTags);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (serverTagKeys.indexOf(key) === -1 || serverTags[key] !== tagSet[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Reduces a set of server descriptions based on tags requested by the read preference\n *\n * @param readPreference - The read preference providing the requested tags\n * @param servers - The list of server descriptions to reduce\n * @returns The list of servers matching the requested tags\n */\nfunction tagSetReducer(\n  readPreference: ReadPreference,\n  servers: ServerDescription[]\n): ServerDescription[] {\n  if (\n    readPreference.tags == null ||\n    (Array.isArray(readPreference.tags) && readPreference.tags.length === 0)\n  ) {\n    return servers;\n  }\n\n  for (let i = 0; i < readPreference.tags.length; ++i) {\n    const tagSet = readPreference.tags[i];\n    const serversMatchingTagset = servers.reduce(\n      (matched: ServerDescription[], server: ServerDescription) => {\n        if (tagSetMatch(tagSet, server.tags)) matched.push(server);\n        return matched;\n      },\n      []\n    );\n\n    if (serversMatchingTagset.length) {\n      return serversMatchingTagset;\n    }\n  }\n\n  return [];\n}\n\n/**\n * Reduces a list of servers to ensure they fall within an acceptable latency window. This is\n * further specified in the \"Server Selection\" specification, found here:\n * https://github.com/mongodb/specifications/blob/master/source/server-selection/server-selection.rst\n *\n * @param topologyDescription - The topology description\n * @param servers - The list of servers to reduce\n * @returns The servers which fall within an acceptable latency window\n */\nfunction latencyWindowReducer(\n  topologyDescription: TopologyDescription,\n  servers: ServerDescription[]\n): ServerDescription[] {\n  const low = servers.reduce(\n    (min: number, server: ServerDescription) =>\n      min === -1 ? server.roundTripTime : Math.min(server.roundTripTime, min),\n    -1\n  );\n\n  const high = low + topologyDescription.localThresholdMS;\n  return servers.reduce((result: ServerDescription[], server: ServerDescription) => {\n    if (server.roundTripTime <= high && server.roundTripTime >= low) result.push(server);\n    return result;\n  }, []);\n}\n\n// filters\nfunction primaryFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.RSPrimary;\n}\n\nfunction secondaryFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.RSSecondary;\n}\n\nfunction nearestFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.RSSecondary || server.type === ServerType.RSPrimary;\n}\n\nfunction knownFilter(server: ServerDescription): boolean {\n  return server.type !== ServerType.Unknown;\n}\n\nfunction loadBalancerFilter(server: ServerDescription): boolean {\n  return server.type === ServerType.LoadBalancer;\n}\n\n/**\n * Returns a function which selects servers based on a provided read preference\n *\n * @param readPreference - The read preference to select with\n */\nexport function readPreferenceServerSelector(readPreference: ReadPreference): ServerSelector {\n  if (!readPreference.isValid()) {\n    throw new MongoInvalidArgumentError('Invalid read preference specified');\n  }\n\n  return (\n    topologyDescription: TopologyDescription,\n    servers: ServerDescription[]\n  ): ServerDescription[] => {\n    const commonWireVersion = topologyDescription.commonWireVersion;\n    if (\n      commonWireVersion &&\n      readPreference.minWireVersion &&\n      readPreference.minWireVersion > commonWireVersion\n    ) {\n      throw new MongoCompatibilityError(\n        `Minimum wire version '${readPreference.minWireVersion}' required, but found '${commonWireVersion}'`\n      );\n    }\n\n    if (topologyDescription.type === TopologyType.LoadBalanced) {\n      return servers.filter(loadBalancerFilter);\n    }\n\n    if (topologyDescription.type === TopologyType.Unknown) {\n      return [];\n    }\n\n    if (\n      topologyDescription.type === TopologyType.Single ||\n      topologyDescription.type === TopologyType.Sharded\n    ) {\n      return latencyWindowReducer(topologyDescription, servers.filter(knownFilter));\n    }\n\n    const mode = readPreference.mode;\n    if (mode === ReadPreference.PRIMARY) {\n      return servers.filter(primaryFilter);\n    }\n\n    if (mode === ReadPreference.PRIMARY_PREFERRED) {\n      const result = servers.filter(primaryFilter);\n      if (result.length) {\n        return result;\n      }\n    }\n\n    const filter = mode === ReadPreference.NEAREST ? nearestFilter : secondaryFilter;\n    const selectedServers = latencyWindowReducer(\n      topologyDescription,\n      tagSetReducer(\n        readPreference,\n        maxStalenessReducer(readPreference, topologyDescription, servers.filter(filter))\n      )\n    );\n\n    if (mode === ReadPreference.SECONDARY_PREFERRED && selectedServers.length === 0) {\n      return servers.filter(primaryFilter);\n    }\n\n    return selectedServers;\n  };\n}\n", "\"use strict\";\n\nfunction makeException(ErrorType, message, options) {\n  if (options.globals) {\n    ErrorType = options.globals[ErrorType.name];\n  }\n  return new ErrorType(`${options.context ? options.context : \"Value\"} ${message}.`);\n}\n\nfunction toNumber(value, options) {\n  if (typeof value === \"bigint\") {\n    throw makeException(TypeError, \"is a BigInt which cannot be converted to a number\", options);\n  }\n  if (!options.globals) {\n    return Number(value);\n  }\n  return options.globals.Number(value);\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\n    return censorNegativeZero(Math.floor(x));\n  }\n\n  return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, { unsigned }) {\n  let lowerBound, upperBound;\n  if (unsigned) {\n    lowerBound = 0;\n    upperBound = 2 ** bitLength - 1;\n  } else {\n    lowerBound = -(2 ** (bitLength - 1));\n    upperBound = 2 ** (bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = 2 ** bitLength;\n  const twoToOneLessThanTheBitLength = 2 ** (bitLength - 1);\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64, but oh well. See the README for more details.\n    x = modulo(x, twoToTheBitLength);\n    if (!unsigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength, { unsigned }) {\n  const upperBound = Number.MAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength, xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nexports.any = value => {\n  return value;\n};\n\nexports.undefined = () => {\n  return undefined;\n};\n\nexports.boolean = value => {\n  return Boolean(value);\n};\n\nexports.byte = createIntegerConversion(8, { unsigned: false });\nexports.octet = createIntegerConversion(8, { unsigned: true });\n\nexports.short = createIntegerConversion(16, { unsigned: false });\nexports[\"unsigned short\"] = createIntegerConversion(16, { unsigned: true });\n\nexports.long = createIntegerConversion(32, { unsigned: false });\nexports[\"unsigned long\"] = createIntegerConversion(32, { unsigned: true });\n\nexports[\"long long\"] = createLongLongConversion(64, { unsigned: false });\nexports[\"unsigned long long\"] = createLongLongConversion(64, { unsigned: true });\n\nexports.double = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  return x;\n};\n\nexports[\"unrestricted double\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  return x;\n};\n\nexports.float = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  const y = Math.fround(x);\n\n  if (!Number.isFinite(y)) {\n    throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", options);\n  }\n\n  return y;\n};\n\nexports[\"unrestricted float\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  return Math.fround(x);\n};\n\nexports.DOMString = (value, options = {}) => {\n  if (options.treatNullAsEmptyString && value === null) {\n    return \"\";\n  }\n\n  if (typeof value === \"symbol\") {\n    throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", options);\n  }\n\n  const StringCtor = options.globals ? options.globals.String : String;\n  return StringCtor(value);\n};\n\nexports.ByteString = (value, options = {}) => {\n  const x = exports.DOMString(value, options);\n  let c;\n  for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n    if (c > 255) {\n      throw makeException(TypeError, \"is not a valid ByteString\", options);\n    }\n  }\n\n  return x;\n};\n\nexports.USVString = (value, options = {}) => {\n  const S = exports.DOMString(value, options);\n  const n = S.length;\n  const U = [];\n  for (let i = 0; i < n; ++i) {\n    const c = S.charCodeAt(i);\n    if (c < 0xD800 || c > 0xDFFF) {\n      U.push(String.fromCodePoint(c));\n    } else if (0xDC00 <= c && c <= 0xDFFF) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else if (i === n - 1) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else {\n      const d = S.charCodeAt(i + 1);\n      if (0xDC00 <= d && d <= 0xDFFF) {\n        const a = c & 0x3FF;\n        const b = d & 0x3FF;\n        U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\n        ++i;\n      } else {\n        U.push(String.fromCodePoint(0xFFFD));\n      }\n    }\n  }\n\n  return U.join(\"\");\n};\n\nexports.object = (value, options = {}) => {\n  if (value === null || (typeof value !== \"object\" && typeof value !== \"function\")) {\n    throw makeException(TypeError, \"is not an object\", options);\n  }\n\n  return value;\n};\n\nconst abByteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter =\n    typeof SharedArrayBuffer === \"function\" ?\n      Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get :\n      null;\n\nfunction isNonSharedArrayBuffer(value) {\n  try {\n    // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n    // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n    abByteLengthGetter.call(value);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isSharedArrayBuffer(value) {\n  try {\n    sabByteLengthGetter.call(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isArrayBufferDetached(value) {\n  try {\n    // eslint-disable-next-line no-new\n    new Uint8Array(value);\n    return false;\n  } catch {\n    return true;\n  }\n}\n\nexports.ArrayBuffer = (value, options = {}) => {\n  if (!isNonSharedArrayBuffer(value)) {\n    if (options.allowShared && !isSharedArrayBuffer(value)) {\n      throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", options);\n    }\n    throw makeException(TypeError, \"is not an ArrayBuffer\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nconst dvByteLengthGetter =\n    Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (value, options = {}) => {\n  try {\n    dvByteLengthGetter.call(value);\n  } catch (e) {\n    throw makeException(TypeError, \"is not a DataView\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", options);\n  }\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\n// Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(\n  Object.getPrototypeOf(Uint8Array).prototype,\n  Symbol.toStringTag\n).get;\n[\n  Int8Array,\n  Int16Array,\n  Int32Array,\n  Uint8Array,\n  Uint16Array,\n  Uint32Array,\n  Uint8ClampedArray,\n  Float32Array,\n  Float64Array\n].forEach(func => {\n  const { name } = func;\n  const article = /^[AEIOU]/u.test(name) ? \"an\" : \"a\";\n  exports[name] = (value, options = {}) => {\n    if (!ArrayBuffer.isView(value) || typedArrayNameGetter.call(value) !== name) {\n      throw makeException(TypeError, `is not ${article} ${name} object`, options);\n    }\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n\n    return value;\n  };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (value, options = {}) => {\n  if (!ArrayBuffer.isView(value)) {\n    throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n  }\n\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n  }\n  return value;\n};\n\nexports.BufferSource = (value, options = {}) => {\n  if (ArrayBuffer.isView(value)) {\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n    return value;\n  }\n\n  if (!options.allowShared && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", options);\n  }\n  if (options.allowShared && !isSharedArrayBuffer(value) && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBuffer, or a view on one\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\n", "\"use strict\";\n\n// Returns \"Type(value) is Object\" in ES terminology.\nfunction isObject(value) {\n  return (typeof value === \"object\" && value !== null) || typeof value === \"function\";\n}\n\nconst hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n\n// Like `Object.assign`, but using `[[GetOwnProperty]]` and `[[DefineOwnProperty]]`\n// instead of `[[Get]]` and `[[Set]]` and only allowing objects\nfunction define(target, source) {\n  for (const key of Reflect.ownKeys(source)) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(source, key);\n    if (descriptor && !Reflect.defineProperty(target, key, descriptor)) {\n      throw new TypeError(`Cannot redefine property: ${String(key)}`);\n    }\n  }\n}\n\nfunction newObjectInRealm(globalObject, object) {\n  const ctorRegistry = initCtorRegistry(globalObject);\n  return Object.defineProperties(\n    Object.create(ctorRegistry[\"%Object.prototype%\"]),\n    Object.getOwnPropertyDescriptors(object)\n  );\n}\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\nconst sameObjectCaches = Symbol(\"SameObject caches\");\nconst ctorRegistrySymbol = Symbol.for(\"[webidl2js] constructor registry\");\n\nconst AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {}).prototype);\n\nfunction initCtorRegistry(globalObject) {\n  if (hasOwn(globalObject, ctorRegistrySymbol)) {\n    return globalObject[ctorRegistrySymbol];\n  }\n\n  const ctorRegistry = Object.create(null);\n\n  // In addition to registering all the WebIDL2JS-generated types in the constructor registry,\n  // we also register a few intrinsics that we make use of in generated code, since they are not\n  // easy to grab from the globalObject variable.\n  ctorRegistry[\"%Object.prototype%\"] = globalObject.Object.prototype;\n  ctorRegistry[\"%IteratorPrototype%\"] = Object.getPrototypeOf(\n    Object.getPrototypeOf(new globalObject.Array()[Symbol.iterator]())\n  );\n\n  try {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        globalObject.eval(\"(async function* () {})\").prototype\n      )\n    );\n  } catch {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = AsyncIteratorPrototype;\n  }\n\n  globalObject[ctorRegistrySymbol] = ctorRegistry;\n  return ctorRegistry;\n}\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nconst iterInternalSymbol = Symbol(\"internal\");\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n  const i = P >>> 0;\n  if (i === 2 ** 32 - 1) {\n    return false;\n  }\n  const s = `${i}`;\n  if (P !== s) {\n    return false;\n  }\n  return true;\n}\n\nconst byteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nfunction isArrayBuffer(value) {\n  try {\n    byteLengthGetter.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction iteratorResult([key, value], kind) {\n  let result;\n  switch (kind) {\n    case \"key\":\n      result = key;\n      break;\n    case \"value\":\n      result = value;\n      break;\n    case \"key+value\":\n      result = [key, value];\n      break;\n  }\n  return { value: result, done: false };\n}\n\nconst supportsPropertyIndex = Symbol(\"supports property index\");\nconst supportedPropertyIndices = Symbol(\"supported property indices\");\nconst supportsPropertyName = Symbol(\"supports property name\");\nconst supportedPropertyNames = Symbol(\"supported property names\");\nconst indexedGet = Symbol(\"indexed property get\");\nconst indexedSetNew = Symbol(\"indexed property set new\");\nconst indexedSetExisting = Symbol(\"indexed property set existing\");\nconst namedGet = Symbol(\"named property get\");\nconst namedSetNew = Symbol(\"named property set new\");\nconst namedSetExisting = Symbol(\"named property set existing\");\nconst namedDelete = Symbol(\"named property delete\");\n\nconst asyncIteratorNext = Symbol(\"async iterator get the next iteration result\");\nconst asyncIteratorReturn = Symbol(\"async iterator return steps\");\nconst asyncIteratorInit = Symbol(\"async iterator initialization steps\");\nconst asyncIteratorEOI = Symbol(\"async iterator end of iteration\");\n\nmodule.exports = exports = {\n  isObject,\n  hasOwn,\n  define,\n  newObjectInRealm,\n  wrapperSymbol,\n  implSymbol,\n  getSameObject,\n  ctorRegistrySymbol,\n  initCtorRegistry,\n  wrapperForImpl,\n  implForWrapper,\n  tryWrapperForImpl,\n  tryImplForWrapper,\n  iterInternalSymbol,\n  isArrayBuffer,\n  isArrayIndexPropName,\n  supportsPropertyIndex,\n  supportedPropertyIndices,\n  supportsPropertyName,\n  supportedPropertyNames,\n  indexedGet,\n  indexedSetNew,\n  indexedSetExisting,\n  namedGet,\n  namedSetNew,\n  namedSetExisting,\n  namedDelete,\n  asyncIteratorNext,\n  asyncIteratorReturn,\n  asyncIteratorInit,\n  asyncIteratorEOI,\n  iteratorResult\n};\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n", "\"use strict\";\n\nconst combiningMarks = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{11002}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11082}\\u{110B0}-\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{11134}\\u{11145}\\u{11146}\\u{11173}\\u{11180}-\\u{11182}\\u{111B3}-\\u{111C0}\\u{111C9}-\\u{111CC}\\u{111CE}\\u{111CF}\\u{1122C}-\\u{11237}\\u{1123E}\\u{112DF}-\\u{112EA}\\u{11300}-\\u{11303}\\u{1133B}\\u{1133C}\\u{1133E}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11357}\\u{11362}\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11435}-\\u{11446}\\u{1145E}\\u{114B0}-\\u{114C3}\\u{115AF}-\\u{115B5}\\u{115B8}-\\u{115C0}\\u{115DC}\\u{115DD}\\u{11630}-\\u{11640}\\u{116AB}-\\u{116B7}\\u{1171D}-\\u{1172B}\\u{1182C}-\\u{1183A}\\u{11930}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{1193E}\\u{11940}\\u{11942}\\u{11943}\\u{119D1}-\\u{119D7}\\u{119DA}-\\u{119E0}\\u{119E4}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A39}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A5B}\\u{11A8A}-\\u{11A99}\\u{11C2F}-\\u{11C36}\\u{11C38}-\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D8A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D97}\\u{11EF3}-\\u{11EF6}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F51}-\\u{16F87}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D165}-\\u{1D169}\\u{1D16D}-\\u{1D172}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]/u;\nconst combiningClassVirama = /[\\u094D\\u09CD\\u0A4D\\u0ACD\\u0B4D\\u0BCD\\u0C4D\\u0CCD\\u0D3B\\u0D3C\\u0D4D\\u0DCA\\u0E3A\\u0EBA\\u0F84\\u1039\\u103A\\u1714\\u1734\\u17D2\\u1A60\\u1B44\\u1BAA\\u1BAB\\u1BF2\\u1BF3\\u2D7F\\uA806\\uA8C4\\uA953\\uA9C0\\uAAF6\\uABED\\u{10A3F}\\u{11046}\\u{1107F}\\u{110B9}\\u{11133}\\u{11134}\\u{111C0}\\u{11235}\\u{112EA}\\u{1134D}\\u{11442}\\u{114C2}\\u{115BF}\\u{1163F}\\u{116B6}\\u{1172B}\\u{11839}\\u{119E0}\\u{11A34}\\u{11A47}\\u{11A99}\\u{11C3F}\\u{11D44}\\u{11D45}\\u{11D97}]/u;\nconst validZWNJ = /[\\u0620\\u0626\\u0628\\u062A-\\u062E\\u0633-\\u063F\\u0641-\\u0647\\u0649\\u064A\\u066E\\u066F\\u0678-\\u0687\\u069A-\\u06BF\\u06C1\\u06C2\\u06CC\\u06CE\\u06D0\\u06D1\\u06FA-\\u06FC\\u06FF\\u0712-\\u0714\\u071A-\\u071D\\u071F-\\u0727\\u0729\\u072B\\u072D\\u072E\\u074E-\\u0758\\u075C-\\u076A\\u076D-\\u0770\\u0772\\u0775-\\u0777\\u077A-\\u077F\\u07CA-\\u07EA\\u0841-\\u0845\\u0848\\u084A-\\u0853\\u0855\\u0860\\u0862-\\u0865\\u0868\\u08A0-\\u08A9\\u08AF\\u08B0\\u08B3\\u08B4\\u08B6-\\u08B8\\u08BA-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA872\\u{10AC0}-\\u{10AC4}\\u{10ACD}\\u{10AD3}-\\u{10ADC}\\u{10ADE}-\\u{10AE0}\\u{10AEB}-\\u{10AEE}\\u{10B80}\\u{10B82}\\u{10B86}-\\u{10B88}\\u{10B8A}\\u{10B8B}\\u{10B8D}\\u{10B90}\\u{10BAD}\\u{10BAE}\\u{10D00}-\\u{10D21}\\u{10D23}\\u{10F30}-\\u{10F32}\\u{10F34}-\\u{10F44}\\u{10F51}-\\u{10F53}\\u{1E900}-\\u{1E943}][\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*\\u200C[\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*[\\u0620\\u0622-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u0673\\u0675-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u077F\\u07CA-\\u07EA\\u0840-\\u0855\\u0860\\u0862-\\u0865\\u0867-\\u086A\\u08A0-\\u08AC\\u08AE-\\u08B4\\u08B6-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA871\\u{10AC0}-\\u{10AC5}\\u{10AC7}\\u{10AC9}\\u{10ACA}\\u{10ACE}-\\u{10AD6}\\u{10AD8}-\\u{10AE1}\\u{10AE4}\\u{10AEB}-\\u{10AEF}\\u{10B80}-\\u{10B91}\\u{10BA9}-\\u{10BAE}\\u{10D01}-\\u{10D23}\\u{10F30}-\\u{10F44}\\u{10F51}-\\u{10F54}\\u{1E900}-\\u{1E943}]/u;\nconst bidiDomain = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS1LTR = /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u249C-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D800}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]/u;\nconst bidiS1RTL = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS2 = /^[\\0-\\x08\\x0E-\\x1B!-@\\[-`\\{-\\x84\\x86-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9\\u02BA\\u02C2-\\u02CF\\u02D2-\\u02DF\\u02E5-\\u02ED\\u02EF-\\u036F\\u0374\\u0375\\u037E\\u0384\\u0385\\u0387\\u03F6\\u0483-\\u0489\\u058A\\u058D-\\u058F\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u070D\\u070F-\\u074A\\u074D-\\u07B1\\u07C0-\\u07FA\\u07FD-\\u082D\\u0830-\\u083E\\u0840-\\u085B\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u0898-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09F2\\u09F3\\u09FB\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AF1\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0BF3-\\u0BFA\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C78-\\u0C7E\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E3F\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39-\\u0F3D\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1390-\\u1399\\u1400\\u169B\\u169C\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DB\\u17DD\\u17F0-\\u17F9\\u1800-\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1940\\u1944\\u1945\\u19DE-\\u19FF\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u200B-\\u200D\\u200F-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u2150-\\u215F\\u2189-\\u218B\\u2190-\\u2335\\u237B-\\u2394\\u2396-\\u2426\\u2440-\\u244A\\u2460-\\u249B\\u24EA-\\u26AB\\u26AD-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF9-\\u2CFF\\u2D7F\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u3004\\u3008-\\u3020\\u302A-\\u302D\\u3030\\u3036\\u3037\\u303D-\\u303F\\u3099-\\u309C\\u30A0\\u30FB\\u31C0-\\u31E3\\u321D\\u321E\\u3250-\\u325F\\u327C-\\u327E\\u32B1-\\u32BF\\u32CC-\\u32CF\\u3377-\\u337A\\u33DE\\u33DF\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA60D-\\uA60F\\uA66F-\\uA67F\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA700-\\uA721\\uA788\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA828-\\uA82C\\uA838\\uA839\\uA874-\\uA877\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uAB6A\\uAB6B\\uABE5\\uABE8\\uABED\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD8F\\uFD92-\\uFDC7\\uFDCF\\uFDF0-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10101}\\u{10140}-\\u{1018C}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101FD}\\u{102E0}-\\u{102FB}\\u{10376}-\\u{1037A}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{1091F}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A38}-\\u{10A3A}\\u{10A3F}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE6}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B39}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D27}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAB}-\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F59}\\u{10F70}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{11001}\\u{11038}-\\u{11046}\\u{11052}-\\u{11065}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{11660}-\\u{1166C}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11FD5}-\\u{11FF1}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE2}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D1E9}\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D300}-\\u{1D356}\\u{1D6DB}\\u{1D715}\\u{1D74F}\\u{1D789}\\u{1D7C3}\\u{1D7CE}-\\u{1D7FF}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E2FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8D6}\\u{1E900}-\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F10F}\\u{1F12F}\\u{1F16A}-\\u{1F16F}\\u{1F1AD}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DD}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA74}\\u{1FA78}-\\u{1FA7C}\\u{1FA80}-\\u{1FA86}\\u{1FA90}-\\u{1FAAC}\\u{1FAB0}-\\u{1FABA}\\u{1FAC0}-\\u{1FAC5}\\u{1FAD0}-\\u{1FAD9}\\u{1FAE0}-\\u{1FAE7}\\u{1FAF0}-\\u{1FAF6}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS3 = /[0-9\\xB2\\xB3\\xB9\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1D7CE}-\\u{1D7FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS4EN = /[0-9\\xB2\\xB3\\xB9\\u06F0-\\u06F9\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{1D7CE}-\\u{1D7FF}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}]/u;\nconst bidiS4AN = /[\\u0600-\\u0605\\u0660-\\u0669\\u066B\\u066C\\u06DD\\u0890\\u0891\\u08E2\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}]/u;\nconst bidiS5 = /^[\\0-\\x08\\x0E-\\x1B!-\\x84\\x86-\\u0377\\u037A-\\u037F\\u0384-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u052F\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0606\\u0607\\u0609\\u060A\\u060C\\u060E-\\u061A\\u064B-\\u065F\\u066A\\u0670\\u06D6-\\u06DC\\u06DE-\\u06E4\\u06E7-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E3A\\u0E3F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1400-\\u167F\\u1681-\\u169C\\u16A0-\\u16F8\\u1700-\\u1715\\u171F-\\u1736\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1800-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE-\\u1A1B\\u1A1E-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1AB0-\\u1ACE\\u1B00-\\u1B4C\\u1B50-\\u1B7E\\u1B80-\\u1BF3\\u1BFC-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD0-\\u1CFA\\u1D00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u200B-\\u200E\\u2010-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2071\\u2074-\\u208E\\u2090-\\u209C\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2CF3\\u2CF9-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u303F\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31E3\\u31F0-\\u321E\\u3220-\\uA48C\\uA490-\\uA4C6\\uA4D0-\\uA62B\\uA640-\\uA6F7\\uA700-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA82C\\uA830-\\uA839\\uA840-\\uA877\\uA880-\\uA8C5\\uA8CE-\\uA8D9\\uA8E0-\\uA953\\uA95F-\\uA97C\\uA980-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAAC2\\uAADB-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB6B\\uAB70-\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E\\uFB29\\uFD3E-\\uFD4F\\uFDCF\\uFDFD-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}-\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1018E}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101D0}-\\u{101FD}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E0}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{1037A}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{1091F}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10B39}-\\u{10B3F}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{1104D}\\u{11052}-\\u{11075}\\u{1107F}-\\u{110C2}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11100}-\\u{11134}\\u{11136}-\\u{11147}\\u{11150}-\\u{11176}\\u{11180}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1123E}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112EA}\\u{112F0}-\\u{112F9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133B}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11400}-\\u{1145B}\\u{1145D}-\\u{11461}\\u{11480}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B5}\\u{115B8}-\\u{115DD}\\u{11600}-\\u{11644}\\u{11650}-\\u{11659}\\u{11660}-\\u{1166C}\\u{11680}-\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{1171D}-\\u{1172B}\\u{11730}-\\u{11746}\\u{11800}-\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D7}\\u{119DA}-\\u{119E4}\\u{11A00}-\\u{11A47}\\u{11A50}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C36}\\u{11C38}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D47}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FF1}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF0}-\\u{16AF5}\\u{16B00}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F4F}-\\u{16F87}\\u{16F8F}-\\u{16F9F}\\u{16FE0}-\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D2E0}-\\u{1D2F3}\\u{1D300}-\\u{1D356}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D7CB}\\u{1D7CE}-\\u{1DA8B}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1DF00}-\\u{1DF1E}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E100}-\\u{1E12C}\\u{1E130}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AE}\\u{1E2C0}-\\u{1E2F9}\\u{1E2FF}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F1AD}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DD}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F773}\\u{1F780}-\\u{1F7D8}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA74}\\u{1FA78}-\\u{1FA7C}\\u{1FA80}-\\u{1FA86}\\u{1FA90}-\\u{1FAAC}\\u{1FAB0}-\\u{1FABA}\\u{1FAC0}-\\u{1FAC5}\\u{1FAD0}-\\u{1FAD9}\\u{1FAE0}-\\u{1FAE7}\\u{1FAF0}-\\u{1FAF6}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]*$/u;\nconst bidiS6 = /[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u06F0-\\u06F9\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u2488-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E1}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1342E}\\u{13430}-\\u{13438}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B150}-\\u{1B152}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D7CE}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F100}-\\u{1F10A}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B738}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\n\nmodule.exports = {\n  combiningMarks,\n  combiningClassVirama,\n  validZWNJ,\n  bidiDomain,\n  bidiS1LTR,\n  bidiS1RTL,\n  bidiS2,\n  bidiS3,\n  bidiS4EN,\n  bidiS4AN,\n  bidiS5,\n  bidiS6\n};\n", "[[[0,44],4],[[45,46],2],[47,4],[[48,57],2],[[58,64],4],[65,1,\"a\"],[66,1,\"b\"],[67,1,\"c\"],[68,1,\"d\"],[69,1,\"e\"],[70,1,\"f\"],[71,1,\"g\"],[72,1,\"h\"],[73,1,\"i\"],[74,1,\"j\"],[75,1,\"k\"],[76,1,\"l\"],[77,1,\"m\"],[78,1,\"n\"],[79,1,\"o\"],[80,1,\"p\"],[81,1,\"q\"],[82,1,\"r\"],[83,1,\"s\"],[84,1,\"t\"],[85,1,\"u\"],[86,1,\"v\"],[87,1,\"w\"],[88,1,\"x\"],[89,1,\"y\"],[90,1,\"z\"],[[91,96],4],[[97,122],2],[[123,127],4],[[128,159],3],[160,5,\" \"],[[161,167],2],[168,5,\" ̈\"],[169,2],[170,1,\"a\"],[[171,172],2],[173,7],[174,2],[175,5,\" ̄\"],[[176,177],2],[178,1,\"2\"],[179,1,\"3\"],[180,5,\" ́\"],[181,1,\"μ\"],[182,2],[183,2],[184,5,\" ̧\"],[185,1,\"1\"],[186,1,\"o\"],[187,2],[188,1,\"1⁄4\"],[189,1,\"1⁄2\"],[190,1,\"3⁄4\"],[191,2],[192,1,\"à\"],[193,1,\"á\"],[194,1,\"â\"],[195,1,\"ã\"],[196,1,\"ä\"],[197,1,\"å\"],[198,1,\"æ\"],[199,1,\"ç\"],[200,1,\"è\"],[201,1,\"é\"],[202,1,\"ê\"],[203,1,\"ë\"],[204,1,\"ì\"],[205,1,\"í\"],[206,1,\"î\"],[207,1,\"ï\"],[208,1,\"ð\"],[209,1,\"ñ\"],[210,1,\"ò\"],[211,1,\"ó\"],[212,1,\"ô\"],[213,1,\"õ\"],[214,1,\"ö\"],[215,2],[216,1,\"ø\"],[217,1,\"ù\"],[218,1,\"ú\"],[219,1,\"û\"],[220,1,\"ü\"],[221,1,\"ý\"],[222,1,\"þ\"],[223,6,\"ss\"],[[224,246],2],[247,2],[[248,255],2],[256,1,\"ā\"],[257,2],[258,1,\"ă\"],[259,2],[260,1,\"ą\"],[261,2],[262,1,\"ć\"],[263,2],[264,1,\"ĉ\"],[265,2],[266,1,\"ċ\"],[267,2],[268,1,\"č\"],[269,2],[270,1,\"ď\"],[271,2],[272,1,\"đ\"],[273,2],[274,1,\"ē\"],[275,2],[276,1,\"ĕ\"],[277,2],[278,1,\"ė\"],[279,2],[280,1,\"ę\"],[281,2],[282,1,\"ě\"],[283,2],[284,1,\"ĝ\"],[285,2],[286,1,\"ğ\"],[287,2],[288,1,\"ġ\"],[289,2],[290,1,\"ģ\"],[291,2],[292,1,\"ĥ\"],[293,2],[294,1,\"ħ\"],[295,2],[296,1,\"ĩ\"],[297,2],[298,1,\"ī\"],[299,2],[300,1,\"ĭ\"],[301,2],[302,1,\"į\"],[303,2],[304,1,\"i̇\"],[305,2],[[306,307],1,\"ij\"],[308,1,\"ĵ\"],[309,2],[310,1,\"ķ\"],[[311,312],2],[313,1,\"ĺ\"],[314,2],[315,1,\"ļ\"],[316,2],[317,1,\"ľ\"],[318,2],[[319,320],1,\"l·\"],[321,1,\"ł\"],[322,2],[323,1,\"ń\"],[324,2],[325,1,\"ņ\"],[326,2],[327,1,\"ň\"],[328,2],[329,1,\"ʼn\"],[330,1,\"ŋ\"],[331,2],[332,1,\"ō\"],[333,2],[334,1,\"ŏ\"],[335,2],[336,1,\"ő\"],[337,2],[338,1,\"œ\"],[339,2],[340,1,\"ŕ\"],[341,2],[342,1,\"ŗ\"],[343,2],[344,1,\"ř\"],[345,2],[346,1,\"ś\"],[347,2],[348,1,\"ŝ\"],[349,2],[350,1,\"ş\"],[351,2],[352,1,\"š\"],[353,2],[354,1,\"ţ\"],[355,2],[356,1,\"ť\"],[357,2],[358,1,\"ŧ\"],[359,2],[360,1,\"ũ\"],[361,2],[362,1,\"ū\"],[363,2],[364,1,\"ŭ\"],[365,2],[366,1,\"ů\"],[367,2],[368,1,\"ű\"],[369,2],[370,1,\"ų\"],[371,2],[372,1,\"ŵ\"],[373,2],[374,1,\"ŷ\"],[375,2],[376,1,\"ÿ\"],[377,1,\"ź\"],[378,2],[379,1,\"ż\"],[380,2],[381,1,\"ž\"],[382,2],[383,1,\"s\"],[384,2],[385,1,\"ɓ\"],[386,1,\"ƃ\"],[387,2],[388,1,\"ƅ\"],[389,2],[390,1,\"ɔ\"],[391,1,\"ƈ\"],[392,2],[393,1,\"ɖ\"],[394,1,\"ɗ\"],[395,1,\"ƌ\"],[[396,397],2],[398,1,\"ǝ\"],[399,1,\"ə\"],[400,1,\"ɛ\"],[401,1,\"ƒ\"],[402,2],[403,1,\"ɠ\"],[404,1,\"ɣ\"],[405,2],[406,1,\"ɩ\"],[407,1,\"ɨ\"],[408,1,\"ƙ\"],[[409,411],2],[412,1,\"ɯ\"],[413,1,\"ɲ\"],[414,2],[415,1,\"ɵ\"],[416,1,\"ơ\"],[417,2],[418,1,\"ƣ\"],[419,2],[420,1,\"ƥ\"],[421,2],[422,1,\"ʀ\"],[423,1,\"ƨ\"],[424,2],[425,1,\"ʃ\"],[[426,427],2],[428,1,\"ƭ\"],[429,2],[430,1,\"ʈ\"],[431,1,\"ư\"],[432,2],[433,1,\"ʊ\"],[434,1,\"ʋ\"],[435,1,\"ƴ\"],[436,2],[437,1,\"ƶ\"],[438,2],[439,1,\"ʒ\"],[440,1,\"ƹ\"],[[441,443],2],[444,1,\"ƽ\"],[[445,451],2],[[452,454],1,\"dž\"],[[455,457],1,\"lj\"],[[458,460],1,\"nj\"],[461,1,\"ǎ\"],[462,2],[463,1,\"ǐ\"],[464,2],[465,1,\"ǒ\"],[466,2],[467,1,\"ǔ\"],[468,2],[469,1,\"ǖ\"],[470,2],[471,1,\"ǘ\"],[472,2],[473,1,\"ǚ\"],[474,2],[475,1,\"ǜ\"],[[476,477],2],[478,1,\"ǟ\"],[479,2],[480,1,\"ǡ\"],[481,2],[482,1,\"ǣ\"],[483,2],[484,1,\"ǥ\"],[485,2],[486,1,\"ǧ\"],[487,2],[488,1,\"ǩ\"],[489,2],[490,1,\"ǫ\"],[491,2],[492,1,\"ǭ\"],[493,2],[494,1,\"ǯ\"],[[495,496],2],[[497,499],1,\"dz\"],[500,1,\"ǵ\"],[501,2],[502,1,\"ƕ\"],[503,1,\"ƿ\"],[504,1,\"ǹ\"],[505,2],[506,1,\"ǻ\"],[507,2],[508,1,\"ǽ\"],[509,2],[510,1,\"ǿ\"],[511,2],[512,1,\"ȁ\"],[513,2],[514,1,\"ȃ\"],[515,2],[516,1,\"ȅ\"],[517,2],[518,1,\"ȇ\"],[519,2],[520,1,\"ȉ\"],[521,2],[522,1,\"ȋ\"],[523,2],[524,1,\"ȍ\"],[525,2],[526,1,\"ȏ\"],[527,2],[528,1,\"ȑ\"],[529,2],[530,1,\"ȓ\"],[531,2],[532,1,\"ȕ\"],[533,2],[534,1,\"ȗ\"],[535,2],[536,1,\"ș\"],[537,2],[538,1,\"ț\"],[539,2],[540,1,\"ȝ\"],[541,2],[542,1,\"ȟ\"],[543,2],[544,1,\"ƞ\"],[545,2],[546,1,\"ȣ\"],[547,2],[548,1,\"ȥ\"],[549,2],[550,1,\"ȧ\"],[551,2],[552,1,\"ȩ\"],[553,2],[554,1,\"ȫ\"],[555,2],[556,1,\"ȭ\"],[557,2],[558,1,\"ȯ\"],[559,2],[560,1,\"ȱ\"],[561,2],[562,1,\"ȳ\"],[563,2],[[564,566],2],[[567,569],2],[570,1,\"ⱥ\"],[571,1,\"ȼ\"],[572,2],[573,1,\"ƚ\"],[574,1,\"ⱦ\"],[[575,576],2],[577,1,\"ɂ\"],[578,2],[579,1,\"ƀ\"],[580,1,\"ʉ\"],[581,1,\"ʌ\"],[582,1,\"ɇ\"],[583,2],[584,1,\"ɉ\"],[585,2],[586,1,\"ɋ\"],[587,2],[588,1,\"ɍ\"],[589,2],[590,1,\"ɏ\"],[591,2],[[592,680],2],[[681,685],2],[[686,687],2],[688,1,\"h\"],[689,1,\"ɦ\"],[690,1,\"j\"],[691,1,\"r\"],[692,1,\"ɹ\"],[693,1,\"ɻ\"],[694,1,\"ʁ\"],[695,1,\"w\"],[696,1,\"y\"],[[697,705],2],[[706,709],2],[[710,721],2],[[722,727],2],[728,5,\" ̆\"],[729,5,\" ̇\"],[730,5,\" ̊\"],[731,5,\" ̨\"],[732,5,\" ̃\"],[733,5,\" ̋\"],[734,2],[735,2],[736,1,\"ɣ\"],[737,1,\"l\"],[738,1,\"s\"],[739,1,\"x\"],[740,1,\"ʕ\"],[[741,745],2],[[746,747],2],[748,2],[749,2],[750,2],[[751,767],2],[[768,831],2],[832,1,\"̀\"],[833,1,\"́\"],[834,2],[835,1,\"̓\"],[836,1,\"̈́\"],[837,1,\"ι\"],[[838,846],2],[847,7],[[848,855],2],[[856,860],2],[[861,863],2],[[864,865],2],[866,2],[[867,879],2],[880,1,\"ͱ\"],[881,2],[882,1,\"ͳ\"],[883,2],[884,1,\"ʹ\"],[885,2],[886,1,\"ͷ\"],[887,2],[[888,889],3],[890,5,\" ι\"],[[891,893],2],[894,5,\";\"],[895,1,\"ϳ\"],[[896,899],3],[900,5,\" ́\"],[901,5,\" ̈́\"],[902,1,\"ά\"],[903,1,\"·\"],[904,1,\"έ\"],[905,1,\"ή\"],[906,1,\"ί\"],[907,3],[908,1,\"ό\"],[909,3],[910,1,\"ύ\"],[911,1,\"ώ\"],[912,2],[913,1,\"α\"],[914,1,\"β\"],[915,1,\"γ\"],[916,1,\"δ\"],[917,1,\"ε\"],[918,1,\"ζ\"],[919,1,\"η\"],[920,1,\"θ\"],[921,1,\"ι\"],[922,1,\"κ\"],[923,1,\"λ\"],[924,1,\"μ\"],[925,1,\"ν\"],[926,1,\"ξ\"],[927,1,\"ο\"],[928,1,\"π\"],[929,1,\"ρ\"],[930,3],[931,1,\"σ\"],[932,1,\"τ\"],[933,1,\"υ\"],[934,1,\"φ\"],[935,1,\"χ\"],[936,1,\"ψ\"],[937,1,\"ω\"],[938,1,\"ϊ\"],[939,1,\"ϋ\"],[[940,961],2],[962,6,\"σ\"],[[963,974],2],[975,1,\"ϗ\"],[976,1,\"β\"],[977,1,\"θ\"],[978,1,\"υ\"],[979,1,\"ύ\"],[980,1,\"ϋ\"],[981,1,\"φ\"],[982,1,\"π\"],[983,2],[984,1,\"ϙ\"],[985,2],[986,1,\"ϛ\"],[987,2],[988,1,\"ϝ\"],[989,2],[990,1,\"ϟ\"],[991,2],[992,1,\"ϡ\"],[993,2],[994,1,\"ϣ\"],[995,2],[996,1,\"ϥ\"],[997,2],[998,1,\"ϧ\"],[999,2],[1000,1,\"ϩ\"],[1001,2],[1002,1,\"ϫ\"],[1003,2],[1004,1,\"ϭ\"],[1005,2],[1006,1,\"ϯ\"],[1007,2],[1008,1,\"κ\"],[1009,1,\"ρ\"],[1010,1,\"σ\"],[1011,2],[1012,1,\"θ\"],[1013,1,\"ε\"],[1014,2],[1015,1,\"ϸ\"],[1016,2],[1017,1,\"σ\"],[1018,1,\"ϻ\"],[1019,2],[1020,2],[1021,1,\"ͻ\"],[1022,1,\"ͼ\"],[1023,1,\"ͽ\"],[1024,1,\"ѐ\"],[1025,1,\"ё\"],[1026,1,\"ђ\"],[1027,1,\"ѓ\"],[1028,1,\"є\"],[1029,1,\"ѕ\"],[1030,1,\"і\"],[1031,1,\"ї\"],[1032,1,\"ј\"],[1033,1,\"љ\"],[1034,1,\"њ\"],[1035,1,\"ћ\"],[1036,1,\"ќ\"],[1037,1,\"ѝ\"],[1038,1,\"ў\"],[1039,1,\"џ\"],[1040,1,\"а\"],[1041,1,\"б\"],[1042,1,\"в\"],[1043,1,\"г\"],[1044,1,\"д\"],[1045,1,\"е\"],[1046,1,\"ж\"],[1047,1,\"з\"],[1048,1,\"и\"],[1049,1,\"й\"],[1050,1,\"к\"],[1051,1,\"л\"],[1052,1,\"м\"],[1053,1,\"н\"],[1054,1,\"о\"],[1055,1,\"п\"],[1056,1,\"р\"],[1057,1,\"с\"],[1058,1,\"т\"],[1059,1,\"у\"],[1060,1,\"ф\"],[1061,1,\"х\"],[1062,1,\"ц\"],[1063,1,\"ч\"],[1064,1,\"ш\"],[1065,1,\"щ\"],[1066,1,\"ъ\"],[1067,1,\"ы\"],[1068,1,\"ь\"],[1069,1,\"э\"],[1070,1,\"ю\"],[1071,1,\"я\"],[[1072,1103],2],[1104,2],[[1105,1116],2],[1117,2],[[1118,1119],2],[1120,1,\"ѡ\"],[1121,2],[1122,1,\"ѣ\"],[1123,2],[1124,1,\"ѥ\"],[1125,2],[1126,1,\"ѧ\"],[1127,2],[1128,1,\"ѩ\"],[1129,2],[1130,1,\"ѫ\"],[1131,2],[1132,1,\"ѭ\"],[1133,2],[1134,1,\"ѯ\"],[1135,2],[1136,1,\"ѱ\"],[1137,2],[1138,1,\"ѳ\"],[1139,2],[1140,1,\"ѵ\"],[1141,2],[1142,1,\"ѷ\"],[1143,2],[1144,1,\"ѹ\"],[1145,2],[1146,1,\"ѻ\"],[1147,2],[1148,1,\"ѽ\"],[1149,2],[1150,1,\"ѿ\"],[1151,2],[1152,1,\"ҁ\"],[1153,2],[1154,2],[[1155,1158],2],[1159,2],[[1160,1161],2],[1162,1,\"ҋ\"],[1163,2],[1164,1,\"ҍ\"],[1165,2],[1166,1,\"ҏ\"],[1167,2],[1168,1,\"ґ\"],[1169,2],[1170,1,\"ғ\"],[1171,2],[1172,1,\"ҕ\"],[1173,2],[1174,1,\"җ\"],[1175,2],[1176,1,\"ҙ\"],[1177,2],[1178,1,\"қ\"],[1179,2],[1180,1,\"ҝ\"],[1181,2],[1182,1,\"ҟ\"],[1183,2],[1184,1,\"ҡ\"],[1185,2],[1186,1,\"ң\"],[1187,2],[1188,1,\"ҥ\"],[1189,2],[1190,1,\"ҧ\"],[1191,2],[1192,1,\"ҩ\"],[1193,2],[1194,1,\"ҫ\"],[1195,2],[1196,1,\"ҭ\"],[1197,2],[1198,1,\"ү\"],[1199,2],[1200,1,\"ұ\"],[1201,2],[1202,1,\"ҳ\"],[1203,2],[1204,1,\"ҵ\"],[1205,2],[1206,1,\"ҷ\"],[1207,2],[1208,1,\"ҹ\"],[1209,2],[1210,1,\"һ\"],[1211,2],[1212,1,\"ҽ\"],[1213,2],[1214,1,\"ҿ\"],[1215,2],[1216,3],[1217,1,\"ӂ\"],[1218,2],[1219,1,\"ӄ\"],[1220,2],[1221,1,\"ӆ\"],[1222,2],[1223,1,\"ӈ\"],[1224,2],[1225,1,\"ӊ\"],[1226,2],[1227,1,\"ӌ\"],[1228,2],[1229,1,\"ӎ\"],[1230,2],[1231,2],[1232,1,\"ӑ\"],[1233,2],[1234,1,\"ӓ\"],[1235,2],[1236,1,\"ӕ\"],[1237,2],[1238,1,\"ӗ\"],[1239,2],[1240,1,\"ә\"],[1241,2],[1242,1,\"ӛ\"],[1243,2],[1244,1,\"ӝ\"],[1245,2],[1246,1,\"ӟ\"],[1247,2],[1248,1,\"ӡ\"],[1249,2],[1250,1,\"ӣ\"],[1251,2],[1252,1,\"ӥ\"],[1253,2],[1254,1,\"ӧ\"],[1255,2],[1256,1,\"ө\"],[1257,2],[1258,1,\"ӫ\"],[1259,2],[1260,1,\"ӭ\"],[1261,2],[1262,1,\"ӯ\"],[1263,2],[1264,1,\"ӱ\"],[1265,2],[1266,1,\"ӳ\"],[1267,2],[1268,1,\"ӵ\"],[1269,2],[1270,1,\"ӷ\"],[1271,2],[1272,1,\"ӹ\"],[1273,2],[1274,1,\"ӻ\"],[1275,2],[1276,1,\"ӽ\"],[1277,2],[1278,1,\"ӿ\"],[1279,2],[1280,1,\"ԁ\"],[1281,2],[1282,1,\"ԃ\"],[1283,2],[1284,1,\"ԅ\"],[1285,2],[1286,1,\"ԇ\"],[1287,2],[1288,1,\"ԉ\"],[1289,2],[1290,1,\"ԋ\"],[1291,2],[1292,1,\"ԍ\"],[1293,2],[1294,1,\"ԏ\"],[1295,2],[1296,1,\"ԑ\"],[1297,2],[1298,1,\"ԓ\"],[1299,2],[1300,1,\"ԕ\"],[1301,2],[1302,1,\"ԗ\"],[1303,2],[1304,1,\"ԙ\"],[1305,2],[1306,1,\"ԛ\"],[1307,2],[1308,1,\"ԝ\"],[1309,2],[1310,1,\"ԟ\"],[1311,2],[1312,1,\"ԡ\"],[1313,2],[1314,1,\"ԣ\"],[1315,2],[1316,1,\"ԥ\"],[1317,2],[1318,1,\"ԧ\"],[1319,2],[1320,1,\"ԩ\"],[1321,2],[1322,1,\"ԫ\"],[1323,2],[1324,1,\"ԭ\"],[1325,2],[1326,1,\"ԯ\"],[1327,2],[1328,3],[1329,1,\"ա\"],[1330,1,\"բ\"],[1331,1,\"գ\"],[1332,1,\"դ\"],[1333,1,\"ե\"],[1334,1,\"զ\"],[1335,1,\"է\"],[1336,1,\"ը\"],[1337,1,\"թ\"],[1338,1,\"ժ\"],[1339,1,\"ի\"],[1340,1,\"լ\"],[1341,1,\"խ\"],[1342,1,\"ծ\"],[1343,1,\"կ\"],[1344,1,\"հ\"],[1345,1,\"ձ\"],[1346,1,\"ղ\"],[1347,1,\"ճ\"],[1348,1,\"մ\"],[1349,1,\"յ\"],[1350,1,\"ն\"],[1351,1,\"շ\"],[1352,1,\"ո\"],[1353,1,\"չ\"],[1354,1,\"պ\"],[1355,1,\"ջ\"],[1356,1,\"ռ\"],[1357,1,\"ս\"],[1358,1,\"վ\"],[1359,1,\"տ\"],[1360,1,\"ր\"],[1361,1,\"ց\"],[1362,1,\"ւ\"],[1363,1,\"փ\"],[1364,1,\"ք\"],[1365,1,\"օ\"],[1366,1,\"ֆ\"],[[1367,1368],3],[1369,2],[[1370,1375],2],[1376,2],[[1377,1414],2],[1415,1,\"եւ\"],[1416,2],[1417,2],[1418,2],[[1419,1420],3],[[1421,1422],2],[1423,2],[1424,3],[[1425,1441],2],[1442,2],[[1443,1455],2],[[1456,1465],2],[1466,2],[[1467,1469],2],[1470,2],[1471,2],[1472,2],[[1473,1474],2],[1475,2],[1476,2],[1477,2],[1478,2],[1479,2],[[1480,1487],3],[[1488,1514],2],[[1515,1518],3],[1519,2],[[1520,1524],2],[[1525,1535],3],[[1536,1539],3],[1540,3],[1541,3],[[1542,1546],2],[1547,2],[1548,2],[[1549,1551],2],[[1552,1557],2],[[1558,1562],2],[1563,2],[1564,3],[1565,2],[1566,2],[1567,2],[1568,2],[[1569,1594],2],[[1595,1599],2],[1600,2],[[1601,1618],2],[[1619,1621],2],[[1622,1624],2],[[1625,1630],2],[1631,2],[[1632,1641],2],[[1642,1645],2],[[1646,1647],2],[[1648,1652],2],[1653,1,\"اٴ\"],[1654,1,\"وٴ\"],[1655,1,\"ۇٴ\"],[1656,1,\"يٴ\"],[[1657,1719],2],[[1720,1721],2],[[1722,1726],2],[1727,2],[[1728,1742],2],[1743,2],[[1744,1747],2],[1748,2],[[1749,1756],2],[1757,3],[1758,2],[[1759,1768],2],[1769,2],[[1770,1773],2],[[1774,1775],2],[[1776,1785],2],[[1786,1790],2],[1791,2],[[1792,1805],2],[1806,3],[1807,3],[[1808,1836],2],[[1837,1839],2],[[1840,1866],2],[[1867,1868],3],[[1869,1871],2],[[1872,1901],2],[[1902,1919],2],[[1920,1968],2],[1969,2],[[1970,1983],3],[[1984,2037],2],[[2038,2042],2],[[2043,2044],3],[2045,2],[[2046,2047],2],[[2048,2093],2],[[2094,2095],3],[[2096,2110],2],[2111,3],[[2112,2139],2],[[2140,2141],3],[2142,2],[2143,3],[[2144,2154],2],[[2155,2159],3],[[2160,2183],2],[2184,2],[[2185,2190],2],[2191,3],[[2192,2193],3],[[2194,2199],3],[[2200,2207],2],[2208,2],[2209,2],[[2210,2220],2],[[2221,2226],2],[[2227,2228],2],[2229,2],[[2230,2237],2],[[2238,2247],2],[[2248,2258],2],[2259,2],[[2260,2273],2],[2274,3],[2275,2],[[2276,2302],2],[2303,2],[2304,2],[[2305,2307],2],[2308,2],[[2309,2361],2],[[2362,2363],2],[[2364,2381],2],[2382,2],[2383,2],[[2384,2388],2],[2389,2],[[2390,2391],2],[2392,1,\"क़\"],[2393,1,\"ख़\"],[2394,1,\"ग़\"],[2395,1,\"ज़\"],[2396,1,\"ड़\"],[2397,1,\"ढ़\"],[2398,1,\"फ़\"],[2399,1,\"य़\"],[[2400,2403],2],[[2404,2405],2],[[2406,2415],2],[2416,2],[[2417,2418],2],[[2419,2423],2],[2424,2],[[2425,2426],2],[[2427,2428],2],[2429,2],[[2430,2431],2],[2432,2],[[2433,2435],2],[2436,3],[[2437,2444],2],[[2445,2446],3],[[2447,2448],2],[[2449,2450],3],[[2451,2472],2],[2473,3],[[2474,2480],2],[2481,3],[2482,2],[[2483,2485],3],[[2486,2489],2],[[2490,2491],3],[2492,2],[2493,2],[[2494,2500],2],[[2501,2502],3],[[2503,2504],2],[[2505,2506],3],[[2507,2509],2],[2510,2],[[2511,2518],3],[2519,2],[[2520,2523],3],[2524,1,\"ড়\"],[2525,1,\"ঢ়\"],[2526,3],[2527,1,\"য়\"],[[2528,2531],2],[[2532,2533],3],[[2534,2545],2],[[2546,2554],2],[2555,2],[2556,2],[2557,2],[2558,2],[[2559,2560],3],[2561,2],[2562,2],[2563,2],[2564,3],[[2565,2570],2],[[2571,2574],3],[[2575,2576],2],[[2577,2578],3],[[2579,2600],2],[2601,3],[[2602,2608],2],[2609,3],[2610,2],[2611,1,\"ਲ਼\"],[2612,3],[2613,2],[2614,1,\"ਸ਼\"],[2615,3],[[2616,2617],2],[[2618,2619],3],[2620,2],[2621,3],[[2622,2626],2],[[2627,2630],3],[[2631,2632],2],[[2633,2634],3],[[2635,2637],2],[[2638,2640],3],[2641,2],[[2642,2648],3],[2649,1,\"ਖ਼\"],[2650,1,\"ਗ਼\"],[2651,1,\"ਜ਼\"],[2652,2],[2653,3],[2654,1,\"ਫ਼\"],[[2655,2661],3],[[2662,2676],2],[2677,2],[2678,2],[[2679,2688],3],[[2689,2691],2],[2692,3],[[2693,2699],2],[2700,2],[2701,2],[2702,3],[[2703,2705],2],[2706,3],[[2707,2728],2],[2729,3],[[2730,2736],2],[2737,3],[[2738,2739],2],[2740,3],[[2741,2745],2],[[2746,2747],3],[[2748,2757],2],[2758,3],[[2759,2761],2],[2762,3],[[2763,2765],2],[[2766,2767],3],[2768,2],[[2769,2783],3],[2784,2],[[2785,2787],2],[[2788,2789],3],[[2790,2799],2],[2800,2],[2801,2],[[2802,2808],3],[2809,2],[[2810,2815],2],[2816,3],[[2817,2819],2],[2820,3],[[2821,2828],2],[[2829,2830],3],[[2831,2832],2],[[2833,2834],3],[[2835,2856],2],[2857,3],[[2858,2864],2],[2865,3],[[2866,2867],2],[2868,3],[2869,2],[[2870,2873],2],[[2874,2875],3],[[2876,2883],2],[2884,2],[[2885,2886],3],[[2887,2888],2],[[2889,2890],3],[[2891,2893],2],[[2894,2900],3],[2901,2],[[2902,2903],2],[[2904,2907],3],[2908,1,\"ଡ଼\"],[2909,1,\"ଢ଼\"],[2910,3],[[2911,2913],2],[[2914,2915],2],[[2916,2917],3],[[2918,2927],2],[2928,2],[2929,2],[[2930,2935],2],[[2936,2945],3],[[2946,2947],2],[2948,3],[[2949,2954],2],[[2955,2957],3],[[2958,2960],2],[2961,3],[[2962,2965],2],[[2966,2968],3],[[2969,2970],2],[2971,3],[2972,2],[2973,3],[[2974,2975],2],[[2976,2978],3],[[2979,2980],2],[[2981,2983],3],[[2984,2986],2],[[2987,2989],3],[[2990,2997],2],[2998,2],[[2999,3001],2],[[3002,3005],3],[[3006,3010],2],[[3011,3013],3],[[3014,3016],2],[3017,3],[[3018,3021],2],[[3022,3023],3],[3024,2],[[3025,3030],3],[3031,2],[[3032,3045],3],[3046,2],[[3047,3055],2],[[3056,3058],2],[[3059,3066],2],[[3067,3071],3],[3072,2],[[3073,3075],2],[3076,2],[[3077,3084],2],[3085,3],[[3086,3088],2],[3089,3],[[3090,3112],2],[3113,3],[[3114,3123],2],[3124,2],[[3125,3129],2],[[3130,3131],3],[3132,2],[3133,2],[[3134,3140],2],[3141,3],[[3142,3144],2],[3145,3],[[3146,3149],2],[[3150,3156],3],[[3157,3158],2],[3159,3],[[3160,3161],2],[3162,2],[[3163,3164],3],[3165,2],[[3166,3167],3],[[3168,3169],2],[[3170,3171],2],[[3172,3173],3],[[3174,3183],2],[[3184,3190],3],[3191,2],[[3192,3199],2],[3200,2],[3201,2],[[3202,3203],2],[3204,2],[[3205,3212],2],[3213,3],[[3214,3216],2],[3217,3],[[3218,3240],2],[3241,3],[[3242,3251],2],[3252,3],[[3253,3257],2],[[3258,3259],3],[[3260,3261],2],[[3262,3268],2],[3269,3],[[3270,3272],2],[3273,3],[[3274,3277],2],[[3278,3284],3],[[3285,3286],2],[[3287,3292],3],[3293,2],[3294,2],[3295,3],[[3296,3297],2],[[3298,3299],2],[[3300,3301],3],[[3302,3311],2],[3312,3],[[3313,3314],2],[[3315,3327],3],[3328,2],[3329,2],[[3330,3331],2],[3332,2],[[3333,3340],2],[3341,3],[[3342,3344],2],[3345,3],[[3346,3368],2],[3369,2],[[3370,3385],2],[3386,2],[[3387,3388],2],[3389,2],[[3390,3395],2],[3396,2],[3397,3],[[3398,3400],2],[3401,3],[[3402,3405],2],[3406,2],[3407,2],[[3408,3411],3],[[3412,3414],2],[3415,2],[[3416,3422],2],[3423,2],[[3424,3425],2],[[3426,3427],2],[[3428,3429],3],[[3430,3439],2],[[3440,3445],2],[[3446,3448],2],[3449,2],[[3450,3455],2],[3456,3],[3457,2],[[3458,3459],2],[3460,3],[[3461,3478],2],[[3479,3481],3],[[3482,3505],2],[3506,3],[[3507,3515],2],[3516,3],[3517,2],[[3518,3519],3],[[3520,3526],2],[[3527,3529],3],[3530,2],[[3531,3534],3],[[3535,3540],2],[3541,3],[3542,2],[3543,3],[[3544,3551],2],[[3552,3557],3],[[3558,3567],2],[[3568,3569],3],[[3570,3571],2],[3572,2],[[3573,3584],3],[[3585,3634],2],[3635,1,\"ํา\"],[[3636,3642],2],[[3643,3646],3],[3647,2],[[3648,3662],2],[3663,2],[[3664,3673],2],[[3674,3675],2],[[3676,3712],3],[[3713,3714],2],[3715,3],[3716,2],[3717,3],[3718,2],[[3719,3720],2],[3721,2],[3722,2],[3723,3],[3724,2],[3725,2],[[3726,3731],2],[[3732,3735],2],[3736,2],[[3737,3743],2],[3744,2],[[3745,3747],2],[3748,3],[3749,2],[3750,3],[3751,2],[[3752,3753],2],[[3754,3755],2],[3756,2],[[3757,3762],2],[3763,1,\"ໍາ\"],[[3764,3769],2],[3770,2],[[3771,3773],2],[[3774,3775],3],[[3776,3780],2],[3781,3],[3782,2],[3783,3],[[3784,3789],2],[[3790,3791],3],[[3792,3801],2],[[3802,3803],3],[3804,1,\"ຫນ\"],[3805,1,\"ຫມ\"],[[3806,3807],2],[[3808,3839],3],[3840,2],[[3841,3850],2],[3851,2],[3852,1,\"་\"],[[3853,3863],2],[[3864,3865],2],[[3866,3871],2],[[3872,3881],2],[[3882,3892],2],[3893,2],[3894,2],[3895,2],[3896,2],[3897,2],[[3898,3901],2],[[3902,3906],2],[3907,1,\"གྷ\"],[[3908,3911],2],[3912,3],[[3913,3916],2],[3917,1,\"ཌྷ\"],[[3918,3921],2],[3922,1,\"དྷ\"],[[3923,3926],2],[3927,1,\"བྷ\"],[[3928,3931],2],[3932,1,\"ཛྷ\"],[[3933,3944],2],[3945,1,\"ཀྵ\"],[3946,2],[[3947,3948],2],[[3949,3952],3],[[3953,3954],2],[3955,1,\"ཱི\"],[3956,2],[3957,1,\"ཱུ\"],[3958,1,\"ྲྀ\"],[3959,1,\"ྲཱྀ\"],[3960,1,\"ླྀ\"],[3961,1,\"ླཱྀ\"],[[3962,3968],2],[3969,1,\"ཱྀ\"],[[3970,3972],2],[3973,2],[[3974,3979],2],[[3980,3983],2],[[3984,3986],2],[3987,1,\"ྒྷ\"],[[3988,3989],2],[3990,2],[3991,2],[3992,3],[[3993,3996],2],[3997,1,\"ྜྷ\"],[[3998,4001],2],[4002,1,\"ྡྷ\"],[[4003,4006],2],[4007,1,\"ྦྷ\"],[[4008,4011],2],[4012,1,\"ྫྷ\"],[4013,2],[[4014,4016],2],[[4017,4023],2],[4024,2],[4025,1,\"ྐྵ\"],[[4026,4028],2],[4029,3],[[4030,4037],2],[4038,2],[[4039,4044],2],[4045,3],[4046,2],[4047,2],[[4048,4049],2],[[4050,4052],2],[[4053,4056],2],[[4057,4058],2],[[4059,4095],3],[[4096,4129],2],[4130,2],[[4131,4135],2],[4136,2],[[4137,4138],2],[4139,2],[[4140,4146],2],[[4147,4149],2],[[4150,4153],2],[[4154,4159],2],[[4160,4169],2],[[4170,4175],2],[[4176,4185],2],[[4186,4249],2],[[4250,4253],2],[[4254,4255],2],[[4256,4293],3],[4294,3],[4295,1,\"ⴧ\"],[[4296,4300],3],[4301,1,\"ⴭ\"],[[4302,4303],3],[[4304,4342],2],[[4343,4344],2],[[4345,4346],2],[4347,2],[4348,1,\"ნ\"],[[4349,4351],2],[[4352,4441],2],[[4442,4446],2],[[4447,4448],3],[[4449,4514],2],[[4515,4519],2],[[4520,4601],2],[[4602,4607],2],[[4608,4614],2],[4615,2],[[4616,4678],2],[4679,2],[4680,2],[4681,3],[[4682,4685],2],[[4686,4687],3],[[4688,4694],2],[4695,3],[4696,2],[4697,3],[[4698,4701],2],[[4702,4703],3],[[4704,4742],2],[4743,2],[4744,2],[4745,3],[[4746,4749],2],[[4750,4751],3],[[4752,4782],2],[4783,2],[4784,2],[4785,3],[[4786,4789],2],[[4790,4791],3],[[4792,4798],2],[4799,3],[4800,2],[4801,3],[[4802,4805],2],[[4806,4807],3],[[4808,4814],2],[4815,2],[[4816,4822],2],[4823,3],[[4824,4846],2],[4847,2],[[4848,4878],2],[4879,2],[4880,2],[4881,3],[[4882,4885],2],[[4886,4887],3],[[4888,4894],2],[4895,2],[[4896,4934],2],[4935,2],[[4936,4954],2],[[4955,4956],3],[[4957,4958],2],[4959,2],[4960,2],[[4961,4988],2],[[4989,4991],3],[[4992,5007],2],[[5008,5017],2],[[5018,5023],3],[[5024,5108],2],[5109,2],[[5110,5111],3],[5112,1,\"Ᏸ\"],[5113,1,\"Ᏹ\"],[5114,1,\"Ᏺ\"],[5115,1,\"Ᏻ\"],[5116,1,\"Ᏼ\"],[5117,1,\"Ᏽ\"],[[5118,5119],3],[5120,2],[[5121,5740],2],[[5741,5742],2],[[5743,5750],2],[[5751,5759],2],[5760,3],[[5761,5786],2],[[5787,5788],2],[[5789,5791],3],[[5792,5866],2],[[5867,5872],2],[[5873,5880],2],[[5881,5887],3],[[5888,5900],2],[5901,2],[[5902,5908],2],[5909,2],[[5910,5918],3],[5919,2],[[5920,5940],2],[[5941,5942],2],[[5943,5951],3],[[5952,5971],2],[[5972,5983],3],[[5984,5996],2],[5997,3],[[5998,6000],2],[6001,3],[[6002,6003],2],[[6004,6015],3],[[6016,6067],2],[[6068,6069],3],[[6070,6099],2],[[6100,6102],2],[6103,2],[[6104,6107],2],[6108,2],[6109,2],[[6110,6111],3],[[6112,6121],2],[[6122,6127],3],[[6128,6137],2],[[6138,6143],3],[[6144,6149],2],[6150,3],[[6151,6154],2],[[6155,6157],7],[6158,3],[6159,7],[[6160,6169],2],[[6170,6175],3],[[6176,6263],2],[6264,2],[[6265,6271],3],[[6272,6313],2],[6314,2],[[6315,6319],3],[[6320,6389],2],[[6390,6399],3],[[6400,6428],2],[[6429,6430],2],[6431,3],[[6432,6443],2],[[6444,6447],3],[[6448,6459],2],[[6460,6463],3],[6464,2],[[6465,6467],3],[[6468,6469],2],[[6470,6509],2],[[6510,6511],3],[[6512,6516],2],[[6517,6527],3],[[6528,6569],2],[[6570,6571],2],[[6572,6575],3],[[6576,6601],2],[[6602,6607],3],[[6608,6617],2],[6618,2],[[6619,6621],3],[[6622,6623],2],[[6624,6655],2],[[6656,6683],2],[[6684,6685],3],[[6686,6687],2],[[6688,6750],2],[6751,3],[[6752,6780],2],[[6781,6782],3],[[6783,6793],2],[[6794,6799],3],[[6800,6809],2],[[6810,6815],3],[[6816,6822],2],[6823,2],[[6824,6829],2],[[6830,6831],3],[[6832,6845],2],[6846,2],[[6847,6848],2],[[6849,6862],2],[[6863,6911],3],[[6912,6987],2],[6988,2],[[6989,6991],3],[[6992,7001],2],[[7002,7018],2],[[7019,7027],2],[[7028,7036],2],[[7037,7038],2],[7039,3],[[7040,7082],2],[[7083,7085],2],[[7086,7097],2],[[7098,7103],2],[[7104,7155],2],[[7156,7163],3],[[7164,7167],2],[[7168,7223],2],[[7224,7226],3],[[7227,7231],2],[[7232,7241],2],[[7242,7244],3],[[7245,7293],2],[[7294,7295],2],[7296,1,\"в\"],[7297,1,\"д\"],[7298,1,\"о\"],[7299,1,\"с\"],[[7300,7301],1,\"т\"],[7302,1,\"ъ\"],[7303,1,\"ѣ\"],[7304,1,\"ꙋ\"],[[7305,7311],3],[7312,1,\"ა\"],[7313,1,\"ბ\"],[7314,1,\"გ\"],[7315,1,\"დ\"],[7316,1,\"ე\"],[7317,1,\"ვ\"],[7318,1,\"ზ\"],[7319,1,\"თ\"],[7320,1,\"ი\"],[7321,1,\"კ\"],[7322,1,\"ლ\"],[7323,1,\"მ\"],[7324,1,\"ნ\"],[7325,1,\"ო\"],[7326,1,\"პ\"],[7327,1,\"ჟ\"],[7328,1,\"რ\"],[7329,1,\"ს\"],[7330,1,\"ტ\"],[7331,1,\"უ\"],[7332,1,\"ფ\"],[7333,1,\"ქ\"],[7334,1,\"ღ\"],[7335,1,\"ყ\"],[7336,1,\"შ\"],[7337,1,\"ჩ\"],[7338,1,\"ც\"],[7339,1,\"ძ\"],[7340,1,\"წ\"],[7341,1,\"ჭ\"],[7342,1,\"ხ\"],[7343,1,\"ჯ\"],[7344,1,\"ჰ\"],[7345,1,\"ჱ\"],[7346,1,\"ჲ\"],[7347,1,\"ჳ\"],[7348,1,\"ჴ\"],[7349,1,\"ჵ\"],[7350,1,\"ჶ\"],[7351,1,\"ჷ\"],[7352,1,\"ჸ\"],[7353,1,\"ჹ\"],[7354,1,\"ჺ\"],[[7355,7356],3],[7357,1,\"ჽ\"],[7358,1,\"ჾ\"],[7359,1,\"ჿ\"],[[7360,7367],2],[[7368,7375],3],[[7376,7378],2],[7379,2],[[7380,7410],2],[[7411,7414],2],[7415,2],[[7416,7417],2],[7418,2],[[7419,7423],3],[[7424,7467],2],[7468,1,\"a\"],[7469,1,\"æ\"],[7470,1,\"b\"],[7471,2],[7472,1,\"d\"],[7473,1,\"e\"],[7474,1,\"ǝ\"],[7475,1,\"g\"],[7476,1,\"h\"],[7477,1,\"i\"],[7478,1,\"j\"],[7479,1,\"k\"],[7480,1,\"l\"],[7481,1,\"m\"],[7482,1,\"n\"],[7483,2],[7484,1,\"o\"],[7485,1,\"ȣ\"],[7486,1,\"p\"],[7487,1,\"r\"],[7488,1,\"t\"],[7489,1,\"u\"],[7490,1,\"w\"],[7491,1,\"a\"],[7492,1,\"ɐ\"],[7493,1,\"ɑ\"],[7494,1,\"ᴂ\"],[7495,1,\"b\"],[7496,1,\"d\"],[7497,1,\"e\"],[7498,1,\"ə\"],[7499,1,\"ɛ\"],[7500,1,\"ɜ\"],[7501,1,\"g\"],[7502,2],[7503,1,\"k\"],[7504,1,\"m\"],[7505,1,\"ŋ\"],[7506,1,\"o\"],[7507,1,\"ɔ\"],[7508,1,\"ᴖ\"],[7509,1,\"ᴗ\"],[7510,1,\"p\"],[7511,1,\"t\"],[7512,1,\"u\"],[7513,1,\"ᴝ\"],[7514,1,\"ɯ\"],[7515,1,\"v\"],[7516,1,\"ᴥ\"],[7517,1,\"β\"],[7518,1,\"γ\"],[7519,1,\"δ\"],[7520,1,\"φ\"],[7521,1,\"χ\"],[7522,1,\"i\"],[7523,1,\"r\"],[7524,1,\"u\"],[7525,1,\"v\"],[7526,1,\"β\"],[7527,1,\"γ\"],[7528,1,\"ρ\"],[7529,1,\"φ\"],[7530,1,\"χ\"],[7531,2],[[7532,7543],2],[7544,1,\"н\"],[[7545,7578],2],[7579,1,\"ɒ\"],[7580,1,\"c\"],[7581,1,\"ɕ\"],[7582,1,\"ð\"],[7583,1,\"ɜ\"],[7584,1,\"f\"],[7585,1,\"ɟ\"],[7586,1,\"ɡ\"],[7587,1,\"ɥ\"],[7588,1,\"ɨ\"],[7589,1,\"ɩ\"],[7590,1,\"ɪ\"],[7591,1,\"ᵻ\"],[7592,1,\"ʝ\"],[7593,1,\"ɭ\"],[7594,1,\"ᶅ\"],[7595,1,\"ʟ\"],[7596,1,\"ɱ\"],[7597,1,\"ɰ\"],[7598,1,\"ɲ\"],[7599,1,\"ɳ\"],[7600,1,\"ɴ\"],[7601,1,\"ɵ\"],[7602,1,\"ɸ\"],[7603,1,\"ʂ\"],[7604,1,\"ʃ\"],[7605,1,\"ƫ\"],[7606,1,\"ʉ\"],[7607,1,\"ʊ\"],[7608,1,\"ᴜ\"],[7609,1,\"ʋ\"],[7610,1,\"ʌ\"],[7611,1,\"z\"],[7612,1,\"ʐ\"],[7613,1,\"ʑ\"],[7614,1,\"ʒ\"],[7615,1,\"θ\"],[[7616,7619],2],[[7620,7626],2],[[7627,7654],2],[[7655,7669],2],[[7670,7673],2],[7674,2],[7675,2],[7676,2],[7677,2],[[7678,7679],2],[7680,1,\"ḁ\"],[7681,2],[7682,1,\"ḃ\"],[7683,2],[7684,1,\"ḅ\"],[7685,2],[7686,1,\"ḇ\"],[7687,2],[7688,1,\"ḉ\"],[7689,2],[7690,1,\"ḋ\"],[7691,2],[7692,1,\"ḍ\"],[7693,2],[7694,1,\"ḏ\"],[7695,2],[7696,1,\"ḑ\"],[7697,2],[7698,1,\"ḓ\"],[7699,2],[7700,1,\"ḕ\"],[7701,2],[7702,1,\"ḗ\"],[7703,2],[7704,1,\"ḙ\"],[7705,2],[7706,1,\"ḛ\"],[7707,2],[7708,1,\"ḝ\"],[7709,2],[7710,1,\"ḟ\"],[7711,2],[7712,1,\"ḡ\"],[7713,2],[7714,1,\"ḣ\"],[7715,2],[7716,1,\"ḥ\"],[7717,2],[7718,1,\"ḧ\"],[7719,2],[7720,1,\"ḩ\"],[7721,2],[7722,1,\"ḫ\"],[7723,2],[7724,1,\"ḭ\"],[7725,2],[7726,1,\"ḯ\"],[7727,2],[7728,1,\"ḱ\"],[7729,2],[7730,1,\"ḳ\"],[7731,2],[7732,1,\"ḵ\"],[7733,2],[7734,1,\"ḷ\"],[7735,2],[7736,1,\"ḹ\"],[7737,2],[7738,1,\"ḻ\"],[7739,2],[7740,1,\"ḽ\"],[7741,2],[7742,1,\"ḿ\"],[7743,2],[7744,1,\"ṁ\"],[7745,2],[7746,1,\"ṃ\"],[7747,2],[7748,1,\"ṅ\"],[7749,2],[7750,1,\"ṇ\"],[7751,2],[7752,1,\"ṉ\"],[7753,2],[7754,1,\"ṋ\"],[7755,2],[7756,1,\"ṍ\"],[7757,2],[7758,1,\"ṏ\"],[7759,2],[7760,1,\"ṑ\"],[7761,2],[7762,1,\"ṓ\"],[7763,2],[7764,1,\"ṕ\"],[7765,2],[7766,1,\"ṗ\"],[7767,2],[7768,1,\"ṙ\"],[7769,2],[7770,1,\"ṛ\"],[7771,2],[7772,1,\"ṝ\"],[7773,2],[7774,1,\"ṟ\"],[7775,2],[7776,1,\"ṡ\"],[7777,2],[7778,1,\"ṣ\"],[7779,2],[7780,1,\"ṥ\"],[7781,2],[7782,1,\"ṧ\"],[7783,2],[7784,1,\"ṩ\"],[7785,2],[7786,1,\"ṫ\"],[7787,2],[7788,1,\"ṭ\"],[7789,2],[7790,1,\"ṯ\"],[7791,2],[7792,1,\"ṱ\"],[7793,2],[7794,1,\"ṳ\"],[7795,2],[7796,1,\"ṵ\"],[7797,2],[7798,1,\"ṷ\"],[7799,2],[7800,1,\"ṹ\"],[7801,2],[7802,1,\"ṻ\"],[7803,2],[7804,1,\"ṽ\"],[7805,2],[7806,1,\"ṿ\"],[7807,2],[7808,1,\"ẁ\"],[7809,2],[7810,1,\"ẃ\"],[7811,2],[7812,1,\"ẅ\"],[7813,2],[7814,1,\"ẇ\"],[7815,2],[7816,1,\"ẉ\"],[7817,2],[7818,1,\"ẋ\"],[7819,2],[7820,1,\"ẍ\"],[7821,2],[7822,1,\"ẏ\"],[7823,2],[7824,1,\"ẑ\"],[7825,2],[7826,1,\"ẓ\"],[7827,2],[7828,1,\"ẕ\"],[[7829,7833],2],[7834,1,\"aʾ\"],[7835,1,\"ṡ\"],[[7836,7837],2],[7838,1,\"ss\"],[7839,2],[7840,1,\"ạ\"],[7841,2],[7842,1,\"ả\"],[7843,2],[7844,1,\"ấ\"],[7845,2],[7846,1,\"ầ\"],[7847,2],[7848,1,\"ẩ\"],[7849,2],[7850,1,\"ẫ\"],[7851,2],[7852,1,\"ậ\"],[7853,2],[7854,1,\"ắ\"],[7855,2],[7856,1,\"ằ\"],[7857,2],[7858,1,\"ẳ\"],[7859,2],[7860,1,\"ẵ\"],[7861,2],[7862,1,\"ặ\"],[7863,2],[7864,1,\"ẹ\"],[7865,2],[7866,1,\"ẻ\"],[7867,2],[7868,1,\"ẽ\"],[7869,2],[7870,1,\"ế\"],[7871,2],[7872,1,\"ề\"],[7873,2],[7874,1,\"ể\"],[7875,2],[7876,1,\"ễ\"],[7877,2],[7878,1,\"ệ\"],[7879,2],[7880,1,\"ỉ\"],[7881,2],[7882,1,\"ị\"],[7883,2],[7884,1,\"ọ\"],[7885,2],[7886,1,\"ỏ\"],[7887,2],[7888,1,\"ố\"],[7889,2],[7890,1,\"ồ\"],[7891,2],[7892,1,\"ổ\"],[7893,2],[7894,1,\"ỗ\"],[7895,2],[7896,1,\"ộ\"],[7897,2],[7898,1,\"ớ\"],[7899,2],[7900,1,\"ờ\"],[7901,2],[7902,1,\"ở\"],[7903,2],[7904,1,\"ỡ\"],[7905,2],[7906,1,\"ợ\"],[7907,2],[7908,1,\"ụ\"],[7909,2],[7910,1,\"ủ\"],[7911,2],[7912,1,\"ứ\"],[7913,2],[7914,1,\"ừ\"],[7915,2],[7916,1,\"ử\"],[7917,2],[7918,1,\"ữ\"],[7919,2],[7920,1,\"ự\"],[7921,2],[7922,1,\"ỳ\"],[7923,2],[7924,1,\"ỵ\"],[7925,2],[7926,1,\"ỷ\"],[7927,2],[7928,1,\"ỹ\"],[7929,2],[7930,1,\"ỻ\"],[7931,2],[7932,1,\"ỽ\"],[7933,2],[7934,1,\"ỿ\"],[7935,2],[[7936,7943],2],[7944,1,\"ἀ\"],[7945,1,\"ἁ\"],[7946,1,\"ἂ\"],[7947,1,\"ἃ\"],[7948,1,\"ἄ\"],[7949,1,\"ἅ\"],[7950,1,\"ἆ\"],[7951,1,\"ἇ\"],[[7952,7957],2],[[7958,7959],3],[7960,1,\"ἐ\"],[7961,1,\"ἑ\"],[7962,1,\"ἒ\"],[7963,1,\"ἓ\"],[7964,1,\"ἔ\"],[7965,1,\"ἕ\"],[[7966,7967],3],[[7968,7975],2],[7976,1,\"ἠ\"],[7977,1,\"ἡ\"],[7978,1,\"ἢ\"],[7979,1,\"ἣ\"],[7980,1,\"ἤ\"],[7981,1,\"ἥ\"],[7982,1,\"ἦ\"],[7983,1,\"ἧ\"],[[7984,7991],2],[7992,1,\"ἰ\"],[7993,1,\"ἱ\"],[7994,1,\"ἲ\"],[7995,1,\"ἳ\"],[7996,1,\"ἴ\"],[7997,1,\"ἵ\"],[7998,1,\"ἶ\"],[7999,1,\"ἷ\"],[[8000,8005],2],[[8006,8007],3],[8008,1,\"ὀ\"],[8009,1,\"ὁ\"],[8010,1,\"ὂ\"],[8011,1,\"ὃ\"],[8012,1,\"ὄ\"],[8013,1,\"ὅ\"],[[8014,8015],3],[[8016,8023],2],[8024,3],[8025,1,\"ὑ\"],[8026,3],[8027,1,\"ὓ\"],[8028,3],[8029,1,\"ὕ\"],[8030,3],[8031,1,\"ὗ\"],[[8032,8039],2],[8040,1,\"ὠ\"],[8041,1,\"ὡ\"],[8042,1,\"ὢ\"],[8043,1,\"ὣ\"],[8044,1,\"ὤ\"],[8045,1,\"ὥ\"],[8046,1,\"ὦ\"],[8047,1,\"ὧ\"],[8048,2],[8049,1,\"ά\"],[8050,2],[8051,1,\"έ\"],[8052,2],[8053,1,\"ή\"],[8054,2],[8055,1,\"ί\"],[8056,2],[8057,1,\"ό\"],[8058,2],[8059,1,\"ύ\"],[8060,2],[8061,1,\"ώ\"],[[8062,8063],3],[8064,1,\"ἀι\"],[8065,1,\"ἁι\"],[8066,1,\"ἂι\"],[8067,1,\"ἃι\"],[8068,1,\"ἄι\"],[8069,1,\"ἅι\"],[8070,1,\"ἆι\"],[8071,1,\"ἇι\"],[8072,1,\"ἀι\"],[8073,1,\"ἁι\"],[8074,1,\"ἂι\"],[8075,1,\"ἃι\"],[8076,1,\"ἄι\"],[8077,1,\"ἅι\"],[8078,1,\"ἆι\"],[8079,1,\"ἇι\"],[8080,1,\"ἠι\"],[8081,1,\"ἡι\"],[8082,1,\"ἢι\"],[8083,1,\"ἣι\"],[8084,1,\"ἤι\"],[8085,1,\"ἥι\"],[8086,1,\"ἦι\"],[8087,1,\"ἧι\"],[8088,1,\"ἠι\"],[8089,1,\"ἡι\"],[8090,1,\"ἢι\"],[8091,1,\"ἣι\"],[8092,1,\"ἤι\"],[8093,1,\"ἥι\"],[8094,1,\"ἦι\"],[8095,1,\"ἧι\"],[8096,1,\"ὠι\"],[8097,1,\"ὡι\"],[8098,1,\"ὢι\"],[8099,1,\"ὣι\"],[8100,1,\"ὤι\"],[8101,1,\"ὥι\"],[8102,1,\"ὦι\"],[8103,1,\"ὧι\"],[8104,1,\"ὠι\"],[8105,1,\"ὡι\"],[8106,1,\"ὢι\"],[8107,1,\"ὣι\"],[8108,1,\"ὤι\"],[8109,1,\"ὥι\"],[8110,1,\"ὦι\"],[8111,1,\"ὧι\"],[[8112,8113],2],[8114,1,\"ὰι\"],[8115,1,\"αι\"],[8116,1,\"άι\"],[8117,3],[8118,2],[8119,1,\"ᾶι\"],[8120,1,\"ᾰ\"],[8121,1,\"ᾱ\"],[8122,1,\"ὰ\"],[8123,1,\"ά\"],[8124,1,\"αι\"],[8125,5,\" ̓\"],[8126,1,\"ι\"],[8127,5,\" ̓\"],[8128,5,\" ͂\"],[8129,5,\" ̈͂\"],[8130,1,\"ὴι\"],[8131,1,\"ηι\"],[8132,1,\"ήι\"],[8133,3],[8134,2],[8135,1,\"ῆι\"],[8136,1,\"ὲ\"],[8137,1,\"έ\"],[8138,1,\"ὴ\"],[8139,1,\"ή\"],[8140,1,\"ηι\"],[8141,5,\" ̓̀\"],[8142,5,\" ̓́\"],[8143,5,\" ̓͂\"],[[8144,8146],2],[8147,1,\"ΐ\"],[[8148,8149],3],[[8150,8151],2],[8152,1,\"ῐ\"],[8153,1,\"ῑ\"],[8154,1,\"ὶ\"],[8155,1,\"ί\"],[8156,3],[8157,5,\" ̔̀\"],[8158,5,\" ̔́\"],[8159,5,\" ̔͂\"],[[8160,8162],2],[8163,1,\"ΰ\"],[[8164,8167],2],[8168,1,\"ῠ\"],[8169,1,\"ῡ\"],[8170,1,\"ὺ\"],[8171,1,\"ύ\"],[8172,1,\"ῥ\"],[8173,5,\" ̈̀\"],[8174,5,\" ̈́\"],[8175,5,\"`\"],[[8176,8177],3],[8178,1,\"ὼι\"],[8179,1,\"ωι\"],[8180,1,\"ώι\"],[8181,3],[8182,2],[8183,1,\"ῶι\"],[8184,1,\"ὸ\"],[8185,1,\"ό\"],[8186,1,\"ὼ\"],[8187,1,\"ώ\"],[8188,1,\"ωι\"],[8189,5,\" ́\"],[8190,5,\" ̔\"],[8191,3],[[8192,8202],5,\" \"],[8203,7],[[8204,8205],6,\"\"],[[8206,8207],3],[8208,2],[8209,1,\"‐\"],[[8210,8214],2],[8215,5,\" ̳\"],[[8216,8227],2],[[8228,8230],3],[8231,2],[[8232,8238],3],[8239,5,\" \"],[[8240,8242],2],[8243,1,\"′′\"],[8244,1,\"′′′\"],[8245,2],[8246,1,\"‵‵\"],[8247,1,\"‵‵‵\"],[[8248,8251],2],[8252,5,\"!!\"],[8253,2],[8254,5,\" ̅\"],[[8255,8262],2],[8263,5,\"??\"],[8264,5,\"?!\"],[8265,5,\"!?\"],[[8266,8269],2],[[8270,8274],2],[[8275,8276],2],[[8277,8278],2],[8279,1,\"′′′′\"],[[8280,8286],2],[8287,5,\" \"],[8288,7],[[8289,8291],3],[8292,7],[8293,3],[[8294,8297],3],[[8298,8303],3],[8304,1,\"0\"],[8305,1,\"i\"],[[8306,8307],3],[8308,1,\"4\"],[8309,1,\"5\"],[8310,1,\"6\"],[8311,1,\"7\"],[8312,1,\"8\"],[8313,1,\"9\"],[8314,5,\"+\"],[8315,1,\"−\"],[8316,5,\"=\"],[8317,5,\"(\"],[8318,5,\")\"],[8319,1,\"n\"],[8320,1,\"0\"],[8321,1,\"1\"],[8322,1,\"2\"],[8323,1,\"3\"],[8324,1,\"4\"],[8325,1,\"5\"],[8326,1,\"6\"],[8327,1,\"7\"],[8328,1,\"8\"],[8329,1,\"9\"],[8330,5,\"+\"],[8331,1,\"−\"],[8332,5,\"=\"],[8333,5,\"(\"],[8334,5,\")\"],[8335,3],[8336,1,\"a\"],[8337,1,\"e\"],[8338,1,\"o\"],[8339,1,\"x\"],[8340,1,\"ə\"],[8341,1,\"h\"],[8342,1,\"k\"],[8343,1,\"l\"],[8344,1,\"m\"],[8345,1,\"n\"],[8346,1,\"p\"],[8347,1,\"s\"],[8348,1,\"t\"],[[8349,8351],3],[[8352,8359],2],[8360,1,\"rs\"],[[8361,8362],2],[8363,2],[8364,2],[[8365,8367],2],[[8368,8369],2],[[8370,8373],2],[[8374,8376],2],[8377,2],[8378,2],[[8379,8381],2],[8382,2],[8383,2],[8384,2],[[8385,8399],3],[[8400,8417],2],[[8418,8419],2],[[8420,8426],2],[8427,2],[[8428,8431],2],[8432,2],[[8433,8447],3],[8448,5,\"a/c\"],[8449,5,\"a/s\"],[8450,1,\"c\"],[8451,1,\"°c\"],[8452,2],[8453,5,\"c/o\"],[8454,5,\"c/u\"],[8455,1,\"ɛ\"],[8456,2],[8457,1,\"°f\"],[8458,1,\"g\"],[[8459,8462],1,\"h\"],[8463,1,\"ħ\"],[[8464,8465],1,\"i\"],[[8466,8467],1,\"l\"],[8468,2],[8469,1,\"n\"],[8470,1,\"no\"],[[8471,8472],2],[8473,1,\"p\"],[8474,1,\"q\"],[[8475,8477],1,\"r\"],[[8478,8479],2],[8480,1,\"sm\"],[8481,1,\"tel\"],[8482,1,\"tm\"],[8483,2],[8484,1,\"z\"],[8485,2],[8486,1,\"ω\"],[8487,2],[8488,1,\"z\"],[8489,2],[8490,1,\"k\"],[8491,1,\"å\"],[8492,1,\"b\"],[8493,1,\"c\"],[8494,2],[[8495,8496],1,\"e\"],[8497,1,\"f\"],[8498,3],[8499,1,\"m\"],[8500,1,\"o\"],[8501,1,\"א\"],[8502,1,\"ב\"],[8503,1,\"ג\"],[8504,1,\"ד\"],[8505,1,\"i\"],[8506,2],[8507,1,\"fax\"],[8508,1,\"π\"],[[8509,8510],1,\"γ\"],[8511,1,\"π\"],[8512,1,\"∑\"],[[8513,8516],2],[[8517,8518],1,\"d\"],[8519,1,\"e\"],[8520,1,\"i\"],[8521,1,\"j\"],[[8522,8523],2],[8524,2],[8525,2],[8526,2],[8527,2],[8528,1,\"1⁄7\"],[8529,1,\"1⁄9\"],[8530,1,\"1⁄10\"],[8531,1,\"1⁄3\"],[8532,1,\"2⁄3\"],[8533,1,\"1⁄5\"],[8534,1,\"2⁄5\"],[8535,1,\"3⁄5\"],[8536,1,\"4⁄5\"],[8537,1,\"1⁄6\"],[8538,1,\"5⁄6\"],[8539,1,\"1⁄8\"],[8540,1,\"3⁄8\"],[8541,1,\"5⁄8\"],[8542,1,\"7⁄8\"],[8543,1,\"1⁄\"],[8544,1,\"i\"],[8545,1,\"ii\"],[8546,1,\"iii\"],[8547,1,\"iv\"],[8548,1,\"v\"],[8549,1,\"vi\"],[8550,1,\"vii\"],[8551,1,\"viii\"],[8552,1,\"ix\"],[8553,1,\"x\"],[8554,1,\"xi\"],[8555,1,\"xii\"],[8556,1,\"l\"],[8557,1,\"c\"],[8558,1,\"d\"],[8559,1,\"m\"],[8560,1,\"i\"],[8561,1,\"ii\"],[8562,1,\"iii\"],[8563,1,\"iv\"],[8564,1,\"v\"],[8565,1,\"vi\"],[8566,1,\"vii\"],[8567,1,\"viii\"],[8568,1,\"ix\"],[8569,1,\"x\"],[8570,1,\"xi\"],[8571,1,\"xii\"],[8572,1,\"l\"],[8573,1,\"c\"],[8574,1,\"d\"],[8575,1,\"m\"],[[8576,8578],2],[8579,3],[8580,2],[[8581,8584],2],[8585,1,\"0⁄3\"],[[8586,8587],2],[[8588,8591],3],[[8592,8682],2],[[8683,8691],2],[[8692,8703],2],[[8704,8747],2],[8748,1,\"∫∫\"],[8749,1,\"∫∫∫\"],[8750,2],[8751,1,\"∮∮\"],[8752,1,\"∮∮∮\"],[[8753,8799],2],[8800,4],[[8801,8813],2],[[8814,8815],4],[[8816,8945],2],[[8946,8959],2],[8960,2],[8961,2],[[8962,9000],2],[9001,1,\"〈\"],[9002,1,\"〉\"],[[9003,9082],2],[9083,2],[9084,2],[[9085,9114],2],[[9115,9166],2],[[9167,9168],2],[[9169,9179],2],[[9180,9191],2],[9192,2],[[9193,9203],2],[[9204,9210],2],[[9211,9214],2],[9215,2],[[9216,9252],2],[[9253,9254],2],[[9255,9279],3],[[9280,9290],2],[[9291,9311],3],[9312,1,\"1\"],[9313,1,\"2\"],[9314,1,\"3\"],[9315,1,\"4\"],[9316,1,\"5\"],[9317,1,\"6\"],[9318,1,\"7\"],[9319,1,\"8\"],[9320,1,\"9\"],[9321,1,\"10\"],[9322,1,\"11\"],[9323,1,\"12\"],[9324,1,\"13\"],[9325,1,\"14\"],[9326,1,\"15\"],[9327,1,\"16\"],[9328,1,\"17\"],[9329,1,\"18\"],[9330,1,\"19\"],[9331,1,\"20\"],[9332,5,\"(1)\"],[9333,5,\"(2)\"],[9334,5,\"(3)\"],[9335,5,\"(4)\"],[9336,5,\"(5)\"],[9337,5,\"(6)\"],[9338,5,\"(7)\"],[9339,5,\"(8)\"],[9340,5,\"(9)\"],[9341,5,\"(10)\"],[9342,5,\"(11)\"],[9343,5,\"(12)\"],[9344,5,\"(13)\"],[9345,5,\"(14)\"],[9346,5,\"(15)\"],[9347,5,\"(16)\"],[9348,5,\"(17)\"],[9349,5,\"(18)\"],[9350,5,\"(19)\"],[9351,5,\"(20)\"],[[9352,9371],3],[9372,5,\"(a)\"],[9373,5,\"(b)\"],[9374,5,\"(c)\"],[9375,5,\"(d)\"],[9376,5,\"(e)\"],[9377,5,\"(f)\"],[9378,5,\"(g)\"],[9379,5,\"(h)\"],[9380,5,\"(i)\"],[9381,5,\"(j)\"],[9382,5,\"(k)\"],[9383,5,\"(l)\"],[9384,5,\"(m)\"],[9385,5,\"(n)\"],[9386,5,\"(o)\"],[9387,5,\"(p)\"],[9388,5,\"(q)\"],[9389,5,\"(r)\"],[9390,5,\"(s)\"],[9391,5,\"(t)\"],[9392,5,\"(u)\"],[9393,5,\"(v)\"],[9394,5,\"(w)\"],[9395,5,\"(x)\"],[9396,5,\"(y)\"],[9397,5,\"(z)\"],[9398,1,\"a\"],[9399,1,\"b\"],[9400,1,\"c\"],[9401,1,\"d\"],[9402,1,\"e\"],[9403,1,\"f\"],[9404,1,\"g\"],[9405,1,\"h\"],[9406,1,\"i\"],[9407,1,\"j\"],[9408,1,\"k\"],[9409,1,\"l\"],[9410,1,\"m\"],[9411,1,\"n\"],[9412,1,\"o\"],[9413,1,\"p\"],[9414,1,\"q\"],[9415,1,\"r\"],[9416,1,\"s\"],[9417,1,\"t\"],[9418,1,\"u\"],[9419,1,\"v\"],[9420,1,\"w\"],[9421,1,\"x\"],[9422,1,\"y\"],[9423,1,\"z\"],[9424,1,\"a\"],[9425,1,\"b\"],[9426,1,\"c\"],[9427,1,\"d\"],[9428,1,\"e\"],[9429,1,\"f\"],[9430,1,\"g\"],[9431,1,\"h\"],[9432,1,\"i\"],[9433,1,\"j\"],[9434,1,\"k\"],[9435,1,\"l\"],[9436,1,\"m\"],[9437,1,\"n\"],[9438,1,\"o\"],[9439,1,\"p\"],[9440,1,\"q\"],[9441,1,\"r\"],[9442,1,\"s\"],[9443,1,\"t\"],[9444,1,\"u\"],[9445,1,\"v\"],[9446,1,\"w\"],[9447,1,\"x\"],[9448,1,\"y\"],[9449,1,\"z\"],[9450,1,\"0\"],[[9451,9470],2],[9471,2],[[9472,9621],2],[[9622,9631],2],[[9632,9711],2],[[9712,9719],2],[[9720,9727],2],[[9728,9747],2],[[9748,9749],2],[[9750,9751],2],[9752,2],[9753,2],[[9754,9839],2],[[9840,9841],2],[[9842,9853],2],[[9854,9855],2],[[9856,9865],2],[[9866,9873],2],[[9874,9884],2],[9885,2],[[9886,9887],2],[[9888,9889],2],[[9890,9905],2],[9906,2],[[9907,9916],2],[[9917,9919],2],[[9920,9923],2],[[9924,9933],2],[9934,2],[[9935,9953],2],[9954,2],[9955,2],[[9956,9959],2],[[9960,9983],2],[9984,2],[[9985,9988],2],[9989,2],[[9990,9993],2],[[9994,9995],2],[[9996,10023],2],[10024,2],[[10025,10059],2],[10060,2],[10061,2],[10062,2],[[10063,10066],2],[[10067,10069],2],[10070,2],[10071,2],[[10072,10078],2],[[10079,10080],2],[[10081,10087],2],[[10088,10101],2],[[10102,10132],2],[[10133,10135],2],[[10136,10159],2],[10160,2],[[10161,10174],2],[10175,2],[[10176,10182],2],[[10183,10186],2],[10187,2],[10188,2],[10189,2],[[10190,10191],2],[[10192,10219],2],[[10220,10223],2],[[10224,10239],2],[[10240,10495],2],[[10496,10763],2],[10764,1,\"∫∫∫∫\"],[[10765,10867],2],[10868,5,\"::=\"],[10869,5,\"==\"],[10870,5,\"===\"],[[10871,10971],2],[10972,1,\"⫝̸\"],[[10973,11007],2],[[11008,11021],2],[[11022,11027],2],[[11028,11034],2],[[11035,11039],2],[[11040,11043],2],[[11044,11084],2],[[11085,11087],2],[[11088,11092],2],[[11093,11097],2],[[11098,11123],2],[[11124,11125],3],[[11126,11157],2],[11158,3],[11159,2],[[11160,11193],2],[[11194,11196],2],[[11197,11208],2],[11209,2],[[11210,11217],2],[11218,2],[[11219,11243],2],[[11244,11247],2],[[11248,11262],2],[11263,2],[11264,1,\"ⰰ\"],[11265,1,\"ⰱ\"],[11266,1,\"ⰲ\"],[11267,1,\"ⰳ\"],[11268,1,\"ⰴ\"],[11269,1,\"ⰵ\"],[11270,1,\"ⰶ\"],[11271,1,\"ⰷ\"],[11272,1,\"ⰸ\"],[11273,1,\"ⰹ\"],[11274,1,\"ⰺ\"],[11275,1,\"ⰻ\"],[11276,1,\"ⰼ\"],[11277,1,\"ⰽ\"],[11278,1,\"ⰾ\"],[11279,1,\"ⰿ\"],[11280,1,\"ⱀ\"],[11281,1,\"ⱁ\"],[11282,1,\"ⱂ\"],[11283,1,\"ⱃ\"],[11284,1,\"ⱄ\"],[11285,1,\"ⱅ\"],[11286,1,\"ⱆ\"],[11287,1,\"ⱇ\"],[11288,1,\"ⱈ\"],[11289,1,\"ⱉ\"],[11290,1,\"ⱊ\"],[11291,1,\"ⱋ\"],[11292,1,\"ⱌ\"],[11293,1,\"ⱍ\"],[11294,1,\"ⱎ\"],[11295,1,\"ⱏ\"],[11296,1,\"ⱐ\"],[11297,1,\"ⱑ\"],[11298,1,\"ⱒ\"],[11299,1,\"ⱓ\"],[11300,1,\"ⱔ\"],[11301,1,\"ⱕ\"],[11302,1,\"ⱖ\"],[11303,1,\"ⱗ\"],[11304,1,\"ⱘ\"],[11305,1,\"ⱙ\"],[11306,1,\"ⱚ\"],[11307,1,\"ⱛ\"],[11308,1,\"ⱜ\"],[11309,1,\"ⱝ\"],[11310,1,\"ⱞ\"],[11311,1,\"ⱟ\"],[[11312,11358],2],[11359,2],[11360,1,\"ⱡ\"],[11361,2],[11362,1,\"ɫ\"],[11363,1,\"ᵽ\"],[11364,1,\"ɽ\"],[[11365,11366],2],[11367,1,\"ⱨ\"],[11368,2],[11369,1,\"ⱪ\"],[11370,2],[11371,1,\"ⱬ\"],[11372,2],[11373,1,\"ɑ\"],[11374,1,\"ɱ\"],[11375,1,\"ɐ\"],[11376,1,\"ɒ\"],[11377,2],[11378,1,\"ⱳ\"],[11379,2],[11380,2],[11381,1,\"ⱶ\"],[[11382,11383],2],[[11384,11387],2],[11388,1,\"j\"],[11389,1,\"v\"],[11390,1,\"ȿ\"],[11391,1,\"ɀ\"],[11392,1,\"ⲁ\"],[11393,2],[11394,1,\"ⲃ\"],[11395,2],[11396,1,\"ⲅ\"],[11397,2],[11398,1,\"ⲇ\"],[11399,2],[11400,1,\"ⲉ\"],[11401,2],[11402,1,\"ⲋ\"],[11403,2],[11404,1,\"ⲍ\"],[11405,2],[11406,1,\"ⲏ\"],[11407,2],[11408,1,\"ⲑ\"],[11409,2],[11410,1,\"ⲓ\"],[11411,2],[11412,1,\"ⲕ\"],[11413,2],[11414,1,\"ⲗ\"],[11415,2],[11416,1,\"ⲙ\"],[11417,2],[11418,1,\"ⲛ\"],[11419,2],[11420,1,\"ⲝ\"],[11421,2],[11422,1,\"ⲟ\"],[11423,2],[11424,1,\"ⲡ\"],[11425,2],[11426,1,\"ⲣ\"],[11427,2],[11428,1,\"ⲥ\"],[11429,2],[11430,1,\"ⲧ\"],[11431,2],[11432,1,\"ⲩ\"],[11433,2],[11434,1,\"ⲫ\"],[11435,2],[11436,1,\"ⲭ\"],[11437,2],[11438,1,\"ⲯ\"],[11439,2],[11440,1,\"ⲱ\"],[11441,2],[11442,1,\"ⲳ\"],[11443,2],[11444,1,\"ⲵ\"],[11445,2],[11446,1,\"ⲷ\"],[11447,2],[11448,1,\"ⲹ\"],[11449,2],[11450,1,\"ⲻ\"],[11451,2],[11452,1,\"ⲽ\"],[11453,2],[11454,1,\"ⲿ\"],[11455,2],[11456,1,\"ⳁ\"],[11457,2],[11458,1,\"ⳃ\"],[11459,2],[11460,1,\"ⳅ\"],[11461,2],[11462,1,\"ⳇ\"],[11463,2],[11464,1,\"ⳉ\"],[11465,2],[11466,1,\"ⳋ\"],[11467,2],[11468,1,\"ⳍ\"],[11469,2],[11470,1,\"ⳏ\"],[11471,2],[11472,1,\"ⳑ\"],[11473,2],[11474,1,\"ⳓ\"],[11475,2],[11476,1,\"ⳕ\"],[11477,2],[11478,1,\"ⳗ\"],[11479,2],[11480,1,\"ⳙ\"],[11481,2],[11482,1,\"ⳛ\"],[11483,2],[11484,1,\"ⳝ\"],[11485,2],[11486,1,\"ⳟ\"],[11487,2],[11488,1,\"ⳡ\"],[11489,2],[11490,1,\"ⳣ\"],[[11491,11492],2],[[11493,11498],2],[11499,1,\"ⳬ\"],[11500,2],[11501,1,\"ⳮ\"],[[11502,11505],2],[11506,1,\"ⳳ\"],[11507,2],[[11508,11512],3],[[11513,11519],2],[[11520,11557],2],[11558,3],[11559,2],[[11560,11564],3],[11565,2],[[11566,11567],3],[[11568,11621],2],[[11622,11623],2],[[11624,11630],3],[11631,1,\"ⵡ\"],[11632,2],[[11633,11646],3],[11647,2],[[11648,11670],2],[[11671,11679],3],[[11680,11686],2],[11687,3],[[11688,11694],2],[11695,3],[[11696,11702],2],[11703,3],[[11704,11710],2],[11711,3],[[11712,11718],2],[11719,3],[[11720,11726],2],[11727,3],[[11728,11734],2],[11735,3],[[11736,11742],2],[11743,3],[[11744,11775],2],[[11776,11799],2],[[11800,11803],2],[[11804,11805],2],[[11806,11822],2],[11823,2],[11824,2],[11825,2],[[11826,11835],2],[[11836,11842],2],[[11843,11844],2],[[11845,11849],2],[[11850,11854],2],[11855,2],[[11856,11858],2],[[11859,11869],2],[[11870,11903],3],[[11904,11929],2],[11930,3],[[11931,11934],2],[11935,1,\"母\"],[[11936,12018],2],[12019,1,\"龟\"],[[12020,12031],3],[12032,1,\"一\"],[12033,1,\"丨\"],[12034,1,\"丶\"],[12035,1,\"丿\"],[12036,1,\"乙\"],[12037,1,\"亅\"],[12038,1,\"二\"],[12039,1,\"亠\"],[12040,1,\"人\"],[12041,1,\"儿\"],[12042,1,\"入\"],[12043,1,\"八\"],[12044,1,\"冂\"],[12045,1,\"冖\"],[12046,1,\"冫\"],[12047,1,\"几\"],[12048,1,\"凵\"],[12049,1,\"刀\"],[12050,1,\"力\"],[12051,1,\"勹\"],[12052,1,\"匕\"],[12053,1,\"匚\"],[12054,1,\"匸\"],[12055,1,\"十\"],[12056,1,\"卜\"],[12057,1,\"卩\"],[12058,1,\"厂\"],[12059,1,\"厶\"],[12060,1,\"又\"],[12061,1,\"口\"],[12062,1,\"囗\"],[12063,1,\"土\"],[12064,1,\"士\"],[12065,1,\"夂\"],[12066,1,\"夊\"],[12067,1,\"夕\"],[12068,1,\"大\"],[12069,1,\"女\"],[12070,1,\"子\"],[12071,1,\"宀\"],[12072,1,\"寸\"],[12073,1,\"小\"],[12074,1,\"尢\"],[12075,1,\"尸\"],[12076,1,\"屮\"],[12077,1,\"山\"],[12078,1,\"巛\"],[12079,1,\"工\"],[12080,1,\"己\"],[12081,1,\"巾\"],[12082,1,\"干\"],[12083,1,\"幺\"],[12084,1,\"广\"],[12085,1,\"廴\"],[12086,1,\"廾\"],[12087,1,\"弋\"],[12088,1,\"弓\"],[12089,1,\"彐\"],[12090,1,\"彡\"],[12091,1,\"彳\"],[12092,1,\"心\"],[12093,1,\"戈\"],[12094,1,\"戶\"],[12095,1,\"手\"],[12096,1,\"支\"],[12097,1,\"攴\"],[12098,1,\"文\"],[12099,1,\"斗\"],[12100,1,\"斤\"],[12101,1,\"方\"],[12102,1,\"无\"],[12103,1,\"日\"],[12104,1,\"曰\"],[12105,1,\"月\"],[12106,1,\"木\"],[12107,1,\"欠\"],[12108,1,\"止\"],[12109,1,\"歹\"],[12110,1,\"殳\"],[12111,1,\"毋\"],[12112,1,\"比\"],[12113,1,\"毛\"],[12114,1,\"氏\"],[12115,1,\"气\"],[12116,1,\"水\"],[12117,1,\"火\"],[12118,1,\"爪\"],[12119,1,\"父\"],[12120,1,\"爻\"],[12121,1,\"爿\"],[12122,1,\"片\"],[12123,1,\"牙\"],[12124,1,\"牛\"],[12125,1,\"犬\"],[12126,1,\"玄\"],[12127,1,\"玉\"],[12128,1,\"瓜\"],[12129,1,\"瓦\"],[12130,1,\"甘\"],[12131,1,\"生\"],[12132,1,\"用\"],[12133,1,\"田\"],[12134,1,\"疋\"],[12135,1,\"疒\"],[12136,1,\"癶\"],[12137,1,\"白\"],[12138,1,\"皮\"],[12139,1,\"皿\"],[12140,1,\"目\"],[12141,1,\"矛\"],[12142,1,\"矢\"],[12143,1,\"石\"],[12144,1,\"示\"],[12145,1,\"禸\"],[12146,1,\"禾\"],[12147,1,\"穴\"],[12148,1,\"立\"],[12149,1,\"竹\"],[12150,1,\"米\"],[12151,1,\"糸\"],[12152,1,\"缶\"],[12153,1,\"网\"],[12154,1,\"羊\"],[12155,1,\"羽\"],[12156,1,\"老\"],[12157,1,\"而\"],[12158,1,\"耒\"],[12159,1,\"耳\"],[12160,1,\"聿\"],[12161,1,\"肉\"],[12162,1,\"臣\"],[12163,1,\"自\"],[12164,1,\"至\"],[12165,1,\"臼\"],[12166,1,\"舌\"],[12167,1,\"舛\"],[12168,1,\"舟\"],[12169,1,\"艮\"],[12170,1,\"色\"],[12171,1,\"艸\"],[12172,1,\"虍\"],[12173,1,\"虫\"],[12174,1,\"血\"],[12175,1,\"行\"],[12176,1,\"衣\"],[12177,1,\"襾\"],[12178,1,\"見\"],[12179,1,\"角\"],[12180,1,\"言\"],[12181,1,\"谷\"],[12182,1,\"豆\"],[12183,1,\"豕\"],[12184,1,\"豸\"],[12185,1,\"貝\"],[12186,1,\"赤\"],[12187,1,\"走\"],[12188,1,\"足\"],[12189,1,\"身\"],[12190,1,\"車\"],[12191,1,\"辛\"],[12192,1,\"辰\"],[12193,1,\"辵\"],[12194,1,\"邑\"],[12195,1,\"酉\"],[12196,1,\"釆\"],[12197,1,\"里\"],[12198,1,\"金\"],[12199,1,\"長\"],[12200,1,\"門\"],[12201,1,\"阜\"],[12202,1,\"隶\"],[12203,1,\"隹\"],[12204,1,\"雨\"],[12205,1,\"靑\"],[12206,1,\"非\"],[12207,1,\"面\"],[12208,1,\"革\"],[12209,1,\"韋\"],[12210,1,\"韭\"],[12211,1,\"音\"],[12212,1,\"頁\"],[12213,1,\"風\"],[12214,1,\"飛\"],[12215,1,\"食\"],[12216,1,\"首\"],[12217,1,\"香\"],[12218,1,\"馬\"],[12219,1,\"骨\"],[12220,1,\"高\"],[12221,1,\"髟\"],[12222,1,\"鬥\"],[12223,1,\"鬯\"],[12224,1,\"鬲\"],[12225,1,\"鬼\"],[12226,1,\"魚\"],[12227,1,\"鳥\"],[12228,1,\"鹵\"],[12229,1,\"鹿\"],[12230,1,\"麥\"],[12231,1,\"麻\"],[12232,1,\"黃\"],[12233,1,\"黍\"],[12234,1,\"黑\"],[12235,1,\"黹\"],[12236,1,\"黽\"],[12237,1,\"鼎\"],[12238,1,\"鼓\"],[12239,1,\"鼠\"],[12240,1,\"鼻\"],[12241,1,\"齊\"],[12242,1,\"齒\"],[12243,1,\"龍\"],[12244,1,\"龜\"],[12245,1,\"龠\"],[[12246,12271],3],[[12272,12283],3],[[12284,12287],3],[12288,5,\" \"],[12289,2],[12290,1,\".\"],[[12291,12292],2],[[12293,12295],2],[[12296,12329],2],[[12330,12333],2],[[12334,12341],2],[12342,1,\"〒\"],[12343,2],[12344,1,\"十\"],[12345,1,\"卄\"],[12346,1,\"卅\"],[12347,2],[12348,2],[12349,2],[12350,2],[12351,2],[12352,3],[[12353,12436],2],[[12437,12438],2],[[12439,12440],3],[[12441,12442],2],[12443,5,\" ゙\"],[12444,5,\" ゚\"],[[12445,12446],2],[12447,1,\"より\"],[12448,2],[[12449,12542],2],[12543,1,\"コト\"],[[12544,12548],3],[[12549,12588],2],[12589,2],[12590,2],[12591,2],[12592,3],[12593,1,\"ᄀ\"],[12594,1,\"ᄁ\"],[12595,1,\"ᆪ\"],[12596,1,\"ᄂ\"],[12597,1,\"ᆬ\"],[12598,1,\"ᆭ\"],[12599,1,\"ᄃ\"],[12600,1,\"ᄄ\"],[12601,1,\"ᄅ\"],[12602,1,\"ᆰ\"],[12603,1,\"ᆱ\"],[12604,1,\"ᆲ\"],[12605,1,\"ᆳ\"],[12606,1,\"ᆴ\"],[12607,1,\"ᆵ\"],[12608,1,\"ᄚ\"],[12609,1,\"ᄆ\"],[12610,1,\"ᄇ\"],[12611,1,\"ᄈ\"],[12612,1,\"ᄡ\"],[12613,1,\"ᄉ\"],[12614,1,\"ᄊ\"],[12615,1,\"ᄋ\"],[12616,1,\"ᄌ\"],[12617,1,\"ᄍ\"],[12618,1,\"ᄎ\"],[12619,1,\"ᄏ\"],[12620,1,\"ᄐ\"],[12621,1,\"ᄑ\"],[12622,1,\"ᄒ\"],[12623,1,\"ᅡ\"],[12624,1,\"ᅢ\"],[12625,1,\"ᅣ\"],[12626,1,\"ᅤ\"],[12627,1,\"ᅥ\"],[12628,1,\"ᅦ\"],[12629,1,\"ᅧ\"],[12630,1,\"ᅨ\"],[12631,1,\"ᅩ\"],[12632,1,\"ᅪ\"],[12633,1,\"ᅫ\"],[12634,1,\"ᅬ\"],[12635,1,\"ᅭ\"],[12636,1,\"ᅮ\"],[12637,1,\"ᅯ\"],[12638,1,\"ᅰ\"],[12639,1,\"ᅱ\"],[12640,1,\"ᅲ\"],[12641,1,\"ᅳ\"],[12642,1,\"ᅴ\"],[12643,1,\"ᅵ\"],[12644,3],[12645,1,\"ᄔ\"],[12646,1,\"ᄕ\"],[12647,1,\"ᇇ\"],[12648,1,\"ᇈ\"],[12649,1,\"ᇌ\"],[12650,1,\"ᇎ\"],[12651,1,\"ᇓ\"],[12652,1,\"ᇗ\"],[12653,1,\"ᇙ\"],[12654,1,\"ᄜ\"],[12655,1,\"ᇝ\"],[12656,1,\"ᇟ\"],[12657,1,\"ᄝ\"],[12658,1,\"ᄞ\"],[12659,1,\"ᄠ\"],[12660,1,\"ᄢ\"],[12661,1,\"ᄣ\"],[12662,1,\"ᄧ\"],[12663,1,\"ᄩ\"],[12664,1,\"ᄫ\"],[12665,1,\"ᄬ\"],[12666,1,\"ᄭ\"],[12667,1,\"ᄮ\"],[12668,1,\"ᄯ\"],[12669,1,\"ᄲ\"],[12670,1,\"ᄶ\"],[12671,1,\"ᅀ\"],[12672,1,\"ᅇ\"],[12673,1,\"ᅌ\"],[12674,1,\"ᇱ\"],[12675,1,\"ᇲ\"],[12676,1,\"ᅗ\"],[12677,1,\"ᅘ\"],[12678,1,\"ᅙ\"],[12679,1,\"ᆄ\"],[12680,1,\"ᆅ\"],[12681,1,\"ᆈ\"],[12682,1,\"ᆑ\"],[12683,1,\"ᆒ\"],[12684,1,\"ᆔ\"],[12685,1,\"ᆞ\"],[12686,1,\"ᆡ\"],[12687,3],[[12688,12689],2],[12690,1,\"一\"],[12691,1,\"二\"],[12692,1,\"三\"],[12693,1,\"四\"],[12694,1,\"上\"],[12695,1,\"中\"],[12696,1,\"下\"],[12697,1,\"甲\"],[12698,1,\"乙\"],[12699,1,\"丙\"],[12700,1,\"丁\"],[12701,1,\"天\"],[12702,1,\"地\"],[12703,1,\"人\"],[[12704,12727],2],[[12728,12730],2],[[12731,12735],2],[[12736,12751],2],[[12752,12771],2],[[12772,12783],3],[[12784,12799],2],[12800,5,\"(ᄀ)\"],[12801,5,\"(ᄂ)\"],[12802,5,\"(ᄃ)\"],[12803,5,\"(ᄅ)\"],[12804,5,\"(ᄆ)\"],[12805,5,\"(ᄇ)\"],[12806,5,\"(ᄉ)\"],[12807,5,\"(ᄋ)\"],[12808,5,\"(ᄌ)\"],[12809,5,\"(ᄎ)\"],[12810,5,\"(ᄏ)\"],[12811,5,\"(ᄐ)\"],[12812,5,\"(ᄑ)\"],[12813,5,\"(ᄒ)\"],[12814,5,\"(가)\"],[12815,5,\"(나)\"],[12816,5,\"(다)\"],[12817,5,\"(라)\"],[12818,5,\"(마)\"],[12819,5,\"(바)\"],[12820,5,\"(사)\"],[12821,5,\"(아)\"],[12822,5,\"(자)\"],[12823,5,\"(차)\"],[12824,5,\"(카)\"],[12825,5,\"(타)\"],[12826,5,\"(파)\"],[12827,5,\"(하)\"],[12828,5,\"(주)\"],[12829,5,\"(오전)\"],[12830,5,\"(오후)\"],[12831,3],[12832,5,\"(一)\"],[12833,5,\"(二)\"],[12834,5,\"(三)\"],[12835,5,\"(四)\"],[12836,5,\"(五)\"],[12837,5,\"(六)\"],[12838,5,\"(七)\"],[12839,5,\"(八)\"],[12840,5,\"(九)\"],[12841,5,\"(十)\"],[12842,5,\"(月)\"],[12843,5,\"(火)\"],[12844,5,\"(水)\"],[12845,5,\"(木)\"],[12846,5,\"(金)\"],[12847,5,\"(土)\"],[12848,5,\"(日)\"],[12849,5,\"(株)\"],[12850,5,\"(有)\"],[12851,5,\"(社)\"],[12852,5,\"(名)\"],[12853,5,\"(特)\"],[12854,5,\"(財)\"],[12855,5,\"(祝)\"],[12856,5,\"(労)\"],[12857,5,\"(代)\"],[12858,5,\"(呼)\"],[12859,5,\"(学)\"],[12860,5,\"(監)\"],[12861,5,\"(企)\"],[12862,5,\"(資)\"],[12863,5,\"(協)\"],[12864,5,\"(祭)\"],[12865,5,\"(休)\"],[12866,5,\"(自)\"],[12867,5,\"(至)\"],[12868,1,\"問\"],[12869,1,\"幼\"],[12870,1,\"文\"],[12871,1,\"箏\"],[[12872,12879],2],[12880,1,\"pte\"],[12881,1,\"21\"],[12882,1,\"22\"],[12883,1,\"23\"],[12884,1,\"24\"],[12885,1,\"25\"],[12886,1,\"26\"],[12887,1,\"27\"],[12888,1,\"28\"],[12889,1,\"29\"],[12890,1,\"30\"],[12891,1,\"31\"],[12892,1,\"32\"],[12893,1,\"33\"],[12894,1,\"34\"],[12895,1,\"35\"],[12896,1,\"ᄀ\"],[12897,1,\"ᄂ\"],[12898,1,\"ᄃ\"],[12899,1,\"ᄅ\"],[12900,1,\"ᄆ\"],[12901,1,\"ᄇ\"],[12902,1,\"ᄉ\"],[12903,1,\"ᄋ\"],[12904,1,\"ᄌ\"],[12905,1,\"ᄎ\"],[12906,1,\"ᄏ\"],[12907,1,\"ᄐ\"],[12908,1,\"ᄑ\"],[12909,1,\"ᄒ\"],[12910,1,\"가\"],[12911,1,\"나\"],[12912,1,\"다\"],[12913,1,\"라\"],[12914,1,\"마\"],[12915,1,\"바\"],[12916,1,\"사\"],[12917,1,\"아\"],[12918,1,\"자\"],[12919,1,\"차\"],[12920,1,\"카\"],[12921,1,\"타\"],[12922,1,\"파\"],[12923,1,\"하\"],[12924,1,\"참고\"],[12925,1,\"주의\"],[12926,1,\"우\"],[12927,2],[12928,1,\"一\"],[12929,1,\"二\"],[12930,1,\"三\"],[12931,1,\"四\"],[12932,1,\"五\"],[12933,1,\"六\"],[12934,1,\"七\"],[12935,1,\"八\"],[12936,1,\"九\"],[12937,1,\"十\"],[12938,1,\"月\"],[12939,1,\"火\"],[12940,1,\"水\"],[12941,1,\"木\"],[12942,1,\"金\"],[12943,1,\"土\"],[12944,1,\"日\"],[12945,1,\"株\"],[12946,1,\"有\"],[12947,1,\"社\"],[12948,1,\"名\"],[12949,1,\"特\"],[12950,1,\"財\"],[12951,1,\"祝\"],[12952,1,\"労\"],[12953,1,\"秘\"],[12954,1,\"男\"],[12955,1,\"女\"],[12956,1,\"適\"],[12957,1,\"優\"],[12958,1,\"印\"],[12959,1,\"注\"],[12960,1,\"項\"],[12961,1,\"休\"],[12962,1,\"写\"],[12963,1,\"正\"],[12964,1,\"上\"],[12965,1,\"中\"],[12966,1,\"下\"],[12967,1,\"左\"],[12968,1,\"右\"],[12969,1,\"医\"],[12970,1,\"宗\"],[12971,1,\"学\"],[12972,1,\"監\"],[12973,1,\"企\"],[12974,1,\"資\"],[12975,1,\"協\"],[12976,1,\"夜\"],[12977,1,\"36\"],[12978,1,\"37\"],[12979,1,\"38\"],[12980,1,\"39\"],[12981,1,\"40\"],[12982,1,\"41\"],[12983,1,\"42\"],[12984,1,\"43\"],[12985,1,\"44\"],[12986,1,\"45\"],[12987,1,\"46\"],[12988,1,\"47\"],[12989,1,\"48\"],[12990,1,\"49\"],[12991,1,\"50\"],[12992,1,\"1月\"],[12993,1,\"2月\"],[12994,1,\"3月\"],[12995,1,\"4月\"],[12996,1,\"5月\"],[12997,1,\"6月\"],[12998,1,\"7月\"],[12999,1,\"8月\"],[13000,1,\"9月\"],[13001,1,\"10月\"],[13002,1,\"11月\"],[13003,1,\"12月\"],[13004,1,\"hg\"],[13005,1,\"erg\"],[13006,1,\"ev\"],[13007,1,\"ltd\"],[13008,1,\"ア\"],[13009,1,\"イ\"],[13010,1,\"ウ\"],[13011,1,\"エ\"],[13012,1,\"オ\"],[13013,1,\"カ\"],[13014,1,\"キ\"],[13015,1,\"ク\"],[13016,1,\"ケ\"],[13017,1,\"コ\"],[13018,1,\"サ\"],[13019,1,\"シ\"],[13020,1,\"ス\"],[13021,1,\"セ\"],[13022,1,\"ソ\"],[13023,1,\"タ\"],[13024,1,\"チ\"],[13025,1,\"ツ\"],[13026,1,\"テ\"],[13027,1,\"ト\"],[13028,1,\"ナ\"],[13029,1,\"ニ\"],[13030,1,\"ヌ\"],[13031,1,\"ネ\"],[13032,1,\"ノ\"],[13033,1,\"ハ\"],[13034,1,\"ヒ\"],[13035,1,\"フ\"],[13036,1,\"ヘ\"],[13037,1,\"ホ\"],[13038,1,\"マ\"],[13039,1,\"ミ\"],[13040,1,\"ム\"],[13041,1,\"メ\"],[13042,1,\"モ\"],[13043,1,\"ヤ\"],[13044,1,\"ユ\"],[13045,1,\"ヨ\"],[13046,1,\"ラ\"],[13047,1,\"リ\"],[13048,1,\"ル\"],[13049,1,\"レ\"],[13050,1,\"ロ\"],[13051,1,\"ワ\"],[13052,1,\"ヰ\"],[13053,1,\"ヱ\"],[13054,1,\"ヲ\"],[13055,1,\"令和\"],[13056,1,\"アパート\"],[13057,1,\"アルファ\"],[13058,1,\"アンペア\"],[13059,1,\"アール\"],[13060,1,\"イニング\"],[13061,1,\"インチ\"],[13062,1,\"ウォン\"],[13063,1,\"エスクード\"],[13064,1,\"エーカー\"],[13065,1,\"オンス\"],[13066,1,\"オーム\"],[13067,1,\"カイリ\"],[13068,1,\"カラット\"],[13069,1,\"カロリー\"],[13070,1,\"ガロン\"],[13071,1,\"ガンマ\"],[13072,1,\"ギガ\"],[13073,1,\"ギニー\"],[13074,1,\"キュリー\"],[13075,1,\"ギルダー\"],[13076,1,\"キロ\"],[13077,1,\"キログラム\"],[13078,1,\"キロメートル\"],[13079,1,\"キロワット\"],[13080,1,\"グラム\"],[13081,1,\"グラムトン\"],[13082,1,\"クルゼイロ\"],[13083,1,\"クローネ\"],[13084,1,\"ケース\"],[13085,1,\"コルナ\"],[13086,1,\"コーポ\"],[13087,1,\"サイクル\"],[13088,1,\"サンチーム\"],[13089,1,\"シリング\"],[13090,1,\"センチ\"],[13091,1,\"セント\"],[13092,1,\"ダース\"],[13093,1,\"デシ\"],[13094,1,\"ドル\"],[13095,1,\"トン\"],[13096,1,\"ナノ\"],[13097,1,\"ノット\"],[13098,1,\"ハイツ\"],[13099,1,\"パーセント\"],[13100,1,\"パーツ\"],[13101,1,\"バーレル\"],[13102,1,\"ピアストル\"],[13103,1,\"ピクル\"],[13104,1,\"ピコ\"],[13105,1,\"ビル\"],[13106,1,\"ファラッド\"],[13107,1,\"フィート\"],[13108,1,\"ブッシェル\"],[13109,1,\"フラン\"],[13110,1,\"ヘクタール\"],[13111,1,\"ペソ\"],[13112,1,\"ペニヒ\"],[13113,1,\"ヘルツ\"],[13114,1,\"ペンス\"],[13115,1,\"ページ\"],[13116,1,\"ベータ\"],[13117,1,\"ポイント\"],[13118,1,\"ボルト\"],[13119,1,\"ホン\"],[13120,1,\"ポンド\"],[13121,1,\"ホール\"],[13122,1,\"ホーン\"],[13123,1,\"マイクロ\"],[13124,1,\"マイル\"],[13125,1,\"マッハ\"],[13126,1,\"マルク\"],[13127,1,\"マンション\"],[13128,1,\"ミクロン\"],[13129,1,\"ミリ\"],[13130,1,\"ミリバール\"],[13131,1,\"メガ\"],[13132,1,\"メガトン\"],[13133,1,\"メートル\"],[13134,1,\"ヤード\"],[13135,1,\"ヤール\"],[13136,1,\"ユアン\"],[13137,1,\"リットル\"],[13138,1,\"リラ\"],[13139,1,\"ルピー\"],[13140,1,\"ルーブル\"],[13141,1,\"レム\"],[13142,1,\"レントゲン\"],[13143,1,\"ワット\"],[13144,1,\"0点\"],[13145,1,\"1点\"],[13146,1,\"2点\"],[13147,1,\"3点\"],[13148,1,\"4点\"],[13149,1,\"5点\"],[13150,1,\"6点\"],[13151,1,\"7点\"],[13152,1,\"8点\"],[13153,1,\"9点\"],[13154,1,\"10点\"],[13155,1,\"11点\"],[13156,1,\"12点\"],[13157,1,\"13点\"],[13158,1,\"14点\"],[13159,1,\"15点\"],[13160,1,\"16点\"],[13161,1,\"17点\"],[13162,1,\"18点\"],[13163,1,\"19点\"],[13164,1,\"20点\"],[13165,1,\"21点\"],[13166,1,\"22点\"],[13167,1,\"23点\"],[13168,1,\"24点\"],[13169,1,\"hpa\"],[13170,1,\"da\"],[13171,1,\"au\"],[13172,1,\"bar\"],[13173,1,\"ov\"],[13174,1,\"pc\"],[13175,1,\"dm\"],[13176,1,\"dm2\"],[13177,1,\"dm3\"],[13178,1,\"iu\"],[13179,1,\"平成\"],[13180,1,\"昭和\"],[13181,1,\"大正\"],[13182,1,\"明治\"],[13183,1,\"株式会社\"],[13184,1,\"pa\"],[13185,1,\"na\"],[13186,1,\"μa\"],[13187,1,\"ma\"],[13188,1,\"ka\"],[13189,1,\"kb\"],[13190,1,\"mb\"],[13191,1,\"gb\"],[13192,1,\"cal\"],[13193,1,\"kcal\"],[13194,1,\"pf\"],[13195,1,\"nf\"],[13196,1,\"μf\"],[13197,1,\"μg\"],[13198,1,\"mg\"],[13199,1,\"kg\"],[13200,1,\"hz\"],[13201,1,\"khz\"],[13202,1,\"mhz\"],[13203,1,\"ghz\"],[13204,1,\"thz\"],[13205,1,\"μl\"],[13206,1,\"ml\"],[13207,1,\"dl\"],[13208,1,\"kl\"],[13209,1,\"fm\"],[13210,1,\"nm\"],[13211,1,\"μm\"],[13212,1,\"mm\"],[13213,1,\"cm\"],[13214,1,\"km\"],[13215,1,\"mm2\"],[13216,1,\"cm2\"],[13217,1,\"m2\"],[13218,1,\"km2\"],[13219,1,\"mm3\"],[13220,1,\"cm3\"],[13221,1,\"m3\"],[13222,1,\"km3\"],[13223,1,\"m∕s\"],[13224,1,\"m∕s2\"],[13225,1,\"pa\"],[13226,1,\"kpa\"],[13227,1,\"mpa\"],[13228,1,\"gpa\"],[13229,1,\"rad\"],[13230,1,\"rad∕s\"],[13231,1,\"rad∕s2\"],[13232,1,\"ps\"],[13233,1,\"ns\"],[13234,1,\"μs\"],[13235,1,\"ms\"],[13236,1,\"pv\"],[13237,1,\"nv\"],[13238,1,\"μv\"],[13239,1,\"mv\"],[13240,1,\"kv\"],[13241,1,\"mv\"],[13242,1,\"pw\"],[13243,1,\"nw\"],[13244,1,\"μw\"],[13245,1,\"mw\"],[13246,1,\"kw\"],[13247,1,\"mw\"],[13248,1,\"kω\"],[13249,1,\"mω\"],[13250,3],[13251,1,\"bq\"],[13252,1,\"cc\"],[13253,1,\"cd\"],[13254,1,\"c∕kg\"],[13255,3],[13256,1,\"db\"],[13257,1,\"gy\"],[13258,1,\"ha\"],[13259,1,\"hp\"],[13260,1,\"in\"],[13261,1,\"kk\"],[13262,1,\"km\"],[13263,1,\"kt\"],[13264,1,\"lm\"],[13265,1,\"ln\"],[13266,1,\"log\"],[13267,1,\"lx\"],[13268,1,\"mb\"],[13269,1,\"mil\"],[13270,1,\"mol\"],[13271,1,\"ph\"],[13272,3],[13273,1,\"ppm\"],[13274,1,\"pr\"],[13275,1,\"sr\"],[13276,1,\"sv\"],[13277,1,\"wb\"],[13278,1,\"v∕m\"],[13279,1,\"a∕m\"],[13280,1,\"1日\"],[13281,1,\"2日\"],[13282,1,\"3日\"],[13283,1,\"4日\"],[13284,1,\"5日\"],[13285,1,\"6日\"],[13286,1,\"7日\"],[13287,1,\"8日\"],[13288,1,\"9日\"],[13289,1,\"10日\"],[13290,1,\"11日\"],[13291,1,\"12日\"],[13292,1,\"13日\"],[13293,1,\"14日\"],[13294,1,\"15日\"],[13295,1,\"16日\"],[13296,1,\"17日\"],[13297,1,\"18日\"],[13298,1,\"19日\"],[13299,1,\"20日\"],[13300,1,\"21日\"],[13301,1,\"22日\"],[13302,1,\"23日\"],[13303,1,\"24日\"],[13304,1,\"25日\"],[13305,1,\"26日\"],[13306,1,\"27日\"],[13307,1,\"28日\"],[13308,1,\"29日\"],[13309,1,\"30日\"],[13310,1,\"31日\"],[13311,1,\"gal\"],[[13312,19893],2],[[19894,19903],2],[[19904,19967],2],[[19968,40869],2],[[40870,40891],2],[[40892,40899],2],[[40900,40907],2],[40908,2],[[40909,40917],2],[[40918,40938],2],[[40939,40943],2],[[40944,40956],2],[[40957,40959],2],[[40960,42124],2],[[42125,42127],3],[[42128,42145],2],[[42146,42147],2],[[42148,42163],2],[42164,2],[[42165,42176],2],[42177,2],[[42178,42180],2],[42181,2],[42182,2],[[42183,42191],3],[[42192,42237],2],[[42238,42239],2],[[42240,42508],2],[[42509,42511],2],[[42512,42539],2],[[42540,42559],3],[42560,1,\"ꙁ\"],[42561,2],[42562,1,\"ꙃ\"],[42563,2],[42564,1,\"ꙅ\"],[42565,2],[42566,1,\"ꙇ\"],[42567,2],[42568,1,\"ꙉ\"],[42569,2],[42570,1,\"ꙋ\"],[42571,2],[42572,1,\"ꙍ\"],[42573,2],[42574,1,\"ꙏ\"],[42575,2],[42576,1,\"ꙑ\"],[42577,2],[42578,1,\"ꙓ\"],[42579,2],[42580,1,\"ꙕ\"],[42581,2],[42582,1,\"ꙗ\"],[42583,2],[42584,1,\"ꙙ\"],[42585,2],[42586,1,\"ꙛ\"],[42587,2],[42588,1,\"ꙝ\"],[42589,2],[42590,1,\"ꙟ\"],[42591,2],[42592,1,\"ꙡ\"],[42593,2],[42594,1,\"ꙣ\"],[42595,2],[42596,1,\"ꙥ\"],[42597,2],[42598,1,\"ꙧ\"],[42599,2],[42600,1,\"ꙩ\"],[42601,2],[42602,1,\"ꙫ\"],[42603,2],[42604,1,\"ꙭ\"],[[42605,42607],2],[[42608,42611],2],[[42612,42619],2],[[42620,42621],2],[42622,2],[42623,2],[42624,1,\"ꚁ\"],[42625,2],[42626,1,\"ꚃ\"],[42627,2],[42628,1,\"ꚅ\"],[42629,2],[42630,1,\"ꚇ\"],[42631,2],[42632,1,\"ꚉ\"],[42633,2],[42634,1,\"ꚋ\"],[42635,2],[42636,1,\"ꚍ\"],[42637,2],[42638,1,\"ꚏ\"],[42639,2],[42640,1,\"ꚑ\"],[42641,2],[42642,1,\"ꚓ\"],[42643,2],[42644,1,\"ꚕ\"],[42645,2],[42646,1,\"ꚗ\"],[42647,2],[42648,1,\"ꚙ\"],[42649,2],[42650,1,\"ꚛ\"],[42651,2],[42652,1,\"ъ\"],[42653,1,\"ь\"],[42654,2],[42655,2],[[42656,42725],2],[[42726,42735],2],[[42736,42737],2],[[42738,42743],2],[[42744,42751],3],[[42752,42774],2],[[42775,42778],2],[[42779,42783],2],[[42784,42785],2],[42786,1,\"ꜣ\"],[42787,2],[42788,1,\"ꜥ\"],[42789,2],[42790,1,\"ꜧ\"],[42791,2],[42792,1,\"ꜩ\"],[42793,2],[42794,1,\"ꜫ\"],[42795,2],[42796,1,\"ꜭ\"],[42797,2],[42798,1,\"ꜯ\"],[[42799,42801],2],[42802,1,\"ꜳ\"],[42803,2],[42804,1,\"ꜵ\"],[42805,2],[42806,1,\"ꜷ\"],[42807,2],[42808,1,\"ꜹ\"],[42809,2],[42810,1,\"ꜻ\"],[42811,2],[42812,1,\"ꜽ\"],[42813,2],[42814,1,\"ꜿ\"],[42815,2],[42816,1,\"ꝁ\"],[42817,2],[42818,1,\"ꝃ\"],[42819,2],[42820,1,\"ꝅ\"],[42821,2],[42822,1,\"ꝇ\"],[42823,2],[42824,1,\"ꝉ\"],[42825,2],[42826,1,\"ꝋ\"],[42827,2],[42828,1,\"ꝍ\"],[42829,2],[42830,1,\"ꝏ\"],[42831,2],[42832,1,\"ꝑ\"],[42833,2],[42834,1,\"ꝓ\"],[42835,2],[42836,1,\"ꝕ\"],[42837,2],[42838,1,\"ꝗ\"],[42839,2],[42840,1,\"ꝙ\"],[42841,2],[42842,1,\"ꝛ\"],[42843,2],[42844,1,\"ꝝ\"],[42845,2],[42846,1,\"ꝟ\"],[42847,2],[42848,1,\"ꝡ\"],[42849,2],[42850,1,\"ꝣ\"],[42851,2],[42852,1,\"ꝥ\"],[42853,2],[42854,1,\"ꝧ\"],[42855,2],[42856,1,\"ꝩ\"],[42857,2],[42858,1,\"ꝫ\"],[42859,2],[42860,1,\"ꝭ\"],[42861,2],[42862,1,\"ꝯ\"],[42863,2],[42864,1,\"ꝯ\"],[[42865,42872],2],[42873,1,\"ꝺ\"],[42874,2],[42875,1,\"ꝼ\"],[42876,2],[42877,1,\"ᵹ\"],[42878,1,\"ꝿ\"],[42879,2],[42880,1,\"ꞁ\"],[42881,2],[42882,1,\"ꞃ\"],[42883,2],[42884,1,\"ꞅ\"],[42885,2],[42886,1,\"ꞇ\"],[[42887,42888],2],[[42889,42890],2],[42891,1,\"ꞌ\"],[42892,2],[42893,1,\"ɥ\"],[42894,2],[42895,2],[42896,1,\"ꞑ\"],[42897,2],[42898,1,\"ꞓ\"],[42899,2],[[42900,42901],2],[42902,1,\"ꞗ\"],[42903,2],[42904,1,\"ꞙ\"],[42905,2],[42906,1,\"ꞛ\"],[42907,2],[42908,1,\"ꞝ\"],[42909,2],[42910,1,\"ꞟ\"],[42911,2],[42912,1,\"ꞡ\"],[42913,2],[42914,1,\"ꞣ\"],[42915,2],[42916,1,\"ꞥ\"],[42917,2],[42918,1,\"ꞧ\"],[42919,2],[42920,1,\"ꞩ\"],[42921,2],[42922,1,\"ɦ\"],[42923,1,\"ɜ\"],[42924,1,\"ɡ\"],[42925,1,\"ɬ\"],[42926,1,\"ɪ\"],[42927,2],[42928,1,\"ʞ\"],[42929,1,\"ʇ\"],[42930,1,\"ʝ\"],[42931,1,\"ꭓ\"],[42932,1,\"ꞵ\"],[42933,2],[42934,1,\"ꞷ\"],[42935,2],[42936,1,\"ꞹ\"],[42937,2],[42938,1,\"ꞻ\"],[42939,2],[42940,1,\"ꞽ\"],[42941,2],[42942,1,\"ꞿ\"],[42943,2],[42944,1,\"ꟁ\"],[42945,2],[42946,1,\"ꟃ\"],[42947,2],[42948,1,\"ꞔ\"],[42949,1,\"ʂ\"],[42950,1,\"ᶎ\"],[42951,1,\"ꟈ\"],[42952,2],[42953,1,\"ꟊ\"],[42954,2],[[42955,42959],3],[42960,1,\"ꟑ\"],[42961,2],[42962,3],[42963,2],[42964,3],[42965,2],[42966,1,\"ꟗ\"],[42967,2],[42968,1,\"ꟙ\"],[42969,2],[[42970,42993],3],[42994,1,\"c\"],[42995,1,\"f\"],[42996,1,\"q\"],[42997,1,\"ꟶ\"],[42998,2],[42999,2],[43000,1,\"ħ\"],[43001,1,\"œ\"],[43002,2],[[43003,43007],2],[[43008,43047],2],[[43048,43051],2],[43052,2],[[43053,43055],3],[[43056,43065],2],[[43066,43071],3],[[43072,43123],2],[[43124,43127],2],[[43128,43135],3],[[43136,43204],2],[43205,2],[[43206,43213],3],[[43214,43215],2],[[43216,43225],2],[[43226,43231],3],[[43232,43255],2],[[43256,43258],2],[43259,2],[43260,2],[43261,2],[[43262,43263],2],[[43264,43309],2],[[43310,43311],2],[[43312,43347],2],[[43348,43358],3],[43359,2],[[43360,43388],2],[[43389,43391],3],[[43392,43456],2],[[43457,43469],2],[43470,3],[[43471,43481],2],[[43482,43485],3],[[43486,43487],2],[[43488,43518],2],[43519,3],[[43520,43574],2],[[43575,43583],3],[[43584,43597],2],[[43598,43599],3],[[43600,43609],2],[[43610,43611],3],[[43612,43615],2],[[43616,43638],2],[[43639,43641],2],[[43642,43643],2],[[43644,43647],2],[[43648,43714],2],[[43715,43738],3],[[43739,43741],2],[[43742,43743],2],[[43744,43759],2],[[43760,43761],2],[[43762,43766],2],[[43767,43776],3],[[43777,43782],2],[[43783,43784],3],[[43785,43790],2],[[43791,43792],3],[[43793,43798],2],[[43799,43807],3],[[43808,43814],2],[43815,3],[[43816,43822],2],[43823,3],[[43824,43866],2],[43867,2],[43868,1,\"ꜧ\"],[43869,1,\"ꬷ\"],[43870,1,\"ɫ\"],[43871,1,\"ꭒ\"],[[43872,43875],2],[[43876,43877],2],[[43878,43879],2],[43880,2],[43881,1,\"ʍ\"],[[43882,43883],2],[[43884,43887],3],[43888,1,\"Ꭰ\"],[43889,1,\"Ꭱ\"],[43890,1,\"Ꭲ\"],[43891,1,\"Ꭳ\"],[43892,1,\"Ꭴ\"],[43893,1,\"Ꭵ\"],[43894,1,\"Ꭶ\"],[43895,1,\"Ꭷ\"],[43896,1,\"Ꭸ\"],[43897,1,\"Ꭹ\"],[43898,1,\"Ꭺ\"],[43899,1,\"Ꭻ\"],[43900,1,\"Ꭼ\"],[43901,1,\"Ꭽ\"],[43902,1,\"Ꭾ\"],[43903,1,\"Ꭿ\"],[43904,1,\"Ꮀ\"],[43905,1,\"Ꮁ\"],[43906,1,\"Ꮂ\"],[43907,1,\"Ꮃ\"],[43908,1,\"Ꮄ\"],[43909,1,\"Ꮅ\"],[43910,1,\"Ꮆ\"],[43911,1,\"Ꮇ\"],[43912,1,\"Ꮈ\"],[43913,1,\"Ꮉ\"],[43914,1,\"Ꮊ\"],[43915,1,\"Ꮋ\"],[43916,1,\"Ꮌ\"],[43917,1,\"Ꮍ\"],[43918,1,\"Ꮎ\"],[43919,1,\"Ꮏ\"],[43920,1,\"Ꮐ\"],[43921,1,\"Ꮑ\"],[43922,1,\"Ꮒ\"],[43923,1,\"Ꮓ\"],[43924,1,\"Ꮔ\"],[43925,1,\"Ꮕ\"],[43926,1,\"Ꮖ\"],[43927,1,\"Ꮗ\"],[43928,1,\"Ꮘ\"],[43929,1,\"Ꮙ\"],[43930,1,\"Ꮚ\"],[43931,1,\"Ꮛ\"],[43932,1,\"Ꮜ\"],[43933,1,\"Ꮝ\"],[43934,1,\"Ꮞ\"],[43935,1,\"Ꮟ\"],[43936,1,\"Ꮠ\"],[43937,1,\"Ꮡ\"],[43938,1,\"Ꮢ\"],[43939,1,\"Ꮣ\"],[43940,1,\"Ꮤ\"],[43941,1,\"Ꮥ\"],[43942,1,\"Ꮦ\"],[43943,1,\"Ꮧ\"],[43944,1,\"Ꮨ\"],[43945,1,\"Ꮩ\"],[43946,1,\"Ꮪ\"],[43947,1,\"Ꮫ\"],[43948,1,\"Ꮬ\"],[43949,1,\"Ꮭ\"],[43950,1,\"Ꮮ\"],[43951,1,\"Ꮯ\"],[43952,1,\"Ꮰ\"],[43953,1,\"Ꮱ\"],[43954,1,\"Ꮲ\"],[43955,1,\"Ꮳ\"],[43956,1,\"Ꮴ\"],[43957,1,\"Ꮵ\"],[43958,1,\"Ꮶ\"],[43959,1,\"Ꮷ\"],[43960,1,\"Ꮸ\"],[43961,1,\"Ꮹ\"],[43962,1,\"Ꮺ\"],[43963,1,\"Ꮻ\"],[43964,1,\"Ꮼ\"],[43965,1,\"Ꮽ\"],[43966,1,\"Ꮾ\"],[43967,1,\"Ꮿ\"],[[43968,44010],2],[44011,2],[[44012,44013],2],[[44014,44015],3],[[44016,44025],2],[[44026,44031],3],[[44032,55203],2],[[55204,55215],3],[[55216,55238],2],[[55239,55242],3],[[55243,55291],2],[[55292,55295],3],[[55296,57343],3],[[57344,63743],3],[63744,1,\"豈\"],[63745,1,\"更\"],[63746,1,\"車\"],[63747,1,\"賈\"],[63748,1,\"滑\"],[63749,1,\"串\"],[63750,1,\"句\"],[[63751,63752],1,\"龜\"],[63753,1,\"契\"],[63754,1,\"金\"],[63755,1,\"喇\"],[63756,1,\"奈\"],[63757,1,\"懶\"],[63758,1,\"癩\"],[63759,1,\"羅\"],[63760,1,\"蘿\"],[63761,1,\"螺\"],[63762,1,\"裸\"],[63763,1,\"邏\"],[63764,1,\"樂\"],[63765,1,\"洛\"],[63766,1,\"烙\"],[63767,1,\"珞\"],[63768,1,\"落\"],[63769,1,\"酪\"],[63770,1,\"駱\"],[63771,1,\"亂\"],[63772,1,\"卵\"],[63773,1,\"欄\"],[63774,1,\"爛\"],[63775,1,\"蘭\"],[63776,1,\"鸞\"],[63777,1,\"嵐\"],[63778,1,\"濫\"],[63779,1,\"藍\"],[63780,1,\"襤\"],[63781,1,\"拉\"],[63782,1,\"臘\"],[63783,1,\"蠟\"],[63784,1,\"廊\"],[63785,1,\"朗\"],[63786,1,\"浪\"],[63787,1,\"狼\"],[63788,1,\"郎\"],[63789,1,\"來\"],[63790,1,\"冷\"],[63791,1,\"勞\"],[63792,1,\"擄\"],[63793,1,\"櫓\"],[63794,1,\"爐\"],[63795,1,\"盧\"],[63796,1,\"老\"],[63797,1,\"蘆\"],[63798,1,\"虜\"],[63799,1,\"路\"],[63800,1,\"露\"],[63801,1,\"魯\"],[63802,1,\"鷺\"],[63803,1,\"碌\"],[63804,1,\"祿\"],[63805,1,\"綠\"],[63806,1,\"菉\"],[63807,1,\"錄\"],[63808,1,\"鹿\"],[63809,1,\"論\"],[63810,1,\"壟\"],[63811,1,\"弄\"],[63812,1,\"籠\"],[63813,1,\"聾\"],[63814,1,\"牢\"],[63815,1,\"磊\"],[63816,1,\"賂\"],[63817,1,\"雷\"],[63818,1,\"壘\"],[63819,1,\"屢\"],[63820,1,\"樓\"],[63821,1,\"淚\"],[63822,1,\"漏\"],[63823,1,\"累\"],[63824,1,\"縷\"],[63825,1,\"陋\"],[63826,1,\"勒\"],[63827,1,\"肋\"],[63828,1,\"凜\"],[63829,1,\"凌\"],[63830,1,\"稜\"],[63831,1,\"綾\"],[63832,1,\"菱\"],[63833,1,\"陵\"],[63834,1,\"讀\"],[63835,1,\"拏\"],[63836,1,\"樂\"],[63837,1,\"諾\"],[63838,1,\"丹\"],[63839,1,\"寧\"],[63840,1,\"怒\"],[63841,1,\"率\"],[63842,1,\"異\"],[63843,1,\"北\"],[63844,1,\"磻\"],[63845,1,\"便\"],[63846,1,\"復\"],[63847,1,\"不\"],[63848,1,\"泌\"],[63849,1,\"數\"],[63850,1,\"索\"],[63851,1,\"參\"],[63852,1,\"塞\"],[63853,1,\"省\"],[63854,1,\"葉\"],[63855,1,\"說\"],[63856,1,\"殺\"],[63857,1,\"辰\"],[63858,1,\"沈\"],[63859,1,\"拾\"],[63860,1,\"若\"],[63861,1,\"掠\"],[63862,1,\"略\"],[63863,1,\"亮\"],[63864,1,\"兩\"],[63865,1,\"凉\"],[63866,1,\"梁\"],[63867,1,\"糧\"],[63868,1,\"良\"],[63869,1,\"諒\"],[63870,1,\"量\"],[63871,1,\"勵\"],[63872,1,\"呂\"],[63873,1,\"女\"],[63874,1,\"廬\"],[63875,1,\"旅\"],[63876,1,\"濾\"],[63877,1,\"礪\"],[63878,1,\"閭\"],[63879,1,\"驪\"],[63880,1,\"麗\"],[63881,1,\"黎\"],[63882,1,\"力\"],[63883,1,\"曆\"],[63884,1,\"歷\"],[63885,1,\"轢\"],[63886,1,\"年\"],[63887,1,\"憐\"],[63888,1,\"戀\"],[63889,1,\"撚\"],[63890,1,\"漣\"],[63891,1,\"煉\"],[63892,1,\"璉\"],[63893,1,\"秊\"],[63894,1,\"練\"],[63895,1,\"聯\"],[63896,1,\"輦\"],[63897,1,\"蓮\"],[63898,1,\"連\"],[63899,1,\"鍊\"],[63900,1,\"列\"],[63901,1,\"劣\"],[63902,1,\"咽\"],[63903,1,\"烈\"],[63904,1,\"裂\"],[63905,1,\"說\"],[63906,1,\"廉\"],[63907,1,\"念\"],[63908,1,\"捻\"],[63909,1,\"殮\"],[63910,1,\"簾\"],[63911,1,\"獵\"],[63912,1,\"令\"],[63913,1,\"囹\"],[63914,1,\"寧\"],[63915,1,\"嶺\"],[63916,1,\"怜\"],[63917,1,\"玲\"],[63918,1,\"瑩\"],[63919,1,\"羚\"],[63920,1,\"聆\"],[63921,1,\"鈴\"],[63922,1,\"零\"],[63923,1,\"靈\"],[63924,1,\"領\"],[63925,1,\"例\"],[63926,1,\"禮\"],[63927,1,\"醴\"],[63928,1,\"隸\"],[63929,1,\"惡\"],[63930,1,\"了\"],[63931,1,\"僚\"],[63932,1,\"寮\"],[63933,1,\"尿\"],[63934,1,\"料\"],[63935,1,\"樂\"],[63936,1,\"燎\"],[63937,1,\"療\"],[63938,1,\"蓼\"],[63939,1,\"遼\"],[63940,1,\"龍\"],[63941,1,\"暈\"],[63942,1,\"阮\"],[63943,1,\"劉\"],[63944,1,\"杻\"],[63945,1,\"柳\"],[63946,1,\"流\"],[63947,1,\"溜\"],[63948,1,\"琉\"],[63949,1,\"留\"],[63950,1,\"硫\"],[63951,1,\"紐\"],[63952,1,\"類\"],[63953,1,\"六\"],[63954,1,\"戮\"],[63955,1,\"陸\"],[63956,1,\"倫\"],[63957,1,\"崙\"],[63958,1,\"淪\"],[63959,1,\"輪\"],[63960,1,\"律\"],[63961,1,\"慄\"],[63962,1,\"栗\"],[63963,1,\"率\"],[63964,1,\"隆\"],[63965,1,\"利\"],[63966,1,\"吏\"],[63967,1,\"履\"],[63968,1,\"易\"],[63969,1,\"李\"],[63970,1,\"梨\"],[63971,1,\"泥\"],[63972,1,\"理\"],[63973,1,\"痢\"],[63974,1,\"罹\"],[63975,1,\"裏\"],[63976,1,\"裡\"],[63977,1,\"里\"],[63978,1,\"離\"],[63979,1,\"匿\"],[63980,1,\"溺\"],[63981,1,\"吝\"],[63982,1,\"燐\"],[63983,1,\"璘\"],[63984,1,\"藺\"],[63985,1,\"隣\"],[63986,1,\"鱗\"],[63987,1,\"麟\"],[63988,1,\"林\"],[63989,1,\"淋\"],[63990,1,\"臨\"],[63991,1,\"立\"],[63992,1,\"笠\"],[63993,1,\"粒\"],[63994,1,\"狀\"],[63995,1,\"炙\"],[63996,1,\"識\"],[63997,1,\"什\"],[63998,1,\"茶\"],[63999,1,\"刺\"],[64000,1,\"切\"],[64001,1,\"度\"],[64002,1,\"拓\"],[64003,1,\"糖\"],[64004,1,\"宅\"],[64005,1,\"洞\"],[64006,1,\"暴\"],[64007,1,\"輻\"],[64008,1,\"行\"],[64009,1,\"降\"],[64010,1,\"見\"],[64011,1,\"廓\"],[64012,1,\"兀\"],[64013,1,\"嗀\"],[[64014,64015],2],[64016,1,\"塚\"],[64017,2],[64018,1,\"晴\"],[[64019,64020],2],[64021,1,\"凞\"],[64022,1,\"猪\"],[64023,1,\"益\"],[64024,1,\"礼\"],[64025,1,\"神\"],[64026,1,\"祥\"],[64027,1,\"福\"],[64028,1,\"靖\"],[64029,1,\"精\"],[64030,1,\"羽\"],[64031,2],[64032,1,\"蘒\"],[64033,2],[64034,1,\"諸\"],[[64035,64036],2],[64037,1,\"逸\"],[64038,1,\"都\"],[[64039,64041],2],[64042,1,\"飯\"],[64043,1,\"飼\"],[64044,1,\"館\"],[64045,1,\"鶴\"],[64046,1,\"郞\"],[64047,1,\"隷\"],[64048,1,\"侮\"],[64049,1,\"僧\"],[64050,1,\"免\"],[64051,1,\"勉\"],[64052,1,\"勤\"],[64053,1,\"卑\"],[64054,1,\"喝\"],[64055,1,\"嘆\"],[64056,1,\"器\"],[64057,1,\"塀\"],[64058,1,\"墨\"],[64059,1,\"層\"],[64060,1,\"屮\"],[64061,1,\"悔\"],[64062,1,\"慨\"],[64063,1,\"憎\"],[64064,1,\"懲\"],[64065,1,\"敏\"],[64066,1,\"既\"],[64067,1,\"暑\"],[64068,1,\"梅\"],[64069,1,\"海\"],[64070,1,\"渚\"],[64071,1,\"漢\"],[64072,1,\"煮\"],[64073,1,\"爫\"],[64074,1,\"琢\"],[64075,1,\"碑\"],[64076,1,\"社\"],[64077,1,\"祉\"],[64078,1,\"祈\"],[64079,1,\"祐\"],[64080,1,\"祖\"],[64081,1,\"祝\"],[64082,1,\"禍\"],[64083,1,\"禎\"],[64084,1,\"穀\"],[64085,1,\"突\"],[64086,1,\"節\"],[64087,1,\"練\"],[64088,1,\"縉\"],[64089,1,\"繁\"],[64090,1,\"署\"],[64091,1,\"者\"],[64092,1,\"臭\"],[[64093,64094],1,\"艹\"],[64095,1,\"著\"],[64096,1,\"褐\"],[64097,1,\"視\"],[64098,1,\"謁\"],[64099,1,\"謹\"],[64100,1,\"賓\"],[64101,1,\"贈\"],[64102,1,\"辶\"],[64103,1,\"逸\"],[64104,1,\"難\"],[64105,1,\"響\"],[64106,1,\"頻\"],[64107,1,\"恵\"],[64108,1,\"𤋮\"],[64109,1,\"舘\"],[[64110,64111],3],[64112,1,\"並\"],[64113,1,\"况\"],[64114,1,\"全\"],[64115,1,\"侀\"],[64116,1,\"充\"],[64117,1,\"冀\"],[64118,1,\"勇\"],[64119,1,\"勺\"],[64120,1,\"喝\"],[64121,1,\"啕\"],[64122,1,\"喙\"],[64123,1,\"嗢\"],[64124,1,\"塚\"],[64125,1,\"墳\"],[64126,1,\"奄\"],[64127,1,\"奔\"],[64128,1,\"婢\"],[64129,1,\"嬨\"],[64130,1,\"廒\"],[64131,1,\"廙\"],[64132,1,\"彩\"],[64133,1,\"徭\"],[64134,1,\"惘\"],[64135,1,\"慎\"],[64136,1,\"愈\"],[64137,1,\"憎\"],[64138,1,\"慠\"],[64139,1,\"懲\"],[64140,1,\"戴\"],[64141,1,\"揄\"],[64142,1,\"搜\"],[64143,1,\"摒\"],[64144,1,\"敖\"],[64145,1,\"晴\"],[64146,1,\"朗\"],[64147,1,\"望\"],[64148,1,\"杖\"],[64149,1,\"歹\"],[64150,1,\"殺\"],[64151,1,\"流\"],[64152,1,\"滛\"],[64153,1,\"滋\"],[64154,1,\"漢\"],[64155,1,\"瀞\"],[64156,1,\"煮\"],[64157,1,\"瞧\"],[64158,1,\"爵\"],[64159,1,\"犯\"],[64160,1,\"猪\"],[64161,1,\"瑱\"],[64162,1,\"甆\"],[64163,1,\"画\"],[64164,1,\"瘝\"],[64165,1,\"瘟\"],[64166,1,\"益\"],[64167,1,\"盛\"],[64168,1,\"直\"],[64169,1,\"睊\"],[64170,1,\"着\"],[64171,1,\"磌\"],[64172,1,\"窱\"],[64173,1,\"節\"],[64174,1,\"类\"],[64175,1,\"絛\"],[64176,1,\"練\"],[64177,1,\"缾\"],[64178,1,\"者\"],[64179,1,\"荒\"],[64180,1,\"華\"],[64181,1,\"蝹\"],[64182,1,\"襁\"],[64183,1,\"覆\"],[64184,1,\"視\"],[64185,1,\"調\"],[64186,1,\"諸\"],[64187,1,\"請\"],[64188,1,\"謁\"],[64189,1,\"諾\"],[64190,1,\"諭\"],[64191,1,\"謹\"],[64192,1,\"變\"],[64193,1,\"贈\"],[64194,1,\"輸\"],[64195,1,\"遲\"],[64196,1,\"醙\"],[64197,1,\"鉶\"],[64198,1,\"陼\"],[64199,1,\"難\"],[64200,1,\"靖\"],[64201,1,\"韛\"],[64202,1,\"響\"],[64203,1,\"頋\"],[64204,1,\"頻\"],[64205,1,\"鬒\"],[64206,1,\"龜\"],[64207,1,\"𢡊\"],[64208,1,\"𢡄\"],[64209,1,\"𣏕\"],[64210,1,\"㮝\"],[64211,1,\"䀘\"],[64212,1,\"䀹\"],[64213,1,\"𥉉\"],[64214,1,\"𥳐\"],[64215,1,\"𧻓\"],[64216,1,\"齃\"],[64217,1,\"龎\"],[[64218,64255],3],[64256,1,\"ff\"],[64257,1,\"fi\"],[64258,1,\"fl\"],[64259,1,\"ffi\"],[64260,1,\"ffl\"],[[64261,64262],1,\"st\"],[[64263,64274],3],[64275,1,\"մն\"],[64276,1,\"մե\"],[64277,1,\"մի\"],[64278,1,\"վն\"],[64279,1,\"մխ\"],[[64280,64284],3],[64285,1,\"יִ\"],[64286,2],[64287,1,\"ײַ\"],[64288,1,\"ע\"],[64289,1,\"א\"],[64290,1,\"ד\"],[64291,1,\"ה\"],[64292,1,\"כ\"],[64293,1,\"ל\"],[64294,1,\"ם\"],[64295,1,\"ר\"],[64296,1,\"ת\"],[64297,5,\"+\"],[64298,1,\"שׁ\"],[64299,1,\"שׂ\"],[64300,1,\"שּׁ\"],[64301,1,\"שּׂ\"],[64302,1,\"אַ\"],[64303,1,\"אָ\"],[64304,1,\"אּ\"],[64305,1,\"בּ\"],[64306,1,\"גּ\"],[64307,1,\"דּ\"],[64308,1,\"הּ\"],[64309,1,\"וּ\"],[64310,1,\"זּ\"],[64311,3],[64312,1,\"טּ\"],[64313,1,\"יּ\"],[64314,1,\"ךּ\"],[64315,1,\"כּ\"],[64316,1,\"לּ\"],[64317,3],[64318,1,\"מּ\"],[64319,3],[64320,1,\"נּ\"],[64321,1,\"סּ\"],[64322,3],[64323,1,\"ףּ\"],[64324,1,\"פּ\"],[64325,3],[64326,1,\"צּ\"],[64327,1,\"קּ\"],[64328,1,\"רּ\"],[64329,1,\"שּ\"],[64330,1,\"תּ\"],[64331,1,\"וֹ\"],[64332,1,\"בֿ\"],[64333,1,\"כֿ\"],[64334,1,\"פֿ\"],[64335,1,\"אל\"],[[64336,64337],1,\"ٱ\"],[[64338,64341],1,\"ٻ\"],[[64342,64345],1,\"پ\"],[[64346,64349],1,\"ڀ\"],[[64350,64353],1,\"ٺ\"],[[64354,64357],1,\"ٿ\"],[[64358,64361],1,\"ٹ\"],[[64362,64365],1,\"ڤ\"],[[64366,64369],1,\"ڦ\"],[[64370,64373],1,\"ڄ\"],[[64374,64377],1,\"ڃ\"],[[64378,64381],1,\"چ\"],[[64382,64385],1,\"ڇ\"],[[64386,64387],1,\"ڍ\"],[[64388,64389],1,\"ڌ\"],[[64390,64391],1,\"ڎ\"],[[64392,64393],1,\"ڈ\"],[[64394,64395],1,\"ژ\"],[[64396,64397],1,\"ڑ\"],[[64398,64401],1,\"ک\"],[[64402,64405],1,\"گ\"],[[64406,64409],1,\"ڳ\"],[[64410,64413],1,\"ڱ\"],[[64414,64415],1,\"ں\"],[[64416,64419],1,\"ڻ\"],[[64420,64421],1,\"ۀ\"],[[64422,64425],1,\"ہ\"],[[64426,64429],1,\"ھ\"],[[64430,64431],1,\"ے\"],[[64432,64433],1,\"ۓ\"],[[64434,64449],2],[64450,2],[[64451,64466],3],[[64467,64470],1,\"ڭ\"],[[64471,64472],1,\"ۇ\"],[[64473,64474],1,\"ۆ\"],[[64475,64476],1,\"ۈ\"],[64477,1,\"ۇٴ\"],[[64478,64479],1,\"ۋ\"],[[64480,64481],1,\"ۅ\"],[[64482,64483],1,\"ۉ\"],[[64484,64487],1,\"ې\"],[[64488,64489],1,\"ى\"],[[64490,64491],1,\"ئا\"],[[64492,64493],1,\"ئە\"],[[64494,64495],1,\"ئو\"],[[64496,64497],1,\"ئۇ\"],[[64498,64499],1,\"ئۆ\"],[[64500,64501],1,\"ئۈ\"],[[64502,64504],1,\"ئې\"],[[64505,64507],1,\"ئى\"],[[64508,64511],1,\"ی\"],[64512,1,\"ئج\"],[64513,1,\"ئح\"],[64514,1,\"ئم\"],[64515,1,\"ئى\"],[64516,1,\"ئي\"],[64517,1,\"بج\"],[64518,1,\"بح\"],[64519,1,\"بخ\"],[64520,1,\"بم\"],[64521,1,\"بى\"],[64522,1,\"بي\"],[64523,1,\"تج\"],[64524,1,\"تح\"],[64525,1,\"تخ\"],[64526,1,\"تم\"],[64527,1,\"تى\"],[64528,1,\"تي\"],[64529,1,\"ثج\"],[64530,1,\"ثم\"],[64531,1,\"ثى\"],[64532,1,\"ثي\"],[64533,1,\"جح\"],[64534,1,\"جم\"],[64535,1,\"حج\"],[64536,1,\"حم\"],[64537,1,\"خج\"],[64538,1,\"خح\"],[64539,1,\"خم\"],[64540,1,\"سج\"],[64541,1,\"سح\"],[64542,1,\"سخ\"],[64543,1,\"سم\"],[64544,1,\"صح\"],[64545,1,\"صم\"],[64546,1,\"ضج\"],[64547,1,\"ضح\"],[64548,1,\"ضخ\"],[64549,1,\"ضم\"],[64550,1,\"طح\"],[64551,1,\"طم\"],[64552,1,\"ظم\"],[64553,1,\"عج\"],[64554,1,\"عم\"],[64555,1,\"غج\"],[64556,1,\"غم\"],[64557,1,\"فج\"],[64558,1,\"فح\"],[64559,1,\"فخ\"],[64560,1,\"فم\"],[64561,1,\"فى\"],[64562,1,\"في\"],[64563,1,\"قح\"],[64564,1,\"قم\"],[64565,1,\"قى\"],[64566,1,\"قي\"],[64567,1,\"كا\"],[64568,1,\"كج\"],[64569,1,\"كح\"],[64570,1,\"كخ\"],[64571,1,\"كل\"],[64572,1,\"كم\"],[64573,1,\"كى\"],[64574,1,\"كي\"],[64575,1,\"لج\"],[64576,1,\"لح\"],[64577,1,\"لخ\"],[64578,1,\"لم\"],[64579,1,\"لى\"],[64580,1,\"لي\"],[64581,1,\"مج\"],[64582,1,\"مح\"],[64583,1,\"مخ\"],[64584,1,\"مم\"],[64585,1,\"مى\"],[64586,1,\"مي\"],[64587,1,\"نج\"],[64588,1,\"نح\"],[64589,1,\"نخ\"],[64590,1,\"نم\"],[64591,1,\"نى\"],[64592,1,\"ني\"],[64593,1,\"هج\"],[64594,1,\"هم\"],[64595,1,\"هى\"],[64596,1,\"هي\"],[64597,1,\"يج\"],[64598,1,\"يح\"],[64599,1,\"يخ\"],[64600,1,\"يم\"],[64601,1,\"يى\"],[64602,1,\"يي\"],[64603,1,\"ذٰ\"],[64604,1,\"رٰ\"],[64605,1,\"ىٰ\"],[64606,5,\" ٌّ\"],[64607,5,\" ٍّ\"],[64608,5,\" َّ\"],[64609,5,\" ُّ\"],[64610,5,\" ِّ\"],[64611,5,\" ّٰ\"],[64612,1,\"ئر\"],[64613,1,\"ئز\"],[64614,1,\"ئم\"],[64615,1,\"ئن\"],[64616,1,\"ئى\"],[64617,1,\"ئي\"],[64618,1,\"بر\"],[64619,1,\"بز\"],[64620,1,\"بم\"],[64621,1,\"بن\"],[64622,1,\"بى\"],[64623,1,\"بي\"],[64624,1,\"تر\"],[64625,1,\"تز\"],[64626,1,\"تم\"],[64627,1,\"تن\"],[64628,1,\"تى\"],[64629,1,\"تي\"],[64630,1,\"ثر\"],[64631,1,\"ثز\"],[64632,1,\"ثم\"],[64633,1,\"ثن\"],[64634,1,\"ثى\"],[64635,1,\"ثي\"],[64636,1,\"فى\"],[64637,1,\"في\"],[64638,1,\"قى\"],[64639,1,\"قي\"],[64640,1,\"كا\"],[64641,1,\"كل\"],[64642,1,\"كم\"],[64643,1,\"كى\"],[64644,1,\"كي\"],[64645,1,\"لم\"],[64646,1,\"لى\"],[64647,1,\"لي\"],[64648,1,\"ما\"],[64649,1,\"مم\"],[64650,1,\"نر\"],[64651,1,\"نز\"],[64652,1,\"نم\"],[64653,1,\"نن\"],[64654,1,\"نى\"],[64655,1,\"ني\"],[64656,1,\"ىٰ\"],[64657,1,\"ير\"],[64658,1,\"يز\"],[64659,1,\"يم\"],[64660,1,\"ين\"],[64661,1,\"يى\"],[64662,1,\"يي\"],[64663,1,\"ئج\"],[64664,1,\"ئح\"],[64665,1,\"ئخ\"],[64666,1,\"ئم\"],[64667,1,\"ئه\"],[64668,1,\"بج\"],[64669,1,\"بح\"],[64670,1,\"بخ\"],[64671,1,\"بم\"],[64672,1,\"به\"],[64673,1,\"تج\"],[64674,1,\"تح\"],[64675,1,\"تخ\"],[64676,1,\"تم\"],[64677,1,\"ته\"],[64678,1,\"ثم\"],[64679,1,\"جح\"],[64680,1,\"جم\"],[64681,1,\"حج\"],[64682,1,\"حم\"],[64683,1,\"خج\"],[64684,1,\"خم\"],[64685,1,\"سج\"],[64686,1,\"سح\"],[64687,1,\"سخ\"],[64688,1,\"سم\"],[64689,1,\"صح\"],[64690,1,\"صخ\"],[64691,1,\"صم\"],[64692,1,\"ضج\"],[64693,1,\"ضح\"],[64694,1,\"ضخ\"],[64695,1,\"ضم\"],[64696,1,\"طح\"],[64697,1,\"ظم\"],[64698,1,\"عج\"],[64699,1,\"عم\"],[64700,1,\"غج\"],[64701,1,\"غم\"],[64702,1,\"فج\"],[64703,1,\"فح\"],[64704,1,\"فخ\"],[64705,1,\"فم\"],[64706,1,\"قح\"],[64707,1,\"قم\"],[64708,1,\"كج\"],[64709,1,\"كح\"],[64710,1,\"كخ\"],[64711,1,\"كل\"],[64712,1,\"كم\"],[64713,1,\"لج\"],[64714,1,\"لح\"],[64715,1,\"لخ\"],[64716,1,\"لم\"],[64717,1,\"له\"],[64718,1,\"مج\"],[64719,1,\"مح\"],[64720,1,\"مخ\"],[64721,1,\"مم\"],[64722,1,\"نج\"],[64723,1,\"نح\"],[64724,1,\"نخ\"],[64725,1,\"نم\"],[64726,1,\"نه\"],[64727,1,\"هج\"],[64728,1,\"هم\"],[64729,1,\"هٰ\"],[64730,1,\"يج\"],[64731,1,\"يح\"],[64732,1,\"يخ\"],[64733,1,\"يم\"],[64734,1,\"يه\"],[64735,1,\"ئم\"],[64736,1,\"ئه\"],[64737,1,\"بم\"],[64738,1,\"به\"],[64739,1,\"تم\"],[64740,1,\"ته\"],[64741,1,\"ثم\"],[64742,1,\"ثه\"],[64743,1,\"سم\"],[64744,1,\"سه\"],[64745,1,\"شم\"],[64746,1,\"شه\"],[64747,1,\"كل\"],[64748,1,\"كم\"],[64749,1,\"لم\"],[64750,1,\"نم\"],[64751,1,\"نه\"],[64752,1,\"يم\"],[64753,1,\"يه\"],[64754,1,\"ـَّ\"],[64755,1,\"ـُّ\"],[64756,1,\"ـِّ\"],[64757,1,\"طى\"],[64758,1,\"طي\"],[64759,1,\"عى\"],[64760,1,\"عي\"],[64761,1,\"غى\"],[64762,1,\"غي\"],[64763,1,\"سى\"],[64764,1,\"سي\"],[64765,1,\"شى\"],[64766,1,\"شي\"],[64767,1,\"حى\"],[64768,1,\"حي\"],[64769,1,\"جى\"],[64770,1,\"جي\"],[64771,1,\"خى\"],[64772,1,\"خي\"],[64773,1,\"صى\"],[64774,1,\"صي\"],[64775,1,\"ضى\"],[64776,1,\"ضي\"],[64777,1,\"شج\"],[64778,1,\"شح\"],[64779,1,\"شخ\"],[64780,1,\"شم\"],[64781,1,\"شر\"],[64782,1,\"سر\"],[64783,1,\"صر\"],[64784,1,\"ضر\"],[64785,1,\"طى\"],[64786,1,\"طي\"],[64787,1,\"عى\"],[64788,1,\"عي\"],[64789,1,\"غى\"],[64790,1,\"غي\"],[64791,1,\"سى\"],[64792,1,\"سي\"],[64793,1,\"شى\"],[64794,1,\"شي\"],[64795,1,\"حى\"],[64796,1,\"حي\"],[64797,1,\"جى\"],[64798,1,\"جي\"],[64799,1,\"خى\"],[64800,1,\"خي\"],[64801,1,\"صى\"],[64802,1,\"صي\"],[64803,1,\"ضى\"],[64804,1,\"ضي\"],[64805,1,\"شج\"],[64806,1,\"شح\"],[64807,1,\"شخ\"],[64808,1,\"شم\"],[64809,1,\"شر\"],[64810,1,\"سر\"],[64811,1,\"صر\"],[64812,1,\"ضر\"],[64813,1,\"شج\"],[64814,1,\"شح\"],[64815,1,\"شخ\"],[64816,1,\"شم\"],[64817,1,\"سه\"],[64818,1,\"شه\"],[64819,1,\"طم\"],[64820,1,\"سج\"],[64821,1,\"سح\"],[64822,1,\"سخ\"],[64823,1,\"شج\"],[64824,1,\"شح\"],[64825,1,\"شخ\"],[64826,1,\"طم\"],[64827,1,\"ظم\"],[[64828,64829],1,\"اً\"],[[64830,64831],2],[[64832,64847],2],[64848,1,\"تجم\"],[[64849,64850],1,\"تحج\"],[64851,1,\"تحم\"],[64852,1,\"تخم\"],[64853,1,\"تمج\"],[64854,1,\"تمح\"],[64855,1,\"تمخ\"],[[64856,64857],1,\"جمح\"],[64858,1,\"حمي\"],[64859,1,\"حمى\"],[64860,1,\"سحج\"],[64861,1,\"سجح\"],[64862,1,\"سجى\"],[[64863,64864],1,\"سمح\"],[64865,1,\"سمج\"],[[64866,64867],1,\"سمم\"],[[64868,64869],1,\"صحح\"],[64870,1,\"صمم\"],[[64871,64872],1,\"شحم\"],[64873,1,\"شجي\"],[[64874,64875],1,\"شمخ\"],[[64876,64877],1,\"شمم\"],[64878,1,\"ضحى\"],[[64879,64880],1,\"ضخم\"],[[64881,64882],1,\"طمح\"],[64883,1,\"طمم\"],[64884,1,\"طمي\"],[64885,1,\"عجم\"],[[64886,64887],1,\"عمم\"],[64888,1,\"عمى\"],[64889,1,\"غمم\"],[64890,1,\"غمي\"],[64891,1,\"غمى\"],[[64892,64893],1,\"فخم\"],[64894,1,\"قمح\"],[64895,1,\"قمم\"],[64896,1,\"لحم\"],[64897,1,\"لحي\"],[64898,1,\"لحى\"],[[64899,64900],1,\"لجج\"],[[64901,64902],1,\"لخم\"],[[64903,64904],1,\"لمح\"],[64905,1,\"محج\"],[64906,1,\"محم\"],[64907,1,\"محي\"],[64908,1,\"مجح\"],[64909,1,\"مجم\"],[64910,1,\"مخج\"],[64911,1,\"مخم\"],[[64912,64913],3],[64914,1,\"مجخ\"],[64915,1,\"همج\"],[64916,1,\"همم\"],[64917,1,\"نحم\"],[64918,1,\"نحى\"],[[64919,64920],1,\"نجم\"],[64921,1,\"نجى\"],[64922,1,\"نمي\"],[64923,1,\"نمى\"],[[64924,64925],1,\"يمم\"],[64926,1,\"بخي\"],[64927,1,\"تجي\"],[64928,1,\"تجى\"],[64929,1,\"تخي\"],[64930,1,\"تخى\"],[64931,1,\"تمي\"],[64932,1,\"تمى\"],[64933,1,\"جمي\"],[64934,1,\"جحى\"],[64935,1,\"جمى\"],[64936,1,\"سخى\"],[64937,1,\"صحي\"],[64938,1,\"شحي\"],[64939,1,\"ضحي\"],[64940,1,\"لجي\"],[64941,1,\"لمي\"],[64942,1,\"يحي\"],[64943,1,\"يجي\"],[64944,1,\"يمي\"],[64945,1,\"ممي\"],[64946,1,\"قمي\"],[64947,1,\"نحي\"],[64948,1,\"قمح\"],[64949,1,\"لحم\"],[64950,1,\"عمي\"],[64951,1,\"كمي\"],[64952,1,\"نجح\"],[64953,1,\"مخي\"],[64954,1,\"لجم\"],[64955,1,\"كمم\"],[64956,1,\"لجم\"],[64957,1,\"نجح\"],[64958,1,\"جحي\"],[64959,1,\"حجي\"],[64960,1,\"مجي\"],[64961,1,\"فمي\"],[64962,1,\"بحي\"],[64963,1,\"كمم\"],[64964,1,\"عجم\"],[64965,1,\"صمم\"],[64966,1,\"سخي\"],[64967,1,\"نجي\"],[[64968,64974],3],[64975,2],[[64976,65007],3],[65008,1,\"صلے\"],[65009,1,\"قلے\"],[65010,1,\"الله\"],[65011,1,\"اكبر\"],[65012,1,\"محمد\"],[65013,1,\"صلعم\"],[65014,1,\"رسول\"],[65015,1,\"عليه\"],[65016,1,\"وسلم\"],[65017,1,\"صلى\"],[65018,5,\"صلى الله عليه وسلم\"],[65019,5,\"جل جلاله\"],[65020,1,\"ریال\"],[65021,2],[[65022,65023],2],[[65024,65039],7],[65040,5,\",\"],[65041,1,\"、\"],[65042,3],[65043,5,\":\"],[65044,5,\";\"],[65045,5,\"!\"],[65046,5,\"?\"],[65047,1,\"〖\"],[65048,1,\"〗\"],[65049,3],[[65050,65055],3],[[65056,65059],2],[[65060,65062],2],[[65063,65069],2],[[65070,65071],2],[65072,3],[65073,1,\"—\"],[65074,1,\"–\"],[[65075,65076],5,\"_\"],[65077,5,\"(\"],[65078,5,\")\"],[65079,5,\"{\"],[65080,5,\"}\"],[65081,1,\"〔\"],[65082,1,\"〕\"],[65083,1,\"【\"],[65084,1,\"】\"],[65085,1,\"《\"],[65086,1,\"》\"],[65087,1,\"〈\"],[65088,1,\"〉\"],[65089,1,\"「\"],[65090,1,\"」\"],[65091,1,\"『\"],[65092,1,\"』\"],[[65093,65094],2],[65095,5,\"[\"],[65096,5,\"]\"],[[65097,65100],5,\" ̅\"],[[65101,65103],5,\"_\"],[65104,5,\",\"],[65105,1,\"、\"],[65106,3],[65107,3],[65108,5,\";\"],[65109,5,\":\"],[65110,5,\"?\"],[65111,5,\"!\"],[65112,1,\"—\"],[65113,5,\"(\"],[65114,5,\")\"],[65115,5,\"{\"],[65116,5,\"}\"],[65117,1,\"〔\"],[65118,1,\"〕\"],[65119,5,\"#\"],[65120,5,\"&\"],[65121,5,\"*\"],[65122,5,\"+\"],[65123,1,\"-\"],[65124,5,\"<\"],[65125,5,\">\"],[65126,5,\"=\"],[65127,3],[65128,5,\"\\\\\"],[65129,5,\"$\"],[65130,5,\"%\"],[65131,5,\"@\"],[[65132,65135],3],[65136,5,\" ً\"],[65137,1,\"ـً\"],[65138,5,\" ٌ\"],[65139,2],[65140,5,\" ٍ\"],[65141,3],[65142,5,\" َ\"],[65143,1,\"ـَ\"],[65144,5,\" ُ\"],[65145,1,\"ـُ\"],[65146,5,\" ِ\"],[65147,1,\"ـِ\"],[65148,5,\" ّ\"],[65149,1,\"ـّ\"],[65150,5,\" ْ\"],[65151,1,\"ـْ\"],[65152,1,\"ء\"],[[65153,65154],1,\"آ\"],[[65155,65156],1,\"أ\"],[[65157,65158],1,\"ؤ\"],[[65159,65160],1,\"إ\"],[[65161,65164],1,\"ئ\"],[[65165,65166],1,\"ا\"],[[65167,65170],1,\"ب\"],[[65171,65172],1,\"ة\"],[[65173,65176],1,\"ت\"],[[65177,65180],1,\"ث\"],[[65181,65184],1,\"ج\"],[[65185,65188],1,\"ح\"],[[65189,65192],1,\"خ\"],[[65193,65194],1,\"د\"],[[65195,65196],1,\"ذ\"],[[65197,65198],1,\"ر\"],[[65199,65200],1,\"ز\"],[[65201,65204],1,\"س\"],[[65205,65208],1,\"ش\"],[[65209,65212],1,\"ص\"],[[65213,65216],1,\"ض\"],[[65217,65220],1,\"ط\"],[[65221,65224],1,\"ظ\"],[[65225,65228],1,\"ع\"],[[65229,65232],1,\"غ\"],[[65233,65236],1,\"ف\"],[[65237,65240],1,\"ق\"],[[65241,65244],1,\"ك\"],[[65245,65248],1,\"ل\"],[[65249,65252],1,\"م\"],[[65253,65256],1,\"ن\"],[[65257,65260],1,\"ه\"],[[65261,65262],1,\"و\"],[[65263,65264],1,\"ى\"],[[65265,65268],1,\"ي\"],[[65269,65270],1,\"لآ\"],[[65271,65272],1,\"لأ\"],[[65273,65274],1,\"لإ\"],[[65275,65276],1,\"لاa\"],[65314,1,\"b\"],[65315,1,\"c\"],[65316,1,\"d\"],[65317,1,\"e\"],[65318,1,\"f\"],[65319,1,\"g\"],[65320,1,\"h\"],[65321,1,\"i\"],[65322,1,\"j\"],[65323,1,\"k\"],[65324,1,\"l\"],[65325,1,\"m\"],[65326,1,\"n\"],[65327,1,\"o\"],[65328,1,\"p\"],[65329,1,\"q\"],[65330,1,\"r\"],[65331,1,\"s\"],[65332,1,\"t\"],[65333,1,\"u\"],[65334,1,\"v\"],[65335,1,\"w\"],[65336,1,\"x\"],[65337,1,\"y\"],[65338,1,\"z\"],[65339,5,\"[\"],[65340,5,\"\\\\\"],[65341,5,\"]\"],[65342,5,\"^\"],[65343,5,\"_\"],[65344,5,\"`\"],[65345,1,\"a\"],[65346,1,\"b\"],[65347,1,\"c\"],[65348,1,\"d\"],[65349,1,\"e\"],[65350,1,\"f\"],[65351,1,\"g\"],[65352,1,\"h\"],[65353,1,\"i\"],[65354,1,\"j\"],[65355,1,\"k\"],[65356,1,\"l\"],[65357,1,\"m\"],[65358,1,\"n\"],[65359,1,\"o\"],[65360,1,\"p\"],[65361,1,\"q\"],[65362,1,\"r\"],[65363,1,\"s\"],[65364,1,\"t\"],[65365,1,\"u\"],[65366,1,\"v\"],[65367,1,\"w\"],[65368,1,\"x\"],[65369,1,\"y\"],[65370,1,\"z\"],[65371,5,\"{\"],[65372,5,\"|\"],[65373,5,\"}\"],[65374,5,\"~\"],[65375,1,\"⦅\"],[65376,1,\"⦆\"],[65377,1,\".\"],[65378,1,\"「\"],[65379,1,\"」\"],[65380,1,\"、\"],[65381,1,\"・\"],[65382,1,\"ヲ\"],[65383,1,\"ァ\"],[65384,1,\"ィ\"],[65385,1,\"ゥ\"],[65386,1,\"ェ\"],[65387,1,\"ォ\"],[65388,1,\"ャ\"],[65389,1,\"ュ\"],[65390,1,\"ョ\"],[65391,1,\"ッ\"],[65392,1,\"ー\"],[65393,1,\"ア\"],[65394,1,\"イ\"],[65395,1,\"ウ\"],[65396,1,\"エ\"],[65397,1,\"オ\"],[65398,1,\"カ\"],[65399,1,\"キ\"],[65400,1,\"ク\"],[65401,1,\"ケ\"],[65402,1,\"コ\"],[65403,1,\"サ\"],[65404,1,\"シ\"],[65405,1,\"ス\"],[65406,1,\"セ\"],[65407,1,\"ソ\"],[65408,1,\"タ\"],[65409,1,\"チ\"],[65410,1,\"ツ\"],[65411,1,\"テ\"],[65412,1,\"ト\"],[65413,1,\"ナ\"],[65414,1,\"ニ\"],[65415,1,\"ヌ\"],[65416,1,\"ネ\"],[65417,1,\"ノ\"],[65418,1,\"ハ\"],[65419,1,\"ヒ\"],[65420,1,\"フ\"],[65421,1,\"ヘ\"],[65422,1,\"ホ\"],[65423,1,\"マ\"],[65424,1,\"ミ\"],[65425,1,\"ム\"],[65426,1,\"メ\"],[65427,1,\"モ\"],[65428,1,\"ヤ\"],[65429,1,\"ユ\"],[65430,1,\"ヨ\"],[65431,1,\"ラ\"],[65432,1,\"リ\"],[65433,1,\"ル\"],[65434,1,\"レ\"],[65435,1,\"ロ\"],[65436,1,\"ワ\"],[65437,1,\"ン\"],[65438,1,\"゙\"],[65439,1,\"゚\"],[65440,3],[65441,1,\"ᄀ\"],[65442,1,\"ᄁ\"],[65443,1,\"ᆪ\"],[65444,1,\"ᄂ\"],[65445,1,\"ᆬ\"],[65446,1,\"ᆭ\"],[65447,1,\"ᄃ\"],[65448,1,\"ᄄ\"],[65449,1,\"ᄅ\"],[65450,1,\"ᆰ\"],[65451,1,\"ᆱ\"],[65452,1,\"ᆲ\"],[65453,1,\"ᆳ\"],[65454,1,\"ᆴ\"],[65455,1,\"ᆵ\"],[65456,1,\"ᄚ\"],[65457,1,\"ᄆ\"],[65458,1,\"ᄇ\"],[65459,1,\"ᄈ\"],[65460,1,\"ᄡ\"],[65461,1,\"ᄉ\"],[65462,1,\"ᄊ\"],[65463,1,\"ᄋ\"],[65464,1,\"ᄌ\"],[65465,1,\"ᄍ\"],[65466,1,\"ᄎ\"],[65467,1,\"ᄏ\"],[65468,1,\"ᄐ\"],[65469,1,\"ᄑ\"],[65470,1,\"ᄒ\"],[[65471,65473],3],[65474,1,\"ᅡ\"],[65475,1,\"ᅢ\"],[65476,1,\"ᅣ\"],[65477,1,\"ᅤ\"],[65478,1,\"ᅥ\"],[65479,1,\"ᅦ\"],[[65480,65481],3],[65482,1,\"ᅧ\"],[65483,1,\"ᅨ\"],[65484,1,\"ᅩ\"],[65485,1,\"ᅪ\"],[65486,1,\"ᅫ\"],[65487,1,\"ᅬ\"],[[65488,65489],3],[65490,1,\"ᅭ\"],[65491,1,\"ᅮ\"],[65492,1,\"ᅯ\"],[65493,1,\"ᅰ\"],[65494,1,\"ᅱ\"],[65495,1,\"ᅲ\"],[[65496,65497],3],[65498,1,\"ᅳ\"],[65499,1,\"ᅴ\"],[65500,1,\"ᅵ\"],[[65501,65503],3],[65504,1,\"¢\"],[65505,1,\"£\"],[65506,1,\"¬\"],[65507,5,\" ̄\"],[65508,1,\"¦\"],[65509,1,\"¥\"],[65510,1,\"₩\"],[65511,3],[65512,1,\"│\"],[65513,1,\"←\"],[65514,1,\"↑\"],[65515,1,\"→\"],[65516,1,\"↓\"],[65517,1,\"■\"],[65518,1,\"○\"],[[65519,65528],3],[[65529,65531],3],[65532,3],[65533,3],[[65534,65535],3],[[65536,65547],2],[65548,3],[[65549,65574],2],[65575,3],[[65576,65594],2],[65595,3],[[65596,65597],2],[65598,3],[[65599,65613],2],[[65614,65615],3],[[65616,65629],2],[[65630,65663],3],[[65664,65786],2],[[65787,65791],3],[[65792,65794],2],[[65795,65798],3],[[65799,65843],2],[[65844,65846],3],[[65847,65855],2],[[65856,65930],2],[[65931,65932],2],[[65933,65934],2],[65935,3],[[65936,65947],2],[65948,2],[[65949,65951],3],[65952,2],[[65953,65999],3],[[66000,66044],2],[66045,2],[[66046,66175],3],[[66176,66204],2],[[66205,66207],3],[[66208,66256],2],[[66257,66271],3],[66272,2],[[66273,66299],2],[[66300,66303],3],[[66304,66334],2],[66335,2],[[66336,66339],2],[[66340,66348],3],[[66349,66351],2],[[66352,66368],2],[66369,2],[[66370,66377],2],[66378,2],[[66379,66383],3],[[66384,66426],2],[[66427,66431],3],[[66432,66461],2],[66462,3],[66463,2],[[66464,66499],2],[[66500,66503],3],[[66504,66511],2],[[66512,66517],2],[[66518,66559],3],[66560,1,\"𐐨\"],[66561,1,\"𐐩\"],[66562,1,\"𐐪\"],[66563,1,\"𐐫\"],[66564,1,\"𐐬\"],[66565,1,\"𐐭\"],[66566,1,\"𐐮\"],[66567,1,\"𐐯\"],[66568,1,\"𐐰\"],[66569,1,\"𐐱\"],[66570,1,\"𐐲\"],[66571,1,\"𐐳\"],[66572,1,\"𐐴\"],[66573,1,\"𐐵\"],[66574,1,\"𐐶\"],[66575,1,\"𐐷\"],[66576,1,\"𐐸\"],[66577,1,\"𐐹\"],[66578,1,\"𐐺\"],[66579,1,\"𐐻\"],[66580,1,\"𐐼\"],[66581,1,\"𐐽\"],[66582,1,\"𐐾\"],[66583,1,\"𐐿\"],[66584,1,\"𐑀\"],[66585,1,\"𐑁\"],[66586,1,\"𐑂\"],[66587,1,\"𐑃\"],[66588,1,\"𐑄\"],[66589,1,\"𐑅\"],[66590,1,\"𐑆\"],[66591,1,\"𐑇\"],[66592,1,\"𐑈\"],[66593,1,\"𐑉\"],[66594,1,\"𐑊\"],[66595,1,\"𐑋\"],[66596,1,\"𐑌\"],[66597,1,\"𐑍\"],[66598,1,\"𐑎\"],[66599,1,\"𐑏\"],[[66600,66637],2],[[66638,66717],2],[[66718,66719],3],[[66720,66729],2],[[66730,66735],3],[66736,1,\"𐓘\"],[66737,1,\"𐓙\"],[66738,1,\"𐓚\"],[66739,1,\"𐓛\"],[66740,1,\"𐓜\"],[66741,1,\"𐓝\"],[66742,1,\"𐓞\"],[66743,1,\"𐓟\"],[66744,1,\"𐓠\"],[66745,1,\"𐓡\"],[66746,1,\"𐓢\"],[66747,1,\"𐓣\"],[66748,1,\"𐓤\"],[66749,1,\"𐓥\"],[66750,1,\"𐓦\"],[66751,1,\"𐓧\"],[66752,1,\"𐓨\"],[66753,1,\"𐓩\"],[66754,1,\"𐓪\"],[66755,1,\"𐓫\"],[66756,1,\"𐓬\"],[66757,1,\"𐓭\"],[66758,1,\"𐓮\"],[66759,1,\"𐓯\"],[66760,1,\"𐓰\"],[66761,1,\"𐓱\"],[66762,1,\"𐓲\"],[66763,1,\"𐓳\"],[66764,1,\"𐓴\"],[66765,1,\"𐓵\"],[66766,1,\"𐓶\"],[66767,1,\"𐓷\"],[66768,1,\"𐓸\"],[66769,1,\"𐓹\"],[66770,1,\"𐓺\"],[66771,1,\"𐓻\"],[[66772,66775],3],[[66776,66811],2],[[66812,66815],3],[[66816,66855],2],[[66856,66863],3],[[66864,66915],2],[[66916,66926],3],[66927,2],[66928,1,\"𐖗\"],[66929,1,\"𐖘\"],[66930,1,\"𐖙\"],[66931,1,\"𐖚\"],[66932,1,\"𐖛\"],[66933,1,\"𐖜\"],[66934,1,\"𐖝\"],[66935,1,\"𐖞\"],[66936,1,\"𐖟\"],[66937,1,\"𐖠\"],[66938,1,\"𐖡\"],[66939,3],[66940,1,\"𐖣\"],[66941,1,\"𐖤\"],[66942,1,\"𐖥\"],[66943,1,\"𐖦\"],[66944,1,\"𐖧\"],[66945,1,\"𐖨\"],[66946,1,\"𐖩\"],[66947,1,\"𐖪\"],[66948,1,\"𐖫\"],[66949,1,\"𐖬\"],[66950,1,\"𐖭\"],[66951,1,\"𐖮\"],[66952,1,\"𐖯\"],[66953,1,\"𐖰\"],[66954,1,\"𐖱\"],[66955,3],[66956,1,\"𐖳\"],[66957,1,\"𐖴\"],[66958,1,\"𐖵\"],[66959,1,\"𐖶\"],[66960,1,\"𐖷\"],[66961,1,\"𐖸\"],[66962,1,\"𐖹\"],[66963,3],[66964,1,\"𐖻\"],[66965,1,\"𐖼\"],[66966,3],[[66967,66977],2],[66978,3],[[66979,66993],2],[66994,3],[[66995,67001],2],[67002,3],[[67003,67004],2],[[67005,67071],3],[[67072,67382],2],[[67383,67391],3],[[67392,67413],2],[[67414,67423],3],[[67424,67431],2],[[67432,67455],3],[67456,2],[67457,1,\"ː\"],[67458,1,\"ˑ\"],[67459,1,\"æ\"],[67460,1,\"ʙ\"],[67461,1,\"ɓ\"],[67462,3],[67463,1,\"ʣ\"],[67464,1,\"ꭦ\"],[67465,1,\"ʥ\"],[67466,1,\"ʤ\"],[67467,1,\"ɖ\"],[67468,1,\"ɗ\"],[67469,1,\"ᶑ\"],[67470,1,\"ɘ\"],[67471,1,\"ɞ\"],[67472,1,\"ʩ\"],[67473,1,\"ɤ\"],[67474,1,\"ɢ\"],[67475,1,\"ɠ\"],[67476,1,\"ʛ\"],[67477,1,\"ħ\"],[67478,1,\"ʜ\"],[67479,1,\"ɧ\"],[67480,1,\"ʄ\"],[67481,1,\"ʪ\"],[67482,1,\"ʫ\"],[67483,1,\"ɬ\"],[67484,1,\"𝼄\"],[67485,1,\"ꞎ\"],[67486,1,\"ɮ\"],[67487,1,\"𝼅\"],[67488,1,\"ʎ\"],[67489,1,\"𝼆\"],[67490,1,\"ø\"],[67491,1,\"ɶ\"],[67492,1,\"ɷ\"],[67493,1,\"q\"],[67494,1,\"ɺ\"],[67495,1,\"𝼈\"],[67496,1,\"ɽ\"],[67497,1,\"ɾ\"],[67498,1,\"ʀ\"],[67499,1,\"ʨ\"],[67500,1,\"ʦ\"],[67501,1,\"ꭧ\"],[67502,1,\"ʧ\"],[67503,1,\"ʈ\"],[67504,1,\"ⱱ\"],[67505,3],[67506,1,\"ʏ\"],[67507,1,\"ʡ\"],[67508,1,\"ʢ\"],[67509,1,\"ʘ\"],[67510,1,\"ǀ\"],[67511,1,\"ǁ\"],[67512,1,\"ǂ\"],[67513,1,\"𝼊\"],[67514,1,\"𝼞\"],[[67515,67583],3],[[67584,67589],2],[[67590,67591],3],[67592,2],[67593,3],[[67594,67637],2],[67638,3],[[67639,67640],2],[[67641,67643],3],[67644,2],[[67645,67646],3],[67647,2],[[67648,67669],2],[67670,3],[[67671,67679],2],[[67680,67702],2],[[67703,67711],2],[[67712,67742],2],[[67743,67750],3],[[67751,67759],2],[[67760,67807],3],[[67808,67826],2],[67827,3],[[67828,67829],2],[[67830,67834],3],[[67835,67839],2],[[67840,67861],2],[[67862,67865],2],[[67866,67867],2],[[67868,67870],3],[67871,2],[[67872,67897],2],[[67898,67902],3],[67903,2],[[67904,67967],3],[[67968,68023],2],[[68024,68027],3],[[68028,68029],2],[[68030,68031],2],[[68032,68047],2],[[68048,68049],3],[[68050,68095],2],[[68096,68099],2],[68100,3],[[68101,68102],2],[[68103,68107],3],[[68108,68115],2],[68116,3],[[68117,68119],2],[68120,3],[[68121,68147],2],[[68148,68149],2],[[68150,68151],3],[[68152,68154],2],[[68155,68158],3],[68159,2],[[68160,68167],2],[68168,2],[[68169,68175],3],[[68176,68184],2],[[68185,68191],3],[[68192,68220],2],[[68221,68223],2],[[68224,68252],2],[[68253,68255],2],[[68256,68287],3],[[68288,68295],2],[68296,2],[[68297,68326],2],[[68327,68330],3],[[68331,68342],2],[[68343,68351],3],[[68352,68405],2],[[68406,68408],3],[[68409,68415],2],[[68416,68437],2],[[68438,68439],3],[[68440,68447],2],[[68448,68466],2],[[68467,68471],3],[[68472,68479],2],[[68480,68497],2],[[68498,68504],3],[[68505,68508],2],[[68509,68520],3],[[68521,68527],2],[[68528,68607],3],[[68608,68680],2],[[68681,68735],3],[68736,1,\"𐳀\"],[68737,1,\"𐳁\"],[68738,1,\"𐳂\"],[68739,1,\"𐳃\"],[68740,1,\"𐳄\"],[68741,1,\"𐳅\"],[68742,1,\"𐳆\"],[68743,1,\"𐳇\"],[68744,1,\"𐳈\"],[68745,1,\"𐳉\"],[68746,1,\"𐳊\"],[68747,1,\"𐳋\"],[68748,1,\"𐳌\"],[68749,1,\"𐳍\"],[68750,1,\"𐳎\"],[68751,1,\"𐳏\"],[68752,1,\"𐳐\"],[68753,1,\"𐳑\"],[68754,1,\"𐳒\"],[68755,1,\"𐳓\"],[68756,1,\"𐳔\"],[68757,1,\"𐳕\"],[68758,1,\"𐳖\"],[68759,1,\"𐳗\"],[68760,1,\"𐳘\"],[68761,1,\"𐳙\"],[68762,1,\"𐳚\"],[68763,1,\"𐳛\"],[68764,1,\"𐳜\"],[68765,1,\"𐳝\"],[68766,1,\"𐳞\"],[68767,1,\"𐳟\"],[68768,1,\"𐳠\"],[68769,1,\"𐳡\"],[68770,1,\"𐳢\"],[68771,1,\"𐳣\"],[68772,1,\"𐳤\"],[68773,1,\"𐳥\"],[68774,1,\"𐳦\"],[68775,1,\"𐳧\"],[68776,1,\"𐳨\"],[68777,1,\"𐳩\"],[68778,1,\"𐳪\"],[68779,1,\"𐳫\"],[68780,1,\"𐳬\"],[68781,1,\"𐳭\"],[68782,1,\"𐳮\"],[68783,1,\"𐳯\"],[68784,1,\"𐳰\"],[68785,1,\"𐳱\"],[68786,1,\"𐳲\"],[[68787,68799],3],[[68800,68850],2],[[68851,68857],3],[[68858,68863],2],[[68864,68903],2],[[68904,68911],3],[[68912,68921],2],[[68922,69215],3],[[69216,69246],2],[69247,3],[[69248,69289],2],[69290,3],[[69291,69292],2],[69293,2],[[69294,69295],3],[[69296,69297],2],[[69298,69375],3],[[69376,69404],2],[[69405,69414],2],[69415,2],[[69416,69423],3],[[69424,69456],2],[[69457,69465],2],[[69466,69487],3],[[69488,69509],2],[[69510,69513],2],[[69514,69551],3],[[69552,69572],2],[[69573,69579],2],[[69580,69599],3],[[69600,69622],2],[[69623,69631],3],[[69632,69702],2],[[69703,69709],2],[[69710,69713],3],[[69714,69733],2],[[69734,69743],2],[[69744,69749],2],[[69750,69758],3],[69759,2],[[69760,69818],2],[[69819,69820],2],[69821,3],[[69822,69825],2],[69826,2],[[69827,69836],3],[69837,3],[[69838,69839],3],[[69840,69864],2],[[69865,69871],3],[[69872,69881],2],[[69882,69887],3],[[69888,69940],2],[69941,3],[[69942,69951],2],[[69952,69955],2],[[69956,69958],2],[69959,2],[[69960,69967],3],[[69968,70003],2],[[70004,70005],2],[70006,2],[[70007,70015],3],[[70016,70084],2],[[70085,70088],2],[[70089,70092],2],[70093,2],[[70094,70095],2],[[70096,70105],2],[70106,2],[70107,2],[70108,2],[[70109,70111],2],[70112,3],[[70113,70132],2],[[70133,70143],3],[[70144,70161],2],[70162,3],[[70163,70199],2],[[70200,70205],2],[70206,2],[[70207,70271],3],[[70272,70278],2],[70279,3],[70280,2],[70281,3],[[70282,70285],2],[70286,3],[[70287,70301],2],[70302,3],[[70303,70312],2],[70313,2],[[70314,70319],3],[[70320,70378],2],[[70379,70383],3],[[70384,70393],2],[[70394,70399],3],[70400,2],[[70401,70403],2],[70404,3],[[70405,70412],2],[[70413,70414],3],[[70415,70416],2],[[70417,70418],3],[[70419,70440],2],[70441,3],[[70442,70448],2],[70449,3],[[70450,70451],2],[70452,3],[[70453,70457],2],[70458,3],[70459,2],[[70460,70468],2],[[70469,70470],3],[[70471,70472],2],[[70473,70474],3],[[70475,70477],2],[[70478,70479],3],[70480,2],[[70481,70486],3],[70487,2],[[70488,70492],3],[[70493,70499],2],[[70500,70501],3],[[70502,70508],2],[[70509,70511],3],[[70512,70516],2],[[70517,70655],3],[[70656,70730],2],[[70731,70735],2],[[70736,70745],2],[70746,2],[70747,2],[70748,3],[70749,2],[70750,2],[70751,2],[[70752,70753],2],[[70754,70783],3],[[70784,70853],2],[70854,2],[70855,2],[[70856,70863],3],[[70864,70873],2],[[70874,71039],3],[[71040,71093],2],[[71094,71095],3],[[71096,71104],2],[[71105,71113],2],[[71114,71127],2],[[71128,71133],2],[[71134,71167],3],[[71168,71232],2],[[71233,71235],2],[71236,2],[[71237,71247],3],[[71248,71257],2],[[71258,71263],3],[[71264,71276],2],[[71277,71295],3],[[71296,71351],2],[71352,2],[71353,2],[[71354,71359],3],[[71360,71369],2],[[71370,71423],3],[[71424,71449],2],[71450,2],[[71451,71452],3],[[71453,71467],2],[[71468,71471],3],[[71472,71481],2],[[71482,71487],2],[[71488,71494],2],[[71495,71679],3],[[71680,71738],2],[71739,2],[[71740,71839],3],[71840,1,\"𑣀\"],[71841,1,\"𑣁\"],[71842,1,\"𑣂\"],[71843,1,\"𑣃\"],[71844,1,\"𑣄\"],[71845,1,\"𑣅\"],[71846,1,\"𑣆\"],[71847,1,\"𑣇\"],[71848,1,\"𑣈\"],[71849,1,\"𑣉\"],[71850,1,\"𑣊\"],[71851,1,\"𑣋\"],[71852,1,\"𑣌\"],[71853,1,\"𑣍\"],[71854,1,\"𑣎\"],[71855,1,\"𑣏\"],[71856,1,\"𑣐\"],[71857,1,\"𑣑\"],[71858,1,\"𑣒\"],[71859,1,\"𑣓\"],[71860,1,\"𑣔\"],[71861,1,\"𑣕\"],[71862,1,\"𑣖\"],[71863,1,\"𑣗\"],[71864,1,\"𑣘\"],[71865,1,\"𑣙\"],[71866,1,\"𑣚\"],[71867,1,\"𑣛\"],[71868,1,\"𑣜\"],[71869,1,\"𑣝\"],[71870,1,\"𑣞\"],[71871,1,\"𑣟\"],[[71872,71913],2],[[71914,71922],2],[[71923,71934],3],[71935,2],[[71936,71942],2],[[71943,71944],3],[71945,2],[[71946,71947],3],[[71948,71955],2],[71956,3],[[71957,71958],2],[71959,3],[[71960,71989],2],[71990,3],[[71991,71992],2],[[71993,71994],3],[[71995,72003],2],[[72004,72006],2],[[72007,72015],3],[[72016,72025],2],[[72026,72095],3],[[72096,72103],2],[[72104,72105],3],[[72106,72151],2],[[72152,72153],3],[[72154,72161],2],[72162,2],[[72163,72164],2],[[72165,72191],3],[[72192,72254],2],[[72255,72262],2],[72263,2],[[72264,72271],3],[[72272,72323],2],[[72324,72325],2],[[72326,72345],2],[[72346,72348],2],[72349,2],[[72350,72354],2],[[72355,72367],3],[[72368,72383],2],[[72384,72440],2],[[72441,72703],3],[[72704,72712],2],[72713,3],[[72714,72758],2],[72759,3],[[72760,72768],2],[[72769,72773],2],[[72774,72783],3],[[72784,72793],2],[[72794,72812],2],[[72813,72815],3],[[72816,72817],2],[[72818,72847],2],[[72848,72849],3],[[72850,72871],2],[72872,3],[[72873,72886],2],[[72887,72959],3],[[72960,72966],2],[72967,3],[[72968,72969],2],[72970,3],[[72971,73014],2],[[73015,73017],3],[73018,2],[73019,3],[[73020,73021],2],[73022,3],[[73023,73031],2],[[73032,73039],3],[[73040,73049],2],[[73050,73055],3],[[73056,73061],2],[73062,3],[[73063,73064],2],[73065,3],[[73066,73102],2],[73103,3],[[73104,73105],2],[73106,3],[[73107,73112],2],[[73113,73119],3],[[73120,73129],2],[[73130,73439],3],[[73440,73462],2],[[73463,73464],2],[[73465,73647],3],[73648,2],[[73649,73663],3],[[73664,73713],2],[[73714,73726],3],[73727,2],[[73728,74606],2],[[74607,74648],2],[74649,2],[[74650,74751],3],[[74752,74850],2],[[74851,74862],2],[74863,3],[[74864,74867],2],[74868,2],[[74869,74879],3],[[74880,75075],2],[[75076,77711],3],[[77712,77808],2],[[77809,77810],2],[[77811,77823],3],[[77824,78894],2],[78895,3],[[78896,78904],3],[[78905,82943],3],[[82944,83526],2],[[83527,92159],3],[[92160,92728],2],[[92729,92735],3],[[92736,92766],2],[92767,3],[[92768,92777],2],[[92778,92781],3],[[92782,92783],2],[[92784,92862],2],[92863,3],[[92864,92873],2],[[92874,92879],3],[[92880,92909],2],[[92910,92911],3],[[92912,92916],2],[92917,2],[[92918,92927],3],[[92928,92982],2],[[92983,92991],2],[[92992,92995],2],[[92996,92997],2],[[92998,93007],3],[[93008,93017],2],[93018,3],[[93019,93025],2],[93026,3],[[93027,93047],2],[[93048,93052],3],[[93053,93071],2],[[93072,93759],3],[93760,1,\"𖹠\"],[93761,1,\"𖹡\"],[93762,1,\"𖹢\"],[93763,1,\"𖹣\"],[93764,1,\"𖹤\"],[93765,1,\"𖹥\"],[93766,1,\"𖹦\"],[93767,1,\"𖹧\"],[93768,1,\"𖹨\"],[93769,1,\"𖹩\"],[93770,1,\"𖹪\"],[93771,1,\"𖹫\"],[93772,1,\"𖹬\"],[93773,1,\"𖹭\"],[93774,1,\"𖹮\"],[93775,1,\"𖹯\"],[93776,1,\"𖹰\"],[93777,1,\"𖹱\"],[93778,1,\"𖹲\"],[93779,1,\"𖹳\"],[93780,1,\"𖹴\"],[93781,1,\"𖹵\"],[93782,1,\"𖹶\"],[93783,1,\"𖹷\"],[93784,1,\"𖹸\"],[93785,1,\"𖹹\"],[93786,1,\"𖹺\"],[93787,1,\"𖹻\"],[93788,1,\"𖹼\"],[93789,1,\"𖹽\"],[93790,1,\"𖹾\"],[93791,1,\"𖹿\"],[[93792,93823],2],[[93824,93850],2],[[93851,93951],3],[[93952,94020],2],[[94021,94026],2],[[94027,94030],3],[94031,2],[[94032,94078],2],[[94079,94087],2],[[94088,94094],3],[[94095,94111],2],[[94112,94175],3],[94176,2],[94177,2],[94178,2],[94179,2],[94180,2],[[94181,94191],3],[[94192,94193],2],[[94194,94207],3],[[94208,100332],2],[[100333,100337],2],[[100338,100343],2],[[100344,100351],3],[[100352,101106],2],[[101107,101589],2],[[101590,101631],3],[[101632,101640],2],[[101641,110575],3],[[110576,110579],2],[110580,3],[[110581,110587],2],[110588,3],[[110589,110590],2],[110591,3],[[110592,110593],2],[[110594,110878],2],[[110879,110882],2],[[110883,110927],3],[[110928,110930],2],[[110931,110947],3],[[110948,110951],2],[[110952,110959],3],[[110960,111355],2],[[111356,113663],3],[[113664,113770],2],[[113771,113775],3],[[113776,113788],2],[[113789,113791],3],[[113792,113800],2],[[113801,113807],3],[[113808,113817],2],[[113818,113819],3],[113820,2],[[113821,113822],2],[113823,2],[[113824,113827],7],[[113828,118527],3],[[118528,118573],2],[[118574,118575],3],[[118576,118598],2],[[118599,118607],3],[[118608,118723],2],[[118724,118783],3],[[118784,119029],2],[[119030,119039],3],[[119040,119078],2],[[119079,119080],3],[119081,2],[[119082,119133],2],[119134,1,\"𝅗𝅥\"],[119135,1,\"𝅘𝅥\"],[119136,1,\"𝅘𝅥𝅮\"],[119137,1,\"𝅘𝅥𝅯\"],[119138,1,\"𝅘𝅥𝅰\"],[119139,1,\"𝅘𝅥𝅱\"],[119140,1,\"𝅘𝅥𝅲\"],[[119141,119154],2],[[119155,119162],3],[[119163,119226],2],[119227,1,\"𝆹𝅥\"],[119228,1,\"𝆺𝅥\"],[119229,1,\"𝆹𝅥𝅮\"],[119230,1,\"𝆺𝅥𝅮\"],[119231,1,\"𝆹𝅥𝅯\"],[119232,1,\"𝆺𝅥𝅯\"],[[119233,119261],2],[[119262,119272],2],[[119273,119274],2],[[119275,119295],3],[[119296,119365],2],[[119366,119519],3],[[119520,119539],2],[[119540,119551],3],[[119552,119638],2],[[119639,119647],3],[[119648,119665],2],[[119666,119672],2],[[119673,119807],3],[119808,1,\"a\"],[119809,1,\"b\"],[119810,1,\"c\"],[119811,1,\"d\"],[119812,1,\"e\"],[119813,1,\"f\"],[119814,1,\"g\"],[119815,1,\"h\"],[119816,1,\"i\"],[119817,1,\"j\"],[119818,1,\"k\"],[119819,1,\"l\"],[119820,1,\"m\"],[119821,1,\"n\"],[119822,1,\"o\"],[119823,1,\"p\"],[119824,1,\"q\"],[119825,1,\"r\"],[119826,1,\"s\"],[119827,1,\"t\"],[119828,1,\"u\"],[119829,1,\"v\"],[119830,1,\"w\"],[119831,1,\"x\"],[119832,1,\"y\"],[119833,1,\"z\"],[119834,1,\"a\"],[119835,1,\"b\"],[119836,1,\"c\"],[119837,1,\"d\"],[119838,1,\"e\"],[119839,1,\"f\"],[119840,1,\"g\"],[119841,1,\"h\"],[119842,1,\"i\"],[119843,1,\"j\"],[119844,1,\"k\"],[119845,1,\"l\"],[119846,1,\"m\"],[119847,1,\"n\"],[119848,1,\"o\"],[119849,1,\"p\"],[119850,1,\"q\"],[119851,1,\"r\"],[119852,1,\"s\"],[119853,1,\"t\"],[119854,1,\"u\"],[119855,1,\"v\"],[119856,1,\"w\"],[119857,1,\"x\"],[119858,1,\"y\"],[119859,1,\"z\"],[119860,1,\"a\"],[119861,1,\"b\"],[119862,1,\"c\"],[119863,1,\"d\"],[119864,1,\"e\"],[119865,1,\"f\"],[119866,1,\"g\"],[119867,1,\"h\"],[119868,1,\"i\"],[119869,1,\"j\"],[119870,1,\"k\"],[119871,1,\"l\"],[119872,1,\"m\"],[119873,1,\"n\"],[119874,1,\"o\"],[119875,1,\"p\"],[119876,1,\"q\"],[119877,1,\"r\"],[119878,1,\"s\"],[119879,1,\"t\"],[119880,1,\"u\"],[119881,1,\"v\"],[119882,1,\"w\"],[119883,1,\"x\"],[119884,1,\"y\"],[119885,1,\"z\"],[119886,1,\"a\"],[119887,1,\"b\"],[119888,1,\"c\"],[119889,1,\"d\"],[119890,1,\"e\"],[119891,1,\"f\"],[119892,1,\"g\"],[119893,3],[119894,1,\"i\"],[119895,1,\"j\"],[119896,1,\"k\"],[119897,1,\"l\"],[119898,1,\"m\"],[119899,1,\"n\"],[119900,1,\"o\"],[119901,1,\"p\"],[119902,1,\"q\"],[119903,1,\"r\"],[119904,1,\"s\"],[119905,1,\"t\"],[119906,1,\"u\"],[119907,1,\"v\"],[119908,1,\"w\"],[119909,1,\"x\"],[119910,1,\"y\"],[119911,1,\"z\"],[119912,1,\"a\"],[119913,1,\"b\"],[119914,1,\"c\"],[119915,1,\"d\"],[119916,1,\"e\"],[119917,1,\"f\"],[119918,1,\"g\"],[119919,1,\"h\"],[119920,1,\"i\"],[119921,1,\"j\"],[119922,1,\"k\"],[119923,1,\"l\"],[119924,1,\"m\"],[119925,1,\"n\"],[119926,1,\"o\"],[119927,1,\"p\"],[119928,1,\"q\"],[119929,1,\"r\"],[119930,1,\"s\"],[119931,1,\"t\"],[119932,1,\"u\"],[119933,1,\"v\"],[119934,1,\"w\"],[119935,1,\"x\"],[119936,1,\"y\"],[119937,1,\"z\"],[119938,1,\"a\"],[119939,1,\"b\"],[119940,1,\"c\"],[119941,1,\"d\"],[119942,1,\"e\"],[119943,1,\"f\"],[119944,1,\"g\"],[119945,1,\"h\"],[119946,1,\"i\"],[119947,1,\"j\"],[119948,1,\"k\"],[119949,1,\"l\"],[119950,1,\"m\"],[119951,1,\"n\"],[119952,1,\"o\"],[119953,1,\"p\"],[119954,1,\"q\"],[119955,1,\"r\"],[119956,1,\"s\"],[119957,1,\"t\"],[119958,1,\"u\"],[119959,1,\"v\"],[119960,1,\"w\"],[119961,1,\"x\"],[119962,1,\"y\"],[119963,1,\"z\"],[119964,1,\"a\"],[119965,3],[119966,1,\"c\"],[119967,1,\"d\"],[[119968,119969],3],[119970,1,\"g\"],[[119971,119972],3],[119973,1,\"j\"],[119974,1,\"k\"],[[119975,119976],3],[119977,1,\"n\"],[119978,1,\"o\"],[119979,1,\"p\"],[119980,1,\"q\"],[119981,3],[119982,1,\"s\"],[119983,1,\"t\"],[119984,1,\"u\"],[119985,1,\"v\"],[119986,1,\"w\"],[119987,1,\"x\"],[119988,1,\"y\"],[119989,1,\"z\"],[119990,1,\"a\"],[119991,1,\"b\"],[119992,1,\"c\"],[119993,1,\"d\"],[119994,3],[119995,1,\"f\"],[119996,3],[119997,1,\"h\"],[119998,1,\"i\"],[119999,1,\"j\"],[120000,1,\"k\"],[120001,1,\"l\"],[120002,1,\"m\"],[120003,1,\"n\"],[120004,3],[120005,1,\"p\"],[120006,1,\"q\"],[120007,1,\"r\"],[120008,1,\"s\"],[120009,1,\"t\"],[120010,1,\"u\"],[120011,1,\"v\"],[120012,1,\"w\"],[120013,1,\"x\"],[120014,1,\"y\"],[120015,1,\"z\"],[120016,1,\"a\"],[120017,1,\"b\"],[120018,1,\"c\"],[120019,1,\"d\"],[120020,1,\"e\"],[120021,1,\"f\"],[120022,1,\"g\"],[120023,1,\"h\"],[120024,1,\"i\"],[120025,1,\"j\"],[120026,1,\"k\"],[120027,1,\"l\"],[120028,1,\"m\"],[120029,1,\"n\"],[120030,1,\"o\"],[120031,1,\"p\"],[120032,1,\"q\"],[120033,1,\"r\"],[120034,1,\"s\"],[120035,1,\"t\"],[120036,1,\"u\"],[120037,1,\"v\"],[120038,1,\"w\"],[120039,1,\"x\"],[120040,1,\"y\"],[120041,1,\"z\"],[120042,1,\"a\"],[120043,1,\"b\"],[120044,1,\"c\"],[120045,1,\"d\"],[120046,1,\"e\"],[120047,1,\"f\"],[120048,1,\"g\"],[120049,1,\"h\"],[120050,1,\"i\"],[120051,1,\"j\"],[120052,1,\"k\"],[120053,1,\"l\"],[120054,1,\"m\"],[120055,1,\"n\"],[120056,1,\"o\"],[120057,1,\"p\"],[120058,1,\"q\"],[120059,1,\"r\"],[120060,1,\"s\"],[120061,1,\"t\"],[120062,1,\"u\"],[120063,1,\"v\"],[120064,1,\"w\"],[120065,1,\"x\"],[120066,1,\"y\"],[120067,1,\"z\"],[120068,1,\"a\"],[120069,1,\"b\"],[120070,3],[120071,1,\"d\"],[120072,1,\"e\"],[120073,1,\"f\"],[120074,1,\"g\"],[[120075,120076],3],[120077,1,\"j\"],[120078,1,\"k\"],[120079,1,\"l\"],[120080,1,\"m\"],[120081,1,\"n\"],[120082,1,\"o\"],[120083,1,\"p\"],[120084,1,\"q\"],[120085,3],[120086,1,\"s\"],[120087,1,\"t\"],[120088,1,\"u\"],[120089,1,\"v\"],[120090,1,\"w\"],[120091,1,\"x\"],[120092,1,\"y\"],[120093,3],[120094,1,\"a\"],[120095,1,\"b\"],[120096,1,\"c\"],[120097,1,\"d\"],[120098,1,\"e\"],[120099,1,\"f\"],[120100,1,\"g\"],[120101,1,\"h\"],[120102,1,\"i\"],[120103,1,\"j\"],[120104,1,\"k\"],[120105,1,\"l\"],[120106,1,\"m\"],[120107,1,\"n\"],[120108,1,\"o\"],[120109,1,\"p\"],[120110,1,\"q\"],[120111,1,\"r\"],[120112,1,\"s\"],[120113,1,\"t\"],[120114,1,\"u\"],[120115,1,\"v\"],[120116,1,\"w\"],[120117,1,\"x\"],[120118,1,\"y\"],[120119,1,\"z\"],[120120,1,\"a\"],[120121,1,\"b\"],[120122,3],[120123,1,\"d\"],[120124,1,\"e\"],[120125,1,\"f\"],[120126,1,\"g\"],[120127,3],[120128,1,\"i\"],[120129,1,\"j\"],[120130,1,\"k\"],[120131,1,\"l\"],[120132,1,\"m\"],[120133,3],[120134,1,\"o\"],[[120135,120137],3],[120138,1,\"s\"],[120139,1,\"t\"],[120140,1,\"u\"],[120141,1,\"v\"],[120142,1,\"w\"],[120143,1,\"x\"],[120144,1,\"y\"],[120145,3],[120146,1,\"a\"],[120147,1,\"b\"],[120148,1,\"c\"],[120149,1,\"d\"],[120150,1,\"e\"],[120151,1,\"f\"],[120152,1,\"g\"],[120153,1,\"h\"],[120154,1,\"i\"],[120155,1,\"j\"],[120156,1,\"k\"],[120157,1,\"l\"],[120158,1,\"m\"],[120159,1,\"n\"],[120160,1,\"o\"],[120161,1,\"p\"],[120162,1,\"q\"],[120163,1,\"r\"],[120164,1,\"s\"],[120165,1,\"t\"],[120166,1,\"u\"],[120167,1,\"v\"],[120168,1,\"w\"],[120169,1,\"x\"],[120170,1,\"y\"],[120171,1,\"z\"],[120172,1,\"a\"],[120173,1,\"b\"],[120174,1,\"c\"],[120175,1,\"d\"],[120176,1,\"e\"],[120177,1,\"f\"],[120178,1,\"g\"],[120179,1,\"h\"],[120180,1,\"i\"],[120181,1,\"j\"],[120182,1,\"k\"],[120183,1,\"l\"],[120184,1,\"m\"],[120185,1,\"n\"],[120186,1,\"o\"],[120187,1,\"p\"],[120188,1,\"q\"],[120189,1,\"r\"],[120190,1,\"s\"],[120191,1,\"t\"],[120192,1,\"u\"],[120193,1,\"v\"],[120194,1,\"w\"],[120195,1,\"x\"],[120196,1,\"y\"],[120197,1,\"z\"],[120198,1,\"a\"],[120199,1,\"b\"],[120200,1,\"c\"],[120201,1,\"d\"],[120202,1,\"e\"],[120203,1,\"f\"],[120204,1,\"g\"],[120205,1,\"h\"],[120206,1,\"i\"],[120207,1,\"j\"],[120208,1,\"k\"],[120209,1,\"l\"],[120210,1,\"m\"],[120211,1,\"n\"],[120212,1,\"o\"],[120213,1,\"p\"],[120214,1,\"q\"],[120215,1,\"r\"],[120216,1,\"s\"],[120217,1,\"t\"],[120218,1,\"u\"],[120219,1,\"v\"],[120220,1,\"w\"],[120221,1,\"x\"],[120222,1,\"y\"],[120223,1,\"z\"],[120224,1,\"a\"],[120225,1,\"b\"],[120226,1,\"c\"],[120227,1,\"d\"],[120228,1,\"e\"],[120229,1,\"f\"],[120230,1,\"g\"],[120231,1,\"h\"],[120232,1,\"i\"],[120233,1,\"j\"],[120234,1,\"k\"],[120235,1,\"l\"],[120236,1,\"m\"],[120237,1,\"n\"],[120238,1,\"o\"],[120239,1,\"p\"],[120240,1,\"q\"],[120241,1,\"r\"],[120242,1,\"s\"],[120243,1,\"t\"],[120244,1,\"u\"],[120245,1,\"v\"],[120246,1,\"w\"],[120247,1,\"x\"],[120248,1,\"y\"],[120249,1,\"z\"],[120250,1,\"a\"],[120251,1,\"b\"],[120252,1,\"c\"],[120253,1,\"d\"],[120254,1,\"e\"],[120255,1,\"f\"],[120256,1,\"g\"],[120257,1,\"h\"],[120258,1,\"i\"],[120259,1,\"j\"],[120260,1,\"k\"],[120261,1,\"l\"],[120262,1,\"m\"],[120263,1,\"n\"],[120264,1,\"o\"],[120265,1,\"p\"],[120266,1,\"q\"],[120267,1,\"r\"],[120268,1,\"s\"],[120269,1,\"t\"],[120270,1,\"u\"],[120271,1,\"v\"],[120272,1,\"w\"],[120273,1,\"x\"],[120274,1,\"y\"],[120275,1,\"z\"],[120276,1,\"a\"],[120277,1,\"b\"],[120278,1,\"c\"],[120279,1,\"d\"],[120280,1,\"e\"],[120281,1,\"f\"],[120282,1,\"g\"],[120283,1,\"h\"],[120284,1,\"i\"],[120285,1,\"j\"],[120286,1,\"k\"],[120287,1,\"l\"],[120288,1,\"m\"],[120289,1,\"n\"],[120290,1,\"o\"],[120291,1,\"p\"],[120292,1,\"q\"],[120293,1,\"r\"],[120294,1,\"s\"],[120295,1,\"t\"],[120296,1,\"u\"],[120297,1,\"v\"],[120298,1,\"w\"],[120299,1,\"x\"],[120300,1,\"y\"],[120301,1,\"z\"],[120302,1,\"a\"],[120303,1,\"b\"],[120304,1,\"c\"],[120305,1,\"d\"],[120306,1,\"e\"],[120307,1,\"f\"],[120308,1,\"g\"],[120309,1,\"h\"],[120310,1,\"i\"],[120311,1,\"j\"],[120312,1,\"k\"],[120313,1,\"l\"],[120314,1,\"m\"],[120315,1,\"n\"],[120316,1,\"o\"],[120317,1,\"p\"],[120318,1,\"q\"],[120319,1,\"r\"],[120320,1,\"s\"],[120321,1,\"t\"],[120322,1,\"u\"],[120323,1,\"v\"],[120324,1,\"w\"],[120325,1,\"x\"],[120326,1,\"y\"],[120327,1,\"z\"],[120328,1,\"a\"],[120329,1,\"b\"],[120330,1,\"c\"],[120331,1,\"d\"],[120332,1,\"e\"],[120333,1,\"f\"],[120334,1,\"g\"],[120335,1,\"h\"],[120336,1,\"i\"],[120337,1,\"j\"],[120338,1,\"k\"],[120339,1,\"l\"],[120340,1,\"m\"],[120341,1,\"n\"],[120342,1,\"o\"],[120343,1,\"p\"],[120344,1,\"q\"],[120345,1,\"r\"],[120346,1,\"s\"],[120347,1,\"t\"],[120348,1,\"u\"],[120349,1,\"v\"],[120350,1,\"w\"],[120351,1,\"x\"],[120352,1,\"y\"],[120353,1,\"z\"],[120354,1,\"a\"],[120355,1,\"b\"],[120356,1,\"c\"],[120357,1,\"d\"],[120358,1,\"e\"],[120359,1,\"f\"],[120360,1,\"g\"],[120361,1,\"h\"],[120362,1,\"i\"],[120363,1,\"j\"],[120364,1,\"k\"],[120365,1,\"l\"],[120366,1,\"m\"],[120367,1,\"n\"],[120368,1,\"o\"],[120369,1,\"p\"],[120370,1,\"q\"],[120371,1,\"r\"],[120372,1,\"s\"],[120373,1,\"t\"],[120374,1,\"u\"],[120375,1,\"v\"],[120376,1,\"w\"],[120377,1,\"x\"],[120378,1,\"y\"],[120379,1,\"z\"],[120380,1,\"a\"],[120381,1,\"b\"],[120382,1,\"c\"],[120383,1,\"d\"],[120384,1,\"e\"],[120385,1,\"f\"],[120386,1,\"g\"],[120387,1,\"h\"],[120388,1,\"i\"],[120389,1,\"j\"],[120390,1,\"k\"],[120391,1,\"l\"],[120392,1,\"m\"],[120393,1,\"n\"],[120394,1,\"o\"],[120395,1,\"p\"],[120396,1,\"q\"],[120397,1,\"r\"],[120398,1,\"s\"],[120399,1,\"t\"],[120400,1,\"u\"],[120401,1,\"v\"],[120402,1,\"w\"],[120403,1,\"x\"],[120404,1,\"y\"],[120405,1,\"z\"],[120406,1,\"a\"],[120407,1,\"b\"],[120408,1,\"c\"],[120409,1,\"d\"],[120410,1,\"e\"],[120411,1,\"f\"],[120412,1,\"g\"],[120413,1,\"h\"],[120414,1,\"i\"],[120415,1,\"j\"],[120416,1,\"k\"],[120417,1,\"l\"],[120418,1,\"m\"],[120419,1,\"n\"],[120420,1,\"o\"],[120421,1,\"p\"],[120422,1,\"q\"],[120423,1,\"r\"],[120424,1,\"s\"],[120425,1,\"t\"],[120426,1,\"u\"],[120427,1,\"v\"],[120428,1,\"w\"],[120429,1,\"x\"],[120430,1,\"y\"],[120431,1,\"z\"],[120432,1,\"a\"],[120433,1,\"b\"],[120434,1,\"c\"],[120435,1,\"d\"],[120436,1,\"e\"],[120437,1,\"f\"],[120438,1,\"g\"],[120439,1,\"h\"],[120440,1,\"i\"],[120441,1,\"j\"],[120442,1,\"k\"],[120443,1,\"l\"],[120444,1,\"m\"],[120445,1,\"n\"],[120446,1,\"o\"],[120447,1,\"p\"],[120448,1,\"q\"],[120449,1,\"r\"],[120450,1,\"s\"],[120451,1,\"t\"],[120452,1,\"u\"],[120453,1,\"v\"],[120454,1,\"w\"],[120455,1,\"x\"],[120456,1,\"y\"],[120457,1,\"z\"],[120458,1,\"a\"],[120459,1,\"b\"],[120460,1,\"c\"],[120461,1,\"d\"],[120462,1,\"e\"],[120463,1,\"f\"],[120464,1,\"g\"],[120465,1,\"h\"],[120466,1,\"i\"],[120467,1,\"j\"],[120468,1,\"k\"],[120469,1,\"l\"],[120470,1,\"m\"],[120471,1,\"n\"],[120472,1,\"o\"],[120473,1,\"p\"],[120474,1,\"q\"],[120475,1,\"r\"],[120476,1,\"s\"],[120477,1,\"t\"],[120478,1,\"u\"],[120479,1,\"v\"],[120480,1,\"w\"],[120481,1,\"x\"],[120482,1,\"y\"],[120483,1,\"z\"],[120484,1,\"ı\"],[120485,1,\"ȷ\"],[[120486,120487],3],[120488,1,\"α\"],[120489,1,\"β\"],[120490,1,\"γ\"],[120491,1,\"δ\"],[120492,1,\"ε\"],[120493,1,\"ζ\"],[120494,1,\"η\"],[120495,1,\"θ\"],[120496,1,\"ι\"],[120497,1,\"κ\"],[120498,1,\"λ\"],[120499,1,\"μ\"],[120500,1,\"ν\"],[120501,1,\"ξ\"],[120502,1,\"ο\"],[120503,1,\"π\"],[120504,1,\"ρ\"],[120505,1,\"θ\"],[120506,1,\"σ\"],[120507,1,\"τ\"],[120508,1,\"υ\"],[120509,1,\"φ\"],[120510,1,\"χ\"],[120511,1,\"ψ\"],[120512,1,\"ω\"],[120513,1,\"∇\"],[120514,1,\"α\"],[120515,1,\"β\"],[120516,1,\"γ\"],[120517,1,\"δ\"],[120518,1,\"ε\"],[120519,1,\"ζ\"],[120520,1,\"η\"],[120521,1,\"θ\"],[120522,1,\"ι\"],[120523,1,\"κ\"],[120524,1,\"λ\"],[120525,1,\"μ\"],[120526,1,\"ν\"],[120527,1,\"ξ\"],[120528,1,\"ο\"],[120529,1,\"π\"],[120530,1,\"ρ\"],[[120531,120532],1,\"σ\"],[120533,1,\"τ\"],[120534,1,\"υ\"],[120535,1,\"φ\"],[120536,1,\"χ\"],[120537,1,\"ψ\"],[120538,1,\"ω\"],[120539,1,\"∂\"],[120540,1,\"ε\"],[120541,1,\"θ\"],[120542,1,\"κ\"],[120543,1,\"φ\"],[120544,1,\"ρ\"],[120545,1,\"π\"],[120546,1,\"α\"],[120547,1,\"β\"],[120548,1,\"γ\"],[120549,1,\"δ\"],[120550,1,\"ε\"],[120551,1,\"ζ\"],[120552,1,\"η\"],[120553,1,\"θ\"],[120554,1,\"ι\"],[120555,1,\"κ\"],[120556,1,\"λ\"],[120557,1,\"μ\"],[120558,1,\"ν\"],[120559,1,\"ξ\"],[120560,1,\"ο\"],[120561,1,\"π\"],[120562,1,\"ρ\"],[120563,1,\"θ\"],[120564,1,\"σ\"],[120565,1,\"τ\"],[120566,1,\"υ\"],[120567,1,\"φ\"],[120568,1,\"χ\"],[120569,1,\"ψ\"],[120570,1,\"ω\"],[120571,1,\"∇\"],[120572,1,\"α\"],[120573,1,\"β\"],[120574,1,\"γ\"],[120575,1,\"δ\"],[120576,1,\"ε\"],[120577,1,\"ζ\"],[120578,1,\"η\"],[120579,1,\"θ\"],[120580,1,\"ι\"],[120581,1,\"κ\"],[120582,1,\"λ\"],[120583,1,\"μ\"],[120584,1,\"ν\"],[120585,1,\"ξ\"],[120586,1,\"ο\"],[120587,1,\"π\"],[120588,1,\"ρ\"],[[120589,120590],1,\"σ\"],[120591,1,\"τ\"],[120592,1,\"υ\"],[120593,1,\"φ\"],[120594,1,\"χ\"],[120595,1,\"ψ\"],[120596,1,\"ω\"],[120597,1,\"∂\"],[120598,1,\"ε\"],[120599,1,\"θ\"],[120600,1,\"κ\"],[120601,1,\"φ\"],[120602,1,\"ρ\"],[120603,1,\"π\"],[120604,1,\"α\"],[120605,1,\"β\"],[120606,1,\"γ\"],[120607,1,\"δ\"],[120608,1,\"ε\"],[120609,1,\"ζ\"],[120610,1,\"η\"],[120611,1,\"θ\"],[120612,1,\"ι\"],[120613,1,\"κ\"],[120614,1,\"λ\"],[120615,1,\"μ\"],[120616,1,\"ν\"],[120617,1,\"ξ\"],[120618,1,\"ο\"],[120619,1,\"π\"],[120620,1,\"ρ\"],[120621,1,\"θ\"],[120622,1,\"σ\"],[120623,1,\"τ\"],[120624,1,\"υ\"],[120625,1,\"φ\"],[120626,1,\"χ\"],[120627,1,\"ψ\"],[120628,1,\"ω\"],[120629,1,\"∇\"],[120630,1,\"α\"],[120631,1,\"β\"],[120632,1,\"γ\"],[120633,1,\"δ\"],[120634,1,\"ε\"],[120635,1,\"ζ\"],[120636,1,\"η\"],[120637,1,\"θ\"],[120638,1,\"ι\"],[120639,1,\"κ\"],[120640,1,\"λ\"],[120641,1,\"μ\"],[120642,1,\"ν\"],[120643,1,\"ξ\"],[120644,1,\"ο\"],[120645,1,\"π\"],[120646,1,\"ρ\"],[[120647,120648],1,\"σ\"],[120649,1,\"τ\"],[120650,1,\"υ\"],[120651,1,\"φ\"],[120652,1,\"χ\"],[120653,1,\"ψ\"],[120654,1,\"ω\"],[120655,1,\"∂\"],[120656,1,\"ε\"],[120657,1,\"θ\"],[120658,1,\"κ\"],[120659,1,\"φ\"],[120660,1,\"ρ\"],[120661,1,\"π\"],[120662,1,\"α\"],[120663,1,\"β\"],[120664,1,\"γ\"],[120665,1,\"δ\"],[120666,1,\"ε\"],[120667,1,\"ζ\"],[120668,1,\"η\"],[120669,1,\"θ\"],[120670,1,\"ι\"],[120671,1,\"κ\"],[120672,1,\"λ\"],[120673,1,\"μ\"],[120674,1,\"ν\"],[120675,1,\"ξ\"],[120676,1,\"ο\"],[120677,1,\"π\"],[120678,1,\"ρ\"],[120679,1,\"θ\"],[120680,1,\"σ\"],[120681,1,\"τ\"],[120682,1,\"υ\"],[120683,1,\"φ\"],[120684,1,\"χ\"],[120685,1,\"ψ\"],[120686,1,\"ω\"],[120687,1,\"∇\"],[120688,1,\"α\"],[120689,1,\"β\"],[120690,1,\"γ\"],[120691,1,\"δ\"],[120692,1,\"ε\"],[120693,1,\"ζ\"],[120694,1,\"η\"],[120695,1,\"θ\"],[120696,1,\"ι\"],[120697,1,\"κ\"],[120698,1,\"λ\"],[120699,1,\"μ\"],[120700,1,\"ν\"],[120701,1,\"ξ\"],[120702,1,\"ο\"],[120703,1,\"π\"],[120704,1,\"ρ\"],[[120705,120706],1,\"σ\"],[120707,1,\"τ\"],[120708,1,\"υ\"],[120709,1,\"φ\"],[120710,1,\"χ\"],[120711,1,\"ψ\"],[120712,1,\"ω\"],[120713,1,\"∂\"],[120714,1,\"ε\"],[120715,1,\"θ\"],[120716,1,\"κ\"],[120717,1,\"φ\"],[120718,1,\"ρ\"],[120719,1,\"π\"],[120720,1,\"α\"],[120721,1,\"β\"],[120722,1,\"γ\"],[120723,1,\"δ\"],[120724,1,\"ε\"],[120725,1,\"ζ\"],[120726,1,\"η\"],[120727,1,\"θ\"],[120728,1,\"ι\"],[120729,1,\"κ\"],[120730,1,\"λ\"],[120731,1,\"μ\"],[120732,1,\"ν\"],[120733,1,\"ξ\"],[120734,1,\"ο\"],[120735,1,\"π\"],[120736,1,\"ρ\"],[120737,1,\"θ\"],[120738,1,\"σ\"],[120739,1,\"τ\"],[120740,1,\"υ\"],[120741,1,\"φ\"],[120742,1,\"χ\"],[120743,1,\"ψ\"],[120744,1,\"ω\"],[120745,1,\"∇\"],[120746,1,\"α\"],[120747,1,\"β\"],[120748,1,\"γ\"],[120749,1,\"δ\"],[120750,1,\"ε\"],[120751,1,\"ζ\"],[120752,1,\"η\"],[120753,1,\"θ\"],[120754,1,\"ι\"],[120755,1,\"κ\"],[120756,1,\"λ\"],[120757,1,\"μ\"],[120758,1,\"ν\"],[120759,1,\"ξ\"],[120760,1,\"ο\"],[120761,1,\"π\"],[120762,1,\"ρ\"],[[120763,120764],1,\"σ\"],[120765,1,\"τ\"],[120766,1,\"υ\"],[120767,1,\"φ\"],[120768,1,\"χ\"],[120769,1,\"ψ\"],[120770,1,\"ω\"],[120771,1,\"∂\"],[120772,1,\"ε\"],[120773,1,\"θ\"],[120774,1,\"κ\"],[120775,1,\"φ\"],[120776,1,\"ρ\"],[120777,1,\"π\"],[[120778,120779],1,\"ϝ\"],[[120780,120781],3],[120782,1,\"0\"],[120783,1,\"1\"],[120784,1,\"2\"],[120785,1,\"3\"],[120786,1,\"4\"],[120787,1,\"5\"],[120788,1,\"6\"],[120789,1,\"7\"],[120790,1,\"8\"],[120791,1,\"9\"],[120792,1,\"0\"],[120793,1,\"1\"],[120794,1,\"2\"],[120795,1,\"3\"],[120796,1,\"4\"],[120797,1,\"5\"],[120798,1,\"6\"],[120799,1,\"7\"],[120800,1,\"8\"],[120801,1,\"9\"],[120802,1,\"0\"],[120803,1,\"1\"],[120804,1,\"2\"],[120805,1,\"3\"],[120806,1,\"4\"],[120807,1,\"5\"],[120808,1,\"6\"],[120809,1,\"7\"],[120810,1,\"8\"],[120811,1,\"9\"],[120812,1,\"0\"],[120813,1,\"1\"],[120814,1,\"2\"],[120815,1,\"3\"],[120816,1,\"4\"],[120817,1,\"5\"],[120818,1,\"6\"],[120819,1,\"7\"],[120820,1,\"8\"],[120821,1,\"9\"],[120822,1,\"0\"],[120823,1,\"1\"],[120824,1,\"2\"],[120825,1,\"3\"],[120826,1,\"4\"],[120827,1,\"5\"],[120828,1,\"6\"],[120829,1,\"7\"],[120830,1,\"8\"],[120831,1,\"9\"],[[120832,121343],2],[[121344,121398],2],[[121399,121402],2],[[121403,121452],2],[[121453,121460],2],[121461,2],[[121462,121475],2],[121476,2],[[121477,121483],2],[[121484,121498],3],[[121499,121503],2],[121504,3],[[121505,121519],2],[[121520,122623],3],[[122624,122654],2],[[122655,122879],3],[[122880,122886],2],[122887,3],[[122888,122904],2],[[122905,122906],3],[[122907,122913],2],[122914,3],[[122915,122916],2],[122917,3],[[122918,122922],2],[[122923,123135],3],[[123136,123180],2],[[123181,123183],3],[[123184,123197],2],[[123198,123199],3],[[123200,123209],2],[[123210,123213],3],[123214,2],[123215,2],[[123216,123535],3],[[123536,123566],2],[[123567,123583],3],[[123584,123641],2],[[123642,123646],3],[123647,2],[[123648,124895],3],[[124896,124902],2],[124903,3],[[124904,124907],2],[124908,3],[[124909,124910],2],[124911,3],[[124912,124926],2],[124927,3],[[124928,125124],2],[[125125,125126],3],[[125127,125135],2],[[125136,125142],2],[[125143,125183],3],[125184,1,\"𞤢\"],[125185,1,\"𞤣\"],[125186,1,\"𞤤\"],[125187,1,\"𞤥\"],[125188,1,\"𞤦\"],[125189,1,\"𞤧\"],[125190,1,\"𞤨\"],[125191,1,\"𞤩\"],[125192,1,\"𞤪\"],[125193,1,\"𞤫\"],[125194,1,\"𞤬\"],[125195,1,\"𞤭\"],[125196,1,\"𞤮\"],[125197,1,\"𞤯\"],[125198,1,\"𞤰\"],[125199,1,\"𞤱\"],[125200,1,\"𞤲\"],[125201,1,\"𞤳\"],[125202,1,\"𞤴\"],[125203,1,\"𞤵\"],[125204,1,\"𞤶\"],[125205,1,\"𞤷\"],[125206,1,\"𞤸\"],[125207,1,\"𞤹\"],[125208,1,\"𞤺\"],[125209,1,\"𞤻\"],[125210,1,\"𞤼\"],[125211,1,\"𞤽\"],[125212,1,\"𞤾\"],[125213,1,\"𞤿\"],[125214,1,\"𞥀\"],[125215,1,\"𞥁\"],[125216,1,\"𞥂\"],[125217,1,\"𞥃\"],[[125218,125258],2],[125259,2],[[125260,125263],3],[[125264,125273],2],[[125274,125277],3],[[125278,125279],2],[[125280,126064],3],[[126065,126132],2],[[126133,126208],3],[[126209,126269],2],[[126270,126463],3],[126464,1,\"ا\"],[126465,1,\"ب\"],[126466,1,\"ج\"],[126467,1,\"د\"],[126468,3],[126469,1,\"و\"],[126470,1,\"ز\"],[126471,1,\"ح\"],[126472,1,\"ط\"],[126473,1,\"ي\"],[126474,1,\"ك\"],[126475,1,\"ل\"],[126476,1,\"م\"],[126477,1,\"ن\"],[126478,1,\"س\"],[126479,1,\"ع\"],[126480,1,\"ف\"],[126481,1,\"ص\"],[126482,1,\"ق\"],[126483,1,\"ر\"],[126484,1,\"ش\"],[126485,1,\"ت\"],[126486,1,\"ث\"],[126487,1,\"خ\"],[126488,1,\"ذ\"],[126489,1,\"ض\"],[126490,1,\"ظ\"],[126491,1,\"غ\"],[126492,1,\"ٮ\"],[126493,1,\"ں\"],[126494,1,\"ڡ\"],[126495,1,\"ٯ\"],[126496,3],[126497,1,\"ب\"],[126498,1,\"ج\"],[126499,3],[126500,1,\"ه\"],[[126501,126502],3],[126503,1,\"ح\"],[126504,3],[126505,1,\"ي\"],[126506,1,\"ك\"],[126507,1,\"ل\"],[126508,1,\"م\"],[126509,1,\"ن\"],[126510,1,\"س\"],[126511,1,\"ع\"],[126512,1,\"ف\"],[126513,1,\"ص\"],[126514,1,\"ق\"],[126515,3],[126516,1,\"ش\"],[126517,1,\"ت\"],[126518,1,\"ث\"],[126519,1,\"خ\"],[126520,3],[126521,1,\"ض\"],[126522,3],[126523,1,\"غ\"],[[126524,126529],3],[126530,1,\"ج\"],[[126531,126534],3],[126535,1,\"ح\"],[126536,3],[126537,1,\"ي\"],[126538,3],[126539,1,\"ل\"],[126540,3],[126541,1,\"ن\"],[126542,1,\"س\"],[126543,1,\"ع\"],[126544,3],[126545,1,\"ص\"],[126546,1,\"ق\"],[126547,3],[126548,1,\"ش\"],[[126549,126550],3],[126551,1,\"خ\"],[126552,3],[126553,1,\"ض\"],[126554,3],[126555,1,\"غ\"],[126556,3],[126557,1,\"ں\"],[126558,3],[126559,1,\"ٯ\"],[126560,3],[126561,1,\"ب\"],[126562,1,\"ج\"],[126563,3],[126564,1,\"ه\"],[[126565,126566],3],[126567,1,\"ح\"],[126568,1,\"ط\"],[126569,1,\"ي\"],[126570,1,\"ك\"],[126571,3],[126572,1,\"م\"],[126573,1,\"ن\"],[126574,1,\"س\"],[126575,1,\"ع\"],[126576,1,\"ف\"],[126577,1,\"ص\"],[126578,1,\"ق\"],[126579,3],[126580,1,\"ش\"],[126581,1,\"ت\"],[126582,1,\"ث\"],[126583,1,\"خ\"],[126584,3],[126585,1,\"ض\"],[126586,1,\"ظ\"],[126587,1,\"غ\"],[126588,1,\"ٮ\"],[126589,3],[126590,1,\"ڡ\"],[126591,3],[126592,1,\"ا\"],[126593,1,\"ب\"],[126594,1,\"ج\"],[126595,1,\"د\"],[126596,1,\"ه\"],[126597,1,\"و\"],[126598,1,\"ز\"],[126599,1,\"ح\"],[126600,1,\"ط\"],[126601,1,\"ي\"],[126602,3],[126603,1,\"ل\"],[126604,1,\"م\"],[126605,1,\"ن\"],[126606,1,\"س\"],[126607,1,\"ع\"],[126608,1,\"ف\"],[126609,1,\"ص\"],[126610,1,\"ق\"],[126611,1,\"ر\"],[126612,1,\"ش\"],[126613,1,\"ت\"],[126614,1,\"ث\"],[126615,1,\"خ\"],[126616,1,\"ذ\"],[126617,1,\"ض\"],[126618,1,\"ظ\"],[126619,1,\"غ\"],[[126620,126624],3],[126625,1,\"ب\"],[126626,1,\"ج\"],[126627,1,\"د\"],[126628,3],[126629,1,\"و\"],[126630,1,\"ز\"],[126631,1,\"ح\"],[126632,1,\"ط\"],[126633,1,\"ي\"],[126634,3],[126635,1,\"ل\"],[126636,1,\"م\"],[126637,1,\"ن\"],[126638,1,\"س\"],[126639,1,\"ع\"],[126640,1,\"ف\"],[126641,1,\"ص\"],[126642,1,\"ق\"],[126643,1,\"ر\"],[126644,1,\"ش\"],[126645,1,\"ت\"],[126646,1,\"ث\"],[126647,1,\"خ\"],[126648,1,\"ذ\"],[126649,1,\"ض\"],[126650,1,\"ظ\"],[126651,1,\"غ\"],[[126652,126703],3],[[126704,126705],2],[[126706,126975],3],[[126976,127019],2],[[127020,127023],3],[[127024,127123],2],[[127124,127135],3],[[127136,127150],2],[[127151,127152],3],[[127153,127166],2],[127167,2],[127168,3],[[127169,127183],2],[127184,3],[[127185,127199],2],[[127200,127221],2],[[127222,127231],3],[127232,3],[127233,5,\"0,\"],[127234,5,\"1,\"],[127235,5,\"2,\"],[127236,5,\"3,\"],[127237,5,\"4,\"],[127238,5,\"5,\"],[127239,5,\"6,\"],[127240,5,\"7,\"],[127241,5,\"8,\"],[127242,5,\"9,\"],[[127243,127244],2],[[127245,127247],2],[127248,5,\"(a)\"],[127249,5,\"(b)\"],[127250,5,\"(c)\"],[127251,5,\"(d)\"],[127252,5,\"(e)\"],[127253,5,\"(f)\"],[127254,5,\"(g)\"],[127255,5,\"(h)\"],[127256,5,\"(i)\"],[127257,5,\"(j)\"],[127258,5,\"(k)\"],[127259,5,\"(l)\"],[127260,5,\"(m)\"],[127261,5,\"(n)\"],[127262,5,\"(o)\"],[127263,5,\"(p)\"],[127264,5,\"(q)\"],[127265,5,\"(r)\"],[127266,5,\"(s)\"],[127267,5,\"(t)\"],[127268,5,\"(u)\"],[127269,5,\"(v)\"],[127270,5,\"(w)\"],[127271,5,\"(x)\"],[127272,5,\"(y)\"],[127273,5,\"(z)\"],[127274,1,\"〔s〕\"],[127275,1,\"c\"],[127276,1,\"r\"],[127277,1,\"cd\"],[127278,1,\"wz\"],[127279,2],[127280,1,\"a\"],[127281,1,\"b\"],[127282,1,\"c\"],[127283,1,\"d\"],[127284,1,\"e\"],[127285,1,\"f\"],[127286,1,\"g\"],[127287,1,\"h\"],[127288,1,\"i\"],[127289,1,\"j\"],[127290,1,\"k\"],[127291,1,\"l\"],[127292,1,\"m\"],[127293,1,\"n\"],[127294,1,\"o\"],[127295,1,\"p\"],[127296,1,\"q\"],[127297,1,\"r\"],[127298,1,\"s\"],[127299,1,\"t\"],[127300,1,\"u\"],[127301,1,\"v\"],[127302,1,\"w\"],[127303,1,\"x\"],[127304,1,\"y\"],[127305,1,\"z\"],[127306,1,\"hv\"],[127307,1,\"mv\"],[127308,1,\"sd\"],[127309,1,\"ss\"],[127310,1,\"ppv\"],[127311,1,\"wc\"],[[127312,127318],2],[127319,2],[[127320,127326],2],[127327,2],[[127328,127337],2],[127338,1,\"mc\"],[127339,1,\"md\"],[127340,1,\"mr\"],[[127341,127343],2],[[127344,127352],2],[127353,2],[127354,2],[[127355,127356],2],[[127357,127358],2],[127359,2],[[127360,127369],2],[[127370,127373],2],[[127374,127375],2],[127376,1,\"dj\"],[[127377,127386],2],[[127387,127404],2],[127405,2],[[127406,127461],3],[[127462,127487],2],[127488,1,\"ほか\"],[127489,1,\"ココ\"],[127490,1,\"サ\"],[[127491,127503],3],[127504,1,\"手\"],[127505,1,\"字\"],[127506,1,\"双\"],[127507,1,\"デ\"],[127508,1,\"二\"],[127509,1,\"多\"],[127510,1,\"解\"],[127511,1,\"天\"],[127512,1,\"交\"],[127513,1,\"映\"],[127514,1,\"無\"],[127515,1,\"料\"],[127516,1,\"前\"],[127517,1,\"後\"],[127518,1,\"再\"],[127519,1,\"新\"],[127520,1,\"初\"],[127521,1,\"終\"],[127522,1,\"生\"],[127523,1,\"販\"],[127524,1,\"声\"],[127525,1,\"吹\"],[127526,1,\"演\"],[127527,1,\"投\"],[127528,1,\"捕\"],[127529,1,\"一\"],[127530,1,\"三\"],[127531,1,\"遊\"],[127532,1,\"左\"],[127533,1,\"中\"],[127534,1,\"右\"],[127535,1,\"指\"],[127536,1,\"走\"],[127537,1,\"打\"],[127538,1,\"禁\"],[127539,1,\"空\"],[127540,1,\"合\"],[127541,1,\"満\"],[127542,1,\"有\"],[127543,1,\"月\"],[127544,1,\"申\"],[127545,1,\"割\"],[127546,1,\"営\"],[127547,1,\"配\"],[[127548,127551],3],[127552,1,\"〔本〕\"],[127553,1,\"〔三〕\"],[127554,1,\"〔二〕\"],[127555,1,\"〔安〕\"],[127556,1,\"〔点〕\"],[127557,1,\"〔打〕\"],[127558,1,\"〔盗〕\"],[127559,1,\"〔勝〕\"],[127560,1,\"〔敗〕\"],[[127561,127567],3],[127568,1,\"得\"],[127569,1,\"可\"],[[127570,127583],3],[[127584,127589],2],[[127590,127743],3],[[127744,127776],2],[[127777,127788],2],[[127789,127791],2],[[127792,127797],2],[127798,2],[[127799,127868],2],[127869,2],[[127870,127871],2],[[127872,127891],2],[[127892,127903],2],[[127904,127940],2],[127941,2],[[127942,127946],2],[[127947,127950],2],[[127951,127955],2],[[127956,127967],2],[[127968,127984],2],[[127985,127991],2],[[127992,127999],2],[[128000,128062],2],[128063,2],[128064,2],[128065,2],[[128066,128247],2],[128248,2],[[128249,128252],2],[[128253,128254],2],[128255,2],[[128256,128317],2],[[128318,128319],2],[[128320,128323],2],[[128324,128330],2],[[128331,128335],2],[[128336,128359],2],[[128360,128377],2],[128378,2],[[128379,128419],2],[128420,2],[[128421,128506],2],[[128507,128511],2],[128512,2],[[128513,128528],2],[128529,2],[[128530,128532],2],[128533,2],[128534,2],[128535,2],[128536,2],[128537,2],[128538,2],[128539,2],[[128540,128542],2],[128543,2],[[128544,128549],2],[[128550,128551],2],[[128552,128555],2],[128556,2],[128557,2],[[128558,128559],2],[[128560,128563],2],[128564,2],[[128565,128576],2],[[128577,128578],2],[[128579,128580],2],[[128581,128591],2],[[128592,128639],2],[[128640,128709],2],[[128710,128719],2],[128720,2],[[128721,128722],2],[[128723,128724],2],[128725,2],[[128726,128727],2],[[128728,128732],3],[[128733,128735],2],[[128736,128748],2],[[128749,128751],3],[[128752,128755],2],[[128756,128758],2],[[128759,128760],2],[128761,2],[128762,2],[[128763,128764],2],[[128765,128767],3],[[128768,128883],2],[[128884,128895],3],[[128896,128980],2],[[128981,128984],2],[[128985,128991],3],[[128992,129003],2],[[129004,129007],3],[129008,2],[[129009,129023],3],[[129024,129035],2],[[129036,129039],3],[[129040,129095],2],[[129096,129103],3],[[129104,129113],2],[[129114,129119],3],[[129120,129159],2],[[129160,129167],3],[[129168,129197],2],[[129198,129199],3],[[129200,129201],2],[[129202,129279],3],[[129280,129291],2],[129292,2],[[129293,129295],2],[[129296,129304],2],[[129305,129310],2],[129311,2],[[129312,129319],2],[[129320,129327],2],[129328,2],[[129329,129330],2],[[129331,129342],2],[129343,2],[[129344,129355],2],[129356,2],[[129357,129359],2],[[129360,129374],2],[[129375,129387],2],[[129388,129392],2],[129393,2],[129394,2],[[129395,129398],2],[[129399,129400],2],[129401,2],[129402,2],[129403,2],[[129404,129407],2],[[129408,129412],2],[[129413,129425],2],[[129426,129431],2],[[129432,129442],2],[[129443,129444],2],[[129445,129450],2],[[129451,129453],2],[[129454,129455],2],[[129456,129465],2],[[129466,129471],2],[129472,2],[[129473,129474],2],[[129475,129482],2],[129483,2],[129484,2],[[129485,129487],2],[[129488,129510],2],[[129511,129535],2],[[129536,129619],2],[[129620,129631],3],[[129632,129645],2],[[129646,129647],3],[[129648,129651],2],[129652,2],[[129653,129655],3],[[129656,129658],2],[[129659,129660],2],[[129661,129663],3],[[129664,129666],2],[[129667,129670],2],[[129671,129679],3],[[129680,129685],2],[[129686,129704],2],[[129705,129708],2],[[129709,129711],3],[[129712,129718],2],[[129719,129722],2],[[129723,129727],3],[[129728,129730],2],[[129731,129733],2],[[129734,129743],3],[[129744,129750],2],[[129751,129753],2],[[129754,129759],3],[[129760,129767],2],[[129768,129775],3],[[129776,129782],2],[[129783,129791],3],[[129792,129938],2],[129939,3],[[129940,129994],2],[[129995,130031],3],[130032,1,\"0\"],[130033,1,\"1\"],[130034,1,\"2\"],[130035,1,\"3\"],[130036,1,\"4\"],[130037,1,\"5\"],[130038,1,\"6\"],[130039,1,\"7\"],[130040,1,\"8\"],[130041,1,\"9\"],[[130042,131069],3],[[131070,131071],3],[[131072,173782],2],[[173783,173789],2],[[173790,173791],2],[[173792,173823],3],[[173824,177972],2],[[177973,177976],2],[[177977,177983],3],[[177984,178205],2],[[178206,178207],3],[[178208,183969],2],[[183970,183983],3],[[183984,191456],2],[[191457,194559],3],[194560,1,\"丽\"],[194561,1,\"丸\"],[194562,1,\"乁\"],[194563,1,\"𠄢\"],[194564,1,\"你\"],[194565,1,\"侮\"],[194566,1,\"侻\"],[194567,1,\"倂\"],[194568,1,\"偺\"],[194569,1,\"備\"],[194570,1,\"僧\"],[194571,1,\"像\"],[194572,1,\"㒞\"],[194573,1,\"𠘺\"],[194574,1,\"免\"],[194575,1,\"兔\"],[194576,1,\"兤\"],[194577,1,\"具\"],[194578,1,\"𠔜\"],[194579,1,\"㒹\"],[194580,1,\"內\"],[194581,1,\"再\"],[194582,1,\"𠕋\"],[194583,1,\"冗\"],[194584,1,\"冤\"],[194585,1,\"仌\"],[194586,1,\"冬\"],[194587,1,\"况\"],[194588,1,\"𩇟\"],[194589,1,\"凵\"],[194590,1,\"刃\"],[194591,1,\"㓟\"],[194592,1,\"刻\"],[194593,1,\"剆\"],[194594,1,\"割\"],[194595,1,\"剷\"],[194596,1,\"㔕\"],[194597,1,\"勇\"],[194598,1,\"勉\"],[194599,1,\"勤\"],[194600,1,\"勺\"],[194601,1,\"包\"],[194602,1,\"匆\"],[194603,1,\"北\"],[194604,1,\"卉\"],[194605,1,\"卑\"],[194606,1,\"博\"],[194607,1,\"即\"],[194608,1,\"卽\"],[[194609,194611],1,\"卿\"],[194612,1,\"𠨬\"],[194613,1,\"灰\"],[194614,1,\"及\"],[194615,1,\"叟\"],[194616,1,\"𠭣\"],[194617,1,\"叫\"],[194618,1,\"叱\"],[194619,1,\"吆\"],[194620,1,\"咞\"],[194621,1,\"吸\"],[194622,1,\"呈\"],[194623,1,\"周\"],[194624,1,\"咢\"],[194625,1,\"哶\"],[194626,1,\"唐\"],[194627,1,\"啓\"],[194628,1,\"啣\"],[[194629,194630],1,\"善\"],[194631,1,\"喙\"],[194632,1,\"喫\"],[194633,1,\"喳\"],[194634,1,\"嗂\"],[194635,1,\"圖\"],[194636,1,\"嘆\"],[194637,1,\"圗\"],[194638,1,\"噑\"],[194639,1,\"噴\"],[194640,1,\"切\"],[194641,1,\"壮\"],[194642,1,\"城\"],[194643,1,\"埴\"],[194644,1,\"堍\"],[194645,1,\"型\"],[194646,1,\"堲\"],[194647,1,\"報\"],[194648,1,\"墬\"],[194649,1,\"𡓤\"],[194650,1,\"売\"],[194651,1,\"壷\"],[194652,1,\"夆\"],[194653,1,\"多\"],[194654,1,\"夢\"],[194655,1,\"奢\"],[194656,1,\"𡚨\"],[194657,1,\"𡛪\"],[194658,1,\"姬\"],[194659,1,\"娛\"],[194660,1,\"娧\"],[194661,1,\"姘\"],[194662,1,\"婦\"],[194663,1,\"㛮\"],[194664,3],[194665,1,\"嬈\"],[[194666,194667],1,\"嬾\"],[194668,1,\"𡧈\"],[194669,1,\"寃\"],[194670,1,\"寘\"],[194671,1,\"寧\"],[194672,1,\"寳\"],[194673,1,\"𡬘\"],[194674,1,\"寿\"],[194675,1,\"将\"],[194676,3],[194677,1,\"尢\"],[194678,1,\"㞁\"],[194679,1,\"屠\"],[194680,1,\"屮\"],[194681,1,\"峀\"],[194682,1,\"岍\"],[194683,1,\"𡷤\"],[194684,1,\"嵃\"],[194685,1,\"𡷦\"],[194686,1,\"嵮\"],[194687,1,\"嵫\"],[194688,1,\"嵼\"],[194689,1,\"巡\"],[194690,1,\"巢\"],[194691,1,\"㠯\"],[194692,1,\"巽\"],[194693,1,\"帨\"],[194694,1,\"帽\"],[194695,1,\"幩\"],[194696,1,\"㡢\"],[194697,1,\"𢆃\"],[194698,1,\"㡼\"],[194699,1,\"庰\"],[194700,1,\"庳\"],[194701,1,\"庶\"],[194702,1,\"廊\"],[194703,1,\"𪎒\"],[194704,1,\"廾\"],[[194705,194706],1,\"𢌱\"],[194707,1,\"舁\"],[[194708,194709],1,\"弢\"],[194710,1,\"㣇\"],[194711,1,\"𣊸\"],[194712,1,\"𦇚\"],[194713,1,\"形\"],[194714,1,\"彫\"],[194715,1,\"㣣\"],[194716,1,\"徚\"],[194717,1,\"忍\"],[194718,1,\"志\"],[194719,1,\"忹\"],[194720,1,\"悁\"],[194721,1,\"㤺\"],[194722,1,\"㤜\"],[194723,1,\"悔\"],[194724,1,\"𢛔\"],[194725,1,\"惇\"],[194726,1,\"慈\"],[194727,1,\"慌\"],[194728,1,\"慎\"],[194729,1,\"慌\"],[194730,1,\"慺\"],[194731,1,\"憎\"],[194732,1,\"憲\"],[194733,1,\"憤\"],[194734,1,\"憯\"],[194735,1,\"懞\"],[194736,1,\"懲\"],[194737,1,\"懶\"],[194738,1,\"成\"],[194739,1,\"戛\"],[194740,1,\"扝\"],[194741,1,\"抱\"],[194742,1,\"拔\"],[194743,1,\"捐\"],[194744,1,\"𢬌\"],[194745,1,\"挽\"],[194746,1,\"拼\"],[194747,1,\"捨\"],[194748,1,\"掃\"],[194749,1,\"揤\"],[194750,1,\"𢯱\"],[194751,1,\"搢\"],[194752,1,\"揅\"],[194753,1,\"掩\"],[194754,1,\"㨮\"],[194755,1,\"摩\"],[194756,1,\"摾\"],[194757,1,\"撝\"],[194758,1,\"摷\"],[194759,1,\"㩬\"],[194760,1,\"敏\"],[194761,1,\"敬\"],[194762,1,\"𣀊\"],[194763,1,\"旣\"],[194764,1,\"書\"],[194765,1,\"晉\"],[194766,1,\"㬙\"],[194767,1,\"暑\"],[194768,1,\"㬈\"],[194769,1,\"㫤\"],[194770,1,\"冒\"],[194771,1,\"冕\"],[194772,1,\"最\"],[194773,1,\"暜\"],[194774,1,\"肭\"],[194775,1,\"䏙\"],[194776,1,\"朗\"],[194777,1,\"望\"],[194778,1,\"朡\"],[194779,1,\"杞\"],[194780,1,\"杓\"],[194781,1,\"𣏃\"],[194782,1,\"㭉\"],[194783,1,\"柺\"],[194784,1,\"枅\"],[194785,1,\"桒\"],[194786,1,\"梅\"],[194787,1,\"𣑭\"],[194788,1,\"梎\"],[194789,1,\"栟\"],[194790,1,\"椔\"],[194791,1,\"㮝\"],[194792,1,\"楂\"],[194793,1,\"榣\"],[194794,1,\"槪\"],[194795,1,\"檨\"],[194796,1,\"𣚣\"],[194797,1,\"櫛\"],[194798,1,\"㰘\"],[194799,1,\"次\"],[194800,1,\"𣢧\"],[194801,1,\"歔\"],[194802,1,\"㱎\"],[194803,1,\"歲\"],[194804,1,\"殟\"],[194805,1,\"殺\"],[194806,1,\"殻\"],[194807,1,\"𣪍\"],[194808,1,\"𡴋\"],[194809,1,\"𣫺\"],[194810,1,\"汎\"],[194811,1,\"𣲼\"],[194812,1,\"沿\"],[194813,1,\"泍\"],[194814,1,\"汧\"],[194815,1,\"洖\"],[194816,1,\"派\"],[194817,1,\"海\"],[194818,1,\"流\"],[194819,1,\"浩\"],[194820,1,\"浸\"],[194821,1,\"涅\"],[194822,1,\"𣴞\"],[194823,1,\"洴\"],[194824,1,\"港\"],[194825,1,\"湮\"],[194826,1,\"㴳\"],[194827,1,\"滋\"],[194828,1,\"滇\"],[194829,1,\"𣻑\"],[194830,1,\"淹\"],[194831,1,\"潮\"],[194832,1,\"𣽞\"],[194833,1,\"𣾎\"],[194834,1,\"濆\"],[194835,1,\"瀹\"],[194836,1,\"瀞\"],[194837,1,\"瀛\"],[194838,1,\"㶖\"],[194839,1,\"灊\"],[194840,1,\"災\"],[194841,1,\"灷\"],[194842,1,\"炭\"],[194843,1,\"𠔥\"],[194844,1,\"煅\"],[194845,1,\"𤉣\"],[194846,1,\"熜\"],[194847,3],[194848,1,\"爨\"],[194849,1,\"爵\"],[194850,1,\"牐\"],[194851,1,\"𤘈\"],[194852,1,\"犀\"],[194853,1,\"犕\"],[194854,1,\"𤜵\"],[194855,1,\"𤠔\"],[194856,1,\"獺\"],[194857,1,\"王\"],[194858,1,\"㺬\"],[194859,1,\"玥\"],[[194860,194861],1,\"㺸\"],[194862,1,\"瑇\"],[194863,1,\"瑜\"],[194864,1,\"瑱\"],[194865,1,\"璅\"],[194866,1,\"瓊\"],[194867,1,\"㼛\"],[194868,1,\"甤\"],[194869,1,\"𤰶\"],[194870,1,\"甾\"],[194871,1,\"𤲒\"],[194872,1,\"異\"],[194873,1,\"𢆟\"],[194874,1,\"瘐\"],[194875,1,\"𤾡\"],[194876,1,\"𤾸\"],[194877,1,\"𥁄\"],[194878,1,\"㿼\"],[194879,1,\"䀈\"],[194880,1,\"直\"],[194881,1,\"𥃳\"],[194882,1,\"𥃲\"],[194883,1,\"𥄙\"],[194884,1,\"𥄳\"],[194885,1,\"眞\"],[[194886,194887],1,\"真\"],[194888,1,\"睊\"],[194889,1,\"䀹\"],[194890,1,\"瞋\"],[194891,1,\"䁆\"],[194892,1,\"䂖\"],[194893,1,\"𥐝\"],[194894,1,\"硎\"],[194895,1,\"碌\"],[194896,1,\"磌\"],[194897,1,\"䃣\"],[194898,1,\"𥘦\"],[194899,1,\"祖\"],[194900,1,\"𥚚\"],[194901,1,\"𥛅\"],[194902,1,\"福\"],[194903,1,\"秫\"],[194904,1,\"䄯\"],[194905,1,\"穀\"],[194906,1,\"穊\"],[194907,1,\"穏\"],[194908,1,\"𥥼\"],[[194909,194910],1,\"𥪧\"],[194911,3],[194912,1,\"䈂\"],[194913,1,\"𥮫\"],[194914,1,\"篆\"],[194915,1,\"築\"],[194916,1,\"䈧\"],[194917,1,\"𥲀\"],[194918,1,\"糒\"],[194919,1,\"䊠\"],[194920,1,\"糨\"],[194921,1,\"糣\"],[194922,1,\"紀\"],[194923,1,\"𥾆\"],[194924,1,\"絣\"],[194925,1,\"䌁\"],[194926,1,\"緇\"],[194927,1,\"縂\"],[194928,1,\"繅\"],[194929,1,\"䌴\"],[194930,1,\"𦈨\"],[194931,1,\"𦉇\"],[194932,1,\"䍙\"],[194933,1,\"𦋙\"],[194934,1,\"罺\"],[194935,1,\"𦌾\"],[194936,1,\"羕\"],[194937,1,\"翺\"],[194938,1,\"者\"],[194939,1,\"𦓚\"],[194940,1,\"𦔣\"],[194941,1,\"聠\"],[194942,1,\"𦖨\"],[194943,1,\"聰\"],[194944,1,\"𣍟\"],[194945,1,\"䏕\"],[194946,1,\"育\"],[194947,1,\"脃\"],[194948,1,\"䐋\"],[194949,1,\"脾\"],[194950,1,\"媵\"],[194951,1,\"𦞧\"],[194952,1,\"𦞵\"],[194953,1,\"𣎓\"],[194954,1,\"𣎜\"],[194955,1,\"舁\"],[194956,1,\"舄\"],[194957,1,\"辞\"],[194958,1,\"䑫\"],[194959,1,\"芑\"],[194960,1,\"芋\"],[194961,1,\"芝\"],[194962,1,\"劳\"],[194963,1,\"花\"],[194964,1,\"芳\"],[194965,1,\"芽\"],[194966,1,\"苦\"],[194967,1,\"𦬼\"],[194968,1,\"若\"],[194969,1,\"茝\"],[194970,1,\"荣\"],[194971,1,\"莭\"],[194972,1,\"茣\"],[194973,1,\"莽\"],[194974,1,\"菧\"],[194975,1,\"著\"],[194976,1,\"荓\"],[194977,1,\"菊\"],[194978,1,\"菌\"],[194979,1,\"菜\"],[194980,1,\"𦰶\"],[194981,1,\"𦵫\"],[194982,1,\"𦳕\"],[194983,1,\"䔫\"],[194984,1,\"蓱\"],[194985,1,\"蓳\"],[194986,1,\"蔖\"],[194987,1,\"𧏊\"],[194988,1,\"蕤\"],[194989,1,\"𦼬\"],[194990,1,\"䕝\"],[194991,1,\"䕡\"],[194992,1,\"𦾱\"],[194993,1,\"𧃒\"],[194994,1,\"䕫\"],[194995,1,\"虐\"],[194996,1,\"虜\"],[194997,1,\"虧\"],[194998,1,\"虩\"],[194999,1,\"蚩\"],[195000,1,\"蚈\"],[195001,1,\"蜎\"],[195002,1,\"蛢\"],[195003,1,\"蝹\"],[195004,1,\"蜨\"],[195005,1,\"蝫\"],[195006,1,\"螆\"],[195007,3],[195008,1,\"蟡\"],[195009,1,\"蠁\"],[195010,1,\"䗹\"],[195011,1,\"衠\"],[195012,1,\"衣\"],[195013,1,\"𧙧\"],[195014,1,\"裗\"],[195015,1,\"裞\"],[195016,1,\"䘵\"],[195017,1,\"裺\"],[195018,1,\"㒻\"],[195019,1,\"𧢮\"],[195020,1,\"𧥦\"],[195021,1,\"䚾\"],[195022,1,\"䛇\"],[195023,1,\"誠\"],[195024,1,\"諭\"],[195025,1,\"變\"],[195026,1,\"豕\"],[195027,1,\"𧲨\"],[195028,1,\"貫\"],[195029,1,\"賁\"],[195030,1,\"贛\"],[195031,1,\"起\"],[195032,1,\"𧼯\"],[195033,1,\"𠠄\"],[195034,1,\"跋\"],[195035,1,\"趼\"],[195036,1,\"跰\"],[195037,1,\"𠣞\"],[195038,1,\"軔\"],[195039,1,\"輸\"],[195040,1,\"𨗒\"],[195041,1,\"𨗭\"],[195042,1,\"邔\"],[195043,1,\"郱\"],[195044,1,\"鄑\"],[195045,1,\"𨜮\"],[195046,1,\"鄛\"],[195047,1,\"鈸\"],[195048,1,\"鋗\"],[195049,1,\"鋘\"],[195050,1,\"鉼\"],[195051,1,\"鏹\"],[195052,1,\"鐕\"],[195053,1,\"𨯺\"],[195054,1,\"開\"],[195055,1,\"䦕\"],[195056,1,\"閷\"],[195057,1,\"𨵷\"],[195058,1,\"䧦\"],[195059,1,\"雃\"],[195060,1,\"嶲\"],[195061,1,\"霣\"],[195062,1,\"𩅅\"],[195063,1,\"𩈚\"],[195064,1,\"䩮\"],[195065,1,\"䩶\"],[195066,1,\"韠\"],[195067,1,\"𩐊\"],[195068,1,\"䪲\"],[195069,1,\"𩒖\"],[[195070,195071],1,\"頋\"],[195072,1,\"頩\"],[195073,1,\"𩖶\"],[195074,1,\"飢\"],[195075,1,\"䬳\"],[195076,1,\"餩\"],[195077,1,\"馧\"],[195078,1,\"駂\"],[195079,1,\"駾\"],[195080,1,\"䯎\"],[195081,1,\"𩬰\"],[195082,1,\"鬒\"],[195083,1,\"鱀\"],[195084,1,\"鳽\"],[195085,1,\"䳎\"],[195086,1,\"䳭\"],[195087,1,\"鵧\"],[195088,1,\"𪃎\"],[195089,1,\"䳸\"],[195090,1,\"𪄅\"],[195091,1,\"𪈎\"],[195092,1,\"𪊑\"],[195093,1,\"麻\"],[195094,1,\"䵖\"],[195095,1,\"黹\"],[195096,1,\"黾\"],[195097,1,\"鼅\"],[195098,1,\"鼏\"],[195099,1,\"鼖\"],[195100,1,\"鼻\"],[195101,1,\"𪘀\"],[[195102,196605],3],[[196606,196607],3],[[196608,201546],2],[[201547,262141],3],[[262142,262143],3],[[262144,327677],3],[[327678,327679],3],[[327680,393213],3],[[393214,393215],3],[[393216,458749],3],[[458750,458751],3],[[458752,524285],3],[[524286,524287],3],[[524288,589821],3],[[589822,589823],3],[[589824,655357],3],[[655358,655359],3],[[655360,720893],3],[[720894,720895],3],[[720896,786429],3],[[786430,786431],3],[[786432,851965],3],[[851966,851967],3],[[851968,917501],3],[[917502,917503],3],[917504,3],[917505,3],[[917506,917535],3],[[917536,917631],3],[[917632,917759],3],[[917760,917999],7],[[918000,983037],3],[[983038,983039],3],[[983040,1048573],3],[[1048574,1048575],3],[[1048576,1114109],3],[[1114110,1114111],3]]", "\"use strict\";\n\nmodule.exports.STATUS_MAPPING = {\n  mapped: 1,\n  valid: 2,\n  disallowed: 3,\n  disallowed_STD3_valid: 4,\n  disallowed_STD3_mapped: 5,\n  deviation: 6,\n  ignored: 7\n};\n", "\"use strict\";\n\nconst punycode = require(\"punycode\");\nconst regexes = require(\"./lib/regexes.js\");\nconst mappingTable = require(\"./lib/mappingTable.json\");\nconst { STATUS_MAPPING } = require(\"./lib/statusMapping.js\");\n\nfunction containsNonASCII(str) {\n  return /[^\\x00-\\x7F]/u.test(str);\n}\n\nfunction findStatus(val, { useSTD3ASCIIRules }) {\n  let start = 0;\n  let end = mappingTable.length - 1;\n\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n\n    const target = mappingTable[mid];\n    const min = Array.isArray(target[0]) ? target[0][0] : target[0];\n    const max = Array.isArray(target[0]) ? target[0][1] : target[0];\n\n    if (min <= val && max >= val) {\n      if (useSTD3ASCIIRules &&\n          (target[1] === STATUS_MAPPING.disallowed_STD3_valid || target[1] === STATUS_MAPPING.disallowed_STD3_mapped)) {\n        return [STATUS_MAPPING.disallowed, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_valid) {\n        return [STATUS_MAPPING.valid, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_mapped) {\n        return [STATUS_MAPPING.mapped, ...target.slice(2)];\n      }\n\n      return target.slice(1);\n    } else if (min > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nfunction mapChars(domainName, { useSTD3ASCIIRules, processingOption }) {\n  let hasError = false;\n  let processed = \"\";\n\n  for (const ch of domainName) {\n    const [status, mapping] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n\n    switch (status) {\n      case STATUS_MAPPING.disallowed:\n        hasError = true;\n        processed += ch;\n        break;\n      case STATUS_MAPPING.ignored:\n        break;\n      case STATUS_MAPPING.mapped:\n        processed += mapping;\n        break;\n      case STATUS_MAPPING.deviation:\n        if (processingOption === \"transitional\") {\n          processed += mapping;\n        } else {\n          processed += ch;\n        }\n        break;\n      case STATUS_MAPPING.valid:\n        processed += ch;\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nfunction validateLabel(label, { checkHyphens, checkBidi, checkJoiners, processingOption, useSTD3ASCIIRules }) {\n  if (label.normalize(\"NFC\") !== label) {\n    return false;\n  }\n\n  const codePoints = Array.from(label);\n\n  if (checkHyphens) {\n    if ((codePoints[2] === \"-\" && codePoints[3] === \"-\") ||\n        (label.startsWith(\"-\") || label.endsWith(\"-\"))) {\n      return false;\n    }\n  }\n\n  if (label.includes(\".\") ||\n      (codePoints.length > 0 && regexes.combiningMarks.test(codePoints[0]))) {\n    return false;\n  }\n\n  for (const ch of codePoints) {\n    const [status] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n    if ((processingOption === \"transitional\" && status !== STATUS_MAPPING.valid) ||\n        (processingOption === \"nontransitional\" &&\n         status !== STATUS_MAPPING.valid && status !== STATUS_MAPPING.deviation)) {\n      return false;\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5892#appendix-A\n  if (checkJoiners) {\n    let last = 0;\n    for (const [i, ch] of codePoints.entries()) {\n      if (ch === \"\\u200C\" || ch === \"\\u200D\") {\n        if (i > 0) {\n          if (regexes.combiningClassVirama.test(codePoints[i - 1])) {\n            continue;\n          }\n          if (ch === \"\\u200C\") {\n            // TODO: make this more efficient\n            const next = codePoints.indexOf(\"\\u200C\", i + 1);\n            const test = next < 0 ? codePoints.slice(last) : codePoints.slice(last, next);\n            if (regexes.validZWNJ.test(test.join(\"\"))) {\n              last = i + 1;\n              continue;\n            }\n          }\n        }\n        return false;\n      }\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5893#section-2\n  if (checkBidi) {\n    let rtl;\n\n    // 1\n    if (regexes.bidiS1LTR.test(codePoints[0])) {\n      rtl = false;\n    } else if (regexes.bidiS1RTL.test(codePoints[0])) {\n      rtl = true;\n    } else {\n      return false;\n    }\n\n    if (rtl) {\n      // 2-4\n      if (!regexes.bidiS2.test(label) ||\n          !regexes.bidiS3.test(label) ||\n          (regexes.bidiS4EN.test(label) && regexes.bidiS4AN.test(label))) {\n        return false;\n      }\n    } else if (!regexes.bidiS5.test(label) ||\n               !regexes.bidiS6.test(label)) { // 5-6\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isBidiDomain(labels) {\n  const domain = labels.map(label => {\n    if (label.startsWith(\"xn--\")) {\n      try {\n        return punycode.decode(label.substring(4));\n      } catch (err) {\n        return \"\";\n      }\n    }\n    return label;\n  }).join(\".\");\n  return regexes.bidiDomain.test(domain);\n}\n\nfunction processing(domainName, options) {\n  const { processingOption } = options;\n\n  // 1. Map.\n  let { string, error } = mapChars(domainName, options);\n\n  // 2. Normalize.\n  string = string.normalize(\"NFC\");\n\n  // 3. Break.\n  const labels = string.split(\".\");\n  const isBidi = isBidiDomain(labels);\n\n  // 4. Convert/Validate.\n  for (const [i, origLabel] of labels.entries()) {\n    let label = origLabel;\n    let curProcessing = processingOption;\n    if (label.startsWith(\"xn--\")) {\n      try {\n        label = punycode.decode(label.substring(4));\n        labels[i] = label;\n      } catch (err) {\n        error = true;\n        continue;\n      }\n      curProcessing = \"nontransitional\";\n    }\n\n    // No need to validate if we already know there is an error.\n    if (error) {\n      continue;\n    }\n    const validation = validateLabel(label, {\n      ...options,\n      processingOption: curProcessing,\n      checkBidi: options.checkBidi && isBidi\n    });\n    if (!validation) {\n      error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error\n  };\n}\n\nfunction toASCII(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\",\n  verifyDNSLength = false\n} = {}) {\n  if (processingOption !== \"transitional\" && processingOption !== \"nontransitional\") {\n    throw new RangeError(\"processingOption must be either transitional or nontransitional\");\n  }\n\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n  let labels = result.string.split(\".\");\n  labels = labels.map(l => {\n    if (containsNonASCII(l)) {\n      try {\n        return `xn--${punycode.encode(l)}`;\n      } catch (e) {\n        result.error = true;\n      }\n    }\n    return l;\n  });\n\n  if (verifyDNSLength) {\n    const total = labels.join(\".\").length;\n    if (total > 253 || total === 0) {\n      result.error = true;\n    }\n\n    for (let i = 0; i < labels.length; ++i) {\n      if (labels[i].length > 63 || labels[i].length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) {\n    return null;\n  }\n  return labels.join(\".\");\n}\n\nfunction toUnicode(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\"\n} = {}) {\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n}\n\nmodule.exports = {\n  toASCII,\n  toUnicode\n};\n", "\"use strict\";\n\n// Note that we take code points as JS numbers, not JS strings.\n\nfunction isASCIIDigit(c) {\n  return c >= 0x30 && c <= 0x39;\n}\n\nfunction isASCIIAlpha(c) {\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\n}\n\nfunction isASCIIAlphanumeric(c) {\n  return isASCIIAlpha(c) || isASCIIDigit(c);\n}\n\nfunction isASCIIHex(c) {\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\n}\n\nmodule.exports = {\n  isASCIIDigit,\n  isASCIIAlpha,\n  isASCIIAlphanumeric,\n  isASCIIHex\n};\n", "\"use strict\";\nconst utf8Encoder = new TextEncoder();\nconst utf8Decoder = new TextDecoder(\"utf-8\", { ignoreBOM: true });\n\nfunction utf8Encode(string) {\n  return utf8Encoder.encode(string);\n}\n\nfunction utf8DecodeWithoutBOM(bytes) {\n  return utf8Decoder.decode(bytes);\n}\n\nmodule.exports = {\n  utf8Encode,\n  utf8DecodeWithoutBOM\n};\n", "\"use strict\";\nconst { isASCIIHex } = require(\"./infra\");\nconst { utf8Encode } = require(\"./encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#percent-encode\nfunction percentEncode(c) {\n  let hex = c.toString(16).toUpperCase();\n  if (hex.length === 1) {\n    hex = `0${hex}`;\n  }\n\n  return `%${hex}`;\n}\n\n// https://url.spec.whatwg.org/#percent-decode\nfunction percentDecodeBytes(input) {\n  const output = new Uint8Array(input.byteLength);\n  let outputIndex = 0;\n  for (let i = 0; i < input.byteLength; ++i) {\n    const byte = input[i];\n    if (byte !== 0x25) {\n      output[outputIndex++] = byte;\n    } else if (byte === 0x25 && (!isASCIIHex(input[i + 1]) || !isASCIIHex(input[i + 2]))) {\n      output[outputIndex++] = byte;\n    } else {\n      const bytePoint = parseInt(String.fromCodePoint(input[i + 1], input[i + 2]), 16);\n      output[outputIndex++] = bytePoint;\n      i += 2;\n    }\n  }\n\n  return output.slice(0, outputIndex);\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\nfunction percentDecodeString(input) {\n  const bytes = utf8Encode(input);\n  return percentDecodeBytes(bytes);\n}\n\n// https://url.spec.whatwg.org/#c0-control-percent-encode-set\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\n// https://url.spec.whatwg.org/#fragment-percent-encode-set\nconst extraFragmentPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"<\"), p(\">\"), p(\"`\")]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#query-percent-encode-set\nconst extraQueryPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"#\"), p(\"<\"), p(\">\")]);\nfunction isQueryPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraQueryPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#special-query-percent-encode-set\nfunction isSpecialQueryPercentEncode(c) {\n  return isQueryPercentEncode(c) || c === p(\"'\");\n}\n\n// https://url.spec.whatwg.org/#path-percent-encode-set\nconst extraPathPercentEncodeSet = new Set([p(\"?\"), p(\"`\"), p(\"{\"), p(\"}\")]);\nfunction isPathPercentEncode(c) {\n  return isQueryPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#userinfo-percent-encode-set\nconst extraUserinfoPercentEncodeSet =\n  new Set([p(\"/\"), p(\":\"), p(\";\"), p(\"=\"), p(\"@\"), p(\"[\"), p(\"\\\\\"), p(\"]\"), p(\"^\"), p(\"|\")]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#component-percent-encode-set\nconst extraComponentPercentEncodeSet = new Set([p(\"$\"), p(\"%\"), p(\"&\"), p(\"+\"), p(\",\")]);\nfunction isComponentPercentEncode(c) {\n  return isUserinfoPercentEncode(c) || extraComponentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#application-x-www-form-urlencoded-percent-encode-set\nconst extraURLEncodedPercentEncodeSet = new Set([p(\"!\"), p(\"'\"), p(\"(\"), p(\")\"), p(\"~\")]);\nfunction isURLEncodedPercentEncode(c) {\n  return isComponentPercentEncode(c) || extraURLEncodedPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#code-point-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#utf-8-percent-encode\n// Assuming encoding is always utf-8 allows us to trim one of the logic branches. TODO: support encoding.\n// The \"-Internal\" variant here has code points as JS strings. The external version used by other files has code points\n// as JS numbers, like the rest of the codebase.\nfunction utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate) {\n  const bytes = utf8Encode(codePoint);\n  let output = \"\";\n  for (const byte of bytes) {\n    // Our percentEncodePredicate operates on bytes, not code points, so this is slightly different from the spec.\n    if (!percentEncodePredicate(byte)) {\n      output += String.fromCharCode(byte);\n    } else {\n      output += percentEncode(byte);\n    }\n  }\n\n  return output;\n}\n\nfunction utf8PercentEncodeCodePoint(codePoint, percentEncodePredicate) {\n  return utf8PercentEncodeCodePointInternal(String.fromCodePoint(codePoint), percentEncodePredicate);\n}\n\n// https://url.spec.whatwg.org/#string-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#string-utf-8-percent-encode\nfunction utf8PercentEncodeString(input, percentEncodePredicate, spaceAsPlus = false) {\n  let output = \"\";\n  for (const codePoint of input) {\n    if (spaceAsPlus && codePoint === \" \") {\n      output += \"+\";\n    } else {\n      output += utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate);\n    }\n  }\n  return output;\n}\n\nmodule.exports = {\n  isC0ControlPercentEncode,\n  isFragmentPercentEncode,\n  isQueryPercentEncode,\n  isSpecialQueryPercentEncode,\n  isPathPercentEncode,\n  isUserinfoPercentEncode,\n  isURLEncodedPercentEncode,\n  percentDecodeString,\n  percentDecodeBytes,\n  utf8PercentEncodeString,\n  utf8PercentEncodeCodePoint\n};\n", "\"use strict\";\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeString, utf8PercentEncodeCodePoint, utf8PercentEncodeString, isC0ControlPercentEncode,\n  isFragmentPercentEncode, isQueryPercentEncode, isSpecialQueryPercentEncode, isPathPercentEncode,\n  isUserinfoPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return [...str].length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === p(\":\") || cp2 === p(\"|\"));\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction parseIPv4Number(input) {\n  if (input === \"\") {\n    return failure;\n  }\n\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/u;\n  if (R === 10) {\n    regex = /[^0-9]/u;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/u;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return failure;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return failure;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= 256 ** (5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * 256 ** (3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = `.${output}`;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = Array.from(input, c => c.codePointAt(0));\n\n  if (input[pointer] === p(\":\")) {\n    if (input[pointer + 1] !== p(\":\")) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === p(\":\")) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === p(\".\")) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === p(\".\") && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === p(\":\")) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const compress = findLongestZeroSequence(address);\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = utf8DecodeWithoutBOM(percentDecodeString(input));\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  if (endsInANumber(asciiDomain)) {\n    return parseIPv4(asciiDomain);\n  }\n\n  return asciiDomain;\n}\n\nfunction endsInANumber(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length === 1) {\n      return false;\n    }\n    parts.pop();\n  }\n\n  const last = parts[parts.length - 1];\n  if (parseIPv4Number(last) !== failure) {\n    return true;\n  }\n\n  if (/^[0-9]+$/u.test(last)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n\n  return utf8PercentEncodeString(input, isC0ControlPercentEncode);\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    return currStart;\n  }\n\n  return maxIdx;\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return `[${serializeIPv6(host)}]`;\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null || result === \"\") {\n    return failure;\n  }\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/ug, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/ug, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || hasAnOpaquePath(url) || url.scheme === \"file\";\n}\n\nfunction hasAnOpaquePath(url) {\n  return typeof url.path === \"string\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/u.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = Array.from(this.input, c => c.codePointAt(0));\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[`parse ${this.state}`](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === p(\"+\") || c === p(\"-\") || c === p(\".\")) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === p(\":\")) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && this.url.host === \"\") {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== p(\"/\") || this.input[this.pointer + 2] !== p(\"/\")) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === p(\"/\")) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.path = \"\";\n      this.state = \"opaque path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (hasAnOpaquePath(this.base) && c !== p(\"#\"))) {\n    return failure;\n  } else if (hasAnOpaquePath(this.base) && c === p(\"#\")) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path;\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (c === p(\"/\")) {\n    this.state = \"relative slash\";\n  } else if (isSpecial(this.url) && c === p(\"\\\\\")) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      this.url.path.pop();\n      this.state = \"path\";\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === p(\"/\") || c === p(\"\\\\\"))) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === p(\"@\")) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = `%40${this.buffer}`;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === p(\":\") && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = utf8PercentEncodeCodePoint(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === p(\":\") && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === p(\"[\")) {\n      this.arrFlag = true;\n    } else if (c === p(\"]\")) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\")) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > 2 ** 16 - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([p(\"/\"), p(\"\\\\\"), p(\"?\"), p(\"#\")]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  this.url.host = \"\";\n\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    this.url.host = this.base.host;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n        this.url.path = [];\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\") {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer) &&\n          isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      }\n      this.url.host = this.base.host;\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === p(\"/\") || c === p(\"\\\\\") || c === p(\"?\") || c === p(\"#\")) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== p(\"/\")) {\n      --this.pointer;\n    }\n  } else if (this.stateOverride && this.url.host === null) {\n    this.url.path.push(\"\");\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === p(\"/\") || (isSpecial(this.url) && c === p(\"\\\\\")) ||\n      (!this.stateOverride && (c === p(\"?\") || c === p(\"#\")))) {\n    if (isSpecial(this.url) && c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== p(\"/\") && !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== p(\"/\") &&\n               !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        this.buffer = `${this.buffer[0]}:`;\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += utf8PercentEncodeCodePoint(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse opaque path\"] = function parseOpaquePath(c) {\n  if (c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== p(\"%\")) {\n      this.parseError = true;\n    }\n\n    if (c === p(\"%\") &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path += utf8PercentEncodeCodePoint(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n    this.encodingOverride = \"utf-8\";\n  }\n\n  if ((!this.stateOverride && c === p(\"#\")) || isNaN(c)) {\n    const queryPercentEncodePredicate = isSpecial(this.url) ? isSpecialQueryPercentEncode : isQueryPercentEncode;\n    this.url.query += utf8PercentEncodeString(this.buffer, queryPercentEncodePredicate);\n\n    this.buffer = \"\";\n\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += utf8PercentEncodeCodePoint(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = `${url.scheme}:`;\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += `:${url.password}`;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += `:${url.port}`;\n    }\n  }\n\n  if (url.host === null && !hasAnOpaquePath(url) && url.path.length > 1 && url.path[0] === \"\") {\n    output += \"/.\";\n  }\n  output += serializePath(url);\n\n  if (url.query !== null) {\n    output += `?${url.query}`;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += `#${url.fragment}`;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = `${tuple.scheme}://`;\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += `:${tuple.port}`;\n  }\n\n  return result;\n}\n\nfunction serializePath(url) {\n  if (hasAnOpaquePath(url)) {\n    return url.path;\n  }\n\n  let output = \"\";\n  for (const segment of url.path) {\n    output += `/${segment}`;\n  }\n  return output;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializePath = serializePath;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(serializePath(url)));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = utf8PercentEncodeString(username, isUserinfoPercentEncode);\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = utf8PercentEncodeString(password, isUserinfoPercentEncode);\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.hasAnOpaquePath = hasAnOpaquePath;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n", "\"use strict\";\nconst { utf8Encode, utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeBytes, utf8PercentEncodeString, isURLEncodedPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseUrlencoded(input) {\n  const sequences = strictlySplitByteSequence(input, p(\"&\"));\n  const output = [];\n  for (const bytes of sequences) {\n    if (bytes.length === 0) {\n      continue;\n    }\n\n    let name, value;\n    const indexOfEqual = bytes.indexOf(p(\"=\"));\n\n    if (indexOfEqual >= 0) {\n      name = bytes.slice(0, indexOfEqual);\n      value = bytes.slice(indexOfEqual + 1);\n    } else {\n      name = bytes;\n      value = new Uint8Array(0);\n    }\n\n    name = replaceByteInByteSequence(name, 0x2B, 0x20);\n    value = replaceByteInByteSequence(value, 0x2B, 0x20);\n\n    const nameString = utf8DecodeWithoutBOM(percentDecodeBytes(name));\n    const valueString = utf8DecodeWithoutBOM(percentDecodeBytes(value));\n\n    output.push([nameString, valueString]);\n  }\n  return output;\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-string-parser\nfunction parseUrlencodedString(input) {\n  return parseUrlencoded(utf8Encode(input));\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeUrlencoded(tuples, encodingOverride = undefined) {\n  let encoding = \"utf-8\";\n  if (encodingOverride !== undefined) {\n    // TODO \"get the output encoding\", i.e. handle encoding labels vs. names.\n    encoding = encodingOverride;\n  }\n\n  let output = \"\";\n  for (const [i, tuple] of tuples.entries()) {\n    // TODO: handle encoding override\n\n    const name = utf8PercentEncodeString(tuple[0], isURLEncodedPercentEncode, true);\n\n    let value = tuple[1];\n    if (tuple.length > 2 && tuple[2] !== undefined) {\n      if (tuple[2] === \"hidden\" && name === \"_charset_\") {\n        value = encoding;\n      } else if (tuple[2] === \"file\") {\n        // value is a File object\n        value = value.name;\n      }\n    }\n\n    value = utf8PercentEncodeString(value, isURLEncodedPercentEncode, true);\n\n    if (i !== 0) {\n      output += \"&\";\n    }\n    output += `${name}=${value}`;\n  }\n  return output;\n}\n\nfunction strictlySplitByteSequence(buf, cp) {\n  const list = [];\n  let last = 0;\n  let i = buf.indexOf(cp);\n  while (i >= 0) {\n    list.push(buf.slice(last, i));\n    last = i + 1;\n    i = buf.indexOf(cp, last);\n  }\n  if (last !== buf.length) {\n    list.push(buf.slice(last));\n  }\n  return list;\n}\n\nfunction replaceByteInByteSequence(buf, from, to) {\n  let i = buf.indexOf(from);\n  while (i >= 0) {\n    buf[i] = to;\n    i = buf.indexOf(from, i + 1);\n  }\n  return buf;\n}\n\nmodule.exports = {\n  parseUrlencodedString,\n  serializeUrlencoded\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(...args) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    callResult = Reflect.apply(value, thisArg, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = (...args) => {\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    let callResult = Reflect.construct(value, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n", "\"use strict\";\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let query = urlencoded.serializeUrlencoded(this._list);\n      if (query === \"\") {\n        query = null;\n      }\n      this._url._url.query = query;\n    }\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list.sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      }\n      if (a[0] > b[0]) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Function = require(\"./Function.js\");\nconst newObjectInRealm = utils.newObjectInRealm;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URLSearchParams\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URLSearchParams'.`);\n};\n\nexports.createDefaultIterator = (globalObject, target, kind) => {\n  const ctorRegistry = globalObject[ctorRegistrySymbol];\n  const iteratorPrototype = ctorRegistry[\"URLSearchParams Iterator\"];\n  const iterator = Object.create(iteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URLSearchParams\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URLSearchParams {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          if (utils.isObject(curArg)) {\n            if (curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" sequence\" + \" is not an iterable object.\"\n                );\n              } else {\n                const V = [];\n                const tmp = curArg;\n                for (let nextItem of tmp) {\n                  if (!utils.isObject(nextItem)) {\n                    throw new globalObject.TypeError(\n                      \"Failed to construct 'URLSearchParams': parameter 1\" +\n                        \" sequence\" +\n                        \"'s element\" +\n                        \" is not an iterable object.\"\n                    );\n                  } else {\n                    const V = [];\n                    const tmp = nextItem;\n                    for (let nextItem of tmp) {\n                      nextItem = conversions[\"USVString\"](nextItem, {\n                        context:\n                          \"Failed to construct 'URLSearchParams': parameter 1\" +\n                          \" sequence\" +\n                          \"'s element\" +\n                          \"'s element\",\n                        globals: globalObject\n                      });\n\n                      V.push(nextItem);\n                    }\n                    nextItem = V;\n                  }\n\n                  V.push(nextItem);\n                }\n                curArg = V;\n              }\n            } else {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \" is not an object.\"\n                );\n              } else {\n                const result = Object.create(null);\n                for (const key of Reflect.ownKeys(curArg)) {\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\n                  if (desc && desc.enumerable) {\n                    let typedKey = key;\n\n                    typedKey = conversions[\"USVString\"](typedKey, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s key\",\n                      globals: globalObject\n                    });\n\n                    let typedValue = curArg[key];\n\n                    typedValue = conversions[\"USVString\"](typedValue, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s value\",\n                      globals: globalObject\n                    });\n\n                    result[typedKey] = typedValue;\n                  }\n                }\n                curArg = result;\n              }\n            }\n          } else {\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to construct 'URLSearchParams': parameter 1\",\n              globals: globalObject\n            });\n          }\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'append' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'append' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].append(...args));\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'delete' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'delete' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].delete(...args));\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'get' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'getAll' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'getAll' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'has' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'has' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'set' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].set(...args));\n    }\n\n    sort() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'sort' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].sort());\n    }\n\n    toString() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'toString' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      return esValue[implSymbol].toString();\n    }\n\n    keys() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'keys' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key\");\n    }\n\n    values() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'values' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"value\");\n    }\n\n    entries() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'entries' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'forEach' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          \"Failed to execute 'forEach' on 'iterable': 1 argument required, but only 0 present.\"\n        );\n      }\n      callback = Function.convert(globalObject, callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(URLSearchParams.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    sort: { enumerable: true },\n    toString: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URLSearchParams\", configurable: true },\n    [Symbol.iterator]: { value: URLSearchParams.prototype.entries, configurable: true, writable: true }\n  });\n  ctorRegistry[interfaceName] = URLSearchParams;\n\n  ctorRegistry[\"URLSearchParams Iterator\"] = Object.create(ctorRegistry[\"%IteratorPrototype%\"], {\n    [Symbol.toStringTag]: {\n      configurable: true,\n      value: \"URLSearchParams Iterator\"\n    }\n  });\n  utils.define(ctorRegistry[\"URLSearchParams Iterator\"], {\n    next() {\n      const internal = this && this[utils.iterInternalSymbol];\n      if (!internal) {\n        throw new globalObject.TypeError(\"next() called on a value that is not a URLSearchParams iterator object\");\n      }\n\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return newObjectInRealm(globalObject, { value: undefined, done: true });\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      return newObjectInRealm(globalObject, utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind));\n    }\n  });\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URLSearchParams\n  });\n};\n\nconst Impl = require(\"./URLSearchParams-impl.js\");\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\nconst urlencoded = require(\"./urlencoded\");\nconst URLSearchParams = require(\"./URLSearchParams\");\n\nexports.implementation = class URLImpl {\n  constructor(globalObject, constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        throw new TypeError(`Invalid base URL: ${base}`);\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${url}`);\n    }\n\n    const query = parsedURL.query !== null ? parsedURL.query : \"\";\n\n    this._url = parsedURL;\n\n    // We cannot invoke the \"new URLSearchParams object\" algorithm without going through the constructor, which strips\n    // question mark by default. Therefore the doNotStripQMark hack is used.\n    this._query = URLSearchParams.createImpl(globalObject, [query], { doNotStripQMark: true });\n    this._query._url = this;\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${v}`);\n    }\n\n    this._url = parsedURL;\n\n    this._query._list.splice(0);\n    const { query } = parsedURL;\n    if (query !== null) {\n      this._query._list = urlencoded.parseUrlencodedString(query);\n    }\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return `${this._url.scheme}:`;\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(`${v}:`, { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return `${usm.serializeHost(url.host)}:${usm.serializeInteger(url.port)}`;\n  }\n\n  set host(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    return usm.serializePath(this._url);\n  }\n\n  set pathname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return `?${this._url.query}`;\n  }\n\n  set search(v) {\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      this._query._list = [];\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n    this._query._list = urlencoded.parseUrlencodedString(input);\n  }\n\n  get searchParams() {\n    return this._query;\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return `#${this._url.fragment}`;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URL\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URL'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URL\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URL {\n    constructor(url) {\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to construct 'URL': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to construct 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    toJSON() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toJSON' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol].toJSON();\n    }\n\n    get href() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get href' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    set href(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set href' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'href' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"href\"] = V;\n    }\n\n    toString() {\n      const esValue = this;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toString' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    get origin() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get origin' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"origin\"];\n    }\n\n    get protocol() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"protocol\"];\n    }\n\n    set protocol(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'protocol' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"protocol\"] = V;\n    }\n\n    get username() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get username' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"username\"];\n    }\n\n    set username(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set username' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'username' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"username\"] = V;\n    }\n\n    get password() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get password' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"password\"];\n    }\n\n    set password(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set password' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'password' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"password\"] = V;\n    }\n\n    get host() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get host' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"host\"];\n    }\n\n    set host(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set host' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'host' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"host\"] = V;\n    }\n\n    get hostname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hostname\"];\n    }\n\n    set hostname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hostname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hostname\"] = V;\n    }\n\n    get port() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get port' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"port\"];\n    }\n\n    set port(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set port' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'port' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"port\"] = V;\n    }\n\n    get pathname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"pathname\"];\n    }\n\n    set pathname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'pathname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"pathname\"] = V;\n    }\n\n    get search() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get search' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"search\"];\n    }\n\n    set search(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set search' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'search' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"search\"] = V;\n    }\n\n    get searchParams() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get searchParams' called on an object that is not a valid instance of URL.\");\n      }\n\n      return utils.getSameObject(this, \"searchParams\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"searchParams\"]);\n      });\n    }\n\n    get hash() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hash\"];\n    }\n\n    set hash(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hash' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hash\"] = V;\n    }\n  }\n  Object.defineProperties(URL.prototype, {\n    toJSON: { enumerable: true },\n    href: { enumerable: true },\n    toString: { enumerable: true },\n    origin: { enumerable: true },\n    protocol: { enumerable: true },\n    username: { enumerable: true },\n    password: { enumerable: true },\n    host: { enumerable: true },\n    hostname: { enumerable: true },\n    port: { enumerable: true },\n    pathname: { enumerable: true },\n    search: { enumerable: true },\n    searchParams: { enumerable: true },\n    hash: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URL\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = URL;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URL\n  });\n\n  if (globalNames.includes(\"Window\")) {\n    Object.defineProperty(globalObject, \"webkitURL\", {\n      configurable: true,\n      writable: true,\n      value: URL\n    });\n  }\n};\n\nconst Impl = require(\"./URL-impl.js\");\n", "\"use strict\";\n\nconst URL = require(\"./lib/URL\");\nconst URLSearchParams = require(\"./lib/URLSearchParams\");\n\nexports.URL = URL;\nexports.URLSearchParams = URLSearchParams;\n", "\"use strict\";\n\nconst { URL, URLSearchParams } = require(\"./webidl2js-wrapper\");\nconst urlStateMachine = require(\"./lib/url-state-machine\");\nconst percentEncoding = require(\"./lib/percent-encoding\");\n\nconst sharedGlobalObject = { Array, Object, Promise, String, TypeError };\nURL.install(sharedGlobalObject, [\"Window\"]);\nURLSearchParams.install(sharedGlobalObject, [\"Window\"]);\n\nexports.URL = sharedGlobalObject.URL;\nexports.URLSearchParams = sharedGlobalObject.URLSearchParams;\n\nexports.parseURL = urlStateMachine.parseURL;\nexports.basicURLParse = urlStateMachine.basicURLParse;\nexports.serializeURL = urlStateMachine.serializeURL;\nexports.serializePath = urlStateMachine.serializePath;\nexports.serializeHost = urlStateMachine.serializeHost;\nexports.serializeInteger = urlStateMachine.serializeInteger;\nexports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;\nexports.setTheUsername = urlStateMachine.setTheUsername;\nexports.setThePassword = urlStateMachine.setThePassword;\nexports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;\nexports.hasAnOpaquePath = urlStateMachine.hasAnOpaquePath;\n\nexports.percentDecodeString = percentEncoding.percentDecodeString;\nexports.percentDecodeBytes = percentEncoding.percentDecodeBytes;\n", null, null, "/* eslint-disable @typescript-eslint/no-var-requires */\nimport { MongoClient, MongoClientOptions } from './mongo_client';\nimport type { AutoEncrypter, AutoEncryptionOptions } from './deps';\nimport { MongoInvalidArgumentError, MongoMissingDependencyError } from './error';\nimport { deserialize, serialize } from './bson';\nimport type { Callback } from './utils';\nimport { MONGO_CLIENT_EVENTS } from './operations/connect';\n\nlet AutoEncrypterClass: AutoEncrypter;\n\n/** @internal */\nconst kInternalClient = Symbol('internalClient');\n\n/** @internal */\nexport interface EncrypterOptions {\n  autoEncryption: AutoEncryptionOptions;\n  maxPoolSize?: number;\n}\n\n/** @internal */\nexport class Encrypter {\n  [kInternalClient]: MongoClient;\n  bypassAutoEncryption: boolean;\n  needsConnecting: boolean;\n  autoEncrypter: AutoEncrypter;\n\n  constructor(client: MongoClient, uri: string, options: MongoClientOptions) {\n    if (typeof options.autoEncryption !== 'object') {\n      throw new MongoInvalidArgumentError('Option \"autoEncryption\" must be specified');\n    }\n\n    this.bypassAutoEncryption = !!options.autoEncryption.bypassAutoEncryption;\n    this.needsConnecting = false;\n\n    if (options.maxPoolSize === 0 && options.autoEncryption.keyVaultClient == null) {\n      options.autoEncryption.keyVaultClient = client;\n    } else if (options.autoEncryption.keyVaultClient == null) {\n      options.autoEncryption.keyVaultClient = this.getInternalClient(client, uri, options);\n    }\n\n    if (this.bypassAutoEncryption) {\n      options.autoEncryption.metadataClient = undefined;\n    } else if (options.maxPoolSize === 0) {\n      options.autoEncryption.metadataClient = client;\n    } else {\n      options.autoEncryption.metadataClient = this.getInternalClient(client, uri, options);\n    }\n\n    options.autoEncryption.bson = Object.create(null);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    options.autoEncryption.bson!.serialize = serialize;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    options.autoEncryption.bson!.deserialize = deserialize;\n\n    this.autoEncrypter = new AutoEncrypterClass(client, options.autoEncryption);\n  }\n\n  getInternalClient(client: MongoClient, uri: string, options: MongoClientOptions): MongoClient {\n    if (!this[kInternalClient]) {\n      const clonedOptions: MongoClientOptions = {};\n\n      for (const key of Object.keys(options)) {\n        if (['autoEncryption', 'minPoolSize', 'servers', 'caseTranslate', 'dbName'].includes(key))\n          continue;\n        Reflect.set(clonedOptions, key, Reflect.get(options, key));\n      }\n\n      clonedOptions.minPoolSize = 0;\n\n      this[kInternalClient] = new MongoClient(uri, clonedOptions);\n\n      for (const eventName of MONGO_CLIENT_EVENTS) {\n        for (const listener of client.listeners(eventName)) {\n          this[kInternalClient].on(eventName, listener);\n        }\n      }\n\n      client.on('newListener', (eventName, listener) => {\n        this[kInternalClient].on(eventName, listener);\n      });\n\n      this.needsConnecting = true;\n    }\n    return this[kInternalClient];\n  }\n\n  connectInternalClient(callback: Callback): void {\n    if (this.needsConnecting) {\n      this.needsConnecting = false;\n      return this[kInternalClient].connect(callback);\n    }\n\n    return callback();\n  }\n\n  close(client: MongoClient, force: boolean, callback: Callback): void {\n    this.autoEncrypter.teardown(!!force, e => {\n      if (this[kInternalClient] && client !== this[kInternalClient]) {\n        return this[kInternalClient].close(force, callback);\n      }\n      callback(e);\n    });\n  }\n\n  static checkForMongoCrypt(): void {\n    let mongodbClientEncryption = undefined;\n    try {\n      // Ensure you always wrap an optional require in the try block NODE-3199\n      mongodbClientEncryption = require('mongodb-client-encryption');\n    } catch (err) {\n      throw new MongoMissingDependencyError(\n        'Auto-encryption requested, but the module is not installed. ' +\n          'Please add `mongodb-client-encryption` as a dependency of your project'\n      );\n    }\n\n    AutoEncrypterClass = mongodbClientEncryption.extension(require('../lib/index')).AutoEncrypter;\n  }\n}\n", "import * as dns from 'dns';\nimport * as fs from 'fs';\nimport ConnectionString from 'mongodb-connection-string-url';\nimport { URLSearchParams } from 'url';\nimport { AuthMechanism } from './cmap/auth/defaultAuthProviders';\nimport { ReadPreference, ReadPreferenceMode } from './read_preference';\nimport { ReadConcern, ReadConcernLevel } from './read_concern';\nimport { W, WriteConcern } from './write_concern';\nimport { MongoAPIError, MongoInvalidArgumentError, MongoParseError } from './error';\nimport {\n  AnyOptions,\n  Callback,\n  DEFAULT_PK_FACTORY,\n  isRecord,\n  makeClientMetadata,\n  setDifference,\n  HostAddress,\n  emitWarning\n} from './utils';\nimport type { Document } from './bson';\nimport {\n  DriverInfo,\n  MongoClient,\n  MongoClientOptions,\n  MongoOptions,\n  PkFactory,\n  ServerApi,\n  ServerApiVersion\n} from './mongo_client';\nimport { MongoCredentials } from './cmap/auth/mongo_credentials';\nimport type { TagSet } from './sdam/server_description';\nimport { Logger, LoggerLevel } from './logger';\nimport { PromiseProvider } from './promise_provider';\nimport { Encrypter } from './encrypter';\nimport { Compressor, CompressorName } from './cmap/wire_protocol/compression';\n\nconst VALID_TXT_RECORDS = ['authSource', 'replicaSet', 'loadBalanced'];\n\nconst LB_SINGLE_HOST_ERROR = 'loadBalanced option only supported with a single host in the URI';\nconst LB_REPLICA_SET_ERROR = 'loadBalanced option not supported with a replicaSet option';\nconst LB_DIRECT_CONNECTION_ERROR =\n  'loadBalanced option not supported when directConnection is provided';\n\n/**\n * Determines whether a provided address matches the provided parent domain in order\n * to avoid certain attack vectors.\n *\n * @param srvAddress - The address to check against a domain\n * @param parentDomain - The domain to check the provided address against\n * @returns Whether the provided address matches the parent domain\n */\nfunction matchesParentDomain(srvAddress: string, parentDomain: string): boolean {\n  const regex = /^.*?\\./;\n  const srv = `.${srvAddress.replace(regex, '')}`;\n  const parent = `.${parentDomain.replace(regex, '')}`;\n  return srv.endsWith(parent);\n}\n\n/**\n * Lookup a `mongodb+srv` connection string, combine the parts and reparse it as a normal\n * connection string.\n *\n * @param uri - The connection string to parse\n * @param options - Optional user provided connection string options\n */\nexport function resolveSRVRecord(options: MongoOptions, callback: Callback<HostAddress[]>): void {\n  if (typeof options.srvHost !== 'string') {\n    return callback(new MongoAPIError('Option \"srvHost\" must not be empty'));\n  }\n\n  if (options.srvHost.split('.').length < 3) {\n    // TODO(NODE-3484): Replace with MongoConnectionStringError\n    return callback(new MongoAPIError('URI must include hostname, domain name, and tld'));\n  }\n\n  // Resolve the SRV record and use the result as the list of hosts to connect to.\n  const lookupAddress = options.srvHost;\n  dns.resolveSrv(`_mongodb._tcp.${lookupAddress}`, (err, addresses) => {\n    if (err) return callback(err);\n\n    if (addresses.length === 0) {\n      return callback(new MongoAPIError('No addresses found at host'));\n    }\n\n    for (const { name } of addresses) {\n      if (!matchesParentDomain(name, lookupAddress)) {\n        return callback(new MongoAPIError('Server record does not share hostname with parent URI'));\n      }\n    }\n\n    const hostAddresses = addresses.map(r =>\n      HostAddress.fromString(`${r.name}:${r.port ?? 27017}`)\n    );\n\n    const lbError = validateLoadBalancedOptions(hostAddresses, options);\n    if (lbError) {\n      return callback(lbError);\n    }\n\n    // Resolve TXT record and add options from there if they exist.\n    dns.resolveTxt(lookupAddress, (err, record) => {\n      if (err) {\n        if (err.code !== 'ENODATA' && err.code !== 'ENOTFOUND') {\n          return callback(err);\n        }\n      } else {\n        if (record.length > 1) {\n          return callback(new MongoParseError('Multiple text records not allowed'));\n        }\n\n        const txtRecordOptions = new URLSearchParams(record[0].join(''));\n        const txtRecordOptionKeys = [...txtRecordOptions.keys()];\n        if (txtRecordOptionKeys.some(key => !VALID_TXT_RECORDS.includes(key))) {\n          return callback(\n            new MongoParseError(`Text record may only set any of: ${VALID_TXT_RECORDS.join(', ')}`)\n          );\n        }\n\n        const source = txtRecordOptions.get('authSource') ?? undefined;\n        const replicaSet = txtRecordOptions.get('replicaSet') ?? undefined;\n        const loadBalanced = txtRecordOptions.get('loadBalanced') ?? undefined;\n\n        if (source === '' || replicaSet === '') {\n          return callback(new MongoParseError('Cannot have empty URI params in DNS TXT Record'));\n        }\n\n        if (!options.userSpecifiedAuthSource && source) {\n          options.credentials = MongoCredentials.merge(options.credentials, { source });\n        }\n\n        if (!options.userSpecifiedReplicaSet && replicaSet) {\n          options.replicaSet = replicaSet;\n        }\n\n        if (loadBalanced === 'true') {\n          options.loadBalanced = true;\n        }\n\n        const lbError = validateLoadBalancedOptions(hostAddresses, options);\n        if (lbError) {\n          return callback(lbError);\n        }\n      }\n\n      callback(undefined, hostAddresses);\n    });\n  });\n}\n\n/**\n * Checks if TLS options are valid\n *\n * @param options - The options used for options parsing\n * @throws MongoParseError if TLS options are invalid\n */\nexport function checkTLSOptions(options: AnyOptions): void {\n  if (!options) return;\n  const check = (a: string, b: string) => {\n    if (Reflect.has(options, a) && Reflect.has(options, b)) {\n      throw new MongoParseError(`The '${a}' option cannot be used with '${b}'`);\n    }\n  };\n  check('tlsInsecure', 'tlsAllowInvalidCertificates');\n  check('tlsInsecure', 'tlsAllowInvalidHostnames');\n  check('tlsInsecure', 'tlsDisableCertificateRevocationCheck');\n  check('tlsInsecure', 'tlsDisableOCSPEndpointCheck');\n  check('tlsAllowInvalidCertificates', 'tlsDisableCertificateRevocationCheck');\n  check('tlsAllowInvalidCertificates', 'tlsDisableOCSPEndpointCheck');\n  check('tlsDisableCertificateRevocationCheck', 'tlsDisableOCSPEndpointCheck');\n}\n\nconst TRUTHS = new Set(['true', 't', '1', 'y', 'yes']);\nconst FALSEHOODS = new Set(['false', 'f', '0', 'n', 'no', '-1']);\nfunction getBoolean(name: string, value: unknown): boolean {\n  if (typeof value === 'boolean') return value;\n  const valueString = String(value).toLowerCase();\n  if (TRUTHS.has(valueString)) return true;\n  if (FALSEHOODS.has(valueString)) return false;\n  throw new MongoParseError(`Expected ${name} to be stringified boolean value, got: ${value}`);\n}\n\nfunction getInt(name: string, value: unknown): number {\n  if (typeof value === 'number') return Math.trunc(value);\n  const parsedValue = Number.parseInt(String(value), 10);\n  if (!Number.isNaN(parsedValue)) return parsedValue;\n  throw new MongoParseError(`Expected ${name} to be stringified int value, got: ${value}`);\n}\n\nfunction getUint(name: string, value: unknown): number {\n  const parsedValue = getInt(name, value);\n  if (parsedValue < 0) {\n    throw new MongoParseError(`${name} can only be a positive int value, got: ${value}`);\n  }\n  return parsedValue;\n}\n\nfunction toRecord(value: string): Record<string, any> {\n  const record = Object.create(null);\n  const keyValuePairs = value.split(',');\n  for (const keyValue of keyValuePairs) {\n    const [key, value] = keyValue.split(':');\n    if (value == null) {\n      throw new MongoParseError('Cannot have undefined values in key value pairs');\n    }\n    try {\n      // try to get a boolean\n      record[key] = getBoolean('', value);\n    } catch {\n      try {\n        // try to get a number\n        record[key] = getInt('', value);\n      } catch {\n        // keep value as a string\n        record[key] = value;\n      }\n    }\n  }\n  return record;\n}\n\nclass CaseInsensitiveMap extends Map<string, any> {\n  constructor(entries: Array<[string, any]> = []) {\n    super(entries.map(([k, v]) => [k.toLowerCase(), v]));\n  }\n  has(k: string) {\n    return super.has(k.toLowerCase());\n  }\n  get(k: string) {\n    return super.get(k.toLowerCase());\n  }\n  set(k: string, v: any) {\n    return super.set(k.toLowerCase(), v);\n  }\n  delete(k: string): boolean {\n    return super.delete(k.toLowerCase());\n  }\n}\n\nexport function parseOptions(\n  uri: string,\n  mongoClient: MongoClient | MongoClientOptions | undefined = undefined,\n  options: MongoClientOptions = {}\n): MongoOptions {\n  if (mongoClient != null && !(mongoClient instanceof MongoClient)) {\n    options = mongoClient;\n    mongoClient = undefined;\n  }\n\n  const url = new ConnectionString(uri);\n  const { hosts, isSRV } = url;\n\n  const mongoOptions = Object.create(null);\n  mongoOptions.hosts = isSRV ? [] : hosts.map(HostAddress.fromString);\n  if (isSRV) {\n    // SRV Record is resolved upon connecting\n    mongoOptions.srvHost = hosts[0];\n    if (!url.searchParams.has('tls') && !url.searchParams.has('ssl')) {\n      options.tls = true;\n    }\n  }\n\n  const urlOptions = new CaseInsensitiveMap();\n\n  if (url.pathname !== '/' && url.pathname !== '') {\n    const dbName = decodeURIComponent(\n      url.pathname[0] === '/' ? url.pathname.slice(1) : url.pathname\n    );\n    if (dbName) {\n      urlOptions.set('dbName', [dbName]);\n    }\n  }\n\n  if (url.username !== '') {\n    const auth: Document = {\n      username: decodeURIComponent(url.username)\n    };\n\n    if (typeof url.password === 'string') {\n      auth.password = decodeURIComponent(url.password);\n    }\n\n    urlOptions.set('auth', [auth]);\n  }\n\n  for (const key of url.searchParams.keys()) {\n    const values = [...url.searchParams.getAll(key)];\n\n    if (values.includes('')) {\n      throw new MongoAPIError('URI cannot contain options with no value');\n    }\n\n    if (key.toLowerCase() === 'serverapi') {\n      throw new MongoParseError(\n        'URI cannot contain `serverApi`, it can only be passed to the client'\n      );\n    }\n\n    if (key.toLowerCase() === 'authsource' && urlOptions.has('authSource')) {\n      // If authSource is an explicit key in the urlOptions we need to remove the implicit dbName\n      urlOptions.delete('authSource');\n    }\n\n    if (!urlOptions.has(key)) {\n      urlOptions.set(key, values);\n    }\n  }\n\n  const objectOptions = new CaseInsensitiveMap(\n    Object.entries(options).filter(([, v]) => v != null)\n  );\n\n  if (objectOptions.has('loadBalanced')) {\n    throw new MongoParseError('loadBalanced is only a valid option in the URI');\n  }\n\n  const allOptions = new CaseInsensitiveMap();\n\n  const allKeys = new Set<string>([\n    ...urlOptions.keys(),\n    ...objectOptions.keys(),\n    ...DEFAULT_OPTIONS.keys()\n  ]);\n\n  for (const key of allKeys) {\n    const values = [];\n    if (objectOptions.has(key)) {\n      values.push(objectOptions.get(key));\n    }\n    if (urlOptions.has(key)) {\n      values.push(...urlOptions.get(key));\n    }\n    if (DEFAULT_OPTIONS.has(key)) {\n      values.push(DEFAULT_OPTIONS.get(key));\n    }\n    allOptions.set(key, values);\n  }\n\n  if (allOptions.has('tlsCertificateKeyFile') && !allOptions.has('tlsCertificateFile')) {\n    allOptions.set('tlsCertificateFile', allOptions.get('tlsCertificateKeyFile'));\n  }\n\n  if (allOptions.has('tls') || allOptions.has('ssl')) {\n    const tlsAndSslOpts = (allOptions.get('tls') || [])\n      .concat(allOptions.get('ssl') || [])\n      .map(getBoolean.bind(null, 'tls/ssl'));\n    if (new Set(tlsAndSslOpts).size !== 1) {\n      throw new MongoParseError('All values of tls/ssl must be the same.');\n    }\n  }\n\n  const unsupportedOptions = setDifference(\n    allKeys,\n    Array.from(Object.keys(OPTIONS)).map(s => s.toLowerCase())\n  );\n  if (unsupportedOptions.size !== 0) {\n    const optionWord = unsupportedOptions.size > 1 ? 'options' : 'option';\n    const isOrAre = unsupportedOptions.size > 1 ? 'are' : 'is';\n    throw new MongoParseError(\n      `${optionWord} ${Array.from(unsupportedOptions).join(', ')} ${isOrAre} not supported`\n    );\n  }\n\n  for (const [key, descriptor] of Object.entries(OPTIONS)) {\n    const values = allOptions.get(key);\n    if (!values || values.length === 0) continue;\n    setOption(mongoOptions, key, descriptor, values);\n  }\n\n  if (mongoOptions.credentials) {\n    const isGssapi = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_GSSAPI;\n    const isX509 = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_X509;\n    const isAws = mongoOptions.credentials.mechanism === AuthMechanism.MONGODB_AWS;\n    if (\n      (isGssapi || isX509) &&\n      allOptions.has('authSource') &&\n      mongoOptions.credentials.source !== '$external'\n    ) {\n      // If authSource was explicitly given and its incorrect, we error\n      throw new MongoParseError(\n        `${mongoOptions.credentials} can only have authSource set to '$external'`\n      );\n    }\n\n    if (!(isGssapi || isX509 || isAws) && mongoOptions.dbName && !allOptions.has('authSource')) {\n      // inherit the dbName unless GSSAPI or X509, then silently ignore dbName\n      // and there was no specific authSource given\n      mongoOptions.credentials = MongoCredentials.merge(mongoOptions.credentials, {\n        source: mongoOptions.dbName\n      });\n    }\n\n    mongoOptions.credentials.validate();\n  }\n\n  if (!mongoOptions.dbName) {\n    // dbName default is applied here because of the credential validation above\n    mongoOptions.dbName = 'test';\n  }\n\n  checkTLSOptions(mongoOptions);\n\n  if (options.promiseLibrary) PromiseProvider.set(options.promiseLibrary);\n\n  if (mongoOptions.directConnection && typeof mongoOptions.srvHost === 'string') {\n    throw new MongoAPIError('SRV URI does not support directConnection');\n  }\n\n  const lbError = validateLoadBalancedOptions(hosts, mongoOptions);\n  if (lbError) {\n    throw lbError;\n  }\n\n  // Potential SRV Overrides\n  mongoOptions.userSpecifiedAuthSource =\n    objectOptions.has('authSource') || urlOptions.has('authSource');\n  mongoOptions.userSpecifiedReplicaSet =\n    objectOptions.has('replicaSet') || urlOptions.has('replicaSet');\n\n  if (mongoClient && mongoOptions.autoEncryption) {\n    Encrypter.checkForMongoCrypt();\n    mongoOptions.encrypter = new Encrypter(mongoClient, uri, options);\n    mongoOptions.autoEncrypter = mongoOptions.encrypter.autoEncrypter;\n  }\n\n  return mongoOptions;\n}\n\nfunction validateLoadBalancedOptions(\n  hosts: HostAddress[] | string[],\n  mongoOptions: MongoOptions\n): MongoParseError | undefined {\n  if (mongoOptions.loadBalanced) {\n    if (hosts.length > 1) {\n      return new MongoParseError(LB_SINGLE_HOST_ERROR);\n    }\n    if (mongoOptions.replicaSet) {\n      return new MongoParseError(LB_REPLICA_SET_ERROR);\n    }\n    if (mongoOptions.directConnection) {\n      return new MongoParseError(LB_DIRECT_CONNECTION_ERROR);\n    }\n  }\n}\n\nfunction setOption(\n  mongoOptions: any,\n  key: string,\n  descriptor: OptionDescriptor,\n  values: unknown[]\n) {\n  const { target, type, transform, deprecated } = descriptor;\n  const name = target ?? key;\n\n  if (deprecated) {\n    const deprecatedMsg = typeof deprecated === 'string' ? `: ${deprecated}` : '';\n    emitWarning(`${key} is a deprecated option${deprecatedMsg}`);\n  }\n\n  switch (type) {\n    case 'boolean':\n      mongoOptions[name] = getBoolean(name, values[0]);\n      break;\n    case 'int':\n      mongoOptions[name] = getInt(name, values[0]);\n      break;\n    case 'uint':\n      mongoOptions[name] = getUint(name, values[0]);\n      break;\n    case 'string':\n      if (values[0] == null) {\n        break;\n      }\n      mongoOptions[name] = String(values[0]);\n      break;\n    case 'record':\n      if (!isRecord(values[0])) {\n        throw new MongoParseError(`${name} must be an object`);\n      }\n      mongoOptions[name] = values[0];\n      break;\n    case 'any':\n      mongoOptions[name] = values[0];\n      break;\n    default: {\n      if (!transform) {\n        throw new MongoParseError('Descriptors missing a type must define a transform');\n      }\n      const transformValue = transform({ name, options: mongoOptions, values });\n      mongoOptions[name] = transformValue;\n      break;\n    }\n  }\n}\n\ninterface OptionDescriptor {\n  target?: string;\n  type?: 'boolean' | 'int' | 'uint' | 'record' | 'string' | 'any';\n  default?: any;\n\n  deprecated?: boolean | string;\n  /**\n   * @param name - the original option name\n   * @param options - the options so far for resolution\n   * @param values - the possible values in precedence order\n   */\n  transform?: (args: { name: string; options: MongoOptions; values: unknown[] }) => unknown;\n}\n\nexport const OPTIONS = {\n  appName: {\n    target: 'metadata',\n    transform({ options, values: [value] }): DriverInfo {\n      return makeClientMetadata({ ...options.driverInfo, appName: String(value) });\n    }\n  },\n  auth: {\n    target: 'credentials',\n    transform({ name, options, values: [value] }): MongoCredentials {\n      if (!isRecord(value, ['username', 'password'] as const)) {\n        throw new MongoParseError(\n          `${name} must be an object with 'username' and 'password' properties`\n        );\n      }\n      return MongoCredentials.merge(options.credentials, {\n        username: value.username,\n        password: value.password\n      });\n    }\n  },\n  authMechanism: {\n    target: 'credentials',\n    transform({ options, values: [value] }): MongoCredentials {\n      const mechanisms = Object.values(AuthMechanism);\n      const [mechanism] = mechanisms.filter(m => m.match(RegExp(String.raw`\\b${value}\\b`, 'i')));\n      if (!mechanism) {\n        throw new MongoParseError(`authMechanism one of ${mechanisms}, got ${value}`);\n      }\n      let source = options.credentials?.source;\n      if (\n        mechanism === AuthMechanism.MONGODB_PLAIN ||\n        mechanism === AuthMechanism.MONGODB_GSSAPI ||\n        mechanism === AuthMechanism.MONGODB_AWS ||\n        mechanism === AuthMechanism.MONGODB_X509\n      ) {\n        // some mechanisms have '$external' as the Auth Source\n        source = '$external';\n      }\n\n      let password = options.credentials?.password;\n      if (mechanism === AuthMechanism.MONGODB_X509 && password === '') {\n        password = undefined;\n      }\n      return MongoCredentials.merge(options.credentials, {\n        mechanism,\n        source,\n        password\n      });\n    }\n  },\n  authMechanismProperties: {\n    target: 'credentials',\n    transform({ options, values: [value] }): MongoCredentials {\n      if (typeof value === 'string') {\n        value = toRecord(value);\n      }\n      if (!isRecord(value)) {\n        throw new MongoParseError('AuthMechanismProperties must be an object');\n      }\n      return MongoCredentials.merge(options.credentials, { mechanismProperties: value });\n    }\n  },\n  authSource: {\n    target: 'credentials',\n    transform({ options, values: [value] }): MongoCredentials {\n      const source = String(value);\n      return MongoCredentials.merge(options.credentials, { source });\n    }\n  },\n  autoEncryption: {\n    type: 'record'\n  },\n  bsonRegExp: {\n    type: 'boolean'\n  },\n  serverApi: {\n    target: 'serverApi',\n    transform({ values: [version] }): ServerApi {\n      const serverApiToValidate =\n        typeof version === 'string' ? ({ version } as ServerApi) : (version as ServerApi);\n      const versionToValidate = serverApiToValidate && serverApiToValidate.version;\n      if (!versionToValidate) {\n        throw new MongoParseError(\n          `Invalid \\`serverApi\\` property; must specify a version from the following enum: [\"${Object.values(\n            ServerApiVersion\n          ).join('\", \"')}\"]`\n        );\n      }\n      if (!Object.values(ServerApiVersion).some(v => v === versionToValidate)) {\n        throw new MongoParseError(\n          `Invalid server API version=${versionToValidate}; must be in the following enum: [\"${Object.values(\n            ServerApiVersion\n          ).join('\", \"')}\"]`\n        );\n      }\n      return serverApiToValidate;\n    }\n  },\n  checkKeys: {\n    type: 'boolean'\n  },\n  compressors: {\n    default: 'none',\n    target: 'compressors',\n    transform({ values }) {\n      const compressionList = new Set();\n      for (const compVal of values as (CompressorName[] | string)[]) {\n        const compValArray = typeof compVal === 'string' ? compVal.split(',') : compVal;\n        if (!Array.isArray(compValArray)) {\n          throw new MongoInvalidArgumentError(\n            'compressors must be an array or a comma-delimited list of strings'\n          );\n        }\n        for (const c of compValArray) {\n          if (Object.keys(Compressor).includes(String(c))) {\n            compressionList.add(String(c));\n          } else {\n            throw new MongoInvalidArgumentError(\n              `${c} is not a valid compression mechanism. Must be one of: ${Object.keys(\n                Compressor\n              )}.`\n            );\n          }\n        }\n      }\n      return [...compressionList];\n    }\n  },\n  connectTimeoutMS: {\n    default: 30000,\n    type: 'uint'\n  },\n  dbName: {\n    type: 'string'\n  },\n  directConnection: {\n    default: false,\n    type: 'boolean'\n  },\n  driverInfo: {\n    target: 'metadata',\n    default: makeClientMetadata(),\n    transform({ options, values: [value] }) {\n      if (!isRecord(value)) throw new MongoParseError('DriverInfo must be an object');\n      return makeClientMetadata({\n        driverInfo: value,\n        appName: options.metadata?.application?.name\n      });\n    }\n  },\n  family: {\n    transform({ name, values: [value] }): 4 | 6 {\n      const transformValue = getInt(name, value);\n      if (transformValue === 4 || transformValue === 6) {\n        return transformValue;\n      }\n      throw new MongoParseError(`Option 'family' must be 4 or 6 got ${transformValue}.`);\n    }\n  },\n  fieldsAsRaw: {\n    type: 'record'\n  },\n  forceServerObjectId: {\n    default: false,\n    type: 'boolean'\n  },\n  fsync: {\n    deprecated: 'Please use journal instead',\n    target: 'writeConcern',\n    transform({ name, options, values: [value] }): WriteConcern {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          fsync: getBoolean(name, value)\n        }\n      });\n      if (!wc) throw new MongoParseError(`Unable to make a writeConcern from fsync=${value}`);\n      return wc;\n    }\n  } as OptionDescriptor,\n  heartbeatFrequencyMS: {\n    default: 10000,\n    type: 'uint'\n  },\n  ignoreUndefined: {\n    type: 'boolean'\n  },\n  j: {\n    deprecated: 'Please use journal instead',\n    target: 'writeConcern',\n    transform({ name, options, values: [value] }): WriteConcern {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          journal: getBoolean(name, value)\n        }\n      });\n      if (!wc) throw new MongoParseError(`Unable to make a writeConcern from journal=${value}`);\n      return wc;\n    }\n  } as OptionDescriptor,\n  journal: {\n    target: 'writeConcern',\n    transform({ name, options, values: [value] }): WriteConcern {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          journal: getBoolean(name, value)\n        }\n      });\n      if (!wc) throw new MongoParseError(`Unable to make a writeConcern from journal=${value}`);\n      return wc;\n    }\n  },\n  keepAlive: {\n    default: true,\n    type: 'boolean'\n  },\n  keepAliveInitialDelay: {\n    default: 120000,\n    type: 'uint'\n  },\n  loadBalanced: {\n    default: false,\n    type: 'boolean'\n  },\n  localThresholdMS: {\n    default: 15,\n    type: 'uint'\n  },\n  logger: {\n    default: new Logger('MongoClient'),\n    transform({ values: [value] }) {\n      if (value instanceof Logger) {\n        return value;\n      }\n      emitWarning('Alternative loggers might not be supported');\n      // TODO: make Logger an interface that others can implement, make usage consistent in driver\n      // DRIVERS-1204\n    }\n  },\n  loggerLevel: {\n    target: 'logger',\n    transform({ values: [value] }) {\n      return new Logger('MongoClient', { loggerLevel: value as LoggerLevel });\n    }\n  },\n  maxIdleTimeMS: {\n    default: 0,\n    type: 'uint'\n  },\n  maxPoolSize: {\n    default: 100,\n    type: 'uint'\n  },\n  maxStalenessSeconds: {\n    target: 'readPreference',\n    transform({ name, options, values: [value] }) {\n      const maxStalenessSeconds = getUint(name, value);\n      if (options.readPreference) {\n        return ReadPreference.fromOptions({\n          readPreference: { ...options.readPreference, maxStalenessSeconds }\n        });\n      } else {\n        return new ReadPreference('secondary', undefined, { maxStalenessSeconds });\n      }\n    }\n  },\n  minInternalBufferSize: {\n    type: 'uint'\n  },\n  minPoolSize: {\n    default: 0,\n    type: 'uint'\n  },\n  minHeartbeatFrequencyMS: {\n    default: 500,\n    type: 'uint'\n  },\n  monitorCommands: {\n    default: false,\n    type: 'boolean'\n  },\n  name: {\n    target: 'driverInfo',\n    transform({ values: [value], options }) {\n      return { ...options.driverInfo, name: String(value) };\n    }\n  } as OptionDescriptor,\n  noDelay: {\n    default: true,\n    type: 'boolean'\n  },\n  pkFactory: {\n    default: DEFAULT_PK_FACTORY,\n    transform({ values: [value] }): PkFactory {\n      if (isRecord(value, ['createPk'] as const) && typeof value.createPk === 'function') {\n        return value as PkFactory;\n      }\n      throw new MongoParseError(\n        `Option pkFactory must be an object with a createPk function, got ${value}`\n      );\n    }\n  },\n  promiseLibrary: {\n    deprecated: true,\n    type: 'any'\n  },\n  promoteBuffers: {\n    type: 'boolean'\n  },\n  promoteLongs: {\n    type: 'boolean'\n  },\n  promoteValues: {\n    type: 'boolean'\n  },\n  raw: {\n    default: false,\n    type: 'boolean'\n  },\n  readConcern: {\n    transform({ values: [value], options }) {\n      if (value instanceof ReadConcern || isRecord(value, ['level'] as const)) {\n        return ReadConcern.fromOptions({ ...options.readConcern, ...value } as any);\n      }\n      throw new MongoParseError(`ReadConcern must be an object, got ${JSON.stringify(value)}`);\n    }\n  },\n  readConcernLevel: {\n    target: 'readConcern',\n    transform({ values: [level], options }) {\n      return ReadConcern.fromOptions({\n        ...options.readConcern,\n        level: level as ReadConcernLevel\n      });\n    }\n  },\n  readPreference: {\n    default: ReadPreference.primary,\n    transform({ values: [value], options }) {\n      if (value instanceof ReadPreference) {\n        return ReadPreference.fromOptions({\n          readPreference: { ...options.readPreference, ...value },\n          ...value\n        } as any);\n      }\n      if (isRecord(value, ['mode'] as const)) {\n        const rp = ReadPreference.fromOptions({\n          readPreference: { ...options.readPreference, ...value },\n          ...value\n        } as any);\n        if (rp) return rp;\n        else throw new MongoParseError(`Cannot make read preference from ${JSON.stringify(value)}`);\n      }\n      if (typeof value === 'string') {\n        const rpOpts = {\n          hedge: options.readPreference?.hedge,\n          maxStalenessSeconds: options.readPreference?.maxStalenessSeconds\n        };\n        return new ReadPreference(\n          value as ReadPreferenceMode,\n          options.readPreference?.tags,\n          rpOpts\n        );\n      }\n    }\n  },\n  readPreferenceTags: {\n    target: 'readPreference',\n    transform({ values, options }) {\n      const readPreferenceTags = [];\n      for (const tag of values) {\n        const readPreferenceTag: TagSet = Object.create(null);\n        if (typeof tag === 'string') {\n          for (const [k, v] of Object.entries(toRecord(tag))) {\n            readPreferenceTag[k] = v;\n          }\n        }\n        if (isRecord(tag)) {\n          for (const [k, v] of Object.entries(tag)) {\n            readPreferenceTag[k] = v;\n          }\n        }\n        readPreferenceTags.push(readPreferenceTag);\n      }\n      return ReadPreference.fromOptions({\n        readPreference: options.readPreference,\n        readPreferenceTags\n      });\n    }\n  },\n  replicaSet: {\n    type: 'string'\n  },\n  retryReads: {\n    default: true,\n    type: 'boolean'\n  },\n  retryWrites: {\n    default: true,\n    type: 'boolean'\n  },\n  serializeFunctions: {\n    type: 'boolean'\n  },\n  serverSelectionTimeoutMS: {\n    default: 30000,\n    type: 'uint'\n  },\n  servername: {\n    type: 'string'\n  },\n  socketTimeoutMS: {\n    default: 0,\n    type: 'uint'\n  },\n  ssl: {\n    target: 'tls',\n    type: 'boolean'\n  },\n  sslCA: {\n    target: 'ca',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  sslCRL: {\n    target: 'crl',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  sslCert: {\n    target: 'cert',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  sslKey: {\n    target: 'key',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  sslPass: {\n    deprecated: true,\n    target: 'passphrase',\n    type: 'string'\n  },\n  sslValidate: {\n    target: 'rejectUnauthorized',\n    type: 'boolean'\n  },\n  tls: {\n    type: 'boolean'\n  },\n  tlsAllowInvalidCertificates: {\n    target: 'rejectUnauthorized',\n    transform({ name, values: [value] }) {\n      // allowInvalidCertificates is the inverse of rejectUnauthorized\n      return !getBoolean(name, value);\n    }\n  },\n  tlsAllowInvalidHostnames: {\n    target: 'checkServerIdentity',\n    transform({ name, values: [value] }) {\n      // tlsAllowInvalidHostnames means setting the checkServerIdentity function to a noop\n      return getBoolean(name, value) ? () => undefined : undefined;\n    }\n  },\n  tlsCAFile: {\n    target: 'ca',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  tlsCertificateFile: {\n    target: 'cert',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  tlsCertificateKeyFile: {\n    target: 'key',\n    transform({ values: [value] }) {\n      return fs.readFileSync(String(value), { encoding: 'ascii' });\n    }\n  },\n  tlsCertificateKeyFilePassword: {\n    target: 'passphrase',\n    type: 'any'\n  },\n  tlsInsecure: {\n    transform({ name, options, values: [value] }) {\n      const tlsInsecure = getBoolean(name, value);\n      if (tlsInsecure) {\n        options.checkServerIdentity = () => undefined;\n        options.rejectUnauthorized = false;\n      } else {\n        options.checkServerIdentity = options.tlsAllowInvalidHostnames\n          ? () => undefined\n          : undefined;\n        options.rejectUnauthorized = options.tlsAllowInvalidCertificates ? false : true;\n      }\n      return tlsInsecure;\n    }\n  },\n  w: {\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      return WriteConcern.fromOptions({ writeConcern: { ...options.writeConcern, w: value as W } });\n    }\n  },\n  waitQueueTimeoutMS: {\n    default: 0,\n    type: 'uint'\n  },\n  writeConcern: {\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      if (isRecord(value) || value instanceof WriteConcern) {\n        return WriteConcern.fromOptions({\n          writeConcern: {\n            ...options.writeConcern,\n            ...value\n          }\n        });\n      } else if (value === 'majority' || typeof value === 'number') {\n        return WriteConcern.fromOptions({\n          writeConcern: {\n            ...options.writeConcern,\n            w: value\n          }\n        });\n      }\n\n      throw new MongoParseError(`Invalid WriteConcern cannot parse: ${JSON.stringify(value)}`);\n    }\n  } as OptionDescriptor,\n  wtimeout: {\n    deprecated: 'Please use wtimeoutMS instead',\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          wtimeout: getUint('wtimeout', value)\n        }\n      });\n      if (wc) return wc;\n      throw new MongoParseError(`Cannot make WriteConcern from wtimeout`);\n    }\n  } as OptionDescriptor,\n  wtimeoutMS: {\n    target: 'writeConcern',\n    transform({ values: [value], options }) {\n      const wc = WriteConcern.fromOptions({\n        writeConcern: {\n          ...options.writeConcern,\n          wtimeoutMS: getUint('wtimeoutMS', value)\n        }\n      });\n      if (wc) return wc;\n      throw new MongoParseError(`Cannot make WriteConcern from wtimeout`);\n    }\n  },\n  zlibCompressionLevel: {\n    default: 0,\n    type: 'int'\n  },\n  // Custom types for modifying core behavior\n  connectionType: { type: 'any' },\n  srvPoller: { type: 'any' },\n  // Accepted NodeJS Options\n  minDHSize: { type: 'any' },\n  pskCallback: { type: 'any' },\n  secureContext: { type: 'any' },\n  enableTrace: { type: 'any' },\n  requestCert: { type: 'any' },\n  rejectUnauthorized: { type: 'any' },\n  checkServerIdentity: { type: 'any' },\n  ALPNProtocols: { type: 'any' },\n  SNICallback: { type: 'any' },\n  session: { type: 'any' },\n  requestOCSP: { type: 'any' },\n  localAddress: { type: 'any' },\n  localPort: { type: 'any' },\n  hints: { type: 'any' },\n  lookup: { type: 'any' },\n  ca: { type: 'any' },\n  cert: { type: 'any' },\n  ciphers: { type: 'any' },\n  crl: { type: 'any' },\n  ecdhCurve: { type: 'any' },\n  key: { type: 'any' },\n  passphrase: { type: 'any' },\n  pfx: { type: 'any' },\n  secureProtocol: { type: 'any' },\n  index: { type: 'any' },\n  // Legacy Options, these are unused but left here to avoid errors with CSFLE lib\n  useNewUrlParser: { type: 'boolean' } as OptionDescriptor,\n  useUnifiedTopology: { type: 'boolean' } as OptionDescriptor\n} as Record<keyof MongoClientOptions, OptionDescriptor>;\n\nexport const DEFAULT_OPTIONS = new CaseInsensitiveMap(\n  Object.entries(OPTIONS)\n    .filter(([, descriptor]) => descriptor.default != null)\n    .map(([k, d]) => [k, d.default])\n);\n", "import Denque = require('denque');\nimport { ReadPreference, ReadPreferenceLike } from '../read_preference';\nimport { compareTopologyVersion, ServerDescription } from './server_description';\nimport { TopologyDescription } from './topology_description';\nimport { Server, ServerEvents, ServerOptions } from './server';\nimport {\n  ClientSession,\n  ServerSessionPool,\n  ServerSessionId,\n  ClientSessionOptions\n} from '../sessions';\nimport { SrvPoller, SrvPollingEvent } from './srv_polling';\nimport { CMAP_EVENTS, ConnectionPoolEvents } from '../cmap/connection_pool';\nimport {\n  MongoServerSelectionError,\n  MongoCompatibilityError,\n  MongoDriverError,\n  MongoTopologyClosedError,\n  MongoRuntimeError\n} from '../error';\nimport { readPreferenceServerSelector, ServerSelector } from './server_selection';\nimport {\n  makeStateMachine,\n  eachAsync,\n  ClientMetadata,\n  Callback,\n  HostAddress,\n  ns,\n  emitWarning,\n  EventEmitterWithState\n} from '../utils';\nimport {\n  TopologyType,\n  ServerType,\n  ClusterTime,\n  TimerQueue,\n  _advanceClusterTime,\n  drainTimerQueue,\n  clearAndRemoveTimerFrom,\n  STATE_CLOSED,\n  STATE_CLOSING,\n  STATE_CONNECTING,\n  STATE_CONNECTED\n} from './common';\nimport {\n  ServerOpeningEvent,\n  ServerClosedEvent,\n  ServerDescriptionChangedEvent,\n  TopologyOpeningEvent,\n  TopologyClosedEvent,\n  TopologyDescriptionChangedEvent\n} from './events';\nimport type { Document, BSONSerializeOptions } from '../bson';\nimport type { MongoCredentials } from '../cmap/auth/mongo_credentials';\nimport type { Transaction } from '../transactions';\nimport type { CloseOptions } from '../cmap/connection_pool';\nimport { DestroyOptions, Connection, ConnectionEvents } from '../cmap/connection';\nimport type { MongoOptions, ServerApi } from '../mongo_client';\nimport { DEFAULT_OPTIONS } from '../connection_string';\nimport { serialize, deserialize } from '../bson';\nimport { TypedEventEmitter } from '../mongo_types';\n\n// Global state\nlet globalTopologyCounter = 0;\n\n// events that we relay to the `Topology`\nconst SERVER_RELAY_EVENTS = [\n  Server.SERVER_HEARTBEAT_STARTED,\n  Server.SERVER_HEARTBEAT_SUCCEEDED,\n  Server.SERVER_HEARTBEAT_FAILED,\n  Connection.COMMAND_STARTED,\n  Connection.COMMAND_SUCCEEDED,\n  Connection.COMMAND_FAILED,\n  ...CMAP_EVENTS\n];\n\n// all events we listen to from `Server` instances\nconst LOCAL_SERVER_EVENTS = [\n  Server.CONNECT,\n  Server.DESCRIPTION_RECEIVED,\n  Server.CLOSED,\n  Server.ENDED\n];\n\nconst stateTransition = makeStateMachine({\n  [STATE_CLOSED]: [STATE_CLOSED, STATE_CONNECTING],\n  [STATE_CONNECTING]: [STATE_CONNECTING, STATE_CLOSING, STATE_CONNECTED, STATE_CLOSED],\n  [STATE_CONNECTED]: [STATE_CONNECTED, STATE_CLOSING, STATE_CLOSED],\n  [STATE_CLOSING]: [STATE_CLOSING, STATE_CLOSED]\n});\n\n/** @internal */\nconst kCancelled = Symbol('cancelled');\n/** @internal */\nconst kWaitQueue = Symbol('waitQueue');\n\n/** @internal */\nexport type ServerSelectionCallback = Callback<Server>;\n\n/** @internal */\nexport interface ServerSelectionRequest {\n  serverSelector: ServerSelector;\n  transaction?: Transaction;\n  callback: ServerSelectionCallback;\n  timer?: NodeJS.Timeout;\n  [kCancelled]?: boolean;\n}\n\n/** @internal */\nexport interface TopologyPrivate {\n  /** the id of this topology */\n  id: number;\n  /** passed in options */\n  options: TopologyOptions;\n  /** initial seedlist of servers to connect to */\n  seedlist: HostAddress[];\n  /** initial state */\n  state: string;\n  /** the topology description */\n  description: TopologyDescription;\n  serverSelectionTimeoutMS: number;\n  heartbeatFrequencyMS: number;\n  minHeartbeatFrequencyMS: number;\n  /** A map of server instances to normalized addresses */\n  servers: Map<string, Server>;\n  /** Server Session Pool */\n  sessionPool: ServerSessionPool;\n  /** Active client sessions */\n  sessions: Set<ClientSession>;\n  credentials?: MongoCredentials;\n  clusterTime?: ClusterTime;\n  /** timers created for the initial connect to a server */\n  connectionTimers: TimerQueue;\n\n  /** related to srv polling */\n  srvPoller?: SrvPoller;\n  detectShardedTopology: (event: TopologyDescriptionChangedEvent) => void;\n  detectSrvRecords: (event: SrvPollingEvent) => void;\n}\n\n/** @public */\nexport interface TopologyOptions extends BSONSerializeOptions, ServerOptions {\n  hosts: HostAddress[];\n  retryWrites: boolean;\n  retryReads: boolean;\n  /** How long to block for server selection before throwing an error */\n  serverSelectionTimeoutMS: number;\n  /** The name of the replica set to connect to */\n  replicaSet?: string;\n  srvHost?: string;\n  /** @internal */\n  srvPoller?: SrvPoller;\n  /** Indicates that a client should directly connect to a node without attempting to discover its topology type */\n  directConnection: boolean;\n  loadBalanced: boolean;\n  metadata: ClientMetadata;\n  /** MongoDB server API version */\n  serverApi?: ServerApi;\n}\n\n/** @public */\nexport interface ConnectOptions {\n  readPreference?: ReadPreference;\n}\n\n/** @public */\nexport interface SelectServerOptions {\n  readPreference?: ReadPreferenceLike;\n  /** How long to block for server selection before throwing an error */\n  serverSelectionTimeoutMS?: number;\n  session?: ClientSession;\n}\n\n/** @public */\nexport type TopologyEvents = {\n  /** Top level MongoClient doesn't emit this so it is marked: @internal */\n  connect(topology: Topology): void;\n  serverOpening(event: ServerOpeningEvent): void;\n  serverClosed(event: ServerClosedEvent): void;\n  serverDescriptionChanged(event: ServerDescriptionChangedEvent): void;\n  topologyClosed(event: TopologyClosedEvent): void;\n  topologyOpening(event: TopologyOpeningEvent): void;\n  topologyDescriptionChanged(event: TopologyDescriptionChangedEvent): void;\n  error(error: Error): void;\n  /** TODO(NODE-3273) - remove error @internal */\n  open(error: undefined, topology: Topology): void;\n  close(): void;\n  timeout(): void;\n} & Omit<ServerEvents, 'connect'> &\n  ConnectionPoolEvents &\n  ConnectionEvents &\n  EventEmitterWithState;\n/**\n * A container of server instances representing a connection to a MongoDB topology.\n * @internal\n */\nexport class Topology extends TypedEventEmitter<TopologyEvents> {\n  /** @internal */\n  s: TopologyPrivate;\n  /** @internal */\n  [kWaitQueue]: Denque<ServerSelectionRequest>;\n  /** @internal */\n  ismaster?: Document;\n  /** @internal */\n  _type?: string;\n\n  /** @event */\n  static readonly SERVER_OPENING = 'serverOpening' as const;\n  /** @event */\n  static readonly SERVER_CLOSED = 'serverClosed' as const;\n  /** @event */\n  static readonly SERVER_DESCRIPTION_CHANGED = 'serverDescriptionChanged' as const;\n  /** @event */\n  static readonly TOPOLOGY_OPENING = 'topologyOpening' as const;\n  /** @event */\n  static readonly TOPOLOGY_CLOSED = 'topologyClosed' as const;\n  /** @event */\n  static readonly TOPOLOGY_DESCRIPTION_CHANGED = 'topologyDescriptionChanged' as const;\n  /** @event */\n  static readonly ERROR = 'error' as const;\n  /** @event */\n  static readonly OPEN = 'open' as const;\n  /** @event */\n  static readonly CONNECT = 'connect' as const;\n  /** @event */\n  static readonly CLOSE = 'close' as const;\n  /** @event */\n  static readonly TIMEOUT = 'timeout' as const;\n\n  /**\n   * @internal\n   *\n   * @privateRemarks\n   * mongodb-client-encryption's class ClientEncryption falls back to finding the bson lib\n   * defined on client.topology.bson, in order to maintain compatibility with any version\n   * of mongodb-client-encryption we keep a reference to serialize and deserialize here.\n   */\n  bson: { serialize: typeof serialize; deserialize: typeof deserialize };\n\n  /**\n   * @param seedlist - a list of HostAddress instances to connect to\n   */\n  constructor(seeds: string | string[] | HostAddress | HostAddress[], options: TopologyOptions) {\n    super();\n\n    // Legacy CSFLE support\n    this.bson = Object.create(null);\n    this.bson.serialize = serialize;\n    this.bson.deserialize = deserialize;\n\n    // Options should only be undefined in tests, MongoClient will always have defined options\n    options = options ?? {\n      hosts: [HostAddress.fromString('localhost:27017')],\n      retryReads: DEFAULT_OPTIONS.get('retryReads'),\n      retryWrites: DEFAULT_OPTIONS.get('retryWrites'),\n      serverSelectionTimeoutMS: DEFAULT_OPTIONS.get('serverSelectionTimeoutMS'),\n      directConnection: DEFAULT_OPTIONS.get('directConnection'),\n      loadBalanced: DEFAULT_OPTIONS.get('loadBalanced'),\n      metadata: DEFAULT_OPTIONS.get('metadata'),\n      monitorCommands: DEFAULT_OPTIONS.get('monitorCommands'),\n      tls: DEFAULT_OPTIONS.get('tls'),\n      maxPoolSize: DEFAULT_OPTIONS.get('maxPoolSize'),\n      minPoolSize: DEFAULT_OPTIONS.get('minPoolSize'),\n      waitQueueTimeoutMS: DEFAULT_OPTIONS.get('waitQueueTimeoutMS'),\n      connectionType: DEFAULT_OPTIONS.get('connectionType'),\n      connectTimeoutMS: DEFAULT_OPTIONS.get('connectTimeoutMS'),\n      maxIdleTimeMS: DEFAULT_OPTIONS.get('maxIdleTimeMS'),\n      heartbeatFrequencyMS: DEFAULT_OPTIONS.get('heartbeatFrequencyMS'),\n      minHeartbeatFrequencyMS: DEFAULT_OPTIONS.get('minHeartbeatFrequencyMS')\n    };\n\n    if (typeof seeds === 'string') {\n      seeds = [HostAddress.fromString(seeds)];\n    } else if (!Array.isArray(seeds)) {\n      seeds = [seeds];\n    }\n\n    const seedlist: HostAddress[] = [];\n    for (const seed of seeds) {\n      if (typeof seed === 'string') {\n        seedlist.push(HostAddress.fromString(seed));\n      } else if (seed instanceof HostAddress) {\n        seedlist.push(seed);\n      } else {\n        // FIXME(NODE-3483): May need to be a MongoParseError\n        throw new MongoRuntimeError(`Topology cannot be constructed from ${JSON.stringify(seed)}`);\n      }\n    }\n\n    const topologyType = topologyTypeFromOptions(options);\n    const topologyId = globalTopologyCounter++;\n\n    const serverDescriptions = new Map();\n    for (const hostAddress of seedlist) {\n      serverDescriptions.set(hostAddress.toString(), new ServerDescription(hostAddress));\n    }\n\n    this[kWaitQueue] = new Denque();\n    this.s = {\n      // the id of this topology\n      id: topologyId,\n      // passed in options\n      options,\n      // initial seedlist of servers to connect to\n      seedlist,\n      // initial state\n      state: STATE_CLOSED,\n      // the topology description\n      description: new TopologyDescription(\n        topologyType,\n        serverDescriptions,\n        options.replicaSet,\n        undefined,\n        undefined,\n        undefined,\n        options\n      ),\n      serverSelectionTimeoutMS: options.serverSelectionTimeoutMS,\n      heartbeatFrequencyMS: options.heartbeatFrequencyMS,\n      minHeartbeatFrequencyMS: options.minHeartbeatFrequencyMS,\n      // a map of server instances to normalized addresses\n      servers: new Map(),\n      // Server Session Pool\n      sessionPool: new ServerSessionPool(this),\n      // Active client sessions\n      sessions: new Set(),\n      credentials: options?.credentials,\n      clusterTime: undefined,\n\n      // timer management\n      connectionTimers: new Set<NodeJS.Timeout>(),\n\n      detectShardedTopology: ev => this.detectShardedTopology(ev),\n      detectSrvRecords: ev => this.detectSrvRecords(ev)\n    };\n\n    if (options.srvHost && !options.loadBalanced) {\n      this.s.srvPoller =\n        options.srvPoller ??\n        new SrvPoller({\n          heartbeatFrequencyMS: this.s.heartbeatFrequencyMS,\n          srvHost: options.srvHost\n        });\n\n      this.on(Topology.TOPOLOGY_DESCRIPTION_CHANGED, this.s.detectShardedTopology);\n    }\n  }\n\n  private detectShardedTopology(event: TopologyDescriptionChangedEvent) {\n    const previousType = event.previousDescription.type;\n    const newType = event.newDescription.type;\n\n    const transitionToSharded =\n      previousType !== TopologyType.Sharded && newType === TopologyType.Sharded;\n    const srvListeners = this.s.srvPoller?.listeners(SrvPoller.SRV_RECORD_DISCOVERY);\n    const listeningToSrvPolling = !!srvListeners?.includes(this.s.detectSrvRecords);\n\n    if (transitionToSharded && !listeningToSrvPolling) {\n      this.s.srvPoller?.on(SrvPoller.SRV_RECORD_DISCOVERY, this.s.detectSrvRecords);\n      this.s.srvPoller?.start();\n    }\n  }\n\n  private detectSrvRecords(ev: SrvPollingEvent) {\n    const previousTopologyDescription = this.s.description;\n    this.s.description = this.s.description.updateFromSrvPollingEvent(ev);\n    if (this.s.description === previousTopologyDescription) {\n      // Nothing changed, so return\n      return;\n    }\n\n    updateServers(this);\n\n    this.emit(\n      Topology.TOPOLOGY_DESCRIPTION_CHANGED,\n      new TopologyDescriptionChangedEvent(\n        this.s.id,\n        previousTopologyDescription,\n        this.s.description\n      )\n    );\n  }\n\n  /**\n   * @returns A `TopologyDescription` for this topology\n   */\n  get description(): TopologyDescription {\n    return this.s.description;\n  }\n\n  get loadBalanced(): boolean {\n    return this.s.options.loadBalanced;\n  }\n\n  get capabilities(): ServerCapabilities {\n    return new ServerCapabilities(this.lastIsMaster());\n  }\n\n  /** Initiate server connect */\n  connect(options?: ConnectOptions, callback?: Callback): void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n    if (this.s.state === STATE_CONNECTED) {\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    stateTransition(this, STATE_CONNECTING);\n\n    // emit SDAM monitoring events\n    this.emit(Topology.TOPOLOGY_OPENING, new TopologyOpeningEvent(this.s.id));\n\n    // emit an event for the topology change\n    this.emit(\n      Topology.TOPOLOGY_DESCRIPTION_CHANGED,\n      new TopologyDescriptionChangedEvent(\n        this.s.id,\n        new TopologyDescription(TopologyType.Unknown), // initial is always Unknown\n        this.s.description\n      )\n    );\n\n    // connect all known servers, then attempt server selection to connect\n    const serverDescriptions = Array.from(this.s.description.servers.values());\n    connectServers(this, serverDescriptions);\n\n    // In load balancer mode we need to fake a server description getting\n    // emitted from the monitor, since the monitor doesn't exist.\n    if (this.s.options.loadBalanced) {\n      for (const description of serverDescriptions) {\n        const newDescription = new ServerDescription(description.hostAddress, undefined, {\n          loadBalanced: this.s.options.loadBalanced\n        });\n        this.serverUpdateHandler(newDescription);\n      }\n    }\n\n    const readPreference = options.readPreference ?? ReadPreference.primary;\n    this.selectServer(readPreferenceServerSelector(readPreference), options, (err, server) => {\n      if (err) {\n        this.close();\n\n        typeof callback === 'function' ? callback(err) : this.emit(Topology.ERROR, err);\n        return;\n      }\n\n      // TODO: NODE-2471\n      if (server && this.s.credentials) {\n        server.command(ns('admin.$cmd'), { ping: 1 }, err => {\n          if (err) {\n            typeof callback === 'function' ? callback(err) : this.emit(Topology.ERROR, err);\n            return;\n          }\n\n          stateTransition(this, STATE_CONNECTED);\n          // TODO(NODE-3273) - remove err\n          this.emit(Topology.OPEN, err, this);\n          this.emit(Topology.CONNECT, this);\n\n          if (typeof callback === 'function') callback(undefined, this);\n        });\n\n        return;\n      }\n\n      stateTransition(this, STATE_CONNECTED);\n      // TODO(NODE-3273) - remove err\n      this.emit(Topology.OPEN, err, this);\n      this.emit(Topology.CONNECT, this);\n\n      if (typeof callback === 'function') callback(undefined, this);\n    });\n  }\n\n  /** Close this topology */\n  close(options?: CloseOptions, callback?: Callback): void {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (typeof options === 'boolean') {\n      options = { force: options };\n    }\n\n    options = options ?? {};\n    if (this.s.state === STATE_CLOSED || this.s.state === STATE_CLOSING) {\n      if (typeof callback === 'function') {\n        callback();\n      }\n\n      return;\n    }\n\n    stateTransition(this, STATE_CLOSING);\n\n    drainWaitQueue(this[kWaitQueue], new MongoTopologyClosedError());\n    drainTimerQueue(this.s.connectionTimers);\n\n    if (this.s.srvPoller) {\n      this.s.srvPoller.stop();\n      this.s.srvPoller.removeListener(SrvPoller.SRV_RECORD_DISCOVERY, this.s.detectSrvRecords);\n    }\n\n    this.removeListener(Topology.TOPOLOGY_DESCRIPTION_CHANGED, this.s.detectShardedTopology);\n\n    eachAsync(\n      Array.from(this.s.sessions.values()),\n      (session, cb) => session.endSession(cb),\n      () => {\n        this.s.sessionPool.endAllPooledSessions(() => {\n          eachAsync(\n            Array.from(this.s.servers.values()),\n            (server, cb) => destroyServer(server, this, options, cb),\n            err => {\n              this.s.servers.clear();\n\n              // emit an event for close\n              this.emit(Topology.TOPOLOGY_CLOSED, new TopologyClosedEvent(this.s.id));\n\n              stateTransition(this, STATE_CLOSED);\n\n              if (typeof callback === 'function') {\n                callback(err);\n              }\n            }\n          );\n        });\n      }\n    );\n  }\n\n  /**\n   * Selects a server according to the selection predicate provided\n   *\n   * @param selector - An optional selector to select servers by, defaults to a random selection within a latency window\n   * @param options - Optional settings related to server selection\n   * @param callback - The callback used to indicate success or failure\n   * @returns An instance of a `Server` meeting the criteria of the predicate provided\n   */\n  selectServer(options: SelectServerOptions, callback: Callback<Server>): void;\n  selectServer(\n    selector: string | ReadPreference | ServerSelector,\n    callback: Callback<Server>\n  ): void;\n  selectServer(\n    selector: string | ReadPreference | ServerSelector,\n    options: SelectServerOptions,\n    callback: Callback<Server>\n  ): void;\n  selectServer(\n    selector: string | ReadPreference | ServerSelector | SelectServerOptions,\n    _options?: SelectServerOptions | Callback<Server>,\n    _callback?: Callback<Server>\n  ): void {\n    let options = _options as SelectServerOptions;\n    const callback = (_callback ?? _options) as Callback<Server>;\n    if (typeof options === 'function') {\n      options = {};\n    }\n\n    let serverSelector;\n    if (typeof selector !== 'function') {\n      if (typeof selector === 'string') {\n        serverSelector = readPreferenceServerSelector(ReadPreference.fromString(selector));\n      } else {\n        let readPreference;\n        if (selector instanceof ReadPreference) {\n          readPreference = selector;\n        } else {\n          ReadPreference.translate(options);\n          readPreference = options.readPreference || ReadPreference.primary;\n        }\n\n        serverSelector = readPreferenceServerSelector(readPreference as ReadPreference);\n      }\n    } else {\n      serverSelector = selector;\n    }\n\n    options = Object.assign(\n      {},\n      { serverSelectionTimeoutMS: this.s.serverSelectionTimeoutMS },\n      options\n    );\n\n    const isSharded = this.description.type === TopologyType.Sharded;\n    const session = options.session;\n    const transaction = session && session.transaction;\n\n    if (isSharded && transaction && transaction.server) {\n      callback(undefined, transaction.server);\n      return;\n    }\n\n    const waitQueueMember: ServerSelectionRequest = {\n      serverSelector,\n      transaction,\n      callback\n    };\n\n    const serverSelectionTimeoutMS = options.serverSelectionTimeoutMS;\n    if (serverSelectionTimeoutMS) {\n      waitQueueMember.timer = setTimeout(() => {\n        waitQueueMember[kCancelled] = true;\n        waitQueueMember.timer = undefined;\n        const timeoutError = new MongoServerSelectionError(\n          `Server selection timed out after ${serverSelectionTimeoutMS} ms`,\n          this.description\n        );\n\n        waitQueueMember.callback(timeoutError);\n      }, serverSelectionTimeoutMS);\n    }\n\n    this[kWaitQueue].push(waitQueueMember);\n    processWaitQueue(this);\n  }\n\n  // Sessions related methods\n\n  /**\n   * @returns Whether the topology should initiate selection to determine session support\n   */\n  shouldCheckForSessionSupport(): boolean {\n    if (this.description.type === TopologyType.Single) {\n      return !this.description.hasKnownServers;\n    }\n\n    return !this.description.hasDataBearingServers;\n  }\n\n  /**\n   * @returns Whether sessions are supported on the current topology\n   */\n  hasSessionSupport(): boolean {\n    return this.loadBalanced || this.description.logicalSessionTimeoutMinutes != null;\n  }\n\n  /** Start a logical session */\n  startSession(options: ClientSessionOptions, clientOptions?: MongoOptions): ClientSession {\n    const session = new ClientSession(this, this.s.sessionPool, options, clientOptions);\n    session.once('ended', () => {\n      this.s.sessions.delete(session);\n    });\n\n    this.s.sessions.add(session);\n    return session;\n  }\n\n  /** Send endSessions command(s) with the given session ids */\n  endSessions(sessions: ServerSessionId[], callback?: Callback<Document>): void {\n    if (!Array.isArray(sessions)) {\n      sessions = [sessions];\n    }\n\n    this.selectServer(\n      readPreferenceServerSelector(ReadPreference.primaryPreferred),\n      (err, server) => {\n        if (err || !server) {\n          if (typeof callback === 'function') callback(err);\n          return;\n        }\n\n        server.command(\n          ns('admin.$cmd'),\n          { endSessions: sessions },\n          { noResponse: true },\n          (err, result) => {\n            if (typeof callback === 'function') callback(err, result);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Update the internal TopologyDescription with a ServerDescription\n   *\n   * @param serverDescription - The server to update in the internal list of server descriptions\n   */\n  serverUpdateHandler(serverDescription: ServerDescription): void {\n    if (!this.s.description.hasServer(serverDescription.address)) {\n      return;\n    }\n\n    // ignore this server update if its from an outdated topologyVersion\n    if (isStaleServerDescription(this.s.description, serverDescription)) {\n      return;\n    }\n\n    // these will be used for monitoring events later\n    const previousTopologyDescription = this.s.description;\n    const previousServerDescription = this.s.description.servers.get(serverDescription.address);\n    if (!previousServerDescription) {\n      return;\n    }\n\n    // Driver Sessions Spec: \"Whenever a driver receives a cluster time from\n    // a server it MUST compare it to the current highest seen cluster time\n    // for the deployment. If the new cluster time is higher than the\n    // highest seen cluster time it MUST become the new highest seen cluster\n    // time. Two cluster times are compared using only the BsonTimestamp\n    // value of the clusterTime embedded field.\"\n    const clusterTime = serverDescription.$clusterTime;\n    if (clusterTime) {\n      _advanceClusterTime(this, clusterTime);\n    }\n\n    // If we already know all the information contained in this updated description, then\n    // we don't need to emit SDAM events, but still need to update the description, in order\n    // to keep client-tracked attributes like last update time and round trip time up to date\n    const equalDescriptions =\n      previousServerDescription && previousServerDescription.equals(serverDescription);\n\n    // first update the TopologyDescription\n    this.s.description = this.s.description.update(serverDescription);\n    if (this.s.description.compatibilityError) {\n      this.emit(Topology.ERROR, new MongoCompatibilityError(this.s.description.compatibilityError));\n      return;\n    }\n\n    // emit monitoring events for this change\n    if (!equalDescriptions) {\n      const newDescription = this.s.description.servers.get(serverDescription.address);\n      if (newDescription) {\n        this.emit(\n          Topology.SERVER_DESCRIPTION_CHANGED,\n          new ServerDescriptionChangedEvent(\n            this.s.id,\n            serverDescription.address,\n            previousServerDescription,\n            newDescription\n          )\n        );\n      }\n    }\n\n    // update server list from updated descriptions\n    updateServers(this, serverDescription);\n\n    // attempt to resolve any outstanding server selection attempts\n    if (this[kWaitQueue].length > 0) {\n      processWaitQueue(this);\n    }\n\n    if (!equalDescriptions) {\n      this.emit(\n        Topology.TOPOLOGY_DESCRIPTION_CHANGED,\n        new TopologyDescriptionChangedEvent(\n          this.s.id,\n          previousTopologyDescription,\n          this.s.description\n        )\n      );\n    }\n  }\n\n  auth(credentials?: MongoCredentials, callback?: Callback): void {\n    if (typeof credentials === 'function') (callback = credentials), (credentials = undefined);\n    if (typeof callback === 'function') callback(undefined, true);\n  }\n\n  get clientMetadata(): ClientMetadata {\n    return this.s.options.metadata;\n  }\n\n  isConnected(): boolean {\n    return this.s.state === STATE_CONNECTED;\n  }\n\n  isDestroyed(): boolean {\n    return this.s.state === STATE_CLOSED;\n  }\n\n  /**\n   * @deprecated This function is deprecated and will be removed in the next major version.\n   */\n  unref(): void {\n    emitWarning('`unref` is a noop and will be removed in the next major version');\n  }\n\n  // NOTE: There are many places in code where we explicitly check the last isMaster\n  //       to do feature support detection. This should be done any other way, but for\n  //       now we will just return the first isMaster seen, which should suffice.\n  lastIsMaster(): Document {\n    const serverDescriptions = Array.from(this.description.servers.values());\n    if (serverDescriptions.length === 0) return {};\n    const sd = serverDescriptions.filter(\n      (sd: ServerDescription) => sd.type !== ServerType.Unknown\n    )[0];\n\n    const result = sd || { maxWireVersion: this.description.commonWireVersion };\n    return result;\n  }\n\n  get logicalSessionTimeoutMinutes(): number | undefined {\n    return this.description.logicalSessionTimeoutMinutes;\n  }\n\n  get clusterTime(): ClusterTime | undefined {\n    return this.s.clusterTime;\n  }\n\n  set clusterTime(clusterTime: ClusterTime | undefined) {\n    this.s.clusterTime = clusterTime;\n  }\n}\n\n/** @public */\nexport const TOPOLOGY_EVENTS = [\n  Topology.SERVER_OPENING,\n  Topology.SERVER_CLOSED,\n  Topology.SERVER_DESCRIPTION_CHANGED,\n  Topology.TOPOLOGY_OPENING,\n  Topology.TOPOLOGY_CLOSED,\n  Topology.TOPOLOGY_DESCRIPTION_CHANGED,\n  Topology.ERROR,\n  Topology.TIMEOUT,\n  Topology.CLOSE\n];\n\n/** Destroys a server, and removes all event listeners from the instance */\nfunction destroyServer(\n  server: Server,\n  topology: Topology,\n  options?: DestroyOptions,\n  callback?: Callback\n) {\n  options = options ?? {};\n  for (const event of LOCAL_SERVER_EVENTS) {\n    server.removeAllListeners(event);\n  }\n\n  server.destroy(options, () => {\n    topology.emit(\n      Topology.SERVER_CLOSED,\n      new ServerClosedEvent(topology.s.id, server.description.address)\n    );\n\n    for (const event of SERVER_RELAY_EVENTS) {\n      server.removeAllListeners(event);\n    }\n    if (typeof callback === 'function') {\n      callback();\n    }\n  });\n}\n\n/** Predicts the TopologyType from options */\nfunction topologyTypeFromOptions(options?: TopologyOptions) {\n  if (options?.directConnection) {\n    return TopologyType.Single;\n  }\n\n  if (options?.replicaSet) {\n    return TopologyType.ReplicaSetNoPrimary;\n  }\n\n  if (options?.loadBalanced) {\n    return TopologyType.LoadBalanced;\n  }\n\n  return TopologyType.Unknown;\n}\n\nfunction randomSelection(array: ServerDescription[]): ServerDescription {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\n/**\n * Creates new server instances and attempts to connect them\n *\n * @param topology - The topology that this server belongs to\n * @param serverDescription - The description for the server to initialize and connect to\n * @param connectDelay - Time to wait before attempting initial connection\n */\nfunction createAndConnectServer(\n  topology: Topology,\n  serverDescription: ServerDescription,\n  connectDelay?: number\n) {\n  topology.emit(\n    Topology.SERVER_OPENING,\n    new ServerOpeningEvent(topology.s.id, serverDescription.address)\n  );\n\n  const server = new Server(topology, serverDescription, topology.s.options);\n  for (const event of SERVER_RELAY_EVENTS) {\n    server.on(event, (e: any) => topology.emit(event, e));\n  }\n\n  server.on(Server.DESCRIPTION_RECEIVED, description => topology.serverUpdateHandler(description));\n\n  if (connectDelay) {\n    const connectTimer = setTimeout(() => {\n      clearAndRemoveTimerFrom(connectTimer, topology.s.connectionTimers);\n      server.connect();\n    }, connectDelay);\n\n    topology.s.connectionTimers.add(connectTimer);\n    return server;\n  }\n\n  server.connect();\n  return server;\n}\n\n/**\n * Create `Server` instances for all initially known servers, connect them, and assign\n * them to the passed in `Topology`.\n *\n * @param topology - The topology responsible for the servers\n * @param serverDescriptions - A list of server descriptions to connect\n */\nfunction connectServers(topology: Topology, serverDescriptions: ServerDescription[]) {\n  topology.s.servers = serverDescriptions.reduce(\n    (servers: Map<string, Server>, serverDescription: ServerDescription) => {\n      const server = createAndConnectServer(topology, serverDescription);\n      servers.set(serverDescription.address, server);\n      return servers;\n    },\n    new Map<string, Server>()\n  );\n}\n\n/**\n * @param topology - Topology to update.\n * @param incomingServerDescription - New server description.\n */\nfunction updateServers(topology: Topology, incomingServerDescription?: ServerDescription) {\n  // update the internal server's description\n  if (incomingServerDescription && topology.s.servers.has(incomingServerDescription.address)) {\n    const server = topology.s.servers.get(incomingServerDescription.address);\n    if (server) {\n      server.s.description = incomingServerDescription;\n    }\n  }\n\n  // add new servers for all descriptions we currently don't know about locally\n  for (const serverDescription of topology.description.servers.values()) {\n    if (!topology.s.servers.has(serverDescription.address)) {\n      const server = createAndConnectServer(topology, serverDescription);\n      topology.s.servers.set(serverDescription.address, server);\n    }\n  }\n\n  // for all servers no longer known, remove their descriptions and destroy their instances\n  for (const entry of topology.s.servers) {\n    const serverAddress = entry[0];\n    if (topology.description.hasServer(serverAddress)) {\n      continue;\n    }\n\n    if (!topology.s.servers.has(serverAddress)) {\n      continue;\n    }\n\n    const server = topology.s.servers.get(serverAddress);\n    topology.s.servers.delete(serverAddress);\n\n    // prepare server for garbage collection\n    if (server) {\n      destroyServer(server, topology);\n    }\n  }\n}\n\nfunction drainWaitQueue(queue: Denque<ServerSelectionRequest>, err?: MongoDriverError) {\n  while (queue.length) {\n    const waitQueueMember = queue.shift();\n    if (!waitQueueMember) {\n      continue;\n    }\n\n    if (waitQueueMember.timer) {\n      clearTimeout(waitQueueMember.timer);\n    }\n\n    if (!waitQueueMember[kCancelled]) {\n      waitQueueMember.callback(err);\n    }\n  }\n}\n\nfunction processWaitQueue(topology: Topology) {\n  if (topology.s.state === STATE_CLOSED) {\n    drainWaitQueue(topology[kWaitQueue], new MongoTopologyClosedError());\n    return;\n  }\n\n  const isSharded = topology.description.type === TopologyType.Sharded;\n  const serverDescriptions = Array.from(topology.description.servers.values());\n  const membersToProcess = topology[kWaitQueue].length;\n  for (let i = 0; i < membersToProcess; ++i) {\n    const waitQueueMember = topology[kWaitQueue].shift();\n    if (!waitQueueMember) {\n      continue;\n    }\n\n    if (waitQueueMember[kCancelled]) {\n      continue;\n    }\n\n    let selectedDescriptions;\n    try {\n      const serverSelector = waitQueueMember.serverSelector;\n      selectedDescriptions = serverSelector\n        ? serverSelector(topology.description, serverDescriptions)\n        : serverDescriptions;\n    } catch (e) {\n      if (waitQueueMember.timer) {\n        clearTimeout(waitQueueMember.timer);\n      }\n\n      waitQueueMember.callback(e);\n      continue;\n    }\n\n    if (selectedDescriptions.length === 0) {\n      topology[kWaitQueue].push(waitQueueMember);\n      continue;\n    }\n\n    const selectedServerDescription = randomSelection(selectedDescriptions);\n    const selectedServer = topology.s.servers.get(selectedServerDescription.address);\n    const transaction = waitQueueMember.transaction;\n    if (isSharded && transaction && transaction.isActive && selectedServer) {\n      transaction.pinServer(selectedServer);\n    }\n\n    if (waitQueueMember.timer) {\n      clearTimeout(waitQueueMember.timer);\n    }\n\n    waitQueueMember.callback(undefined, selectedServer);\n  }\n\n  if (topology[kWaitQueue].length > 0) {\n    // ensure all server monitors attempt monitoring soon\n    for (const [, server] of topology.s.servers) {\n      process.nextTick(function scheduleServerCheck() {\n        return server.requestCheck();\n      });\n    }\n  }\n}\n\nfunction isStaleServerDescription(\n  topologyDescription: TopologyDescription,\n  incomingServerDescription: ServerDescription\n) {\n  const currentServerDescription = topologyDescription.servers.get(\n    incomingServerDescription.address\n  );\n  const currentTopologyVersion = currentServerDescription?.topologyVersion;\n  return (\n    compareTopologyVersion(currentTopologyVersion, incomingServerDescription.topologyVersion) > 0\n  );\n}\n\n/** @public */\nexport class ServerCapabilities {\n  maxWireVersion: number;\n  minWireVersion: number;\n\n  constructor(ismaster: Document) {\n    this.minWireVersion = ismaster.minWireVersion || 0;\n    this.maxWireVersion = ismaster.maxWireVersion || 0;\n  }\n\n  get hasAggregationCursor(): boolean {\n    return this.maxWireVersion >= 1;\n  }\n\n  get hasWriteCommands(): boolean {\n    return this.maxWireVersion >= 2;\n  }\n  get hasTextSearch(): boolean {\n    return this.minWireVersion >= 0;\n  }\n\n  get hasAuthCommands(): boolean {\n    return this.maxWireVersion >= 1;\n  }\n\n  get hasListCollectionsCommand(): boolean {\n    return this.maxWireVersion >= 3;\n  }\n\n  get hasListIndexesCommand(): boolean {\n    return this.maxWireVersion >= 3;\n  }\n\n  get supportsSnapshotReads(): boolean {\n    return this.maxWireVersion >= 13;\n  }\n\n  get commandsTakeWriteConcern(): boolean {\n    return this.maxWireVersion >= 5;\n  }\n\n  get commandsTakeCollation(): boolean {\n    return this.maxWireVersion >= 5;\n  }\n}\n", "import { MongoRuntimeError, MongoInvalidArgumentError } from '../error';\nimport { Topology, TOPOLOGY_EVENTS } from '../sdam/topology';\nimport { resolveSRVRecord } from '../connection_string';\nimport type { Callback } from '../utils';\nimport type { MongoClient, MongoOptions } from '../mongo_client';\nimport { CMAP_EVENTS } from '../cmap/connection_pool';\nimport { APM_EVENTS } from '../cmap/connection';\nimport { HEARTBEAT_EVENTS } from '../sdam/server';\n\n/** @public */\nexport const MONGO_CLIENT_EVENTS = [\n  ...CMAP_EVENTS,\n  ...APM_EVENTS,\n  ...TOPOLOGY_EVENTS,\n  ...HEARTBEAT_EVENTS\n] as const;\n\nexport function connect(\n  mongoClient: MongoClient,\n  options: MongoOptions,\n  callback: Callback<MongoClient>\n): void {\n  if (!callback) {\n    throw new MongoInvalidArgumentError('Callback function must be provided');\n  }\n\n  // If a connection already been established, we can terminate early\n  if (mongoClient.topology && mongoClient.topology.isConnected()) {\n    return callback(undefined, mongoClient);\n  }\n\n  const logger = mongoClient.logger;\n  const connectCallback: Callback = err => {\n    const warningMessage =\n      'seed list contains no mongos proxies, replicaset connections requires ' +\n      'the parameter replicaSet to be supplied in the URI or options object, ' +\n      'mongodb://server:port/db?replicaSet=name';\n    if (err && err.message === 'no mongos proxies found in seed list') {\n      if (logger.isWarn()) {\n        logger.warn(warningMessage);\n      }\n\n      // Return a more specific error message for MongoClient.connect\n      // TODO(NODE-3483)\n      return callback(new MongoRuntimeError(warningMessage));\n    }\n\n    callback(err, mongoClient);\n  };\n\n  if (typeof options.srvHost === 'string') {\n    return resolveSRVRecord(options, (err, hosts) => {\n      if (err || !hosts) return callback(err);\n      for (const [index, host] of hosts.entries()) {\n        options.hosts[index] = host;\n      }\n\n      return createTopology(mongoClient, options, connectCallback);\n    });\n  }\n\n  return createTopology(mongoClient, options, connectCallback);\n}\n\nfunction createTopology(\n  mongoClient: MongoClient,\n  options: MongoOptions,\n  callback: Callback<Topology>\n) {\n  // Create the topology\n  const topology = new Topology(options.hosts, options);\n  // Events can be emitted before initialization is complete so we have to\n  // save the reference to the topology on the client ASAP if the event handlers need to access it\n  mongoClient.topology = topology;\n\n  topology.once(Topology.OPEN, () => mongoClient.emit('open', mongoClient));\n\n  for (const event of MONGO_CLIENT_EVENTS) {\n    topology.on(event, (...args: any[]) => mongoClient.emit(event, ...(args as any)));\n  }\n\n  // initialize CSFLE if requested\n  if (mongoClient.autoEncrypter) {\n    mongoClient.autoEncrypter.init(err => {\n      if (err) {\n        return callback(err);\n      }\n\n      topology.connect(options, err => {\n        if (err) {\n          topology.close({ force: true });\n          return callback(err);\n        }\n\n        options.encrypter.connectInternalClient(error => {\n          if (error) return callback(error);\n\n          callback(undefined, topology);\n        });\n      });\n    });\n\n    return;\n  }\n\n  // otherwise connect normally\n  topology.connect(options, err => {\n    if (err) {\n      topology.close({ force: true });\n      return callback(err);\n    }\n\n    callback(undefined, topology);\n    return;\n  });\n}\n", "import { Db, DbOptions } from './db';\nimport { ChangeStream, ChangeStreamOptions } from './change_stream';\nimport type { ReadPreference, ReadPreferenceMode } from './read_preference';\nimport {\n  AnyError,\n  MongoRuntimeError,\n  MongoInvalidArgumentError,\n  MongoNotConnectedError\n} from './error';\nimport type { W, WriteConcern } from './write_concern';\nimport {\n  maybePromise,\n  MongoDBNamespace,\n  Callback,\n  resolveOptions,\n  ClientMetadata,\n  ns,\n  HostAddress\n} from './utils';\nimport { connect, MONGO_CLIENT_EVENTS } from './operations/connect';\nimport { PromiseProvider } from './promise_provider';\nimport type { Logger, LoggerLevel } from './logger';\nimport type { ReadConcern, ReadConcernLevel, ReadConcernLike } from './read_concern';\nimport { BSONSerializeOptions, Document, resolveBSONOptions } from './bson';\nimport type { AutoEncrypter, AutoEncryptionOptions } from './deps';\nimport type { AuthMechanism } from './cmap/auth/defaultAuthProviders';\nimport type { Topology, TopologyEvents } from './sdam/topology';\nimport type { ClientSession, ClientSessionOptions } from './sessions';\nimport type { TagSet } from './sdam/server_description';\nimport type { AuthMechanismProperties, MongoCredentials } from './cmap/auth/mongo_credentials';\nimport { parseOptions } from './connection_string';\nimport type { CompressorName } from './cmap/wire_protocol/compression';\nimport type { TLSSocketOptions, ConnectionOptions as TLSConnectionOptions } from 'tls';\nimport type { TcpNetConnectOpts } from 'net';\nimport type { SrvPoller } from './sdam/srv_polling';\nimport type { Connection } from './cmap/connection';\nimport type { LEGAL_TLS_SOCKET_OPTIONS, LEGAL_TCP_SOCKET_OPTIONS } from './cmap/connect';\nimport type { Encrypter } from './encrypter';\nimport { TypedEventEmitter } from './mongo_types';\n\n/** @public */\nexport const ServerApiVersion = Object.freeze({\n  v1: '1'\n} as const);\n\n/** @public */\nexport type ServerApiVersion = typeof ServerApiVersion[keyof typeof ServerApiVersion];\n\n/** @public */\nexport interface ServerApi {\n  version: ServerApiVersion;\n  strict?: boolean;\n  deprecationErrors?: boolean;\n}\n\n/** @public */\nexport interface DriverInfo {\n  name?: string;\n  version?: string;\n  platform?: string;\n}\n\n/** @public */\nexport interface Auth {\n  /** The username for auth */\n  username?: string;\n  /** The password for auth */\n  password?: string;\n}\n\n/** @public */\nexport interface PkFactory {\n  createPk(): any; // TODO: when js-bson is typed, function should return some BSON type\n}\n\ntype CleanUpHandlerFunction = (err?: AnyError, result?: any, opts?: any) => Promise<void>;\n\n/** @public */\nexport type SupportedTLSConnectionOptions = Pick<\n  TLSConnectionOptions,\n  Extract<keyof TLSConnectionOptions, typeof LEGAL_TLS_SOCKET_OPTIONS[number]>\n>;\n\n/** @public */\nexport type SupportedTLSSocketOptions = Pick<\n  TLSSocketOptions,\n  Extract<keyof TLSSocketOptions, typeof LEGAL_TLS_SOCKET_OPTIONS[number]>\n>;\n\n/** @public */\nexport type SupportedSocketOptions = Pick<\n  TcpNetConnectOpts,\n  typeof LEGAL_TCP_SOCKET_OPTIONS[number]\n>;\n\n/** @public */\nexport type SupportedNodeConnectionOptions = SupportedTLSConnectionOptions &\n  SupportedTLSSocketOptions &\n  SupportedSocketOptions;\n\n/**\n * Describes all possible URI query options for the mongo client\n * @public\n * @see https://docs.mongodb.com/manual/reference/connection-string\n */\nexport interface MongoClientOptions extends BSONSerializeOptions, SupportedNodeConnectionOptions {\n  /** Specifies the name of the replica set, if the mongod is a member of a replica set. */\n  replicaSet?: string;\n  /** Enables or disables TLS/SSL for the connection. */\n  tls?: boolean;\n  /** A boolean to enable or disables TLS/SSL for the connection. (The ssl option is equivalent to the tls option.) */\n  ssl?: boolean;\n  /** Specifies the location of a local TLS Certificate */\n  tlsCertificateFile?: string;\n  /** Specifies the location of a local .pem file that contains either the client's TLS/SSL certificate and key or only the client's TLS/SSL key when tlsCertificateFile is used to provide the certificate. */\n  tlsCertificateKeyFile?: string;\n  /** Specifies the password to de-crypt the tlsCertificateKeyFile. */\n  tlsCertificateKeyFilePassword?: string;\n  /** Specifies the location of a local .pem file that contains the root certificate chain from the Certificate Authority. This file is used to validate the certificate presented by the mongod/mongos instance. */\n  tlsCAFile?: string;\n  /** Bypasses validation of the certificates presented by the mongod/mongos instance */\n  tlsAllowInvalidCertificates?: boolean;\n  /** Disables hostname validation of the certificate presented by the mongod/mongos instance. */\n  tlsAllowInvalidHostnames?: boolean;\n  /** Disables various certificate validations. */\n  tlsInsecure?: boolean;\n  /** The time in milliseconds to attempt a connection before timing out. */\n  connectTimeoutMS?: number;\n  /** The time in milliseconds to attempt a send or receive on a socket before the attempt times out. */\n  socketTimeoutMS?: number;\n  /** An array or comma-delimited string of compressors to enable network compression for communication between this client and a mongod/mongos instance. */\n  compressors?: CompressorName[] | string;\n  /** An integer that specifies the compression level if using zlib for network compression. */\n  zlibCompressionLevel?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | undefined;\n  /** The maximum number of connections in the connection pool. */\n  maxPoolSize?: number;\n  /** The minimum number of connections in the connection pool. */\n  minPoolSize?: number;\n  /** The maximum number of milliseconds that a connection can remain idle in the pool before being removed and closed. */\n  maxIdleTimeMS?: number;\n  /** The maximum time in milliseconds that a thread can wait for a connection to become available. */\n  waitQueueTimeoutMS?: number;\n  /** Specify a read concern for the collection (only MongoDB 3.2 or higher supported) */\n  readConcern?: ReadConcernLike;\n  /** The level of isolation */\n  readConcernLevel?: ReadConcernLevel;\n  /** Specifies the read preferences for this connection */\n  readPreference?: ReadPreferenceMode | ReadPreference;\n  /** Specifies, in seconds, how stale a secondary can be before the client stops using it for read operations. */\n  maxStalenessSeconds?: number;\n  /** Specifies the tags document as a comma-separated list of colon-separated key-value pairs.  */\n  readPreferenceTags?: TagSet[];\n  /** The auth settings for when connection to server. */\n  auth?: Auth;\n  /** Specify the database name associated with the user’s credentials. */\n  authSource?: string;\n  /** Specify the authentication mechanism that MongoDB will use to authenticate the connection. */\n  authMechanism?: AuthMechanism;\n  /** Specify properties for the specified authMechanism as a comma-separated list of colon-separated key-value pairs. */\n  authMechanismProperties?: AuthMechanismProperties;\n  /** The size (in milliseconds) of the latency window for selecting among multiple suitable MongoDB instances. */\n  localThresholdMS?: number;\n  /** Specifies how long (in milliseconds) to block for server selection before throwing an exception.  */\n  serverSelectionTimeoutMS?: number;\n  /** heartbeatFrequencyMS controls when the driver checks the state of the MongoDB deployment. Specify the interval (in milliseconds) between checks, counted from the end of the previous check until the beginning of the next one. */\n  heartbeatFrequencyMS?: number;\n  /** Sets the minimum heartbeat frequency. In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort. */\n  minHeartbeatFrequencyMS?: number;\n  /** The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections */\n  appName?: string;\n  /** Enables retryable reads. */\n  retryReads?: boolean;\n  /** Enable retryable writes. */\n  retryWrites?: boolean;\n  /** Allow a driver to force a Single topology type with a connection string containing one host */\n  directConnection?: boolean;\n  /** Instruct the driver it is connecting to a load balancer fronting a mongos like service */\n  loadBalanced?: boolean;\n\n  /** The write concern w value */\n  w?: W;\n  /** The write concern timeout */\n  wtimeoutMS?: number;\n  /** The journal write concern */\n  journal?: boolean;\n\n  /** Validate mongod server certificate against Certificate Authority */\n  sslValidate?: boolean;\n  /** SSL Certificate file path. */\n  sslCA?: string;\n  /** SSL Certificate file path. */\n  sslCert?: string;\n  /** SSL Key file file path. */\n  sslKey?: string;\n  /** SSL Certificate pass phrase. */\n  sslPass?: string;\n  /** SSL Certificate revocation list file path. */\n  sslCRL?: string;\n  /** TCP Connection no delay */\n  noDelay?: boolean;\n  /** TCP Connection keep alive enabled */\n  keepAlive?: boolean;\n  /** The number of milliseconds to wait before initiating keepAlive on the TCP socket */\n  keepAliveInitialDelay?: number;\n  /** Force server to assign `_id` values instead of driver */\n  forceServerObjectId?: boolean;\n  /** Return document results as raw BSON buffers */\n  raw?: boolean;\n  /** A primary key factory function for generation of custom `_id` keys */\n  pkFactory?: PkFactory;\n  /** A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible */\n  promiseLibrary?: any;\n  /** The logging level */\n  loggerLevel?: LoggerLevel;\n  /** Custom logger object */\n  logger?: Logger;\n  /** Enable command monitoring for this client */\n  monitorCommands?: boolean;\n  /** Server API version */\n  serverApi?: ServerApi | ServerApiVersion;\n  /**\n   * Optionally enable client side auto encryption\n   *\n   * @remarks\n   *  Automatic encryption is an enterprise only feature that only applies to operations on a collection. Automatic encryption is not supported for operations on a database or view, and operations that are not bypassed will result in error\n   *  (see [libmongocrypt: Auto Encryption Allow-List](https://github.com/mongodb/specifications/blob/master/source/client-side-encryption/client-side-encryption.rst#libmongocrypt-auto-encryption-allow-list)). To bypass automatic encryption for all operations, set bypassAutoEncryption=true in AutoEncryptionOpts.\n   *\n   *  Automatic encryption requires the authenticated user to have the [listCollections privilege action](https://docs.mongodb.com/manual/reference/command/listCollections/#dbcmd.listCollections).\n   *\n   *  If a MongoClient with a limited connection pool size (i.e a non-zero maxPoolSize) is configured with AutoEncryptionOptions, a separate internal MongoClient is created if any of the following are true:\n   *  - AutoEncryptionOptions.keyVaultClient is not passed.\n   *  - AutoEncryptionOptions.bypassAutomaticEncryption is false.\n   *\n   * If an internal MongoClient is created, it is configured with the same options as the parent MongoClient except minPoolSize is set to 0 and AutoEncryptionOptions is omitted.\n   */\n  autoEncryption?: AutoEncryptionOptions;\n  /** Allows a wrapping driver to amend the client metadata generated by the driver to include information about the wrapping driver */\n  driverInfo?: DriverInfo;\n\n  /** @internal */\n  srvPoller?: SrvPoller;\n  /** @internal */\n  connectionType?: typeof Connection;\n}\n\n/** @public */\nexport type WithSessionCallback = (session: ClientSession) => Promise<any> | void;\n\n/** @internal */\nexport interface MongoClientPrivate {\n  url: string;\n  sessions: Set<ClientSession>;\n  bsonOptions: BSONSerializeOptions;\n  namespace: MongoDBNamespace;\n  readonly options?: MongoOptions;\n  readonly readConcern?: ReadConcern;\n  readonly writeConcern?: WriteConcern;\n  readonly readPreference: ReadPreference;\n  readonly logger: Logger;\n}\n\n/** @public */\nexport type MongoClientEvents = Pick<TopologyEvents, typeof MONGO_CLIENT_EVENTS[number]> & {\n  // In previous versions the open event emitted a topology, in an effort to no longer\n  // expose internals but continue to expose this useful event API, it now emits a mongoClient\n  open(mongoClient: MongoClient): void;\n};\n\n/** @internal */\nconst kOptions = Symbol('options');\n\n/**\n * The **MongoClient** class is a class that allows for making Connections to MongoDB.\n * @public\n *\n * @remarks\n * The programmatically provided options take precedent over the URI options.\n *\n * @example\n * ```js\n * // Connect using a MongoClient instance\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * const mongoClient = new MongoClient(url);\n * mongoClient.connect(function(err, client) {\n *   const db = client.db(dbName);\n *   client.close();\n * });\n * ```\n *\n * @example\n * ```js\n * // Connect using the MongoClient.connect static method\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   const db = client.db(dbName);\n *   client.close();\n * });\n * ```\n */\nexport class MongoClient extends TypedEventEmitter<MongoClientEvents> {\n  /** @internal */\n  s: MongoClientPrivate;\n  /** @internal */\n  topology?: Topology;\n\n  /**\n   * The consolidate, parsed, transformed and merged options.\n   * @internal\n   */\n  [kOptions]: MongoOptions;\n\n  constructor(url: string, options?: MongoClientOptions) {\n    super();\n\n    this[kOptions] = parseOptions(url, this, options);\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const client = this;\n\n    // The internal state\n    this.s = {\n      url,\n      sessions: new Set(),\n      bsonOptions: resolveBSONOptions(this[kOptions]),\n      namespace: ns('admin'),\n\n      get options() {\n        return client[kOptions];\n      },\n      get readConcern() {\n        return client[kOptions].readConcern;\n      },\n      get writeConcern() {\n        return client[kOptions].writeConcern;\n      },\n      get readPreference() {\n        return client[kOptions].readPreference;\n      },\n      get logger() {\n        return client[kOptions].logger;\n      }\n    };\n  }\n\n  get options(): Readonly<MongoOptions> {\n    return Object.freeze({ ...this[kOptions] });\n  }\n\n  get serverApi(): Readonly<ServerApi | undefined> {\n    return this[kOptions].serverApi && Object.freeze({ ...this[kOptions].serverApi });\n  }\n  /**\n   * Intended for APM use only\n   * @internal\n   */\n  get monitorCommands(): boolean {\n    return this[kOptions].monitorCommands;\n  }\n  set monitorCommands(value: boolean) {\n    this[kOptions].monitorCommands = value;\n  }\n\n  get autoEncrypter(): AutoEncrypter | undefined {\n    return this[kOptions].autoEncrypter;\n  }\n\n  get readConcern(): ReadConcern | undefined {\n    return this.s.readConcern;\n  }\n\n  get writeConcern(): WriteConcern | undefined {\n    return this.s.writeConcern;\n  }\n\n  get readPreference(): ReadPreference {\n    return this.s.readPreference;\n  }\n\n  get bsonOptions(): BSONSerializeOptions {\n    return this.s.bsonOptions;\n  }\n\n  get logger(): Logger {\n    return this.s.logger;\n  }\n\n  /**\n   * Connect to MongoDB using a url\n   *\n   * @see docs.mongodb.org/manual/reference/connection-string/\n   */\n  connect(): Promise<MongoClient>;\n  connect(callback: Callback<MongoClient>): void;\n  connect(callback?: Callback<MongoClient>): Promise<MongoClient> | void {\n    if (callback && typeof callback !== 'function') {\n      throw new MongoInvalidArgumentError('Method `connect` only accepts a callback');\n    }\n\n    return maybePromise(callback, cb => {\n      connect(this, this[kOptions], err => {\n        if (err) return cb(err);\n        cb(undefined, this);\n      });\n    });\n  }\n\n  /**\n   * Close the db and its underlying connections\n   *\n   * @param force - Force close, emitting no events\n   * @param callback - An optional callback, a Promise will be returned if none is provided\n   */\n  close(): Promise<void>;\n  close(callback: Callback<void>): void;\n  close(force: boolean): Promise<void>;\n  close(force: boolean, callback: Callback<void>): void;\n  close(\n    forceOrCallback?: boolean | Callback<void>,\n    callback?: Callback<void>\n  ): Promise<void> | void {\n    if (typeof forceOrCallback === 'function') {\n      callback = forceOrCallback;\n    }\n\n    const force = typeof forceOrCallback === 'boolean' ? forceOrCallback : false;\n\n    return maybePromise(callback, callback => {\n      if (this.topology == null) {\n        return callback();\n      }\n\n      // clear out references to old topology\n      const topology = this.topology;\n      this.topology = undefined;\n\n      topology.close({ force }, error => {\n        if (error) return callback(error);\n        const { encrypter } = this[kOptions];\n        if (encrypter) {\n          return encrypter.close(this, force, error => {\n            callback(error);\n          });\n        }\n        callback();\n      });\n    });\n  }\n\n  /**\n   * Create a new Db instance sharing the current socket connections.\n   *\n   * @param dbName - The name of the database we want to use. If not provided, use database name from connection string.\n   * @param options - Optional settings for Db construction\n   */\n  db(dbName?: string, options?: DbOptions): Db {\n    options = options ?? {};\n\n    // Default to db from connection string if not provided\n    if (!dbName) {\n      dbName = this.options.dbName;\n    }\n\n    // Copy the options and add out internal override of the not shared flag\n    const finalOptions = Object.assign({}, this[kOptions], options);\n\n    // Return the db object\n    const db = new Db(this, dbName, finalOptions);\n\n    // Return the database\n    return db;\n  }\n\n  /**\n   * Connect to MongoDB using a url\n   *\n   * @remarks\n   * The programmatically provided options take precedent over the URI options.\n   *\n   * @see https://docs.mongodb.org/manual/reference/connection-string/\n   */\n  static connect(url: string): Promise<MongoClient>;\n  static connect(url: string, callback: Callback<MongoClient>): void;\n  static connect(url: string, options: MongoClientOptions): Promise<MongoClient>;\n  static connect(url: string, options: MongoClientOptions, callback: Callback<MongoClient>): void;\n  static connect(\n    url: string,\n    options?: MongoClientOptions | Callback<MongoClient>,\n    callback?: Callback<MongoClient>\n  ): Promise<MongoClient> | void {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options ?? {};\n\n    try {\n      // Create client\n      const mongoClient = new MongoClient(url, options);\n      // Execute the connect method\n      if (callback) {\n        return mongoClient.connect(callback);\n      } else {\n        return mongoClient.connect();\n      }\n    } catch (error) {\n      if (callback) return callback(error);\n      else return PromiseProvider.get().reject(error);\n    }\n  }\n\n  /** Starts a new session on the server */\n  startSession(): ClientSession;\n  startSession(options: ClientSessionOptions): ClientSession;\n  startSession(options?: ClientSessionOptions): ClientSession {\n    options = Object.assign({ explicit: true }, options);\n    if (!this.topology) {\n      throw new MongoNotConnectedError('MongoClient must be connected to start a session');\n    }\n\n    return this.topology.startSession(options, this.s.options);\n  }\n\n  /**\n   * Runs a given operation with an implicitly created session. The lifetime of the session\n   * will be handled without the need for user interaction.\n   *\n   * NOTE: presently the operation MUST return a Promise (either explicit or implicitly as an async function)\n   *\n   * @param options - Optional settings for the command\n   * @param callback - An callback to execute with an implicitly created session\n   */\n  withSession(callback: WithSessionCallback): Promise<void>;\n  withSession(options: ClientSessionOptions, callback: WithSessionCallback): Promise<void>;\n  withSession(\n    optionsOrOperation?: ClientSessionOptions | WithSessionCallback,\n    callback?: WithSessionCallback\n  ): Promise<void> {\n    let options: ClientSessionOptions = optionsOrOperation as ClientSessionOptions;\n    if (typeof optionsOrOperation === 'function') {\n      callback = optionsOrOperation as WithSessionCallback;\n      options = { owner: Symbol() };\n    }\n\n    if (callback == null) {\n      throw new MongoInvalidArgumentError('Missing required callback parameter');\n    }\n\n    const session = this.startSession(options);\n    const Promise = PromiseProvider.get();\n\n    let cleanupHandler: CleanUpHandlerFunction = ((err, result, opts) => {\n      // prevent multiple calls to cleanupHandler\n      cleanupHandler = () => {\n        // TODO(NODE-3483)\n        throw new MongoRuntimeError('cleanupHandler was called too many times');\n      };\n\n      opts = Object.assign({ throw: true }, opts);\n      session.endSession();\n\n      if (err) {\n        if (opts.throw) throw err;\n        return Promise.reject(err);\n      }\n    }) as CleanUpHandlerFunction;\n\n    try {\n      const result = callback(session);\n      return Promise.resolve(result).then(\n        result => cleanupHandler(undefined, result, undefined),\n        err => cleanupHandler(err, null, { throw: true })\n      );\n    } catch (err) {\n      return cleanupHandler(err, null, { throw: false }) as Promise<void>;\n    }\n  }\n\n  /**\n   * Create a new Change Stream, watching for new changes (insertions, updates,\n   * replacements, deletions, and invalidations) in this cluster. Will ignore all\n   * changes to system collections, as well as the local, admin, and config databases.\n   *\n   * @param pipeline - An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n   * @param options - Optional settings for the command\n   */\n  watch<TSchema = Document>(\n    pipeline: Document[] = [],\n    options: ChangeStreamOptions = {}\n  ): ChangeStream<TSchema> {\n    // Allow optionally not specifying a pipeline\n    if (!Array.isArray(pipeline)) {\n      options = pipeline;\n      pipeline = [];\n    }\n\n    return new ChangeStream<TSchema>(this, pipeline, resolveOptions(this, options));\n  }\n\n  /** Return the mongo client logger */\n  getLogger(): Logger {\n    return this.s.logger;\n  }\n}\n\n/**\n * Mongo Client Options\n * @public\n */\nexport interface MongoOptions\n  extends Required<\n      Pick<\n        MongoClientOptions,\n        | 'autoEncryption'\n        | 'connectTimeoutMS'\n        | 'directConnection'\n        | 'driverInfo'\n        | 'forceServerObjectId'\n        | 'minHeartbeatFrequencyMS'\n        | 'heartbeatFrequencyMS'\n        | 'keepAlive'\n        | 'keepAliveInitialDelay'\n        | 'localThresholdMS'\n        | 'logger'\n        | 'maxIdleTimeMS'\n        | 'maxPoolSize'\n        | 'minPoolSize'\n        | 'monitorCommands'\n        | 'noDelay'\n        | 'pkFactory'\n        | 'promiseLibrary'\n        | 'raw'\n        | 'replicaSet'\n        | 'retryReads'\n        | 'retryWrites'\n        | 'serverSelectionTimeoutMS'\n        | 'socketTimeoutMS'\n        | 'tlsAllowInvalidCertificates'\n        | 'tlsAllowInvalidHostnames'\n        | 'tlsInsecure'\n        | 'waitQueueTimeoutMS'\n        | 'zlibCompressionLevel'\n      >\n    >,\n    SupportedNodeConnectionOptions {\n  hosts: HostAddress[];\n  srvHost?: string;\n  credentials?: MongoCredentials;\n  readPreference: ReadPreference;\n  readConcern: ReadConcern;\n  loadBalanced: boolean;\n  serverApi: ServerApi;\n  compressors: CompressorName[];\n  writeConcern: WriteConcern;\n  dbName: string;\n  metadata: ClientMetadata;\n  autoEncrypter?: AutoEncrypter;\n  /** @internal */\n  connectionType?: typeof Connection;\n\n  /** @internal */\n  encrypter: Encrypter;\n  /** @internal */\n  userSpecifiedAuthSource: boolean;\n  /** @internal */\n  userSpecifiedReplicaSet: boolean;\n\n  /**\n   * # NOTE ABOUT TLS Options\n   *\n   * If set TLS enabled, equivalent to setting the ssl option.\n   *\n   * ### Additional options:\n   *\n   * |    nodejs option     | MongoDB equivalent                                       | type                                   |\n   * |:---------------------|--------------------------------------------------------- |:---------------------------------------|\n   * | `ca`                 | `sslCA`, `tlsCAFile`                                     | `string \\| Buffer \\| Buffer[]`         |\n   * | `crl`                | `sslCRL`                                                 | `string \\| Buffer \\| Buffer[]`         |\n   * | `cert`               | `sslCert`, `tlsCertificateFile`, `tlsCertificateKeyFile` | `string \\| Buffer \\| Buffer[]`         |\n   * | `key`                | `sslKey`, `tlsCertificateKeyFile`                        | `string \\| Buffer \\| KeyObject[]`      |\n   * | `passphrase`         | `sslPass`, `tlsCertificateKeyFilePassword`               | `string`                               |\n   * | `rejectUnauthorized` | `sslValidate`                                            | `boolean`                              |\n   *\n   */\n  tls: boolean;\n\n  /**\n   * Turn these options into a reusable connection URI\n   */\n  toURI(): string;\n}\n", "import { Readable } from 'stream';\nimport {\n  MongoRuntimeError,\n  MongoGridFSChunkError,\n  MongoGridFSStreamError,\n  MongoInvalidArgumentError\n} from '../error';\nimport type { Document } from '../bson';\nimport type { FindOptions } from '../operations/find';\nimport type { Sort } from '../sort';\nimport type { Callback } from '../utils';\nimport type { Collection } from '../collection';\nimport type { ReadPreference } from '../read_preference';\nimport type { GridFSChunk } from './upload';\nimport type { FindCursor } from '../cursor/find_cursor';\nimport type { ObjectId } from 'bson';\n\n/** @public */\nexport interface GridFSBucketReadStreamOptions {\n  sort?: Sort;\n  skip?: number;\n  /** 0-based offset in bytes to start streaming from */\n  start?: number;\n  /** 0-based offset in bytes to stop streaming before */\n  end?: number;\n}\n\n/** @public */\nexport interface GridFSBucketReadStreamOptionsWithRevision extends GridFSBucketReadStreamOptions {\n  /** The revision number relative to the oldest file with the given filename. 0\n   * gets you the oldest file, 1 gets you the 2nd oldest, -1 gets you the\n   * newest. */\n  revision?: number;\n}\n\n/** @public */\nexport interface GridFSFile {\n  _id: ObjectId;\n  length: number;\n  chunkSize: number;\n  filename: string;\n  contentType?: string;\n  aliases?: string[];\n  metadata?: Document;\n  uploadDate: Date;\n}\n\n/** @internal */\nexport interface GridFSBucketReadStreamPrivate {\n  bytesRead: number;\n  bytesToTrim: number;\n  bytesToSkip: number;\n  chunks: Collection<GridFSChunk>;\n  cursor?: FindCursor<GridFSChunk>;\n  expected: number;\n  files: Collection<GridFSFile>;\n  filter: Document;\n  init: boolean;\n  expectedEnd: number;\n  file?: GridFSFile;\n  options: {\n    sort?: Sort;\n    skip?: number;\n    start: number;\n    end: number;\n  };\n  readPreference?: ReadPreference;\n}\n\n/**\n * A readable stream that enables you to read buffers from GridFS.\n *\n * Do not instantiate this class directly. Use `openDownloadStream()` instead.\n * @public\n */\nexport class GridFSBucketReadStream extends Readable implements NodeJS.ReadableStream {\n  /** @internal */\n  s: GridFSBucketReadStreamPrivate;\n\n  /**\n   * An error occurred\n   * @event\n   */\n  static readonly ERROR = 'error' as const;\n  /**\n   * Fires when the stream loaded the file document corresponding to the provided id.\n   * @event\n   */\n  static readonly FILE = 'file' as const;\n  /**\n   * Emitted when a chunk of data is available to be consumed.\n   * @event\n   */\n  static readonly DATA = 'data' as const;\n  /**\n   * Fired when the stream is exhausted (no more data events).\n   * @event\n   */\n  static readonly END = 'end' as const;\n  /**\n   * Fired when the stream is exhausted and the underlying cursor is killed\n   * @event\n   */\n  static readonly CLOSE = 'close' as const;\n\n  /** @internal\n   * @param chunks - Handle for chunks collection\n   * @param files - Handle for files collection\n   * @param readPreference - The read preference to use\n   * @param filter - The filter to use to find the file document\n   */\n  constructor(\n    chunks: Collection<GridFSChunk>,\n    files: Collection<GridFSFile>,\n    readPreference: ReadPreference | undefined,\n    filter: Document,\n    options?: GridFSBucketReadStreamOptions\n  ) {\n    super();\n    this.s = {\n      bytesToTrim: 0,\n      bytesToSkip: 0,\n      bytesRead: 0,\n      chunks,\n      expected: 0,\n      files,\n      filter,\n      init: false,\n      expectedEnd: 0,\n      options: {\n        start: 0,\n        end: 0,\n        ...options\n      },\n      readPreference\n    };\n  }\n\n  /**\n   * Reads from the cursor and pushes to the stream.\n   * Private Impl, do not call directly\n   * @internal\n   */\n  _read(): void {\n    if (this.destroyed) return;\n    waitForFile(this, () => doRead(this));\n  }\n\n  /**\n   * Sets the 0-based offset in bytes to start streaming from. Throws\n   * an error if this stream has entered flowing mode\n   * (e.g. if you've already called `on('data')`)\n   *\n   * @param start - 0-based offset in bytes to start streaming from\n   */\n  start(start = 0): this {\n    throwIfInitialized(this);\n    this.s.options.start = start;\n    return this;\n  }\n\n  /**\n   * Sets the 0-based offset in bytes to start streaming from. Throws\n   * an error if this stream has entered flowing mode\n   * (e.g. if you've already called `on('data')`)\n   *\n   * @param end - Offset in bytes to stop reading at\n   */\n  end(end = 0): this {\n    throwIfInitialized(this);\n    this.s.options.end = end;\n    return this;\n  }\n\n  /**\n   * Marks this stream as aborted (will never push another `data` event)\n   * and kills the underlying cursor. Will emit the 'end' event, and then\n   * the 'close' event once the cursor is successfully killed.\n   *\n   * @param callback - called when the cursor is successfully closed or an error occurred.\n   */\n  abort(callback?: Callback<void>): void {\n    this.push(null);\n    this.destroyed = true;\n    if (this.s.cursor) {\n      this.s.cursor.close(error => {\n        this.emit(GridFSBucketReadStream.CLOSE);\n        callback && callback(error);\n      });\n    } else {\n      if (!this.s.init) {\n        // If not initialized, fire close event because we will never\n        // get a cursor\n        this.emit(GridFSBucketReadStream.CLOSE);\n      }\n      callback && callback();\n    }\n  }\n}\n\nfunction throwIfInitialized(stream: GridFSBucketReadStream): void {\n  if (stream.s.init) {\n    throw new MongoGridFSStreamError('Options cannot be changed after the stream is initialized');\n  }\n}\n\nfunction doRead(stream: GridFSBucketReadStream): void {\n  if (stream.destroyed) return;\n  if (!stream.s.cursor) return;\n  if (!stream.s.file) return;\n\n  stream.s.cursor.next((error, doc) => {\n    if (stream.destroyed) {\n      return;\n    }\n    if (error) {\n      stream.emit(GridFSBucketReadStream.ERROR, error);\n      return;\n    }\n    if (!doc) {\n      stream.push(null);\n\n      process.nextTick(() => {\n        if (!stream.s.cursor) return;\n        stream.s.cursor.close(error => {\n          if (error) {\n            stream.emit(GridFSBucketReadStream.ERROR, error);\n            return;\n          }\n\n          stream.emit(GridFSBucketReadStream.CLOSE);\n        });\n      });\n\n      return;\n    }\n\n    if (!stream.s.file) return;\n\n    const bytesRemaining = stream.s.file.length - stream.s.bytesRead;\n    const expectedN = stream.s.expected++;\n    const expectedLength = Math.min(stream.s.file.chunkSize, bytesRemaining);\n    if (doc.n > expectedN) {\n      return stream.emit(\n        GridFSBucketReadStream.ERROR,\n        new MongoGridFSChunkError(\n          `ChunkIsMissing: Got unexpected n: ${doc.n}, expected: ${expectedN}`\n        )\n      );\n    }\n\n    if (doc.n < expectedN) {\n      return stream.emit(\n        GridFSBucketReadStream.ERROR,\n        new MongoGridFSChunkError(`ExtraChunk: Got unexpected n: ${doc.n}, expected: ${expectedN}`)\n      );\n    }\n\n    let buf = Buffer.isBuffer(doc.data) ? doc.data : doc.data.buffer;\n\n    if (buf.byteLength !== expectedLength) {\n      if (bytesRemaining <= 0) {\n        return stream.emit(\n          GridFSBucketReadStream.ERROR,\n          new MongoGridFSChunkError(`ExtraChunk: Got unexpected n: ${doc.n}`)\n        );\n      }\n\n      return stream.emit(\n        GridFSBucketReadStream.ERROR,\n        new MongoGridFSChunkError(\n          `ChunkIsWrongSize: Got unexpected length: ${buf.byteLength}, expected: ${expectedLength}`\n        )\n      );\n    }\n\n    stream.s.bytesRead += buf.byteLength;\n\n    if (buf.byteLength === 0) {\n      return stream.push(null);\n    }\n\n    let sliceStart = null;\n    let sliceEnd = null;\n\n    if (stream.s.bytesToSkip != null) {\n      sliceStart = stream.s.bytesToSkip;\n      stream.s.bytesToSkip = 0;\n    }\n\n    const atEndOfStream = expectedN === stream.s.expectedEnd - 1;\n    const bytesLeftToRead = stream.s.options.end - stream.s.bytesToSkip;\n    if (atEndOfStream && stream.s.bytesToTrim != null) {\n      sliceEnd = stream.s.file.chunkSize - stream.s.bytesToTrim;\n    } else if (stream.s.options.end && bytesLeftToRead < doc.data.byteLength) {\n      sliceEnd = bytesLeftToRead;\n    }\n\n    if (sliceStart != null || sliceEnd != null) {\n      buf = buf.slice(sliceStart || 0, sliceEnd || buf.byteLength);\n    }\n\n    stream.push(buf);\n  });\n}\n\nfunction init(stream: GridFSBucketReadStream): void {\n  const findOneOptions: FindOptions = {};\n  if (stream.s.readPreference) {\n    findOneOptions.readPreference = stream.s.readPreference;\n  }\n  if (stream.s.options && stream.s.options.sort) {\n    findOneOptions.sort = stream.s.options.sort;\n  }\n  if (stream.s.options && stream.s.options.skip) {\n    findOneOptions.skip = stream.s.options.skip;\n  }\n\n  stream.s.files.findOne(stream.s.filter, findOneOptions, (error, doc) => {\n    if (error) {\n      return stream.emit(GridFSBucketReadStream.ERROR, error);\n    }\n\n    if (!doc) {\n      const identifier = stream.s.filter._id\n        ? stream.s.filter._id.toString()\n        : stream.s.filter.filename;\n      const errmsg = `FileNotFound: file ${identifier} was not found`;\n      // TODO(NODE-3483)\n      const err = new MongoRuntimeError(errmsg);\n      err.code = 'ENOENT'; // TODO: NODE-3338 set property as part of constructor\n      return stream.emit(GridFSBucketReadStream.ERROR, err);\n    }\n\n    // If document is empty, kill the stream immediately and don't\n    // execute any reads\n    if (doc.length <= 0) {\n      stream.push(null);\n      return;\n    }\n\n    if (stream.destroyed) {\n      // If user destroys the stream before we have a cursor, wait\n      // until the query is done to say we're 'closed' because we can't\n      // cancel a query.\n      stream.emit(GridFSBucketReadStream.CLOSE);\n      return;\n    }\n\n    try {\n      stream.s.bytesToSkip = handleStartOption(stream, doc, stream.s.options);\n    } catch (error) {\n      return stream.emit(GridFSBucketReadStream.ERROR, error);\n    }\n\n    const filter: Document = { files_id: doc._id };\n\n    // Currently (MongoDB 3.4.4) skip function does not support the index,\n    // it needs to retrieve all the documents first and then skip them. (CS-25811)\n    // As work around we use $gte on the \"n\" field.\n    if (stream.s.options && stream.s.options.start != null) {\n      const skip = Math.floor(stream.s.options.start / doc.chunkSize);\n      if (skip > 0) {\n        filter['n'] = { $gte: skip };\n      }\n    }\n    stream.s.cursor = stream.s.chunks.find(filter).sort({ n: 1 });\n\n    if (stream.s.readPreference) {\n      stream.s.cursor.withReadPreference(stream.s.readPreference);\n    }\n\n    stream.s.expectedEnd = Math.ceil(doc.length / doc.chunkSize);\n    stream.s.file = doc as GridFSFile;\n\n    try {\n      stream.s.bytesToTrim = handleEndOption(stream, doc, stream.s.cursor, stream.s.options);\n    } catch (error) {\n      return stream.emit(GridFSBucketReadStream.ERROR, error);\n    }\n\n    stream.emit(GridFSBucketReadStream.FILE, doc);\n  });\n}\n\nfunction waitForFile(stream: GridFSBucketReadStream, callback: Callback): void {\n  if (stream.s.file) {\n    return callback();\n  }\n\n  if (!stream.s.init) {\n    init(stream);\n    stream.s.init = true;\n  }\n\n  stream.once('file', () => {\n    callback();\n  });\n}\n\nfunction handleStartOption(\n  stream: GridFSBucketReadStream,\n  doc: Document,\n  options: GridFSBucketReadStreamOptions\n): number {\n  if (options && options.start != null) {\n    if (options.start > doc.length) {\n      throw new MongoInvalidArgumentError(\n        `Stream start (${options.start}) must not be more than the length of the file (${doc.length})`\n      );\n    }\n    if (options.start < 0) {\n      throw new MongoInvalidArgumentError(`Stream start (${options.start}) must not be negative`);\n    }\n    if (options.end != null && options.end < options.start) {\n      throw new MongoInvalidArgumentError(\n        `Stream start (${options.start}) must not be greater than stream end (${options.end})`\n      );\n    }\n\n    stream.s.bytesRead = Math.floor(options.start / doc.chunkSize) * doc.chunkSize;\n    stream.s.expected = Math.floor(options.start / doc.chunkSize);\n\n    return options.start - stream.s.bytesRead;\n  }\n  throw new MongoInvalidArgumentError('Start option must be defined');\n}\n\nfunction handleEndOption(\n  stream: GridFSBucketReadStream,\n  doc: Document,\n  cursor: FindCursor<GridFSChunk>,\n  options: GridFSBucketReadStreamOptions\n) {\n  if (options && options.end != null) {\n    if (options.end > doc.length) {\n      throw new MongoInvalidArgumentError(\n        `Stream end (${options.end}) must not be more than the length of the file (${doc.length})`\n      );\n    }\n    if (options.start == null || options.start < 0) {\n      throw new MongoInvalidArgumentError(`Stream end (${options.end}) must not be negative`);\n    }\n\n    const start = options.start != null ? Math.floor(options.start / doc.chunkSize) : 0;\n\n    cursor.limit(Math.ceil(options.end / doc.chunkSize) - start);\n\n    stream.s.expectedEnd = Math.ceil(options.end / doc.chunkSize);\n\n    return Math.ceil(options.end / doc.chunkSize) * doc.chunkSize - options.end;\n  }\n  throw new MongoInvalidArgumentError('End option must be defined');\n}\n", "import { Writable } from 'stream';\nimport type { Document } from '../bson';\nimport { ObjectId } from '../bson';\nimport type { Collection } from '../collection';\nimport { AnyError, MONGODB_ERROR_CODES, MongoError, MongoAPIError } from '../error';\nimport { Callback, maybePromise } from '../utils';\nimport type { WriteConcernOptions } from '../write_concern';\nimport { WriteConcern } from './../write_concern';\nimport type { GridFSFile } from './download';\nimport type { GridFSBucket } from './index';\n\n/** @public */\nexport interface GridFSChunk {\n  _id: ObjectId;\n  files_id: ObjectId;\n  n: number;\n  data: Buffer | Uint8Array;\n}\n\n/** @public */\nexport interface GridFSBucketWriteStreamOptions extends WriteConcernOptions {\n  /** Overwrite this bucket's chunkSizeBytes for this file */\n  chunkSizeBytes?: number;\n  /** Custom file id for the GridFS file. */\n  id?: ObjectId;\n  /** Object to store in the file document's `metadata` field */\n  metadata?: Document;\n  /** String to store in the file document's `contentType` field */\n  contentType?: string;\n  /** Array of strings to store in the file document's `aliases` field */\n  aliases?: string[];\n}\n\n/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n * @public\n */\nexport class GridFSBucketWriteStream extends Writable implements NodeJS.WritableStream {\n  bucket: GridFSBucket;\n  chunks: Collection<GridFSChunk>;\n  filename: string;\n  files: Collection<GridFSFile>;\n  options: GridFSBucketWriteStreamOptions;\n  done: boolean;\n  id: ObjectId;\n  chunkSizeBytes: number;\n  bufToStore: Buffer;\n  length: number;\n  n: number;\n  pos: number;\n  state: {\n    streamEnd: boolean;\n    outstandingRequests: number;\n    errored: boolean;\n    aborted: boolean;\n  };\n  writeConcern?: WriteConcern;\n\n  /** @event */\n  static readonly CLOSE = 'close';\n  /** @event */\n  static readonly ERROR = 'error';\n  /**\n   * `end()` was called and the write stream successfully wrote the file metadata and all the chunks to MongoDB.\n   * @event\n   */\n  static readonly FINISH = 'finish';\n\n  /** @internal\n   * @param bucket - Handle for this stream's corresponding bucket\n   * @param filename - The value of the 'filename' key in the files doc\n   * @param options - Optional settings.\n   */\n  constructor(bucket: GridFSBucket, filename: string, options?: GridFSBucketWriteStreamOptions) {\n    super();\n\n    options = options ?? {};\n    this.bucket = bucket;\n    this.chunks = bucket.s._chunksCollection;\n    this.filename = filename;\n    this.files = bucket.s._filesCollection;\n    this.options = options;\n    this.writeConcern = WriteConcern.fromOptions(options) || bucket.s.options.writeConcern;\n    // Signals the write is all done\n    this.done = false;\n\n    this.id = options.id ? options.id : new ObjectId();\n    // properly inherit the default chunksize from parent\n    this.chunkSizeBytes = options.chunkSizeBytes || this.bucket.s.options.chunkSizeBytes;\n    this.bufToStore = Buffer.alloc(this.chunkSizeBytes);\n    this.length = 0;\n    this.n = 0;\n    this.pos = 0;\n    this.state = {\n      streamEnd: false,\n      outstandingRequests: 0,\n      errored: false,\n      aborted: false\n    };\n\n    if (!this.bucket.s.calledOpenUploadStream) {\n      this.bucket.s.calledOpenUploadStream = true;\n\n      checkIndexes(this, () => {\n        this.bucket.s.checkedIndexes = true;\n        this.bucket.emit('index');\n      });\n    }\n  }\n\n  /**\n   * Write a buffer to the stream.\n   *\n   * @param chunk - Buffer to write\n   * @param encodingOrCallback - Optional encoding for the buffer\n   * @param callback - Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush.\n   * @returns False if this write required flushing a chunk to MongoDB. True otherwise.\n   */\n  write(chunk: Buffer | string): boolean;\n  write(chunk: Buffer | string, callback: Callback<void>): boolean;\n  write(chunk: Buffer | string, encoding: BufferEncoding | undefined): boolean;\n  write(\n    chunk: Buffer | string,\n    encoding: BufferEncoding | undefined,\n    callback: Callback<void>\n  ): boolean;\n  write(\n    chunk: Buffer | string,\n    encodingOrCallback?: Callback<void> | BufferEncoding,\n    callback?: Callback<void>\n  ): boolean {\n    const encoding = typeof encodingOrCallback === 'function' ? undefined : encodingOrCallback;\n    callback = typeof encodingOrCallback === 'function' ? encodingOrCallback : callback;\n    return waitForIndexes(this, () => doWrite(this, chunk, encoding, callback));\n  }\n\n  // TODO(NODE-3405): Refactor this with maybePromise and MongoStreamClosedError\n  /**\n   * Places this write stream into an aborted state (all future writes fail)\n   * and deletes all chunks that have already been written.\n   *\n   * @param callback - called when chunks are successfully removed or error occurred\n   */\n  abort(): Promise<void>;\n  abort(callback: Callback<void>): void;\n  abort(callback?: Callback<void>): Promise<void> | void {\n    return maybePromise(callback, callback => {\n      if (this.state.streamEnd) {\n        // TODO(NODE-3485): Replace with MongoGridFSStreamClosed\n        return callback(new MongoAPIError('Cannot abort a stream that has already completed'));\n      }\n\n      if (this.state.aborted) {\n        // TODO(NODE-3485): Replace with MongoGridFSStreamClosed\n        return callback(new MongoAPIError('Cannot call abort() on a stream twice'));\n      }\n\n      this.state.aborted = true;\n      this.chunks.deleteMany({ files_id: this.id }, error => callback(error));\n    });\n  }\n\n  /**\n   * Tells the stream that no more data will be coming in. The stream will\n   * persist the remaining data to MongoDB, write the files document, and\n   * then emit a 'finish' event.\n   *\n   * @param chunk - Buffer to write\n   * @param encoding - Optional encoding for the buffer\n   * @param callback - Function to call when all files and chunks have been persisted to MongoDB\n   */\n  end(): void;\n  end(chunk: Buffer): void;\n  end(callback: Callback<GridFSFile | void>): void;\n  end(chunk: Buffer, callback: Callback<GridFSFile | void>): void;\n  end(chunk: Buffer, encoding: BufferEncoding): void;\n  end(\n    chunk: Buffer,\n    encoding: BufferEncoding | undefined,\n    callback: Callback<GridFSFile | void>\n  ): void;\n  end(\n    chunkOrCallback?: Buffer | Callback<GridFSFile | void>,\n    encodingOrCallback?: BufferEncoding | Callback<GridFSFile | void>,\n    callback?: Callback<GridFSFile | void>\n  ): void {\n    const chunk = typeof chunkOrCallback === 'function' ? undefined : chunkOrCallback;\n    const encoding = typeof encodingOrCallback === 'function' ? undefined : encodingOrCallback;\n    callback =\n      typeof chunkOrCallback === 'function'\n        ? chunkOrCallback\n        : typeof encodingOrCallback === 'function'\n        ? encodingOrCallback\n        : callback;\n\n    if (checkAborted(this, callback)) return;\n\n    this.state.streamEnd = true;\n\n    if (callback) {\n      this.once(GridFSBucketWriteStream.FINISH, (result: GridFSFile) => {\n        if (callback) callback(undefined, result);\n      });\n    }\n\n    if (!chunk) {\n      waitForIndexes(this, () => !!writeRemnant(this));\n      return;\n    }\n\n    this.write(chunk, encoding, () => {\n      writeRemnant(this);\n    });\n  }\n}\n\nfunction __handleError(\n  stream: GridFSBucketWriteStream,\n  error: AnyError,\n  callback?: Callback\n): void {\n  if (stream.state.errored) {\n    return;\n  }\n  stream.state.errored = true;\n  if (callback) {\n    return callback(error);\n  }\n  stream.emit(GridFSBucketWriteStream.ERROR, error);\n}\n\nfunction createChunkDoc(filesId: ObjectId, n: number, data: Buffer): GridFSChunk {\n  return {\n    _id: new ObjectId(),\n    files_id: filesId,\n    n,\n    data\n  };\n}\n\nfunction checkChunksIndex(stream: GridFSBucketWriteStream, callback: Callback): void {\n  stream.chunks.listIndexes().toArray((error?: AnyError, indexes?: Document[]) => {\n    let index: { files_id: number; n: number };\n    if (error) {\n      // Collection doesn't exist so create index\n      if (error instanceof MongoError && error.code === MONGODB_ERROR_CODES.NamespaceNotFound) {\n        index = { files_id: 1, n: 1 };\n        stream.chunks.createIndex(index, { background: false, unique: true }, error => {\n          if (error) {\n            return callback(error);\n          }\n\n          callback();\n        });\n        return;\n      }\n      return callback(error);\n    }\n\n    let hasChunksIndex = false;\n    if (indexes) {\n      indexes.forEach((index: Document) => {\n        if (index.key) {\n          const keys = Object.keys(index.key);\n          if (keys.length === 2 && index.key.files_id === 1 && index.key.n === 1) {\n            hasChunksIndex = true;\n          }\n        }\n      });\n    }\n\n    if (hasChunksIndex) {\n      callback();\n    } else {\n      index = { files_id: 1, n: 1 };\n      const writeConcernOptions = getWriteOptions(stream);\n\n      stream.chunks.createIndex(\n        index,\n        {\n          ...writeConcernOptions,\n          background: true,\n          unique: true\n        },\n        callback\n      );\n    }\n  });\n}\n\nfunction checkDone(stream: GridFSBucketWriteStream, callback?: Callback): boolean {\n  if (stream.done) return true;\n  if (stream.state.streamEnd && stream.state.outstandingRequests === 0 && !stream.state.errored) {\n    // Set done so we do not trigger duplicate createFilesDoc\n    stream.done = true;\n    // Create a new files doc\n    const filesDoc = createFilesDoc(\n      stream.id,\n      stream.length,\n      stream.chunkSizeBytes,\n      stream.filename,\n      stream.options.contentType,\n      stream.options.aliases,\n      stream.options.metadata\n    );\n\n    if (checkAborted(stream, callback)) {\n      return false;\n    }\n\n    stream.files.insertOne(filesDoc, getWriteOptions(stream), (error?: AnyError) => {\n      if (error) {\n        return __handleError(stream, error, callback);\n      }\n      stream.emit(GridFSBucketWriteStream.FINISH, filesDoc);\n      stream.emit(GridFSBucketWriteStream.CLOSE);\n    });\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction checkIndexes(stream: GridFSBucketWriteStream, callback: Callback): void {\n  stream.files.findOne({}, { projection: { _id: 1 } }, (error, doc) => {\n    if (error) {\n      return callback(error);\n    }\n    if (doc) {\n      return callback();\n    }\n\n    stream.files.listIndexes().toArray((error?: AnyError, indexes?: Document) => {\n      let index: { filename: number; uploadDate: number };\n      if (error) {\n        // Collection doesn't exist so create index\n        if (error instanceof MongoError && error.code === MONGODB_ERROR_CODES.NamespaceNotFound) {\n          index = { filename: 1, uploadDate: 1 };\n          stream.files.createIndex(index, { background: false }, (error?: AnyError) => {\n            if (error) {\n              return callback(error);\n            }\n\n            checkChunksIndex(stream, callback);\n          });\n          return;\n        }\n        return callback(error);\n      }\n\n      let hasFileIndex = false;\n      if (indexes) {\n        indexes.forEach((index: Document) => {\n          const keys = Object.keys(index.key);\n          if (keys.length === 2 && index.key.filename === 1 && index.key.uploadDate === 1) {\n            hasFileIndex = true;\n          }\n        });\n      }\n\n      if (hasFileIndex) {\n        checkChunksIndex(stream, callback);\n      } else {\n        index = { filename: 1, uploadDate: 1 };\n\n        const writeConcernOptions = getWriteOptions(stream);\n\n        stream.files.createIndex(\n          index,\n          {\n            ...writeConcernOptions,\n            background: false\n          },\n          (error?: AnyError) => {\n            if (error) {\n              return callback(error);\n            }\n\n            checkChunksIndex(stream, callback);\n          }\n        );\n      }\n    });\n  });\n}\n\nfunction createFilesDoc(\n  _id: ObjectId,\n  length: number,\n  chunkSize: number,\n  filename: string,\n  contentType?: string,\n  aliases?: string[],\n  metadata?: Document\n): GridFSFile {\n  const ret: GridFSFile = {\n    _id,\n    length,\n    chunkSize,\n    uploadDate: new Date(),\n    filename\n  };\n\n  if (contentType) {\n    ret.contentType = contentType;\n  }\n\n  if (aliases) {\n    ret.aliases = aliases;\n  }\n\n  if (metadata) {\n    ret.metadata = metadata;\n  }\n\n  return ret;\n}\n\nfunction doWrite(\n  stream: GridFSBucketWriteStream,\n  chunk: Buffer | string,\n  encoding?: BufferEncoding,\n  callback?: Callback<void>\n): boolean {\n  if (checkAborted(stream, callback)) {\n    return false;\n  }\n\n  const inputBuf = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding);\n\n  stream.length += inputBuf.length;\n\n  // Input is small enough to fit in our buffer\n  if (stream.pos + inputBuf.length < stream.chunkSizeBytes) {\n    inputBuf.copy(stream.bufToStore, stream.pos);\n    stream.pos += inputBuf.length;\n\n    callback && callback();\n\n    // Note that we reverse the typical semantics of write's return value\n    // to be compatible with node's `.pipe()` function.\n    // True means client can keep writing.\n    return true;\n  }\n\n  // Otherwise, buffer is too big for current chunk, so we need to flush\n  // to MongoDB.\n  let inputBufRemaining = inputBuf.length;\n  let spaceRemaining: number = stream.chunkSizeBytes - stream.pos;\n  let numToCopy = Math.min(spaceRemaining, inputBuf.length);\n  let outstandingRequests = 0;\n  while (inputBufRemaining > 0) {\n    const inputBufPos = inputBuf.length - inputBufRemaining;\n    inputBuf.copy(stream.bufToStore, stream.pos, inputBufPos, inputBufPos + numToCopy);\n    stream.pos += numToCopy;\n    spaceRemaining -= numToCopy;\n    let doc: GridFSChunk;\n    if (spaceRemaining === 0) {\n      doc = createChunkDoc(stream.id, stream.n, Buffer.from(stream.bufToStore));\n      ++stream.state.outstandingRequests;\n      ++outstandingRequests;\n\n      if (checkAborted(stream, callback)) {\n        return false;\n      }\n\n      stream.chunks.insertOne(doc, getWriteOptions(stream), (error?: AnyError) => {\n        if (error) {\n          return __handleError(stream, error);\n        }\n        --stream.state.outstandingRequests;\n        --outstandingRequests;\n\n        if (!outstandingRequests) {\n          stream.emit('drain', doc);\n          callback && callback();\n          checkDone(stream);\n        }\n      });\n\n      spaceRemaining = stream.chunkSizeBytes;\n      stream.pos = 0;\n      ++stream.n;\n    }\n    inputBufRemaining -= numToCopy;\n    numToCopy = Math.min(spaceRemaining, inputBufRemaining);\n  }\n\n  // Note that we reverse the typical semantics of write's return value\n  // to be compatible with node's `.pipe()` function.\n  // False means the client should wait for the 'drain' event.\n  return false;\n}\n\nfunction getWriteOptions(stream: GridFSBucketWriteStream): WriteConcernOptions {\n  const obj: WriteConcernOptions = {};\n  if (stream.writeConcern) {\n    obj.writeConcern = {\n      w: stream.writeConcern.w,\n      wtimeout: stream.writeConcern.wtimeout,\n      j: stream.writeConcern.j\n    };\n  }\n  return obj;\n}\n\nfunction waitForIndexes(\n  stream: GridFSBucketWriteStream,\n  callback: (res: boolean) => boolean\n): boolean {\n  if (stream.bucket.s.checkedIndexes) {\n    return callback(false);\n  }\n\n  stream.bucket.once('index', () => {\n    callback(true);\n  });\n\n  return true;\n}\n\nfunction writeRemnant(stream: GridFSBucketWriteStream, callback?: Callback): boolean {\n  // Buffer is empty, so don't bother to insert\n  if (stream.pos === 0) {\n    return checkDone(stream, callback);\n  }\n\n  ++stream.state.outstandingRequests;\n\n  // Create a new buffer to make sure the buffer isn't bigger than it needs\n  // to be.\n  const remnant = Buffer.alloc(stream.pos);\n  stream.bufToStore.copy(remnant, 0, 0, stream.pos);\n  const doc = createChunkDoc(stream.id, stream.n, remnant);\n\n  // If the stream was aborted, do not write remnant\n  if (checkAborted(stream, callback)) {\n    return false;\n  }\n\n  stream.chunks.insertOne(doc, getWriteOptions(stream), (error?: AnyError) => {\n    if (error) {\n      return __handleError(stream, error);\n    }\n    --stream.state.outstandingRequests;\n    checkDone(stream);\n  });\n  return true;\n}\n\nfunction checkAborted(stream: GridFSBucketWriteStream, callback?: Callback<void>): boolean {\n  if (stream.state.aborted) {\n    if (typeof callback === 'function') {\n      // TODO(NODE-3485): Replace with MongoGridFSStreamClosedError\n      callback(new MongoAPIError('Stream has been aborted'));\n    }\n    return true;\n  }\n  return false;\n}\n", "import { MongoRuntimeError } from '../error';\nimport {\n  GridFSBucketReadStream,\n  GridFSBucketReadStreamOptions,\n  GridFSBucketReadStreamOptionsWithRevision,\n  GridFSFile\n} from './download';\nimport { GridFSBucketWriteStream, GridFSBucketWriteStreamOptions, GridFSChunk } from './upload';\nimport { executeLegacyOperation, Callback, getTopology } from '../utils';\nimport { WriteConcernOptions, WriteConcern } from '../write_concern';\nimport type { ObjectId } from '../bson';\nimport type { Db } from '../db';\nimport type { ReadPreference } from '../read_preference';\nimport type { Collection } from '../collection';\nimport type { FindOptions } from './../operations/find';\nimport type { Sort } from '../sort';\nimport type { Logger } from '../logger';\nimport type { FindCursor } from '../cursor/find_cursor';\nimport { Filter, TypedEventEmitter } from '../mongo_types';\n\nconst DEFAULT_GRIDFS_BUCKET_OPTIONS: {\n  bucketName: string;\n  chunkSizeBytes: number;\n} = {\n  bucketName: 'fs',\n  chunkSizeBytes: 255 * 1024\n};\n\n/** @public */\nexport interface GridFSBucketOptions extends WriteConcernOptions {\n  /** The 'files' and 'chunks' collections will be prefixed with the bucket name followed by a dot. */\n  bucketName?: string;\n  /** Number of bytes stored in each chunk. Defaults to 255KB */\n  chunkSizeBytes?: number;\n  /** Read preference to be passed to read operations */\n  readPreference?: ReadPreference;\n}\n\n/** @internal */\nexport interface GridFSBucketPrivate {\n  db: Db;\n  options: {\n    bucketName: string;\n    chunkSizeBytes: number;\n    readPreference?: ReadPreference;\n    writeConcern: WriteConcern | undefined;\n  };\n  _chunksCollection: Collection<GridFSChunk>;\n  _filesCollection: Collection<GridFSFile>;\n  checkedIndexes: boolean;\n  calledOpenUploadStream: boolean;\n}\n\n/** @public */\nexport type GridFSBucketEvents = {\n  index(): void;\n};\n\n/**\n * Constructor for a streaming GridFS interface\n * @public\n */\nexport class GridFSBucket extends TypedEventEmitter<GridFSBucketEvents> {\n  /** @internal */\n  s: GridFSBucketPrivate;\n\n  /**\n   * When the first call to openUploadStream is made, the upload stream will\n   * check to see if it needs to create the proper indexes on the chunks and\n   * files collections. This event is fired either when 1) it determines that\n   * no index creation is necessary, 2) when it successfully creates the\n   * necessary indexes.\n   * @event\n   */\n  static readonly INDEX = 'index' as const;\n\n  constructor(db: Db, options?: GridFSBucketOptions) {\n    super();\n    this.setMaxListeners(0);\n    const privateOptions = {\n      ...DEFAULT_GRIDFS_BUCKET_OPTIONS,\n      ...options,\n      writeConcern: WriteConcern.fromOptions(options)\n    };\n    this.s = {\n      db,\n      options: privateOptions,\n      _chunksCollection: db.collection<GridFSChunk>(privateOptions.bucketName + '.chunks'),\n      _filesCollection: db.collection<GridFSFile>(privateOptions.bucketName + '.files'),\n      checkedIndexes: false,\n      calledOpenUploadStream: false\n    };\n  }\n\n  /**\n   * Returns a writable stream (GridFSBucketWriteStream) for writing\n   * buffers to GridFS. The stream's 'id' property contains the resulting\n   * file's id.\n   *\n   * @param filename - The value of the 'filename' key in the files doc\n   * @param options - Optional settings.\n   */\n\n  openUploadStream(\n    filename: string,\n    options?: GridFSBucketWriteStreamOptions\n  ): GridFSBucketWriteStream {\n    return new GridFSBucketWriteStream(this, filename, options);\n  }\n\n  /**\n   * Returns a writable stream (GridFSBucketWriteStream) for writing\n   * buffers to GridFS for a custom file id. The stream's 'id' property contains the resulting\n   * file's id.\n   */\n  openUploadStreamWithId(\n    id: ObjectId,\n    filename: string,\n    options?: GridFSBucketWriteStreamOptions\n  ): GridFSBucketWriteStream {\n    return new GridFSBucketWriteStream(this, filename, { ...options, id });\n  }\n\n  /** Returns a readable stream (GridFSBucketReadStream) for streaming file data from GridFS. */\n  openDownloadStream(\n    id: ObjectId,\n    options?: GridFSBucketReadStreamOptions\n  ): GridFSBucketReadStream {\n    return new GridFSBucketReadStream(\n      this.s._chunksCollection,\n      this.s._filesCollection,\n      this.s.options.readPreference,\n      { _id: id },\n      options\n    );\n  }\n\n  /**\n   * Deletes a file with the given id\n   *\n   * @param id - The id of the file doc\n   */\n  delete(id: ObjectId): Promise<undefined>;\n  delete(id: ObjectId, callback: Callback<void>): void;\n  delete(id: ObjectId, callback?: Callback<void>): Promise<undefined> | void {\n    return executeLegacyOperation(getTopology(this.s.db), _delete, [this, id, callback], {\n      skipSessions: true\n    });\n  }\n\n  /** Convenience wrapper around find on the files collection */\n  find(filter?: Filter<GridFSFile>, options?: FindOptions): FindCursor<GridFSFile> {\n    filter ??= {};\n    options = options ?? {};\n    return this.s._filesCollection.find(filter, options);\n  }\n\n  /**\n   * Returns a readable stream (GridFSBucketReadStream) for streaming the\n   * file with the given name from GridFS. If there are multiple files with\n   * the same name, this will stream the most recent file with the given name\n   * (as determined by the `uploadDate` field). You can set the `revision`\n   * option to change this behavior.\n   */\n  openDownloadStreamByName(\n    filename: string,\n    options?: GridFSBucketReadStreamOptionsWithRevision\n  ): GridFSBucketReadStream {\n    let sort: Sort = { uploadDate: -1 };\n    let skip = undefined;\n    if (options && options.revision != null) {\n      if (options.revision >= 0) {\n        sort = { uploadDate: 1 };\n        skip = options.revision;\n      } else {\n        skip = -options.revision - 1;\n      }\n    }\n    return new GridFSBucketReadStream(\n      this.s._chunksCollection,\n      this.s._filesCollection,\n      this.s.options.readPreference,\n      { filename },\n      { ...options, sort, skip }\n    );\n  }\n\n  /**\n   * Renames the file with the given _id to the given string\n   *\n   * @param id - the id of the file to rename\n   * @param filename - new name for the file\n   */\n  rename(id: ObjectId, filename: string): Promise<void>;\n  rename(id: ObjectId, filename: string, callback: Callback<void>): void;\n  rename(id: ObjectId, filename: string, callback?: Callback<void>): Promise<void> | void {\n    return executeLegacyOperation(getTopology(this.s.db), _rename, [this, id, filename, callback], {\n      skipSessions: true\n    });\n  }\n\n  /** Removes this bucket's files collection, followed by its chunks collection. */\n  drop(): Promise<void>;\n  drop(callback: Callback<void>): void;\n  drop(callback?: Callback<void>): Promise<void> | void {\n    return executeLegacyOperation(getTopology(this.s.db), _drop, [this, callback], {\n      skipSessions: true\n    });\n  }\n\n  /** Get the Db scoped logger. */\n  getLogger(): Logger {\n    return this.s.db.s.logger;\n  }\n}\n\nfunction _delete(bucket: GridFSBucket, id: ObjectId, callback: Callback<void>): void {\n  return bucket.s._filesCollection.deleteOne({ _id: id }, (error, res) => {\n    if (error) {\n      return callback(error);\n    }\n\n    return bucket.s._chunksCollection.deleteMany({ files_id: id }, error => {\n      if (error) {\n        return callback(error);\n      }\n\n      // Delete orphaned chunks before returning FileNotFound\n      if (!res?.deletedCount) {\n        // TODO(NODE-3483): Replace with more appropriate error\n        // Consider creating new error MongoGridFSFileNotFoundError\n        return callback(new MongoRuntimeError(`File not found for id ${id}`));\n      }\n\n      return callback();\n    });\n  });\n}\n\nfunction _rename(\n  bucket: GridFSBucket,\n  id: ObjectId,\n  filename: string,\n  callback: Callback<void>\n): void {\n  const filter = { _id: id };\n  const update = { $set: { filename } };\n  return bucket.s._filesCollection.updateOne(filter, update, (error?, res?) => {\n    if (error) {\n      return callback(error);\n    }\n\n    if (!res?.matchedCount) {\n      return callback(new MongoRuntimeError(`File with id ${id} not found`));\n    }\n\n    return callback();\n  });\n}\n\nfunction _drop(bucket: GridFSBucket, callback: Callback<void>): void {\n  return bucket.s._filesCollection.drop((error?: Error) => {\n    if (error) {\n      return callback(error);\n    }\n    return bucket.s._chunksCollection.drop((error?: Error) => {\n      if (error) {\n        return callback(error);\n      }\n\n      return callback();\n    });\n  });\n}\n", "import { AbstractCursor } from './cursor/abstract_cursor';\nimport { AggregationCursor } from './cursor/aggregation_cursor';\nimport { FindCursor } from './cursor/find_cursor';\nimport { ListIndexesCursor } from './operations/indexes';\nimport { ListCollectionsCursor } from './operations/list_collections';\nimport { PromiseProvider } from './promise_provider';\nimport { Admin } from './admin';\nimport { MongoClient } from './mongo_client';\nimport { Db } from './db';\nimport { Collection } from './collection';\nimport { Logger } from './logger';\nimport { GridFSBucket } from './gridfs';\nimport { CancellationToken } from './mongo_types';\n\nexport {\n  Binary,\n  Code,\n  DBRef,\n  Double,\n  Int32,\n  Long,\n  MinKey,\n  MaxKey,\n  ObjectId,\n  Timestamp,\n  Decimal128,\n  BSONRegExp,\n  BSONSymbol,\n  Map\n} from './bson';\n\nimport { ObjectId } from 'bson';\n/**\n * @public\n * @deprecated Please use `ObjectId`\n */\nexport const ObjectID = ObjectId;\n\nexport {\n  MongoError,\n  MongoServerError,\n  MongoDriverError,\n  MongoAPIError,\n  MongoCompatibilityError,\n  MongoInvalidArgumentError,\n  MongoMissingCredentialsError,\n  MongoMissingDependencyError,\n  MongoNetworkError,\n  MongoNetworkTimeoutError,\n  MongoSystemError,\n  MongoServerSelectionError,\n  MongoParseError,\n  MongoWriteConcernError,\n  MongoRuntimeError,\n  MongoChangeStreamError,\n  MongoGridFSStreamError,\n  MongoGridFSChunkError,\n  MongoDecompressionError,\n  MongoBatchReExecutionError,\n  MongoCursorExhaustedError,\n  MongoCursorInUseError,\n  MongoNotConnectedError,\n  MongoExpiredSessionError,\n  MongoTransactionError,\n  MongoKerberosError,\n  MongoServerClosedError,\n  MongoTopologyClosedError\n} from './error';\nexport { MongoBulkWriteError, BulkWriteOptions, AnyBulkWriteOperation } from './bulk/common';\nexport {\n  // Utils\n  PromiseProvider as Promise,\n  // Actual driver classes exported\n  Admin,\n  MongoClient,\n  Db,\n  Collection,\n  Logger,\n  AbstractCursor,\n  AggregationCursor,\n  FindCursor,\n  ListIndexesCursor,\n  ListCollectionsCursor,\n  GridFSBucket,\n  CancellationToken\n};\n\n// enums\nexport { ProfilingLevel } from './operations/set_profiling_level';\nexport { ServerType, TopologyType } from './sdam/common';\nexport { LoggerLevel } from './logger';\nexport { AutoEncryptionLoggerLevel } from './deps';\nexport { BatchType } from './bulk/common';\nexport { AuthMechanism } from './cmap/auth/defaultAuthProviders';\nexport { CURSOR_FLAGS } from './cursor/abstract_cursor';\nexport { Compressor } from './cmap/wire_protocol/compression';\nexport { ReturnDocument } from './operations/find_and_modify';\nexport { ExplainVerbosity } from './explain';\nexport { ReadConcernLevel } from './read_concern';\nexport { ReadPreferenceMode } from './read_preference';\nexport { ServerApiVersion } from './mongo_client';\nexport { BSONType } from './mongo_types';\n\n// Helper classes\nexport { WriteConcern } from './write_concern';\nexport { ReadConcern } from './read_concern';\nexport { ReadPreference } from './read_preference';\n\n// events\nexport {\n  CommandStartedEvent,\n  CommandSucceededEvent,\n  CommandFailedEvent\n} from './cmap/command_monitoring_events';\nexport {\n  ConnectionCheckOutFailedEvent,\n  ConnectionCheckOutStartedEvent,\n  ConnectionCheckedInEvent,\n  ConnectionCheckedOutEvent,\n  ConnectionClosedEvent,\n  ConnectionCreatedEvent,\n  ConnectionPoolClearedEvent,\n  ConnectionPoolClosedEvent,\n  ConnectionPoolCreatedEvent,\n  ConnectionPoolMonitoringEvent,\n  ConnectionReadyEvent\n} from './cmap/connection_pool_events';\nexport {\n  ServerHeartbeatStartedEvent,\n  ServerHeartbeatSucceededEvent,\n  ServerHeartbeatFailedEvent,\n  ServerClosedEvent,\n  ServerDescriptionChangedEvent,\n  ServerOpeningEvent,\n  TopologyClosedEvent,\n  TopologyDescriptionChangedEvent,\n  TopologyOpeningEvent\n} from './sdam/events';\nexport { SrvPollingEvent } from './sdam/srv_polling';\n\n// type only exports below, these are removed from emitted JS\nexport type { AdminPrivate } from './admin';\nexport type { Document, BSONSerializeOptions } from './bson';\nexport type {\n  InsertOneModel,\n  ReplaceOneModel,\n  UpdateOneModel,\n  UpdateManyModel,\n  DeleteOneModel,\n  DeleteManyModel,\n  BulkResult,\n  BulkWriteResult,\n  WriteError,\n  WriteConcernError,\n  BulkWriteOperationError\n} from './bulk/common';\nexport type {\n  ChangeStream,\n  ChangeStreamDocument,\n  UpdateDescription,\n  ChangeStreamEvents,\n  ChangeStreamOptions,\n  ChangeStreamCursor,\n  ResumeToken,\n  PipeOptions,\n  ChangeStreamCursorOptions,\n  OperationTime,\n  ResumeOptions\n} from './change_stream';\nexport type {\n  MongoCredentials,\n  AuthMechanismProperties,\n  MongoCredentialsOptions\n} from './cmap/auth/mongo_credentials';\nexport type {\n  WriteProtocolMessageType,\n  Query,\n  GetMore,\n  Msg,\n  KillCursor,\n  OpGetMoreOptions,\n  OpQueryOptions\n} from './cmap/commands';\nexport type { Stream, LEGAL_TLS_SOCKET_OPTIONS, LEGAL_TCP_SOCKET_OPTIONS } from './cmap/connect';\nexport type {\n  Connection,\n  ConnectionOptions,\n  DestroyOptions,\n  CommandOptions,\n  QueryOptions,\n  GetMoreOptions,\n  ConnectionEvents\n} from './cmap/connection';\nexport type { ConnectionPoolMetrics } from './cmap/metrics';\nexport type {\n  CloseOptions,\n  ConnectionPoolOptions,\n  WaitQueueMember,\n  WithConnectionCallback,\n  ConnectionPool,\n  ConnectionPoolEvents\n} from './cmap/connection_pool';\nexport type {\n  OperationDescription,\n  MessageStream,\n  MessageStreamOptions\n} from './cmap/message_stream';\nexport type { StreamDescription, StreamDescriptionOptions } from './cmap/stream_description';\nexport type { CompressorName } from './cmap/wire_protocol/compression';\nexport type { CollectionPrivate, CollectionOptions, ModifyResult } from './collection';\nexport type { AggregationCursorOptions } from './cursor/aggregation_cursor';\nexport type {\n  CursorCloseOptions,\n  CursorStreamOptions,\n  AbstractCursorOptions,\n  AbstractCursorEvents,\n  CursorFlag\n} from './cursor/abstract_cursor';\nexport type { DbPrivate, DbOptions } from './db';\nexport type { AutoEncryptionOptions, AutoEncrypter } from './deps';\nexport type { AnyError, ErrorDescription, MongoNetworkErrorOptions } from './error';\nexport type { Explain, ExplainOptions, ExplainVerbosityLike } from './explain';\nexport type {\n  GridFSBucketReadStream,\n  GridFSBucketReadStreamOptions,\n  GridFSBucketReadStreamOptionsWithRevision,\n  GridFSBucketReadStreamPrivate,\n  GridFSFile\n} from './gridfs/download';\nexport type { GridFSBucketOptions, GridFSBucketPrivate, GridFSBucketEvents } from './gridfs/index';\nexport type {\n  GridFSBucketWriteStreamOptions,\n  GridFSBucketWriteStream,\n  GridFSChunk\n} from './gridfs/upload';\nexport type { LoggerOptions, LoggerFunction } from './logger';\nexport type {\n  MongoClientEvents,\n  MongoClientPrivate,\n  MongoClientOptions,\n  WithSessionCallback,\n  PkFactory,\n  Auth,\n  DriverInfo,\n  MongoOptions,\n  ServerApi,\n  SupportedNodeConnectionOptions,\n  SupportedTLSConnectionOptions,\n  SupportedTLSSocketOptions,\n  SupportedSocketOptions\n} from './mongo_client';\nexport type {\n  TypedEventEmitter,\n  EventsDescription,\n  CommonEvents,\n  GenericListener\n} from './mongo_types';\nexport type { AddUserOptions, RoleSpecification } from './operations/add_user';\nexport type {\n  AggregateOptions,\n  AggregateOperation,\n  DB_AGGREGATE_COLLECTION\n} from './operations/aggregate';\nexport type { MONGO_CLIENT_EVENTS } from './operations/connect';\nexport type {\n  CommandOperationOptions,\n  OperationParent,\n  CommandOperation,\n  CollationOptions\n} from './operations/command';\nexport type { IndexInformationOptions } from './operations/common_functions';\nexport type { CountOptions } from './operations/count';\nexport type { CountDocumentsOptions } from './operations/count_documents';\nexport type {\n  CreateCollectionOptions,\n  TimeSeriesCollectionOptions\n} from './operations/create_collection';\nexport type { DeleteOptions, DeleteResult, DeleteStatement } from './operations/delete';\nexport type { DistinctOptions } from './operations/distinct';\nexport type { DropCollectionOptions, DropDatabaseOptions } from './operations/drop';\nexport type { EstimatedDocumentCountOptions } from './operations/estimated_document_count';\nexport type { EvalOptions } from './operations/eval';\nexport type { FindOptions } from './operations/find';\nexport type { Sort, SortDirection, SortDirectionForCmd, SortForCmd } from './sort';\nexport type {\n  FindOneAndDeleteOptions,\n  FindOneAndReplaceOptions,\n  FindOneAndUpdateOptions\n} from './operations/find_and_modify';\nexport type {\n  IndexSpecification,\n  CreateIndexesOptions,\n  IndexDescription,\n  DropIndexesOptions,\n  ListIndexesOptions,\n  IndexDirection\n} from './operations/indexes';\nexport type { InsertOneResult, InsertOneOptions, InsertManyResult } from './operations/insert';\nexport type { ListCollectionsOptions, CollectionInfo } from './operations/list_collections';\nexport type { ListDatabasesResult, ListDatabasesOptions } from './operations/list_databases';\nexport type {\n  MapFunction,\n  ReduceFunction,\n  MapReduceOptions,\n  FinalizeFunction\n} from './operations/map_reduce';\nexport type { Hint, OperationOptions, AbstractOperation } from './operations/operation';\nexport type { ProfilingLevelOptions } from './operations/profiling_level';\nexport type { RemoveUserOptions } from './operations/remove_user';\nexport type { RenameOptions } from './operations/rename';\nexport type { RunCommandOptions } from './operations/run_command';\nexport type { SetProfilingLevelOptions } from './operations/set_profiling_level';\nexport type {\n  CollStatsOptions,\n  DbStatsOptions,\n  CollStats,\n  WiredTigerData\n} from './operations/stats';\nexport type {\n  UpdateResult,\n  UpdateOptions,\n  ReplaceOptions,\n  UpdateStatement\n} from './operations/update';\nexport type { ValidateCollectionOptions } from './operations/validate_collection';\nexport type { ReadConcernLike } from './read_concern';\nexport type {\n  ReadPreferenceLike,\n  ReadPreferenceOptions,\n  ReadPreferenceLikeOptions,\n  ReadPreferenceFromOptions,\n  HedgeOptions\n} from './read_preference';\nexport type { ClusterTime, TimerQueue } from './sdam/common';\nexport type {\n  Monitor,\n  MonitorEvents,\n  MonitorPrivate,\n  MonitorOptions,\n  RTTPinger,\n  RTTPingerOptions\n} from './sdam/monitor';\nexport type { Server, ServerEvents, ServerPrivate, ServerOptions } from './sdam/server';\nexport type {\n  TopologyVersion,\n  TagSet,\n  ServerDescription,\n  ServerDescriptionOptions\n} from './sdam/server_description';\nexport type { ServerSelector } from './sdam/server_selection';\nexport type { SrvPoller, SrvPollerEvents, SrvPollerOptions } from './sdam/srv_polling';\nexport type {\n  Topology,\n  TopologyEvents,\n  TopologyPrivate,\n  ServerSelectionRequest,\n  TopologyOptions,\n  ServerCapabilities,\n  ConnectOptions,\n  SelectServerOptions,\n  ServerSelectionCallback\n} from './sdam/topology';\nexport type { TopologyDescription, TopologyDescriptionOptions } from './sdam/topology_description';\nexport type {\n  ClientSession,\n  ClientSessionEvents,\n  ClientSessionOptions,\n  EndSessionOptions,\n  ServerSessionPool,\n  ServerSession,\n  ServerSessionId,\n  WithTransactionCallback\n} from './sessions';\nexport type { TransactionOptions, Transaction, TxnState } from './transactions';\nexport type {\n  Callback,\n  ClientMetadata,\n  ClientMetadataOptions,\n  MongoDBNamespace,\n  InterruptibleAsyncInterval,\n  BufferPool,\n  HostAddress,\n  EventEmitterWithState\n} from './utils';\nexport type { W, WriteConcernOptions, WriteConcernSettings } from './write_concern';\nexport type { ExecutionResult } from './operations/execute_operation';\nexport type { InternalAbstractCursorOptions } from './cursor/abstract_cursor';\nexport type {\n  BulkOperationBase,\n  BulkOperationPrivate,\n  FindOperators,\n  Batch,\n  WriteConcernErrorData\n} from './bulk/common';\nexport type { OrderedBulkOperation } from './bulk/ordered';\nexport type { UnorderedBulkOperation } from './bulk/unordered';\nexport type { Encrypter, EncrypterOptions } from './encrypter';\nexport type {\n  EnhancedOmit,\n  WithId,\n  OptionalId,\n  WithoutId,\n  UpdateFilter,\n  Filter,\n  Projection,\n  InferIdType,\n  ProjectionOperators,\n  Flatten,\n  SchemaMember,\n  Condition,\n  RootFilterOperators,\n  AlternativeType,\n  FilterOperators,\n  BSONTypeAlias,\n  BitwiseFilter,\n  RegExpOrString,\n  OnlyFieldsOfType,\n  NumericType,\n  IntegerType,\n  MatchKeysAndValues,\n  SetFields,\n  PullOperator,\n  PushOperator,\n  PullAllOperator,\n  AcceptedFields,\n  NotAcceptedFields,\n  AddToSetOperators,\n  ArrayOperator,\n  FilterOperations,\n  KeysOfAType,\n  KeysOfOtherType,\n  IsAny,\n  OneOrMore\n} from './mongo_types';\nexport type { serialize, deserialize } from './bson';\n"],
  "mappings": "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I,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,KAAK,KAAK,GAAG,GAAG,GAAG,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,GAAG,GAAG,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,GAAG,GAAG,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,GAAG,GAAG,KAAK,KAAK,KAAK,IAAI,KAAK,GAAG,GAAG,GAAG,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,IAAI,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,IAAI,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,IAAI,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,GAAG,IAAI,IAAI,KAA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",
  "names": ["error", "getLens", "b64", "len", "length", "Error", "validLen", "indexOf", "placeHoldersLen", "byteLength", "lens", "_byteLength", "toByteArray", "tmp", "arr", "Arr", "curByte", "i", "revLookup", "charCodeAt", "tripletToBase64", "num", "lookup", "encodeChunk", "uint8", "start", "end", "output", "push", "join", "fromByteArray", "extraBytes", "parts", "maxChunkLength", "len2", "__extends", "d", "b", "extendStatics", "__", "constructor", "prototype", "Object", "create", "Buffer", "calculateObjectSize", "constants.JS_INT_MIN", "constants.JS_INT_MAX", "constants.BSON_INT32_MIN", "constants.BSON_INT32_MAX", "deserialize", "buffer", "key", "constants.BSON_DATA_STRING", "constants.BSON_DATA_OID", "constants.BSON_DATA_INT", "constants.BSON_DATA_NUMBER", "constants.BSON_DATA_DATE", "constants.BSON_DATA_BOOLEAN", "constants.BSON_DATA_OBJECT", "constants.BSON_DATA_ARRAY", "constants.BSON_DATA_UNDEFINED", "constants.BSON_DATA_NULL", "constants.BSON_DATA_LONG", "constants.BSON_DATA_DECIMAL128", "constants.BSON_DATA_BINARY", "constants.BSON_BINARY_SUBTYPE_UUID_NEW", "constants.BSON_DATA_REGEXP", "constants.BSON_DATA_SYMBOL", "constants.BSON_DATA_TIMESTAMP", "constants.BSON_DATA_MIN_KEY", "constants.BSON_DATA_MAX_KEY", "constants.BSON_DATA_CODE", "constants.BSON_DATA_CODE_W_SCOPE", "constants.BSON_DATA_DBPOINTER", "functionCache", "constants.BSON_BINARY_SUBTYPE_DEFAULT", "Map", "internalSerialize", "internalDeserialize", "internalCalculateObjectSize", "code", "__assign", "BSON_INT32_MAX", "BSON_INT32_MIN", "BSON_INT64_MAX", "BSON_INT64_MIN", "Uint8Array", "Array", "read", "offset", "isLE", "mLen", "nBytes", "e", "m", "eLen", "eMax", "eBias", "nBits", "s", "NaN", "Infinity", "Math", "pow", "write", "value", "c", "rt", "abs", "isNaN", "floor", "log", "LN2", "customInspectSymbol", "Symbol", "exports", "SlowBuffer", "K_MAX_LENGTH", "TYPED_ARRAY_SUPPORT", "typedArraySupport", "console", "error", "proto", "foo", "setPrototypeOf", "defineProperty", "enumerable", "get", "isBuffer", "undefined", "byteOffset", "createBuffer", "RangeError", "buf", "arg", "encodingOrOffset", "TypeError", "allocUnsafe", "from", "poolSize", "fromString", "ArrayBuffer", "isView", "fromArrayView", "isInstance", "fromArrayBuffer", "SharedArrayBuffer", "valueOf", "fromObject", "toPrimitive", "assertSize", "size", "alloc", "fill", "encoding", "checked", "allocUnsafeSlow", "string", "isEncoding", "actual", "slice", "fromArrayLike", "array", "arrayView", "copy", "obj", "numberIsNaN", "type", "isArray", "data", "toString", "_isBuffer", "compare", "a", "x", "y", "min", "String", "toLowerCase", "concat", "list", "pos", "set", "call", "mustMatch", "arguments", "loweredCase", "utf8ToBytes", "base64ToBytes", "slowToString", "hexSlice", "utf8Slice", "asciiSlice", "latin1Slice", "base64Slice", "utf16leSlice", "swap", "n", "swap16", "swap32", "swap64", "apply", "toLocaleString", "equals", "inspect", "str", "max", "INSPECT_MAX_BYTES", "replace", "trim", "target", "thisStart", "thisEnd", "thisCopy", "targetCopy", "bidirectionalIndexOf", "val", "dir", "arrayIndexOf", "lastIndexOf", "indexSize", "arrLength", "valLength", "readUInt16BE", "foundIndex", "found", "j", "includes", "hexWrite", "Number", "remaining", "strLen", "parsed", "parseInt", "substr", "utf8Write", "blitBuffer", "asciiWrite", "asciiToBytes", "base64Write", "ucs2Write", "utf16leToBytes", "isFinite", "toJSON", "_arr", "base64", "res", "firstByte", "codePoint", "bytesPerSequence", "secondByte", "thirdByte", "fourthByte", "tempCodePoint", "decodeCodePointsArray", "MAX_ARGUMENTS_LENGTH", "codePoints", "fromCharCode", "ret", "out", "hexSliceLookupTable", "bytes", "newBuf", "subarray", "checkOffset", "ext", "readUintLE", "readUIntLE", "noAssert", "mul", "readUintBE", "readUIntBE", "readUint8", "readUInt8", "readUint16LE", "readUInt16LE", "readUint16BE", "readUint32LE", "readUInt32LE", "readUint32BE", "readUInt32BE", "readIntLE", "readIntBE", "readInt8", "readInt16LE", "readInt16BE", "readInt32LE", "readInt32BE", "readFloatLE", "ieee754", "readFloatBE", "readDoubleLE", "readDoubleBE", "checkInt", "writeUintLE", "writeUIntLE", "maxBytes", "writeUintBE", "writeUIntBE", "writeUint8", "writeUInt8", "writeUint16LE", "writeUInt16LE", "writeUint16BE", "writeUInt16BE", "writeUint32LE", "writeUInt32LE", "writeUint32BE", "writeUInt32BE", "writeIntLE", "limit", "sub", "writeIntBE", "writeInt8", "writeInt16LE", "writeInt16BE", "writeInt32LE", "writeInt32BE", "checkIEEE754", "writeFloat", "littleEndian", "writeFloatLE", "writeFloatBE", "writeDouble", "writeDoubleLE", "writeDoubleBE", "targetStart", "copyWithin", "INVALID_BASE64_RE", "base64clean", "split", "units", "leadSurrogate", "byteArray", "hi", "lo", "src", "dst", "name", "alphabet", "table", "i16", "__proto__", "p", "hasOwnProperty", "assign", "t", "BSONError", "BSONTypeError", "insecureRandomBytes", "Binary", "UUID", "Code", "DBRef", "Long", "Decimal128", "Double", "Int32", "MaxKey", "MinKey", "ObjectId", "BSONRegExp", "BSONSymbol", "Timestamp", "EJSON", "serialize", "self", "BSON", "filterOptions", "Promise", "maybePromise", "ns", "error", "buffer", "isObject", "BSON", "read", "error", "self", "buffer", "error", "buffer", "error", "error", "write", "err", "messageHandler", "error", "Promise", "err", "kId", "error", "cursorId", "isMap", "findCommand", "name", "error", "Promise", "BSON", "BSON", "error", "err", "map", "err", "map", "err", "payload", "result", "BSON", "err", "message", "err", "provider", "conn", "error", "conn", "require_utils", "punycode", "error", "toASCII", "toUnicode", "buffer", "base", "res", "Function", "V", "tmp", "nextItem", "base", "uri", "err", "lbError", "value", "err", "sd", "err", "error", "callback", "error", "Promise", "result", "error", "callback", "error", "index", "error"]
}
